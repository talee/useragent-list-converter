/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 3);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _templateObject = _taggedTemplateLiteral(["\nuser_agent_parsers:\n  #### SPECIAL CASES TOP ####\n\n  # @note: iOS / OSX Applications\n  - regex: '(CFNetwork)(?:/(d+).(d+).?(d+)?)?'\n    family_replacement: 'CFNetwork'\n\n  # Pingdom\n  - regex: '(Pingdom.com_bot_version_)(d+).(d+)'\n    family_replacement: 'PingdomBot'\n    # 'Mozilla/5.0 (Unknown; Linux x86_64) AppleWebKit/534.34 (KHTML, like Gecko) PingdomTMS/0.8.5 Safari/534.34'\n  - regex: '(PingdomTMS)/(d+).(d+).(d+)'\n    family_replacement: 'PingdomBot'\n\n  # Facebook\n  - regex: '(facebookexternalhit)/(d+).(d+)'\n    family_replacement: 'FacebookBot'\n\n  # Google Plus\n  - regex: 'Google.*/+/web/snippet'\n    family_replacement: 'GooglePlusBot'\n\n  # Gmail\n  - regex: 'via ggpht.com GoogleImageProxy'\n    family_replacement: 'GmailImageProxy'\n\n  # Twitter\n  - regex: '(Twitterbot)/(d+).(d+)'\n    family_replacement: 'TwitterBot'\n\n  # Bots Pattern '/name-0.0'\n  - regex: '/((?:Ant-)?Nutch|[A-z]+[Bb]ot|[A-z]+[Ss]pider|Axtaris|fetchurl|Isara|ShopSalad|Tailsweep)[ -](d+)(?:.(d+)(?:.(d+))?)?'\n  # Bots Pattern 'name/0.0'\n  - regex: '\b(008|Altresium|Argus|BaiduMobaider|BoardReader|DNSGroup|DataparkSearch|EDI|Goodzer|Grub|INGRID|Infohelfer|LinkedInBot|LOOQ|Nutch|PathDefender|Peew|PostPost|Steeler|Twitterbot|VSE|WebCrunch|WebZIP|Y!J-BR[A-Z]|YahooSeeker|envolk|sproose|wminer)/(d+)(?:.(d+)(?:.(d+))?)?'\n\n  # MSIECrawler\n  - regex: '(MSIE) (d+).(d+)([a-z]d?)?;.* MSIECrawler'\n    family_replacement: 'MSIECrawler'\n\n  # Downloader ...\n  - regex: '(Google-HTTP-Java-Client|Apache-HttpClient|http%20client|Python-urllib|HttpMonitor|TLSProber|WinHTTP|JNLP|okhttp)(?:[ /](d+)(?:.(d+)(?:.(d+))?)?)?'\n\n  # Bots\n  - regex: '(1470.net crawler|50.nu|8bo Crawler Bot|Aboundex|Accoona-[A-z]+-Agent|AdsBot-Google(?:-[a-z]+)?|altavista|AppEngine-Google|archive.*?.org_bot|archiver|Ask Jeeves|[Bb]ai[Dd]u[Ss]pider(?:-[A-Za-z]+)*|bingbot|BingPreview|blitzbot|BlogBridge|BoardReader(?: [A-Za-z]+)*|boitho.com-dc|BotSeer|\bw*faviconw*\b|\bYeti(?:-[a-z]+)?|Catchpoint bot|[Cc]harlotte|Checklinks|clumboot|Comodo HTTP(S) Crawler|Comodo-Webinspector-Crawler|ConveraCrawler|CRAWL-E|CrawlConvera|Daumoa(?:-feedfetcher)?|Feed Seeker Bot|findlinks|Flamingo_SearchEngine|FollowSite Bot|furlbot|Genieo|gigabot|GomezAgent|gonzo1|(?:[a-zA-Z]+-)?Googlebot(?:-[a-zA-Z]+)?|Google SketchUp|grub-client|gsa-crawler|heritrix|HiddenMarket|holmes|HooWWWer|htdig|ia_archiver|ICC-Crawler|Icarus6j|ichiro(?:/mobile)?|IconSurf|IlTrovatore(?:-Setaccio)?|InfuzApp|Innovazion Crawler|InternetArchive|IP2[a-z]+Bot|jbot\b|KaloogaBot|Kraken|Kurzor|larbin|LEIA|LesnikBot|Linguee Bot|LinkAider|LinkedInBot|Lite Bot|Llaut|lycos|Mail.RU_Bot|masscan|masidani_bot|Mediapartners-Google|Microsoft .*? Bot|mogimogi|mozDex|MJ12bot|msnbot(?:-media *)?|msrbot|netresearch|Netvibes|NewsGator[^/]*|^NING|Nutch[^/]*|Nymesis|ObjectsSearch|Orbiter|OOZBOT|PagePeeker|PagesInventory|PaxleFramework|Peeplo Screenshot Bot|PlantyNet_WebRobot|Pompos|Read%20Later|Reaper|RedCarpet|Retreiver|Riddler|Rival IQ|scooter|Scrapy|Scrubby|searchsight|seekbot|semanticdiscovery|Simpy|SimplePie|SEOstats|SimpleRSS|SiteCon|Slackbot-LinkExpanding|Slack-ImgProxy|Slurp|snappy|Speedy Spider|Squrl Java|TheUsefulbot|ThumbShotsBot|Thumbshots.ru|TwitterBot|WhatsApp|URL2PNG|Vagabondo|VoilaBot|^vortex|Votay bot|^voyager|WASALive.Bot|Web-sniffer|WebThumb|WeSEE:[A-z]+|WhatWeb|WIRE|WordPress|Wotbox|www.almaden.ibm.com|Xenu(?:.s)? Link Sleuth|Xerka [A-z]+Bot|yacy(?:bot)?|Yahoo[a-z]*Seeker|Yahoo! Slurp|Yandexw+|YodaoBot(?:-[A-z]+)?|YottaaMonitor|Yowedo|^Zao|^Zao-Crawler|ZeBot_www.ze.bz|ZooShot|ZyBorg)(?:[ /]v?(d+)(?:.(d+)(?:.(d+))?)?)?'\n\n  # Bots General matcher 'name/0.0'\n  - regex: '(?:/[A-Za-z0-9.]+)? *([A-Za-z0-9 -_![]:]*(?:[Aa]rchiver|[Ii]ndexer|[Ss]craper|[Bb]ot|[Ss]pider|[Cc]rawl[a-z]*))/(d+)(?:.(d+)(?:.(d+))?)?'\n  # Bots General matcher 'name 0.0'\n  - regex: '(?:/[A-Za-z0-9.]+)? *([A-Za-z0-9 _![]:]*(?:[Aa]rchiver|[Ii]ndexer|[Ss]craper|[Bb]ot|[Ss]pider|[Cc]rawl[a-z]*)) (d+)(?:.(d+)(?:.(d+))?)?'\n  # Bots containing spider|scrape|bot(but not CUBOT)|Crawl\n  - regex: '((?:[A-z0-9]+|[A-z-]+ ?)?(?: the )?(?:[Ss][Pp][Ii][Dd][Ee][Rr]|[Ss]crape|[A-Za-z0-9-]*(?:[^C][^Uu])[Bb]ot|[Cc][Rr][Aa][Ww][Ll])[A-z0-9]*)(?:(?:[ /]| v)(d+)(?:.(d+)(?:.(d+))?)?)?'\n\n  # HbbTV standard defines what features the browser should understand.\n  # but it's like targeting \"HTML5 browsers\", effective browser support depends on the model\n  # See os_parsers if you want to target a specific TV\n  - regex: '(HbbTV)/(d+).(d+).(d+) ('\n\n  # must go before Firefox to catch Chimera/SeaMonkey/Camino\n  - regex: '(Chimera|SeaMonkey|Camino)/(d+).(d+).?([ab]?d+[a-z]*)?'\n\n  # Social Networks\n  # Facebook\n  - regex: '[FB.*;(FBAV)/(d+)(?:.(d+)(?:.(d)+)?)?'\n    family_replacement: 'Facebook'\n  # Pinterest\n  - regex: '[(Pinterest)/[^]]+]'\n  - regex: '(Pinterest)(?: for Android(?: Tablet)?)?/(d+)(?:.(d+)(?:.(d)+)?)?'\n\n  # Pale Moon\n  - regex: '(PaleMoon)/(d+).(d+).?(d+)?'\n    family_replacement: 'Pale Moon'\n\n  # Firefox\n  - regex: '(Fennec)/(d+).(d+).?([ab]?d+[a-z]*)'\n    family_replacement: 'Firefox Mobile'\n  - regex: '(Fennec)/(d+).(d+)(pre)'\n    family_replacement: 'Firefox Mobile'\n  - regex: '(Fennec)/(d+).(d+)'\n    family_replacement: 'Firefox Mobile'\n  - regex: '(?:Mobile|Tablet);.*(Firefox)/(d+).(d+)'\n    family_replacement: 'Firefox Mobile'\n  - regex: '(Namoroka|Shiretoko|Minefield)/(d+).(d+).(d+(?:pre)?)'\n    family_replacement: 'Firefox ($1)'\n  - regex: '(Firefox)/(d+).(d+)(ad+[a-z]*)'\n    family_replacement: 'Firefox Alpha'\n  - regex: '(Firefox)/(d+).(d+)(bd+[a-z]*)'\n    family_replacement: 'Firefox Beta'\n  - regex: '(Firefox)-(?:d+.d+)?/(d+).(d+)(ad+[a-z]*)'\n    family_replacement: 'Firefox Alpha'\n  - regex: '(Firefox)-(?:d+.d+)?/(d+).(d+)(bd+[a-z]*)'\n    family_replacement: 'Firefox Beta'\n  - regex: '(Namoroka|Shiretoko|Minefield)/(d+).(d+)([ab]d+[a-z]*)?'\n    family_replacement: 'Firefox ($1)'\n  - regex: '(Firefox).*Tablet browser (d+).(d+).(d+)'\n    family_replacement: 'MicroB'\n  - regex: '(MozillaDeveloperPreview)/(d+).(d+)([ab]d+[a-z]*)?'\n  - regex: '(FxiOS)/(d+).(d+)(.(d+))?(.(d+))?'\n    family_replacement: 'Firefox iOS'\n\n  # e.g.: Flock/2.0b2\n  - regex: '(Flock)/(d+).(d+)(bd+?)'\n\n  # RockMelt\n  - regex: '(RockMelt)/(d+).(d+).(d+)'\n\n  # e.g.: Fennec/0.9pre\n  - regex: '(Navigator)/(d+).(d+).(d+)'\n    family_replacement: 'Netscape'\n\n  - regex: '(Navigator)/(d+).(d+)([ab]d+)'\n    family_replacement: 'Netscape'\n\n  - regex: '(Netscape6)/(d+).(d+).?([ab]?d+)?'\n    family_replacement: 'Netscape'\n\n  - regex: '(MyIBrow)/(d+).(d+)'\n    family_replacement: 'My Internet Browser'\n\n  # UC Browser\n  # we need check it before opera. In other case case UC Browser detected look like Opera Mini\n  - regex: '(UC? ?Browser|UCWEB|U3)[ /]?(d+).(d+).(d+)'\n    family_replacement: 'UC Browser'\n\n  # Opera will stop at 9.80 and hide the real version in the Version string.\n  # see: http://dev.opera.com/articles/view/opera-ua-string-changes/\n  - regex: '(Opera Tablet).*Version/(d+).(d+)(?:.(d+))?'\n  - regex: '(Opera Mini)(?:/att)?/?(d+)?(?:.(d+))?(?:.(d+))?'\n  - regex: '(Opera)/.+Opera Mobi.+Version/(d+).(d+)'\n    family_replacement: 'Opera Mobile'\n  - regex: '(Opera)/(d+).(d+).+Opera Mobi'\n    family_replacement: 'Opera Mobile'\n  - regex: 'Opera Mobi.+(Opera)(?:/|s+)(d+).(d+)'\n    family_replacement: 'Opera Mobile'\n  - regex: 'Opera Mobi'\n    family_replacement: 'Opera Mobile'\n  - regex: '(Opera)/9.80.*Version/(d+).(d+)(?:.(d+))?'\n\n  # Opera 14 for Android uses a WebKit render engine.\n  - regex: '(?:Mobile Safari).*(OPR)/(d+).(d+).(d+)'\n    family_replacement: 'Opera Mobile'\n\n  # Opera >=15 for Desktop is similar to Chrome but includes an \"OPR\" Version string.\n  - regex: '(?:Chrome).*(OPR)/(d+).(d+).(d+)'\n    family_replacement: 'Opera'\n\n  # Opera Coast\n  - regex: '(Coast)/(d+).(d+).(d+)'\n    family_replacement: 'Opera Coast'\n\n  # Opera Mini for iOS (from version 8.0.0)\n  - regex: '(OPiOS)/(d+).(d+).(d+)'\n    family_replacement: 'Opera Mini'\n\n  # Opera Neon\n  - regex: 'Chrome/.+( MMS)/(d+).(d+).(d+)'\n    family_replacement: 'Opera Neon'\n\n  # Palm WebOS looks a lot like Safari.\n  - regex: '(hpw|web)OS/(d+).(d+)(?:.(d+))?'\n    family_replacement: 'webOS Browser'\n\n  # LuaKit has no version info.\n  # http://luakit.org/projects/luakit/\n  - regex: '(luakit)'\n    family_replacement: 'LuaKit'\n\n  # Snowshoe\n  - regex: '(Snowshoe)/(d+).(d+).(d+)'\n\n  # Lightning (for Thunderbird)\n  # http://www.mozilla.org/projects/calendar/lightning/\n  - regex: 'Gecko/d+ (Lightning)/(d+).(d+).?((?:[ab]?d+[a-z]*)|(?:d*))'\n\n  # Swiftfox\n  - regex: '(Firefox)/(d+).(d+).(d+(?:pre)?) (Swiftfox)'\n    family_replacement: 'Swiftfox'\n  - regex: '(Firefox)/(d+).(d+)([ab]d+[a-z]*)? (Swiftfox)'\n    family_replacement: 'Swiftfox'\n\n  # Rekonq\n  - regex: '(rekonq)/(d+).(d+).?(d+)? Safari'\n    family_replacement: 'Rekonq'\n  - regex: 'rekonq'\n    family_replacement: 'Rekonq'\n\n  # Conkeror lowercase/uppercase\n  # http://conkeror.org/\n  - regex: '(conkeror|Conkeror)/(d+).(d+).?(d+)?'\n    family_replacement: 'Conkeror'\n\n  # catches lower case konqueror\n  - regex: '(konqueror)/(d+).(d+).(d+)'\n    family_replacement: 'Konqueror'\n\n  - regex: '(WeTab)-Browser'\n\n  - regex: '(Comodo_Dragon)/(d+).(d+).(d+)'\n    family_replacement: 'Comodo Dragon'\n\n  - regex: '(Symphony) (d+).(d+)'\n\n  - regex: 'PLAYSTATION 3.+WebKit'\n    family_replacement: 'NetFront NX'\n  - regex: 'PLAYSTATION 3'\n    family_replacement: 'NetFront'\n  - regex: '(PlayStation Portable)'\n    family_replacement: 'NetFront'\n  - regex: '(PlayStation Vita)'\n    family_replacement: 'NetFront NX'\n\n  - regex: 'AppleWebKit.+ (NX)/(d+).(d+).(d+)'\n    family_replacement: 'NetFront NX'\n  - regex: '(Nintendo 3DS)'\n    family_replacement: 'NetFront NX'\n\n  # Amazon Silk, should go before Safari and Chrome Mobile\n  - regex: '(Silk)/(d+).(d+)(?:.([0-9-]+))?'\n    family_replacement: 'Amazon Silk'\n\n  # @ref: http://www.puffinbrowser.com\n  - regex: '(Puffin)/(d+).(d+)(?:.(d+))?'\n\n  # Edge Mobile\n  - regex: 'Windows Phone .*(Edge)/(d+).(d+)'\n    family_replacement: 'Edge Mobile'\n\n  # Samsung Internet (based on Chrome, but lacking some features)\n  - regex: '(SamsungBrowser)/(d+).(d+)'\n    family_replacement: 'Samsung Internet'\n\n  # Baidu Browsers (desktop spoofs chrome & IE, explorer is mobile)\n  - regex: '(baidubrowser)[/s](d+)(?:.(d+)(?:.(d+))?)?'\n    family_replacement: 'Baidu Browser'\n  - regex: '(FlyFlow)/(d+).(d+)'\n    family_replacement: 'Baidu Explorer'\n\n  # Chrome Mobile\n  - regex: '(CrMo)/(d+).(d+).(d+).(d+)'\n    family_replacement: 'Chrome Mobile'\n  - regex: '(CriOS)/(d+).(d+).(d+).(d+)'\n    family_replacement: 'Chrome Mobile iOS'\n  - regex: '(Chrome)/(d+).(d+).(d+).(d+) Mobile(?:[ /]|$)'\n    family_replacement: 'Chrome Mobile'\n  - regex: ' Mobile .*(Chrome)/(d+).(d+).(d+).(d+)'\n    family_replacement: 'Chrome Mobile'\n\n  # Chrome Frame must come before MSIE.\n  - regex: '(chromeframe)/(d+).(d+).(d+)'\n    family_replacement: 'Chrome Frame'\n\n  # Tizen Browser (second case included in browser/major.minor regex)\n  - regex: '(SLP Browser)/(d+).(d+)'\n    family_replacement: 'Tizen Browser'\n\n  # Sogou Explorer 2.X\n  - regex: '(SE 2.X) MetaSr (d+).(d+)'\n    family_replacement: 'Sogou Explorer'\n\n  # QQ Browsers\n  - regex: '(MQQBrowser/Mini)(?:(d+)(?:.(d+)(?:.(d+))?)?)?'\n    family_replacement: 'QQ Browser Mini'\n  - regex: '(MQQBrowser)(?:/(d+)(?:.(d+)(?:.(d+))?)?)?'\n    family_replacement: 'QQ Browser Mobile'\n  - regex: '(QQBrowser)(?:/(d+)(?:.(d+).(d+)(?:.(d+))?)?)?'\n    family_replacement: 'QQ Browser'\n\n  # Rackspace Monitoring\n  - regex: '(Rackspace Monitoring)/(d+).(d+)'\n    family_replacement: 'RackspaceBot'\n\n  # PyAMF\n  - regex: '(PyAMF)/(d+).(d+).(d+)'\n\n  # Yandex Browser\n  - regex: '(YaBrowser)/(d+).(d+).(d+)'\n    family_replacement: 'Yandex Browser'\n\n  # Mail.ru Amigo/Internet Browser (Chromium-based)\n  - regex: '(Chrome)/(d+).(d+).(d+).* MRCHROME'\n    family_replacement: 'Mail.ru Chromium Browser'\n\n  # AOL Browser (IE-based)\n  - regex: '(AOL) (d+).(d+); AOLBuild (d+)'\n\n  # MxBrowser is Maxthon\n  - regex: '(MxBrowser)/(d+).(d+)(?:.(d+))?'\n    family_replacement: 'Maxthon'\n\n  #### END SPECIAL CASES TOP ####\n\n  #### MAIN CASES - this catches > 50% of all browsers ####\n\n  # Browser/major_version.minor_version.beta_version\n  - regex: '\b(MobileIron|Crosswalk|FireWeb|Jasmine|ANTGalio|Midori|Fresco|Lobo|PaleMoon|Maxthon|Lynx|OmniWeb|Dillo|Camino|Demeter|Fluid|Fennec|Epiphany|Shiira|Sunrise|Spotify|Flock|Netscape|Lunascape|WebPilot|NetFront|Netfront|Konqueror|SeaMonkey|Kazehakase|Vienna|Iceape|Iceweasel|IceWeasel|Iron|K-Meleon|Sleipnir|Galeon|GranParadiso|Opera Mini|iCab|NetNewsWire|ThunderBrowse|Iris|UP.Browser|Bunjalloo|Google Earth|Raven for Mac|Openwave|MacOutlook|Electron)/(d+).(d+).(d+)'\n\n  # Outlook 2007\n  - regex: 'Microsoft Office Outlook 12.d+.d+|MSOffice 12'\n    family_replacement: 'Outlook'\n    v1_replacement: '2007'\n\n  # Outlook 2010\n  - regex: 'Microsoft Outlook 14.d+.d+|MSOffice 14'\n    family_replacement: 'Outlook'\n    v1_replacement: '2010'\n\n  # Outlook 2013\n  - regex: 'Microsoft Outlook 15.d+.d+'\n    family_replacement: 'Outlook'\n    v1_replacement: '2013'\n\n  # Outlook 2016\n  - regex: 'Microsoft Outlook (?:Mail )?16.d+.d+'\n    family_replacement: 'Outlook'\n    v1_replacement: '2016'\n\n  # Windows Live Mail\n  - regex: 'Outlook-Express/7.0.*'\n    family_replacement: 'Windows Live Mail'\n\n  # Apple Air Mail\n  - regex: '(Airmail) (d+).(d+)(?:.(d+))?'\n\n  # Thunderbird\n  - regex: '(Thunderbird)/(d+).(d+)(?:.(d+(?:pre)?))?'\n    family_replacement: 'Thunderbird'\n\n  # Postbox\n  - regex: '(Postbox)/(d+).(d+).(d+)'\n    family_replacement: 'Postbox'\n\n  # Barca\n  - regex: '(Barca(?:Pro)?)/(d+).(d+)(?:.(d+))?'\n    family_replacement: 'Barca'\n\n  # Lotus Notes\n  - regex: '(Lotus-Notes)/(d+).(d+)(?:.(d+))?'\n    family_replacement: 'Lotus Notes'\n\n  # Vivaldi uses \"Vivaldi\"\n  - regex: '(Vivaldi)/(d+).(d+).(d+)'\n\n  # Edge/major_version.minor_version\n  - regex: '(Edge)/(d+).(d+)'\n\n  # Brave Browser https://brave.com/\n  - regex: '(brave)/(d+).(d+).(d+) Chrome'\n    family_replacement: 'Brave'\n\n  # Iron Browser ~since version 50\n  - regex: '(Chrome)/(d+).(d+).(d+)[d.]* Iron[^/]'\n    family_replacement: 'Iron'\n\n  # Dolphin Browser\n  # @ref: http://www.dolphin.com\n  - regex: '\b(Dolphin)(?: |HDCN/|/INT-)(d+).(d+).?(d+)?'\n\n  # Headless Chrome\n  # https://chromium.googlesource.com/chromium/src/+/lkgr/headless/README.md\n  # Currently only available on Linux\n  - regex: 'HeadlessChrome'\n    family_replacement: 'HeadlessChrome'\n\n  # Browser/major_version.minor_version\n  - regex: '(bingbot|Bolt|AdobeAIR|Jasmine|IceCat|Skyfire|Midori|Maxthon|Lynx|Arora|IBrowse|Dillo|Camino|Shiira|Fennec|Phoenix|Flock|Netscape|Lunascape|Epiphany|WebPilot|Opera Mini|Opera|NetFront|Netfront|Konqueror|Googlebot|SeaMonkey|Kazehakase|Vienna|Iceape|Iceweasel|IceWeasel|Iron|K-Meleon|Sleipnir|Galeon|GranParadiso|iCab|iTunes|MacAppStore|NetNewsWire|Space Bison|Stainless|Orca|Dolfin|BOLT|Minimo|Tizen Browser|Polaris|Abrowser|Planetweb|ICE Browser|mDolphin|qutebrowser|Otter|QupZilla|MailBar|kmail2|YahooMobileMail|ExchangeWebServices|ExchangeServicesClient|Dragon|Outlook-iOS-Android)/(d+).(d+)(?:.(d+))?'\n\n  # Chrome/Chromium/major_version.minor_version\n  - regex: '(Chromium|Chrome)/(d+).(d+)(?:.(d+))?'\n\n  ##########\n  # IE Mobile needs to happen before Android to catch cases such as:\n  # Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 920)...\n  # Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 920; ANZ821)...\n  # Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 920; Orange)...\n  # Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 920; Vodafone)...\n  ##########\n\n  # IE Mobile\n  - regex: '(IEMobile)[ /](d+).(d+)'\n    family_replacement: 'IE Mobile'\n\n  # Baca Berita App News Reader\n  - regex: '(BacaBerita App)/(d+).(d+).(d+)'\n\n  # Browser major_version.minor_version.beta_version (space instead of slash)\n  - regex: '(iRider|Crazy Browser|SkipStone|iCab|Lunascape|Sleipnir|Maemo Browser) (d+).(d+).(d+)'\n  # Browser major_version.minor_version (space instead of slash)\n  - regex: '(iCab|Lunascape|Opera|Android|Jasmine|Polaris|Microsoft SkyDriveSync|The Bat!) (d+).(d+).?(d+)?'\n\n  # Kindle WebKit\n  - regex: '(Kindle)/(d+).(d+)'\n\n  # weird android UAs\n  - regex: '(Android) Donut'\n    v1_replacement: '1'\n    v2_replacement: '2'\n\n  - regex: '(Android) Eclair'\n    v1_replacement: '2'\n    v2_replacement: '1'\n\n  - regex: '(Android) Froyo'\n    v1_replacement: '2'\n    v2_replacement: '2'\n\n  - regex: '(Android) Gingerbread'\n    v1_replacement: '2'\n    v2_replacement: '3'\n\n  - regex: '(Android) Honeycomb'\n    v1_replacement: '3'\n\n  # desktop mode\n  # http://www.anandtech.com/show/3982/windows-phone-7-review\n  - regex: '(MSIE) (d+).(d+).*XBLWP7'\n    family_replacement: 'IE Large Screen'\n\n  # Slack desktop client (needs to be before Apple Mail as it gets wrongly detected on Mac OS otherwise)\n  - regex: '(Slack_SSB)/(d+).(d+).(d+)'\n    family_replacement: 'Slack Desktop Client'\n\n  #### END MAIN CASES ####\n\n  #### SPECIAL CASES ####\n  - regex: '(Obigo)InternetBrowser'\n  - regex: '(Obigo)-Browser'\n  - regex: '(Obigo|OBIGO)[^d]*(d+)(?:.(d+))?'\n    family_replacement: 'Obigo'\n\n  - regex: '(MAXTHON|Maxthon) (d+).(d+)'\n    family_replacement: 'Maxthon'\n  - regex: '(Maxthon|MyIE2|Uzbl|Shiira)'\n    v1_replacement: '0'\n\n  - regex: '(BrowseX) ((d+).(d+).(d+)'\n\n  - regex: '(NCSA_Mosaic)/(d+).(d+)'\n    family_replacement: 'NCSA Mosaic'\n\n  # Polaris/d.d is above\n  - regex: '(POLARIS)/(d+).(d+)'\n    family_replacement: 'Polaris'\n  - regex: '(Embider)/(d+).(d+)'\n    family_replacement: 'Polaris'\n\n  - regex: '(BonEcho)/(d+).(d+).?([ab]?d+)?'\n    family_replacement: 'Bon Echo'\n\n  # @note: iOS / OSX Applications\n  - regex: '(iPod|iPhone|iPad).+Version/(d+).(d+)(?:.(d+))?.*[ +]Safari'\n    family_replacement: 'Mobile Safari'\n  - regex: '(iPod|iPhone|iPad).+Version/(d+).(d+)(?:.(d+))?'\n    family_replacement: 'Mobile Safari UI/WKWebView'\n  - regex: '(iPod|iPod touch|iPhone|iPad);.*CPU.*OS[ +](d+)_(d+)(?:_(d+))?.*Mobile.*[ +]Safari'\n    family_replacement: 'Mobile Safari'\n  - regex: '(iPod|iPod touch|iPhone|iPad);.*CPU.*OS[ +](d+)_(d+)(?:_(d+))?.*Mobile'\n    family_replacement: 'Mobile Safari UI/WKWebView'\n  - regex: '(iPod|iPhone|iPad).* Safari'\n    family_replacement: 'Mobile Safari'\n  - regex: '(iPod|iPhone|iPad)'\n    family_replacement: 'Mobile Safari UI/WKWebView'\n\n  - regex: '(AvantGo) (d+).(d+)'\n\n  - regex: '(OneBrowser)/(d+).(d+)'\n    family_replacement: 'ONE Browser'\n\n  - regex: '(Avant)'\n    v1_replacement: '1'\n\n  # This is the Tesla Model S (see similar entry in device parsers)\n  - regex: '(QtCarBrowser)'\n    v1_replacement: '1'\n\n  - regex: '^(iBrowser/Mini)(d+).(d+)'\n    family_replacement: 'iBrowser Mini'\n  - regex: '^(iBrowser|iRAPP)/(d+).(d+)'\n\n  # nokia browsers\n  # based on: http://www.developer.nokia.com/Community/Wiki/User-Agent_headers_for_Nokia_devices\n  - regex: '^(Nokia)'\n    family_replacement: 'Nokia Services (WAP) Browser'\n  - regex: '(NokiaBrowser)/(d+).(d+).(d+).(d+)'\n    family_replacement: 'Nokia Browser'\n  - regex: '(NokiaBrowser)/(d+).(d+).(d+)'\n    family_replacement: 'Nokia Browser'\n  - regex: '(NokiaBrowser)/(d+).(d+)'\n    family_replacement: 'Nokia Browser'\n  - regex: '(BrowserNG)/(d+).(d+).(d+)'\n    family_replacement: 'Nokia Browser'\n  - regex: '(Series60)/5.0'\n    family_replacement: 'Nokia Browser'\n    v1_replacement: '7'\n    v2_replacement: '0'\n  - regex: '(Series60)/(d+).(d+)'\n    family_replacement: 'Nokia OSS Browser'\n  - regex: '(S40OviBrowser)/(d+).(d+).(d+).(d+)'\n    family_replacement: 'Ovi Browser'\n  - regex: '(Nokia)[EN]?(d+)'\n\n  # BlackBerry devices\n  - regex: '(PlayBook).+RIM Tablet OS (d+).(d+).(d+)'\n    family_replacement: 'BlackBerry WebKit'\n  - regex: '(Black[bB]erry|BB10).+Version/(d+).(d+).(d+)'\n    family_replacement: 'BlackBerry WebKit'\n  - regex: '(Black[bB]erry)s?(d+)'\n    family_replacement: 'BlackBerry'\n\n  - regex: '(OmniWeb)/v(d+).(d+)'\n\n  - regex: '(Blazer)/(d+).(d+)'\n    family_replacement: 'Palm Blazer'\n\n  - regex: '(Pre)/(d+).(d+)'\n    family_replacement: 'Palm Pre'\n\n  # fork of Links\n  - regex: '(ELinks)/(d+).(d+)'\n  - regex: '(ELinks) ((d+).(d+)'\n  - regex: '(Links) ((d+).(d+)'\n\n  - regex: '(QtWeb) Internet Browser/(d+).(d+)'\n\n  #- regex: '(iPad;.+(Version)/(d+).(d+)(?:.(d+))?.*Safari/'\n  #  family_replacement: 'iPad'\n\n  # Phantomjs, should go before Safari\n  - regex: '(PhantomJS)/(d+).(d+).(d+)'\n\n  # WebKit Nightly\n  - regex: '(AppleWebKit)/(d+).?(d+)?+ .* Safari'\n    family_replacement: 'WebKit Nightly'\n\n  # Safari\n  - regex: '(Version)/(d+).(d+)(?:.(d+))?.*Safari/'\n    family_replacement: 'Safari'\n  # Safari didn't provide \"Version/d.d.d\" prior to 3.0\n  - regex: '(Safari)/d+'\n\n  - regex: '(OLPC)/Update(d+).(d+)'\n\n  - regex: '(OLPC)/Update().(d+)'\n    v1_replacement: '0'\n\n  - regex: '(SEMC-Browser)/(d+).(d+)'\n\n  - regex: '(Teleca)'\n    family_replacement: 'Teleca Browser'\n\n  - regex: '(Phantom)/V(d+).(d+)'\n    family_replacement: 'Phantom Browser'\n\n  - regex: 'Trident(.*)rv.(d+).(d+)'\n    family_replacement: 'IE'\n\n  # Espial\n  - regex: '(Espial)/(d+)(?:.(d+))?(?:.(d+))?'\n\n # Apple Mail\n\n  # apple mail - not directly detectable, have it after Safari stuff\n  - regex: '(AppleWebKit)/(d+).(d+).(d+)'\n    family_replacement: 'Apple Mail'\n\n  # AFTER THE EDGE CASES ABOVE!\n  # AFTER IE11\n  # BEFORE all other IE\n  - regex: '(Firefox)/(d+).(d+).(d+)'\n  - regex: '(Firefox)/(d+).(d+)(pre|[ab]d+[a-z]*)?'\n\n  - regex: '([MS]?IE) (d+).(d+)'\n    family_replacement: 'IE'\n\n  - regex: '(python-requests)/(d+).(d+)'\n    family_replacement: 'Python Requests'\n\n  # headless user-agents\n  - regex: '\b(Windows-Update-Agent|Microsoft-CryptoAPI|SophosUpdateManager|SophosAgent|Debian APT-HTTP|Ubuntu APT-HTTP|libcurl-agent|libwww-perl|urlgrabber|curl|Wget|OpenBSD ftp|jupdate)(?:[ /](d+)(?:.(d+)(?:.(d+))?)?)?'\n\n  - regex: '(Java)[/ ]{0,1}d+.(d+).(d+)[_-]*([a-zA-Z0-9]+)*'\n\n  # Roku Digital-Video-Players https://www.roku.com/\n  - regex: '^(Roku)/DVP-(d+).(d+)'\n\n  # Kurio App News Reader https://kurio.co.id/\n  - regex: '(Kurio)/(d+).(d+).(d+)'\n    family_replacement: 'Kurio App'\n\n\nos_parsers:\n  ##########\n  # HbbTV vendors\n  ##########\n\n  # starts with the easy one : Panasonic seems consistent across years, hope it will continue\n  #HbbTV/1.1.1 (;Panasonic;VIERA 2011;f.532;0071-0802 2000-0000;)\n  #HbbTV/1.1.1 (;Panasonic;VIERA 2012;1.261;0071-3103 2000-0000;)\n  #HbbTV/1.2.1 (;Panasonic;VIERA 2013;3.672;4101-0003 0002-0000;)\n  #- regex: 'HbbTV/d+.d+.d+ (;(Panasonic);VIERA ([0-9]{4});'\n\n  # Sony is consistent too but do not place year like the other\n  # Opera/9.80 (Linux armv7l; HbbTV/1.1.1 (; Sony; KDL32W650A; PKG3.211EUA; 2013;); ) Presto/2.12.362 Version/12.11\n  # Opera/9.80 (Linux mips; U;  HbbTV/1.1.1 (; Sony; KDL40HX751; PKG1.902EUA; 2012;);; en) Presto/2.10.250 Version/11.60\n  # Opera/9.80 (Linux mips; U;  HbbTV/1.1.1 (; Sony; KDL22EX320; PKG4.017EUA; 2011;);; en) Presto/2.7.61 Version/11.00\n  #- regex: 'HbbTV/d+.d+.d+ (; (Sony);.*;.*; ([0-9]{4});)'\n\n\n  # LG is consistent too, but we need to add manually the year model\n  #Mozilla/5.0 (Unknown; Linux armv7l) AppleWebKit/537.1+ (KHTML, like Gecko) Safari/537.1+ HbbTV/1.1.1 ( ;LGE ;NetCast 4.0 ;03.20.30 ;1.0M ;)\n  #Mozilla/5.0 (DirectFB; Linux armv7l) AppleWebKit/534.26+ (KHTML, like Gecko) Version/5.0 Safari/534.26+ HbbTV/1.1.1 ( ;LGE ;NetCast 3.0 ;1.0 ;1.0M ;)\n  - regex: 'HbbTV/d+.d+.d+ ( ;(LG)E ;NetCast 4.0'\n    os_v1_replacement: '2013'\n  - regex: 'HbbTV/d+.d+.d+ ( ;(LG)E ;NetCast 3.0'\n    os_v1_replacement: '2012'\n\n  # Samsung is on its way of normalizing their user-agent\n  # HbbTV/1.1.1 (;Samsung;SmartTV2013;T-FXPDEUC-1102.2;;) WebKit\n  # HbbTV/1.1.1 (;Samsung;SmartTV2013;T-MST12DEUC-1102.1;;) WebKit\n  # HbbTV/1.1.1 (;Samsung;SmartTV2012;;;) WebKit\n  # HbbTV/1.1.1 (;;;;;) Maple_2011\n  - regex: 'HbbTV/1.1.1 (;;;;;) Maple_2011'\n    os_replacement: 'Samsung'\n    os_v1_replacement: '2011'\n  # manage the two models of 2013\n  - regex: 'HbbTV/d+.d+.d+ (;(Samsung);SmartTV([0-9]{4});.*FXPDEUC'\n    os_v2_replacement: 'UE40F7000'\n  - regex: 'HbbTV/d+.d+.d+ (;(Samsung);SmartTV([0-9]{4});.*MST12DEUC'\n    os_v2_replacement: 'UE32F4500'\n  # generic Samsung (works starting in 2012)\n  #- regex: 'HbbTV/d+.d+.d+ (;(Samsung);SmartTV([0-9]{4});'\n\n  # Philips : not found any other way than a manual mapping\n  # Opera/9.80 (Linux mips; U; HbbTV/1.1.1 (; Philips; ; ; ; ) CE-HTML/1.0 NETTV/4.1.3 PHILIPSTV/1.1.1; en) Presto/2.10.250 Version/11.60\n  # Opera/9.80 (Linux mips ; U; HbbTV/1.1.1 (; Philips; ; ; ; ) CE-HTML/1.0 NETTV/3.2.1; en) Presto/2.6.33 Version/10.70\n  - regex: 'HbbTV/1.1.1 (; (Philips);.*NETTV/4'\n    os_v1_replacement: '2013'\n  - regex: 'HbbTV/1.1.1 (; (Philips);.*NETTV/3'\n    os_v1_replacement: '2012'\n  - regex: 'HbbTV/1.1.1 (; (Philips);.*NETTV/2'\n    os_v1_replacement: '2011'\n\n  # the HbbTV emulator developers use HbbTV/1.1.1 (;;;;;) firetv-firefox-plugin 1.1.20\n  - regex: 'HbbTV/d+.d+.d+.*(firetv)-firefox-plugin (d+).(d+).(d+)'\n    os_replacement: 'FireHbbTV'\n\n  # generic HbbTV, hoping to catch manufacturer name (always after 2nd comma) and the first string that looks like a 2011-2019 year\n  - regex: 'HbbTV/d+.d+.d+ (.*; ?([a-zA-Z]+) ?;.*(201[1-9]).*)'\n\n  ##########\n  # @note: Windows Phone needs to come before Windows NT 6.1 *and* before Android to catch cases such as:\n  # Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 920)...\n  # Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 920; ANZ821)...\n  # Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 920; Orange)...\n  # Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 920; Vodafone)...\n  ##########\n\n  - regex: '(Windows Phone) (?:OS[ /])?(d+).(d+)'\n\n  # Again a MS-special one: iPhone.*Outlook-iOS-Android/x.x is erroneously detected as Android\n  - regex: '(CPU[ +]OS|iPhone[ +]OS|CPU[ +]iPhone)[ +]+(d+)[_.](d+)(?:[_.](d+))?.*Outlook-iOS-Android'\n    os_replacement: 'iOS'\n\n  ##########\n  # Android\n  # can actually detect rooted android os. do we care?\n  ##########\n  - regex: '(Android)[ -/](d+).(d+)(?:[.-]([a-z0-9]+))?'\n\n  - regex: '(Android) Donut'\n    os_v1_replacement: '1'\n    os_v2_replacement: '2'\n\n  - regex: '(Android) Eclair'\n    os_v1_replacement: '2'\n    os_v2_replacement: '1'\n\n  - regex: '(Android) Froyo'\n    os_v1_replacement: '2'\n    os_v2_replacement: '2'\n\n  - regex: '(Android) Gingerbread'\n    os_v1_replacement: '2'\n    os_v2_replacement: '3'\n\n  - regex: '(Android) Honeycomb'\n    os_v1_replacement: '3'\n\n  # UCWEB\n  - regex: '^UCWEB.*; (Adr) (d+).(d+)(?:[.-]([a-z0-9]+))?;'\n    os_replacement: 'Android'\n  - regex: '^UCWEB.*; (iPad|iPh|iPd) OS (d+)_(d+)(?:_(d+))?;'\n    os_replacement: 'iOS'\n  - regex: '^UCWEB.*; (wds) (d+).(d+)(?:.(d+))?;'\n    os_replacement: 'Windows Phone'\n  # JUC\n  - regex: '^(JUC).*; ?U; ?(?:Android)?(d+).(d+)(?:[.-]([a-z0-9]+))?'\n    os_replacement: 'Android'\n\n  ##########\n  # Kindle Android\n  ##########\n  - regex: '(Silk-Accelerated=[a-z]{4,5})'\n    os_replacement: 'Android'\n\n  ##########\n  # Windows\n  # http://en.wikipedia.org/wiki/Windows_NT#Releases\n  # possibility of false positive when different marketing names share same NT kernel\n  # e.g. windows server 2003 and windows xp\n  # lots of ua strings have Windows NT 4.1 !?!?!?!? !?!? !? !????!?! !!! ??? !?!?! ?\n  # (very) roughly ordered in terms of frequency of occurence of regex (win xp currently most frequent, etc)\n  ##########\n\n  # ie mobile desktop mode\n  # spoofs nt 6.1. must come before windows 7\n  - regex: '(XBLWP7)'\n    os_replacement: 'Windows Phone'\n\n  # @note: This needs to come before Windows NT 6.1\n  - regex: '(Windows ?Mobile)'\n    os_replacement: 'Windows Mobile'\n\n  - regex: '(Windows (?:NT 5.2|NT 5.1))'\n    os_replacement: 'Windows XP'\n\n  - regex: '(Windows NT 6.1)'\n    os_replacement: 'Windows 7'\n\n  - regex: '(Windows NT 6.0)'\n    os_replacement: 'Windows Vista'\n\n  - regex: '(Win 9x 4.90)'\n    os_replacement: 'Windows ME'\n\n  - regex: '(Windows 98|Windows XP|Windows ME|Windows 95|Windows CE|Windows 7|Windows NT 4.0|Windows Vista|Windows 2000|Windows 3.1)'\n\n  - regex: '(Windows NT 6.2; ARM;)'\n    os_replacement: 'Windows RT'\n  - regex: '(Windows NT 6.2)'\n    os_replacement: 'Windows 8'\n\n  - regex: '(Windows NT 6.3; ARM;)'\n    os_replacement: 'Windows RT 8.1'\n  - regex: '(Windows NT 6.3)'\n    os_replacement: 'Windows 8.1'\n\n  - regex: '(Windows NT 6.4)'\n    os_replacement: 'Windows 10'\n  - regex: '(Windows NT 10.0)'\n    os_replacement: 'Windows 10'\n\n  - regex: '(Windows NT 5.0)'\n    os_replacement: 'Windows 2000'\n\n  - regex: '(WinNT4.0)'\n    os_replacement: 'Windows NT 4.0'\n\n  - regex: '(Windows ?CE)'\n    os_replacement: 'Windows CE'\n\n  - regex: 'Win ?(95|98|3.1|NT|ME|2000)'\n    os_replacement: 'Windows $1'\n\n  - regex: 'Win16'\n    os_replacement: 'Windows 3.1'\n\n  - regex: 'Win32'\n    os_replacement: 'Windows 95'\n\n  ##########\n  # Tizen OS from Samsung\n  # spoofs Android so pushing it above\n  ##########\n  - regex: '(Tizen)[/ ](d+).(d+)'\n\n  ##########\n  # Mac OS\n  # @ref: http://en.wikipedia.org/wiki/Mac_OS_X#Versions\n  # @ref: http://www.puredarwin.org/curious/versions\n  ##########\n  - regex: '((?:Mac[ +]?|; )OS[ +]X)[s+/](?:(d+)[_.](d+)(?:[_.](d+))?|Mach-O)'\n    os_replacement: 'Mac OS X'\n  # Leopard\n  - regex: ' (Dar)(win)/(9).(d+).*((?:i386|x86_64|Power Macintosh))'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '5'\n  # Snow Leopard\n  - regex: ' (Dar)(win)/(10).(d+).*((?:i386|x86_64))'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '6'\n  # Lion\n  - regex: ' (Dar)(win)/(11).(d+).*((?:i386|x86_64))'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '7'\n  # Mountain Lion\n  - regex: ' (Dar)(win)/(12).(d+).*((?:i386|x86_64))'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '8'\n  # Mavericks\n  - regex: ' (Dar)(win)/(13).(d+).*((?:i386|x86_64))'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '9'\n  # Yosemite is Darwin/14.x but patch versions are inconsistent in the Darwin string;\n  # more accurately covered by CFNetwork regexes downstream\n\n  # IE on Mac doesn't specify version number\n  - regex: 'Mac_PowerPC'\n    os_replacement: 'Mac OS'\n\n  # builds before tiger don't seem to specify version?\n\n  # ios devices spoof (mac os x), so including intel/ppc prefixes\n  - regex: '(?:PPC|Intel) (Mac OS X)'\n\n  ##########\n  # iOS\n  # http://en.wikipedia.org/wiki/IOS_version_history\n  ##########\n  # keep this above generic iOS, since AppleTV UAs contain 'CPU OS'\n  - regex: '(Apples?TV)(?:/(d+).(d+))?'\n    os_replacement: 'ATV OS X'\n\n  - regex: '(CPU[ +]OS|iPhone[ +]OS|CPU[ +]iPhone|CPU IPhone OS)[ +]+(d+)[_.](d+)(?:[_.](d+))?'\n    os_replacement: 'iOS'\n\n  # remaining cases are mostly only opera uas, so catch opera as to not catch iphone spoofs\n  - regex: '(iPhone|iPad|iPod); Opera'\n    os_replacement: 'iOS'\n\n  # few more stragglers\n  - regex: '(iPhone|iPad|iPod).*Mac OS X.*Version/(d+).(d+)'\n    os_replacement: 'iOS'\n\n  # CFNetwork/Darwin - The specific CFNetwork or Darwin version determines\n  # whether the os maps to Mac OS, or iOS, or just Darwin.\n  # See: http://user-agents.me/cfnetwork-version-list\n  - regex: '(CFNetwork)/(5)48.0.3.* Darwin/11.0.0'\n    os_replacement: 'iOS'\n  - regex: '(CFNetwork)/(5)48.(0).4.* Darwin/(1)1.0.0'\n    os_replacement: 'iOS'\n  - regex: '(CFNetwork)/(5)48.(1).4'\n    os_replacement: 'iOS'\n  - regex: '(CFNetwork)/(4)85.1(3).9'\n    os_replacement: 'iOS'\n  - regex: '(CFNetwork)/(6)09.(1).4'\n    os_replacement: 'iOS'\n  - regex: '(CFNetwork)/(6)(0)9'\n    os_replacement: 'iOS'\n  - regex: '(CFNetwork)/6(7)2.(1).13'\n    os_replacement: 'iOS'\n  - regex: '(CFNetwork)/6(7)2.(1).(1)4'\n    os_replacement: 'iOS'\n  - regex: '(CF)(Network)/6(7)(2).1.15'\n    os_replacement: 'iOS'\n    os_v1_replacement: '7'\n    os_v2_replacement: '1'\n  - regex: '(CFNetwork)/6(7)2.(0).(?:2|8)'\n    os_replacement: 'iOS'\n  - regex: '(CFNetwork)/709.1'\n    os_replacement: 'iOS'\n    os_v1_replacement: '8'\n    os_v2_replacement: '0.b5'\n  - regex: '(CF)(Network)/711.(d)'\n    os_replacement: 'iOS'\n    os_v1_replacement: '8'\n  - regex: '(CF)(Network)/(720).(d)'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '10'\n  - regex: '(CF)(Network)/(760).(d)'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '11'\n  - regex: '(CF)(Network)/758.(d)'\n    os_replacement: 'iOS'\n    os_v1_replacement: '9'\n  - regex: '(CF)(Network)/808.(d)'\n    os_replacement: 'iOS'\n    os_v1_replacement: '10'\n\n  ##########\n  # CFNetwork macOS Apps (must be before CFNetwork iOS Apps\n  # @ref: https://en.wikipedia.org/wiki/Darwin_(operating_system)#Release_history\n  ##########\n  - regex: 'CFNetwork/.* Darwin/16.d+.*(x86_64)'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '12'\n  - regex: 'CFNetwork/8.* Darwin/15.d+.*(x86_64)'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '11'\n  ##########\n  # CFNetwork iOS Apps\n  # @ref: https://en.wikipedia.org/wiki/Darwin_(operating_system)#Release_history\n  ##########\n  - regex: 'CFNetwork/.* Darwin/(9).d+'\n    os_replacement: 'iOS'\n    os_v1_replacement: '1'\n  - regex: 'CFNetwork/.* Darwin/(10).d+'\n    os_replacement: 'iOS'\n    os_v1_replacement: '4'\n  - regex: 'CFNetwork/.* Darwin/(11).d+'\n    os_replacement: 'iOS'\n    os_v1_replacement: '5'\n  - regex: 'CFNetwork/.* Darwin/(13).d+'\n    os_replacement: 'iOS'\n    os_v1_replacement: '6'\n  - regex: 'CFNetwork/6.* Darwin/(14).d+'\n    os_replacement: 'iOS'\n    os_v1_replacement: '7'\n  - regex: 'CFNetwork/7.* Darwin/(14).d+'\n    os_replacement: 'iOS'\n    os_v1_replacement: '8'\n    os_v2_replacement: '0'\n  - regex: 'CFNetwork/7.* Darwin/(15).d+'\n    os_replacement: 'iOS'\n    os_v1_replacement: '9'\n    os_v2_replacement: '0'\n  - regex: 'CFNetwork/8.* Darwin/(16).d+'\n    os_replacement: 'iOS'\n    os_v1_replacement: '10'\n  # iOS Apps\n  - regex: '\b(iOS[ /]|iOS; |iPhone(?:/| v|[ _]OS[/,]|; | OS : |d,d/|d,d; )|iPad/)(d{1,2})[_.](d{1,2})(?:[_.](d+))?'\n    os_replacement: 'iOS'\n  - regex: '((iOS);'\n\n  ##########\n  # Apple TV\n  ##########\n  - regex: '(tvOS)/(d+).(d+)'\n    os_replacement: 'tvOS'\n\n  ##########\n  # Chrome OS\n  # if version 0.0.0, probably this stuff:\n  # http://code.google.com/p/chromium-os/issues/detail?id=11573\n  # http://code.google.com/p/chromium-os/issues/detail?id=13790\n  ##########\n  - regex: '(CrOS) [a-z0-9_]+ (d+).(d+)(?:.(d+))?'\n    os_replacement: 'Chrome OS'\n\n  ##########\n  # Linux distros\n  ##########\n  - regex: '([Dd]ebian)'\n    os_replacement: 'Debian'\n  - regex: '(Linux Mint)(?:/(d+))?'\n  - regex: '(Mandriva)(?: Linux)?/(?:[d.-]+m[a-z]{2}(d+).(d))?'\n\n  ##########\n  # Symbian + Symbian OS\n  # http://en.wikipedia.org/wiki/History_of_Symbian\n  ##########\n  - regex: '(Symbian[Oo][Ss])[/ ](d+).(d+)'\n    os_replacement: 'Symbian OS'\n  - regex: '(Symbian/3).+NokiaBrowser/7.3'\n    os_replacement: 'Symbian^3 Anna'\n  - regex: '(Symbian/3).+NokiaBrowser/7.4'\n    os_replacement: 'Symbian^3 Belle'\n  - regex: '(Symbian/3)'\n    os_replacement: 'Symbian^3'\n  - regex: '\b(Series 60|SymbOS|S60Version|S60Vd|S60\b)'\n    os_replacement: 'Symbian OS'\n  - regex: '(MeeGo)'\n  - regex: 'Symbian [Oo][Ss]'\n    os_replacement: 'Symbian OS'\n  - regex: 'Series40;'\n    os_replacement: 'Nokia Series 40'\n  - regex: 'Series30Plus;'\n    os_replacement: 'Nokia Series 30 Plus'\n\n  ##########\n  # BlackBerry devices\n  ##########\n  - regex: '(BB10);.+Version/(d+).(d+).(d+)'\n    os_replacement: 'BlackBerry OS'\n  - regex: '(Black[Bb]erry)[0-9a-z]+/(d+).(d+).(d+)(?:.(d+))?'\n    os_replacement: 'BlackBerry OS'\n  - regex: '(Black[Bb]erry).+Version/(d+).(d+).(d+)(?:.(d+))?'\n    os_replacement: 'BlackBerry OS'\n  - regex: '(RIM Tablet OS) (d+).(d+).(d+)'\n    os_replacement: 'BlackBerry Tablet OS'\n  - regex: '(Play[Bb]ook)'\n    os_replacement: 'BlackBerry Tablet OS'\n  - regex: '(Black[Bb]erry)'\n    os_replacement: 'BlackBerry OS'\n\n  ##########\n  # Firefox OS\n  ##########\n  - regex: '((?:Mobile|Tablet);.+Gecko/18.0 Firefox/d+.d+'\n    os_replacement: 'Firefox OS'\n    os_v1_replacement: '1'\n    os_v2_replacement: '0'\n    os_v3_replacement: '1'\n\n  - regex: '((?:Mobile|Tablet);.+Gecko/18.1 Firefox/d+.d+'\n    os_replacement: 'Firefox OS'\n    os_v1_replacement: '1'\n    os_v2_replacement: '1'\n\n  - regex: '((?:Mobile|Tablet);.+Gecko/26.0 Firefox/d+.d+'\n    os_replacement: 'Firefox OS'\n    os_v1_replacement: '1'\n    os_v2_replacement: '2'\n\n  - regex: '((?:Mobile|Tablet);.+Gecko/28.0 Firefox/d+.d+'\n    os_replacement: 'Firefox OS'\n    os_v1_replacement: '1'\n    os_v2_replacement: '3'\n\n  - regex: '((?:Mobile|Tablet);.+Gecko/30.0 Firefox/d+.d+'\n    os_replacement: 'Firefox OS'\n    os_v1_replacement: '1'\n    os_v2_replacement: '4'\n\n  - regex: '((?:Mobile|Tablet);.+Gecko/32.0 Firefox/d+.d+'\n    os_replacement: 'Firefox OS'\n    os_v1_replacement: '2'\n    os_v2_replacement: '0'\n\n  - regex: '((?:Mobile|Tablet);.+Gecko/34.0 Firefox/d+.d+'\n    os_replacement: 'Firefox OS'\n    os_v1_replacement: '2'\n    os_v2_replacement: '1'\n\n  # Firefox OS Generic\n  - regex: '((?:Mobile|Tablet);.+Firefox/d+.d+'\n    os_replacement: 'Firefox OS'\n\n\n  ##########\n  # BREW\n  # yes, Brew is lower-cased for Brew MP\n  ##########\n  - regex: '(BREW)[ /](d+).(d+).(d+)'\n  - regex: '(BREW);'\n  - regex: '(Brew MP|BMP)[ /](d+).(d+).(d+)'\n    os_replacement: 'Brew MP'\n  - regex: 'BMP;'\n    os_replacement: 'Brew MP'\n\n  ##########\n  # Google TV\n  ##########\n  - regex: '(GoogleTV)(?: (d+).(d+)(?:.(d+))?|/[da-z]+)'\n\n  - regex: '(WebTV)/(d+).(d+)'\n\n  ##########\n  # Chromecast\n  ##########\n  - regex: '(CrKey)(?:[/](d+).(d+)(?:.(d+))?)?'\n    os_replacement: 'Chromecast'\n\n  ##########\n  # Misc mobile\n  ##########\n  - regex: '(hpw|web)OS/(d+).(d+)(?:.(d+))?'\n    os_replacement: 'webOS'\n  - regex: '(VRE);'\n\n  ##########\n  # Generic patterns\n  # since the majority of os cases are very specific, these go last\n  ##########\n  - regex: '(Fedora|Red Hat|PCLinuxOS|Puppy|Ubuntu|Kindle|Bada|Lubuntu|BackTrack|Slackware|(?:Free|Open|Net|\b)BSD)[/ ](d+).(d+)(?:.(d+)(?:.(d+))?)?'\n\n  # Gentoo Linux + Kernel Version\n  - regex: '(Linux)[ /](d+).(d+)(?:.(d+))?.*gentoo'\n    os_replacement: 'Gentoo'\n\n  # Opera Mini Bada\n  - regex: '((Bada);'\n\n  # just os\n  - regex: '(Windows|Android|WeTab|Maemo|Web0S)'\n  - regex: '(Ubuntu|Kubuntu|Arch Linux|CentOS|Slackware|Gentoo|openSUSE|SUSE|Red Hat|Fedora|PCLinuxOS|Mageia|(?:Free|Open|Net|\b)BSD)'\n  # Linux + Kernel Version\n  - regex: '(Linux)(?:[ /](d+).(d+)(?:.(d+))?)?'\n  - regex: 'SunOS'\n    os_replacement: 'Solaris'\n\n  # Roku Digital-Video-Players https://www.roku.com/\n  - regex: '^(Roku)/DVP-(d+).(d+)'\n\ndevice_parsers:\n\n  #########\n  # Mobile Spiders\n  # Catch the mobile crawler before checking for iPhones / Androids.\n  #########\n  - regex: '(?:(?:iPhone|Windows CE|Windows Phone|Android).*(?:(?:Bot|Yeti)-Mobile|YRSpider|BingPreview|bots?/d|(?:bot|spider).html)|AdsBot-Google-Mobile.*iPhone)'\n    regex_flag: 'i'\n    device_replacement: 'Spider'\n    brand_replacement: 'Spider'\n    model_replacement: 'Smartphone'\n  - regex: '(?:DoCoMo|\bMOT\b|\bLG\b|Nokia|Samsung|SonyEricsson).*(?:(?:Bot|Yeti)-Mobile|bots?/d|(?:bot|crawler).html|(?:jump|google|Wukong)bot|ichiro/mobile|/spider|YahooSeeker)'\n    regex_flag: 'i'\n    device_replacement: 'Spider'\n    brand_replacement: 'Spider'\n    model_replacement: 'Feature Phone'\n\n  #########\n  # WebBrowser for SmartWatch\n  # @ref: https://play.google.com/store/apps/details?id=se.vaggan.webbrowser&hl=en\n  #########\n  - regex: '\bSmartWatch *( *([^;]+) *; *([^;]+) *;'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  ######################################################################\n  # Android parsers\n  #\n  # @ref: https://support.google.com/googleplay/answer/1727131?hl=en\n  ######################################################################\n\n  # Android Application\n  - regex: 'Android Application[^-]+ - (Sony) ?(Ericsson)? (.+) w+ - '\n    device_replacement: '$1 $2'\n    brand_replacement: '$1$2'\n    model_replacement: '$3'\n  - regex: 'Android Application[^-]+ - (?:HTC|HUAWEI|LGE|LENOVO|MEDION|TCT) (HTC|HUAWEI|LG|LENOVO|MEDION|ALCATEL)[ _-](.+) w+ - '\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  - regex: 'Android Application[^-]+ - ([^ ]+) (.+) w+ - '\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  #########\n  # 3Q\n  # @ref: http://www.3q-int.com/\n  #########\n  - regex: '; *([BLRQ]Cd{4}[A-Z]+) +Build/'\n    device_replacement: '3Q $1'\n    brand_replacement: '3Q'\n    model_replacement: '$1'\n  - regex: '; *(?:3Q_)([^;/]+) +Build'\n    device_replacement: '3Q $1'\n    brand_replacement: '3Q'\n    model_replacement: '$1'\n\n  #########\n  # Acer\n  # @ref: http://us.acer.com/ac/en/US/content/group/tablets\n  #########\n  - regex: 'Android [34].*; *(A100|A101|A110|A200|A210|A211|A500|A501|A510|A511|A700(?: Lite| 3G)?|A701|B1-A71|A1-d{3}|B1-d{3}|V360|V370|W500|W500P|W501|W501P|W510|W511|W700|Slider SL101|DA22[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Acer'\n    model_replacement: '$1'\n  - regex: '; *Acer Iconia Tab ([^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Acer'\n    model_replacement: '$1'\n  - regex: '; *(Z1[1235]0|E320[^/]*|S500|S510|Liquid[^;/]*|Iconia Ad+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Acer'\n    model_replacement: '$1'\n  - regex: '; *(Acer |ACER )([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Acer'\n    model_replacement: '$2'\n\n  #########\n  # Advent\n  # @ref: https://en.wikipedia.org/wiki/Advent_Vega\n  # @note: VegaBean and VegaComb (names derived from jellybean, honeycomb) are\n  #   custom ROM builds for Vega\n  #########\n  - regex: '; *(Advent )?(Vega(?:Bean|Comb)?).* Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Advent'\n    model_replacement: '$2'\n\n  #########\n  # Ainol\n  # @ref: http://www.ainol.com/plugin.php?identifier=ainol&module=product\n  #########\n  - regex: '; *(Ainol )?((?:NOVO|[Nn]ovo)[^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Ainol'\n    model_replacement: '$2'\n\n  #########\n  # Airis\n  # @ref: http://airis.es/Tienda/Default.aspx?idG=001\n  #########\n  - regex: '; *AIRIS[ _-]?([^/;)]+) *(?:;|)|Build)'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Airis'\n    model_replacement: '$1'\n  - regex: '; *(OnePAD[^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Airis'\n    model_replacement: '$1'\n\n  #########\n  # Airpad\n  # @ref: ??\n  #########\n  - regex: '; *Airpad[ -]([^;/]+) Build'\n    device_replacement: 'Airpad $1'\n    brand_replacement: 'Airpad'\n    model_replacement: '$1'\n\n  #########\n  # Alcatel - TCT\n  # @ref: http://www.alcatelonetouch.com/global-en/products/smartphones.html\n  #########\n  - regex: '; *(one ?touch) (EVO7|T10|T20) Build'\n    device_replacement: 'Alcatel One Touch $2'\n    brand_replacement: 'Alcatel'\n    model_replacement: 'One Touch $2'\n  - regex: '; *(?:alcatel[ _])?(?:(?:one[ _]?touch[ _])|ot[ -])([^;/]+);? Build'\n    regex_flag: 'i'\n    device_replacement: 'Alcatel One Touch $1'\n    brand_replacement: 'Alcatel'\n    model_replacement: 'One Touch $1'\n  - regex: '; *(TCL)[ _]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  # operator specific models\n  - regex: '; *(Vodafone Smart II|Optimus_Madrid) Build'\n    device_replacement: 'Alcatel $1'\n    brand_replacement: 'Alcatel'\n    model_replacement: '$1'\n  - regex: '; *BASE_Lutea_3 Build'\n    device_replacement: 'Alcatel One Touch 998'\n    brand_replacement: 'Alcatel'\n    model_replacement: 'One Touch 998'\n  - regex: '; *BASE_Varia Build'\n    device_replacement: 'Alcatel One Touch 918D'\n    brand_replacement: 'Alcatel'\n    model_replacement: 'One Touch 918D'\n\n  #########\n  # Allfine\n  # @ref: http://www.myallfine.com/Products.asp\n  #########\n  - regex: '; *((?:FINE|Fine)d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Allfine'\n    model_replacement: '$1'\n\n  #########\n  # Allview\n  # @ref: http://www.allview.ro/produse/droseries/lista-tablete-pc/\n  #########\n  - regex: '; *(ALLVIEW[ _]?|Allview[ _]?)((?:Speed|SPEED).*) Build/'\n    device_replacement: '$1$2'\n    brand_replacement: 'Allview'\n    model_replacement: '$2'\n  - regex: '; *(ALLVIEW[ _]?|Allview[ _]?)?(AX1_Shine|AX2_Frenzy) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Allview'\n    model_replacement: '$2'\n  - regex: '; *(ALLVIEW[ _]?|Allview[ _]?)([^;/]*) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Allview'\n    model_replacement: '$2'\n\n  #########\n  # Allwinner\n  # @ref: http://www.allwinner.com/\n  # @models: A31 (13.3\"),A20,A10,\n  #########\n  - regex: '; *(A13-MID) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Allwinner'\n    model_replacement: '$1'\n  - regex: '; *(Allwinner)[ _-]?([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Allwinner'\n    model_replacement: '$1'\n\n  #########\n  # Amaway\n  # @ref: http://www.amaway.cn/\n  #########\n  - regex: '; *(A651|A701B?|A702|A703|A705|A706|A707|A711|A712|A713|A717|A722|A785|A801|A802|A803|A901|A902|A1002|A1003|A1006|A1007|A9701|A9703|Q710|Q80) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Amaway'\n    model_replacement: '$1'\n\n  #########\n  # Amoi\n  # @ref: http://www.amoi.com/en/prd/prd_index.jspx\n  #########\n  - regex: '; *(?:AMOI|Amoi)[ _]([^;/]+) Build'\n    device_replacement: 'Amoi $1'\n    brand_replacement: 'Amoi'\n    model_replacement: '$1'\n  - regex: '^(?:AMOI|Amoi)[ _]([^;/]+) Linux'\n    device_replacement: 'Amoi $1'\n    brand_replacement: 'Amoi'\n    model_replacement: '$1'\n\n  #########\n  # Aoc\n  # @ref: http://latin.aoc.com/media_tablet\n  #########\n  - regex: '; *(MW(?:0[789]|10)[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Aoc'\n    model_replacement: '$1'\n\n  #########\n  # Aoson\n  # @ref: http://www.luckystar.com.cn/en/mid.aspx?page=1\n  # @ref: http://www.luckystar.com.cn/en/mobiletel.aspx?page=1\n  # @note: brand owned by luckystar\n  #########\n  - regex: '; *(G7|M1013|M1015G|M11[CG]?|M-?12[B]?|M15|M19[G]?|M30[ACQ]?|M31[GQ]|M32|M33[GQ]|M36|M37|M38|M701T|M710|M712B|M713|M715G|M716G|M71(?:G|GS|T)?|M72[T]?|M73[T]?|M75[GT]?|M77G|M79T|M7L|M7LN|M81|M810|M81T|M82|M92|M92KS|M92S|M717G|M721|M722G|M723|M725G|M739|M785|M791|M92SK|M93D) Build'\n    device_replacement: 'Aoson $1'\n    brand_replacement: 'Aoson'\n    model_replacement: '$1'\n  - regex: '; *Aoson ([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: 'Aoson $1'\n    brand_replacement: 'Aoson'\n    model_replacement: '$1'\n\n  #########\n  # Apanda\n  # @ref: http://www.apanda.com.cn/\n  #########\n  - regex: '; *[Aa]panda[ _-]([^;/]+) Build'\n    device_replacement: 'Apanda $1'\n    brand_replacement: 'Apanda'\n    model_replacement: '$1'\n\n  #########\n  # Archos\n  # @ref: http://www.archos.com/de/products/tablets.html\n  # @ref: http://www.archos.com/de/products/smartphones/index.html\n  #########\n  - regex: '; *(?:ARCHOS|Archos) ?(GAMEPAD.*?)(?: Build|[;/()-])'\n    device_replacement: 'Archos $1'\n    brand_replacement: 'Archos'\n    model_replacement: '$1'\n  - regex: 'ARCHOS; GOGI; ([^;]+);'\n    device_replacement: 'Archos $1'\n    brand_replacement: 'Archos'\n    model_replacement: '$1'\n  - regex: '(?:ARCHOS|Archos)[ _]?(.*?)(?: Build|[;/()-]|$)'\n    device_replacement: 'Archos $1'\n    brand_replacement: 'Archos'\n    model_replacement: '$1'\n  - regex: '; *(AN(?:7|8|9|10|13)[A-Z0-9]{1,4}) Build'\n    device_replacement: 'Archos $1'\n    brand_replacement: 'Archos'\n    model_replacement: '$1'\n  - regex: '; *(A28|A32|A43|A70(?:BHT|CHT|HB|S|X)|A101(?:B|C|IT)|A7EB|A7EB-WK|101G9|80G9) Build'\n    device_replacement: 'Archos $1'\n    brand_replacement: 'Archos'\n    model_replacement: '$1'\n\n  #########\n  # A-rival\n  # @ref: http://www.a-rival.de/de/\n  #########\n  - regex: '; *(PAD-FMD[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Arival'\n    model_replacement: '$1'\n  - regex: '; *(BioniQ) ?([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Arival'\n    model_replacement: '$1 $2'\n\n  #########\n  # Arnova\n  # @ref: http://arnovatech.com/\n  #########\n  - regex: '; *(ANd[^;/]+|ARCHMd+) Build'\n    device_replacement: 'Arnova $1'\n    brand_replacement: 'Arnova'\n    model_replacement: '$1'\n  - regex: '; *(?:ARNOVA|Arnova) ?([^;/]+) Build'\n    device_replacement: 'Arnova $1'\n    brand_replacement: 'Arnova'\n    model_replacement: '$1'\n\n  #########\n  # Assistant\n  # @ref: http://www.assistant.ua\n  #########\n  - regex: '; *(?:ASSISTANT )?(AP)-?([1789]d{2}[A-Z]{0,2}|80104) Build'\n    device_replacement: 'Assistant $1-$2'\n    brand_replacement: 'Assistant'\n    model_replacement: '$1-$2'\n\n  #########\n  # Asus\n  # @ref: http://www.asus.com/uk/Tablets_Mobile/\n  #########\n  - regex: '; *(ME17d[^;/]*|ME3d{2}[^;/]+|K00[A-Z]|Nexus 10|Nexus 7(?: 2013)?|PadFone[^;/]*|Transformer[^;/]*|TFd{3}[^;/]*|eeepc) Build'\n    device_replacement: 'Asus $1'\n    brand_replacement: 'Asus'\n    model_replacement: '$1'\n  - regex: '; *ASUS[ _]*([^;/]+) Build'\n    device_replacement: 'Asus $1'\n    brand_replacement: 'Asus'\n    model_replacement: '$1'\n\n  #########\n  # Garmin-Asus\n  #########\n  - regex: '; *Garmin-Asus ([^;/]+) Build'\n    device_replacement: 'Garmin-Asus $1'\n    brand_replacement: 'Garmin-Asus'\n    model_replacement: '$1'\n  - regex: '; *(Garminfone) Build'\n    device_replacement: 'Garmin $1'\n    brand_replacement: 'Garmin-Asus'\n    model_replacement: '$1'\n\n  #########\n  # Attab\n  # @ref: http://www.theattab.com/\n  #########\n  - regex: '; (@TAB-[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Attab'\n    model_replacement: '$1'\n\n  #########\n  # Audiosonic\n  # @ref: ??\n  # @note: Take care with Docomo T-01 Toshiba\n  #########\n  - regex: '; *(T-(?:07|[^0]d)[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Audiosonic'\n    model_replacement: '$1'\n\n  #########\n  # Axioo\n  # @ref: http://www.axiooworld.com/ww/index.php\n  #########\n  - regex: '; *(?:Axioo[ _-]([^;/]+)|(picopad)[ _-]([^;/]+)) Build'\n    regex_flag: 'i'\n    device_replacement: 'Axioo $1$2 $3'\n    brand_replacement: 'Axioo'\n    model_replacement: '$1$2 $3'\n\n  #########\n  # Azend\n  # @ref: http://azendcorp.com/index.php/products/portable-electronics\n  #########\n  - regex: '; *(V(?:100|700|800)[^;/]*) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Azend'\n    model_replacement: '$1'\n\n  #########\n  # Bak\n  # @ref: http://www.bakinternational.com/produtos.php?cat=80\n  #########\n  - regex: '; *(IBAK-[^;/]*) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Bak'\n    model_replacement: '$1'\n\n  #########\n  # Bedove\n  # @ref: http://www.bedove.com/product.html\n  # @models: HY6501|HY5001|X12|X21|I5\n  #########\n  - regex: '; *(HY5001|HY6501|X12|X21|I5) Build'\n    device_replacement: 'Bedove $1'\n    brand_replacement: 'Bedove'\n    model_replacement: '$1'\n\n  #########\n  # Benss\n  # @ref: http://www.benss.net/\n  #########\n  - regex: '; *(JC-[^;/]*) Build'\n    device_replacement: 'Benss $1'\n    brand_replacement: 'Benss'\n    model_replacement: '$1'\n\n  #########\n  # Blackberry\n  # @ref: http://uk.blackberry.com/\n  # @note: Android Apps seams to be used here\n  #########\n  - regex: '; *(BB) ([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Blackberry'\n    model_replacement: '$2'\n\n  #########\n  # Blackbird\n  # @ref: http://iblackbird.co.kr\n  #########\n  - regex: '; *(BlackBird)[ _](I8.*) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  - regex: '; *(BlackBird)[ _](.*) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  #########\n  # Blaupunkt\n  # @ref: http://www.blaupunkt.com\n  #########\n  # Endeavour\n  - regex: '; *([0-9]+BP[EM][^;/]*|Endeavour[^;/]+) Build'\n    device_replacement: 'Blaupunkt $1'\n    brand_replacement: 'Blaupunkt'\n    model_replacement: '$1'\n\n  #########\n  # Blu\n  # @ref: http://bluproducts.com\n  #########\n  - regex: '; *((?:BLU|Blu)[ _-])([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Blu'\n    model_replacement: '$2'\n  # BMOBILE = operator branded device\n  - regex: '; *(?:BMOBILE )?(Blu|BLU|DASH [^;/]+|VIVO 4.3|TANK 4.5) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Blu'\n    model_replacement: '$1'\n\n  #########\n  # Blusens\n  # @ref: http://www.blusens.com/es/?sg=1&sv=al&roc=1\n  #########\n  # tablet\n  - regex: '; *(TOUCHd[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Blusens'\n    model_replacement: '$1'\n\n  #########\n  # Bmobile\n  # @ref: http://bmobile.eu.com/?categoria=smartphones-2\n  # @note: Might collide with Maxx as AX is used also there.\n  #########\n  # smartphone\n  - regex: '; *(AX5d+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Bmobile'\n    model_replacement: '$1'\n\n  #########\n  # bq\n  # @ref: http://bqreaders.com\n  #########\n  - regex: '; *([Bb]q) ([^;/]+);? Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'bq'\n    model_replacement: '$2'\n  - regex: '; *(Maxwell [^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'bq'\n    model_replacement: '$1'\n\n  #########\n  # Braun Phototechnik\n  # @ref: http://www.braun-phototechnik.de/en/products/list/~pcat.250/Tablet-PC.html\n  #########\n  - regex: '; *((?:B-Tab|B-TAB) ?d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Braun'\n    model_replacement: '$1'\n\n  #########\n  # Broncho\n  # @ref: http://www.broncho.cn/\n  #########\n  - regex: '; *(Broncho) ([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  #########\n  # Captiva\n  # @ref: http://www.captiva-power.de\n  #########\n  - regex: '; *CAPTIVA ([^;/]+) Build'\n    device_replacement: 'Captiva $1'\n    brand_replacement: 'Captiva'\n    model_replacement: '$1'\n\n  #########\n  # Casio\n  # @ref: http://www.casiogzone.com/\n  #########\n  - regex: '; *(C771|CAL21|IS11CA) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Casio'\n    model_replacement: '$1'\n\n  #########\n  # Cat\n  # @ref: http://www.cat-sound.com\n  #########\n  - regex: '; *(?:Cat|CAT) ([^;/]+) Build'\n    device_replacement: 'Cat $1'\n    brand_replacement: 'Cat'\n    model_replacement: '$1'\n  - regex: '; *(?:Cat)(Nova.*) Build'\n    device_replacement: 'Cat $1'\n    brand_replacement: 'Cat'\n    model_replacement: '$1'\n  - regex: '; *(INM8002KP|ADM8000KP_[AB]) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Cat'\n    model_replacement: 'Tablet PHOENIX 8.1J0'\n\n  #########\n  # Celkon\n  # @ref: http://www.celkonmobiles.com/?_a=products\n  # @models: A10, A19Q, A101, A105, A107, A107+, A112, A118, A119, A119Q, A15, A19, A20, A200, A220, A225, A22 Race, A27, A58, A59, A60, A62, A63, A64, A66, A67, A69, A75, A77, A79, A8+, A83, A85, A86, A87, A89 Ultima, A9+, A90, A900, A95, A97i, A98, AR 40, AR 45, AR 50, ML5\n  #########\n  - regex: '; *(?:[Cc]elkon[ _*]|CELKON[ _*])([^;/)]+) ?(?:Build|;|))'\n    device_replacement: '$1'\n    brand_replacement: 'Celkon'\n    model_replacement: '$1'\n  - regex: 'Build/(?:[Cc]elkon)+_?([^;/_)]+)'\n    device_replacement: '$1'\n    brand_replacement: 'Celkon'\n    model_replacement: '$1'\n  - regex: '; *(CT)-?(d+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Celkon'\n    model_replacement: '$1$2'\n  # smartphones\n  - regex: '; *(A19|A19Q|A105|A107[^;/)]*) ?(?:Build|;|))'\n    device_replacement: '$1'\n    brand_replacement: 'Celkon'\n    model_replacement: '$1'\n\n  #########\n  # ChangJia\n  # @ref: http://www.cjshowroom.com/eproducts.aspx?classcode=004001001\n  # @brief: China manufacturer makes tablets for different small brands\n  #         (eg. http://www.zeepad.net/index.html)\n  #########\n  - regex: '; *(TPC[0-9]{4,5}) Build'\n    device_replacement: '$1'\n    brand_replacement: 'ChangJia'\n    model_replacement: '$1'\n\n  #########\n  # Cloudfone\n  # @ref: http://www.cloudfonemobile.com/\n  #########\n  - regex: '; *(Cloudfone)[ _](Excite)([^ ][^;/]+) Build'\n    device_replacement: '$1 $2 $3'\n    brand_replacement: 'Cloudfone'\n    model_replacement: '$1 $2 $3'\n  - regex: '; *(Excite|ICE)[ _](d+[^;/]+) Build'\n    device_replacement: 'Cloudfone $1 $2'\n    brand_replacement: 'Cloudfone'\n    model_replacement: 'Cloudfone $1 $2'\n  - regex: '; *(Cloudfone|CloudPad)[ _]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Cloudfone'\n    model_replacement: '$1 $2'\n\n  #########\n  # Cmx\n  # @ref: http://cmx.at/de/\n  #########\n  - regex: '; *((?:Aquila|Clanga|Rapax)[^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Cmx'\n    model_replacement: '$1'\n\n  #########\n  # CobyKyros\n  # @ref: http://cobykyros.com\n  # @note: Be careful with MIDd{3} from MpMan or Manta\n  #########\n  - regex: '; *(?:CFW-|Kyros )?(MID[0-9]{4}(?:[ABC]|SR|TV)?)((3G)-4G| GB 8K| 3G| 8K| GB)? *(?:Build|[;)])'\n    device_replacement: 'CobyKyros $1$2'\n    brand_replacement: 'CobyKyros'\n    model_replacement: '$1$2'\n\n  #########\n  # Coolpad\n  # @ref: ??\n  #########\n  - regex: '; *([^;/]*)Coolpad[ _]([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Coolpad'\n    model_replacement: '$1$2'\n\n  #########\n  # Cube\n  # @ref: http://www.cube-tablet.com/buy-products.html\n  #########\n  - regex: '; *(CUBE[ _])?([KU][0-9]+ ?GT.*|A5300) Build'\n    regex_flag: 'i'\n    device_replacement: '$1$2'\n    brand_replacement: 'Cube'\n    model_replacement: '$2'\n\n  #########\n  # Cubot\n  # @ref: http://www.cubotmall.com/\n  #########\n  - regex: '; *CUBOT ([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Cubot'\n    model_replacement: '$1'\n  - regex: '; *(BOBBY) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Cubot'\n    model_replacement: '$1'\n\n  #########\n  # Danew\n  # @ref: http://www.danew.com/produits-tablette.php\n  #########\n  - regex: '; *(Dslide [^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Danew'\n    model_replacement: '$1'\n\n  #########\n  # Dell\n  # @ref: http://www.dell.com\n  # @ref: http://www.softbank.jp/mobile/support/product/101dl/\n  # @ref: http://www.softbank.jp/mobile/support/product/001dl/\n  # @ref: http://developer.emnet.ne.jp/android.html\n  # @ref: http://www.dell.com/in/p/mobile-xcd28/pd\n  # @ref: http://www.dell.com/in/p/mobile-xcd35/pd\n  #########\n  - regex: '; *(XCD)[ _]?(28|35) Build'\n    device_replacement: 'Dell $1$2'\n    brand_replacement: 'Dell'\n    model_replacement: '$1$2'\n  - regex: '; *(001DL) Build'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: 'Streak'\n  - regex: '; *(?:Dell|DELL) (Streak) Build'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: 'Streak'\n  - regex: '; *(101DL|GS01|Streak Pro[^;/]*) Build'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: 'Streak Pro'\n  - regex: '; *([Ss]treak ?7) Build'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: 'Streak 7'\n  - regex: '; *(Mini-3iX) Build'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: '$1'\n  - regex: '; *(?:Dell|DELL)[ _](Aero|Venue|Thunder|Mini.*|Streak[ _]Pro) Build'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: '$1'\n  - regex: '; *Dell[ _]([^;/]+) Build'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: '$1'\n  - regex: '; *Dell ([^;/]+) Build'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: '$1'\n\n  #########\n  # Denver\n  # @ref: http://www.denver-electronics.com/tablets1/\n  #########\n  - regex: '; *(TA[CD]-d+[^;/]*) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Denver'\n    model_replacement: '$1'\n\n  #########\n  # Dex\n  # @ref: http://dex.ua/\n  #########\n  - regex: '; *(iP[789]d{2}(?:-3G)?|IP10d{2}(?:-8GB)?) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Dex'\n    model_replacement: '$1'\n\n  #########\n  # DNS AirTab\n  # @ref: http://www.dns-shop.ru/\n  #########\n  - regex: '; *(AirTab)[ _-]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'DNS'\n    model_replacement: '$1 $2'\n\n  #########\n  # Docomo (Operator Branded Device)\n  # @ref: http://www.ipentec.com/document/document.aspx?page=android-useragent\n  #########\n  - regex: '; *(F-d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Fujitsu'\n    model_replacement: '$1'\n  - regex: '; *(HT-03A) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: 'Magic'\n  - regex: '; *(HT-d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n  - regex: '; *(L-d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'LG'\n    model_replacement: '$1'\n  - regex: '; *(N-d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Nec'\n    model_replacement: '$1'\n  - regex: '; *(P-d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Panasonic'\n    model_replacement: '$1'\n  - regex: '; *(SC-d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n  - regex: '; *(SH-d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Sharp'\n    model_replacement: '$1'\n  - regex: '; *(SO-d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'SonyEricsson'\n    model_replacement: '$1'\n  - regex: '; *(T-0[12][^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Toshiba'\n    model_replacement: '$1'\n\n  #########\n  # DOOV\n  # @ref: http://www.doov.com.cn/\n  #########\n  - regex: '; *(DOOV)[ _]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'DOOV'\n    model_replacement: '$2'\n\n  #########\n  # Enot\n  # @ref: http://www.enot.ua/\n  #########\n  - regex: '; *(Enot|ENOT)[ -]?([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Enot'\n    model_replacement: '$2'\n\n  #########\n  # Evercoss\n  # @ref: http://evercoss.com/android/\n  #########\n  - regex: '; *[^;/]+ Build/(?:CROSS|Cross)+[ _-]([^)]+)'\n    device_replacement: 'CROSS $1'\n    brand_replacement: 'Evercoss'\n    model_replacement: 'Cross $1'\n  - regex: '; *(CROSS|Cross)[ _-]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Evercoss'\n    model_replacement: 'Cross $2'\n\n  #########\n  # Explay\n  # @ref: http://explay.ru/\n  #########\n  - regex: '; *Explay[_ ](.+?)(?:[)]| Build)'\n    device_replacement: '$1'\n    brand_replacement: 'Explay'\n    model_replacement: '$1'\n\n  #########\n  # Fly\n  # @ref: http://www.fly-phone.com/\n  #########\n  - regex: '; *(IQ.*) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Fly'\n    model_replacement: '$1'\n  - regex: '; *(Fly|FLY)[ _](IQ[^;]+|F[34]d+[^;]*);? Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Fly'\n    model_replacement: '$2'\n\n  #########\n  # Fujitsu\n  # @ref: http://www.fujitsu.com/global/\n  #########\n  - regex: '; *(M532|Q572|FJL21) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Fujitsu'\n    model_replacement: '$1'\n\n  #########\n  # Galapad\n  # @ref: http://www.galapad.net/product.html\n  #########\n  - regex: '; *(G1) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Galapad'\n    model_replacement: '$1'\n\n  #########\n  # Geeksphone\n  # @ref: http://www.geeksphone.com/\n  #########\n  - regex: '; *(Geeksphone) ([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  #########\n  # Gfive\n  # @ref: http://www.gfivemobile.com/en\n  #########\n  #- regex: '; *(G'?FIVE) ([^;/]+) Build' # there is a problem with python yaml parser here\n  - regex: '; *(G[^F]?FIVE) ([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Gfive'\n    model_replacement: '$2'\n\n  #########\n  # Gionee\n  # @ref: http://www.gionee.com/\n  #########\n  - regex: '; *(Gionee)[ _-]([^;/]+)(?:/[^;/]+)? Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Gionee'\n    model_replacement: '$2'\n  - regex: '; *(GNd+[A-Z]?|INFINITY_PASSION|Ctrl_V1) Build'\n    device_replacement: 'Gionee $1'\n    brand_replacement: 'Gionee'\n    model_replacement: '$1'\n  - regex: '; *(E3) Build/JOP40D'\n    device_replacement: 'Gionee $1'\n    brand_replacement: 'Gionee'\n    model_replacement: '$1'\n\n  #########\n  # GoClever\n  # @ref: http://www.goclever.com\n  #########\n  - regex: '; *((?:FONE|QUANTUM|INSIGNIA) d+[^;/]*|PLAYTAB) Build'\n    device_replacement: 'GoClever $1'\n    brand_replacement: 'GoClever'\n    model_replacement: '$1'\n  - regex: '; *GOCLEVER ([^;/]+) Build'\n    device_replacement: 'GoClever $1'\n    brand_replacement: 'GoClever'\n    model_replacement: '$1'\n\n  #########\n  # Google\n  # @ref: http://www.google.de/glass/start/\n  #########\n  - regex: '; *(Glass d+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Google'\n    model_replacement: '$1'\n  - regex: '; *(Pixel w+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Google'\n    model_replacement: '$1'\n\n  #########\n  # Gigabyte\n  # @ref: http://gsmart.gigabytecm.com/en/\n  #########\n  - regex: '; *(GSmart)[ -]([^/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Gigabyte'\n    model_replacement: '$1 $2'\n\n  #########\n  # Freescale development boards\n  # @ref: http://www.freescale.com/webapp/sps/site/prod_summary.jsp?code=IMX53QSB\n  #########\n  - regex: '; *(imx5[13]_[^/]+) Build'\n    device_replacement: 'Freescale $1'\n    brand_replacement: 'Freescale'\n    model_replacement: '$1'\n\n  #########\n  # Haier\n  # @ref: http://www.haier.com/\n  # @ref: http://www.haier.com/de/produkte/tablet/\n  #########\n  - regex: '; *Haier[ _-]([^/]+) Build'\n    device_replacement: 'Haier $1'\n    brand_replacement: 'Haier'\n    model_replacement: '$1'\n  - regex: '; *(PAD1016) Build'\n    device_replacement: 'Haipad $1'\n    brand_replacement: 'Haipad'\n    model_replacement: '$1'\n\n  #########\n  # Haipad\n  # @ref: http://www.haipad.net/\n  # @models: V7P|M7SM7S|M9XM9X|M7XM7X|M9|M8|M7-M|M1002|M7|M701\n  #########\n  - regex: '; *(M701|M7|M8|M9) Build'\n    device_replacement: 'Haipad $1'\n    brand_replacement: 'Haipad'\n    model_replacement: '$1'\n\n  #########\n  # Hannspree\n  # @ref: http://www.hannspree.eu/\n  # @models: SN10T1|SN10T2|SN70T31B|SN70T32W\n  #########\n  - regex: '; *(SNd+T[^;)/]*)(?: Build|[;)])'\n    device_replacement: 'Hannspree $1'\n    brand_replacement: 'Hannspree'\n    model_replacement: '$1'\n\n  #########\n  # HCLme\n  # @ref: http://www.hclmetablet.com/india/\n  #########\n  - regex: 'Build/HCL ME Tablet ([^;)]+)[);]'\n    device_replacement: 'HCLme $1'\n    brand_replacement: 'HCLme'\n    model_replacement: '$1'\n  - regex: '; *([^;/]+) Build/HCL'\n    device_replacement: 'HCLme $1'\n    brand_replacement: 'HCLme'\n    model_replacement: '$1'\n\n  #########\n  # Hena\n  # @ref: http://www.henadigital.com/en/product/index.asp?id=6\n  #########\n  - regex: '; *(MID-?d{4}C[EM]) Build'\n    device_replacement: 'Hena $1'\n    brand_replacement: 'Hena'\n    model_replacement: '$1'\n\n  #########\n  # Hisense\n  # @ref: http://www.hisense.com/\n  #########\n  - regex: '; *(EGd{2,}|HS-[^;/]+|MIRA[^;/]+) Build'\n    device_replacement: 'Hisense $1'\n    brand_replacement: 'Hisense'\n    model_replacement: '$1'\n  - regex: '; *(andromax[^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: 'Hisense $1'\n    brand_replacement: 'Hisense'\n    model_replacement: '$1'\n\n  #########\n  # hitech\n  # @ref: http://www.hitech-mobiles.com/\n  #########\n  - regex: '; *(?:AMAZE[ _](Sd+)|(Sd+)[ _]AMAZE) Build'\n    device_replacement: 'AMAZE $1$2'\n    brand_replacement: 'hitech'\n    model_replacement: 'AMAZE $1$2'\n\n  #########\n  # HP\n  # @ref: http://www.hp.com/\n  #########\n  - regex: '; *(PlayBook) Build'\n    device_replacement: 'HP $1'\n    brand_replacement: 'HP'\n    model_replacement: '$1'\n  - regex: '; *HP ([^/]+) Build'\n    device_replacement: 'HP $1'\n    brand_replacement: 'HP'\n    model_replacement: '$1'\n  - regex: '; *([^/]+_tenderloin) Build'\n    device_replacement: 'HP TouchPad'\n    brand_replacement: 'HP'\n    model_replacement: 'TouchPad'\n\n  #########\n  # Huawei\n  # @ref: http://www.huaweidevice.com\n  # @note: Needs to be before HTC due to Desire HD Build on U8815\n  #########\n  - regex: '; *(HUAWEI |Huawei-)?([UY][^;/]+) Build/(?:Huawei|HUAWEI)([UY][^);]+))'\n    device_replacement: '$1$2'\n    brand_replacement: 'Huawei'\n    model_replacement: '$2'\n  - regex: '; *([^;/]+) Build[/ ]Huawei(MT1-U06|[A-Z]+d+[^);]+)[^);]*)'\n    device_replacement: '$1'\n    brand_replacement: 'Huawei'\n    model_replacement: '$2'\n  - regex: '; *(S7|M860) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Huawei'\n    model_replacement: '$1'\n  - regex: '; *((?:HUAWEI|Huawei)[ -]?)(MediaPad) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Huawei'\n    model_replacement: '$2'\n  - regex: '; *((?:HUAWEI[ _]?|Huawei[ _])?Ascend[ _])([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Huawei'\n    model_replacement: '$2'\n  - regex: '; *((?:HUAWEI|Huawei)[ _-]?)((?:G700-|MT-)[^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Huawei'\n    model_replacement: '$2'\n  - regex: '; *((?:HUAWEI|Huawei)[ _-]?)([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Huawei'\n    model_replacement: '$2'\n  - regex: '; *(MediaPad[^;]+|SpringBoard) Build/Huawei'\n    device_replacement: '$1'\n    brand_replacement: 'Huawei'\n    model_replacement: '$1'\n  - regex: '; *([^;]+) Build/(?:Huawei|HUAWEI)'\n    device_replacement: '$1'\n    brand_replacement: 'Huawei'\n    model_replacement: '$1'\n  - regex: '; *([Uu])([89]d{3}) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Huawei'\n    model_replacement: 'U$2'\n  - regex: '; *(?:Ideos |IDEOS )(S7) Build'\n    device_replacement: 'Huawei Ideos$1'\n    brand_replacement: 'Huawei'\n    model_replacement: 'Ideos$1'\n  - regex: '; *(?:Ideos |IDEOS )([^;/]+s*|s*)Build'\n    device_replacement: 'Huawei Ideos$1'\n    brand_replacement: 'Huawei'\n    model_replacement: 'Ideos$1'\n  - regex: '; *(Orange Daytona|Pulse|Pulse Mini|Vodafone 858|C8500|C8600|C8650|C8660|Nexus 6P|ATH-.+?) Build[/ ]'\n    device_replacement: 'Huawei $1'\n    brand_replacement: 'Huawei'\n    model_replacement: '$1'\n\n  #########\n  # HTC\n  # @ref: http://www.htc.com/www/products/\n  # @ref: http://en.wikipedia.org/wiki/List_of_HTC_phones\n  #########\n\n  - regex: '; *HTC[ _]([^;]+); Windows Phone'\n    device_replacement: 'HTC $1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n\n  # Android HTC with Version Number matcher\n  # ; HTC_0P3Z11/1.12.161.3 Build\n  # ;HTC_A3335 V2.38.841.1 Build\n  - regex: '; *(?:HTC[ _/])+([^ _/]+)(?:[/\\]1.0 | V|/| +)d+.d[d.]*(?: *Build|))'\n    device_replacement: 'HTC $1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n  - regex: '; *(?:HTC[ _/])+([^ _/]+)(?:[ _/]([^ _/]+))?(?:[/\\]1.0 | V|/| +)d+.d[d.]*(?: *Build|))'\n    device_replacement: 'HTC $1 $2'\n    brand_replacement: 'HTC'\n    model_replacement: '$1 $2'\n  - regex: '; *(?:HTC[ _/])+([^ _/]+)(?:[ _/]([^ _/]+)(?:[ _/]([^ _/]+))?)?(?:[/\\]1.0 | V|/| +)d+.d[d.]*(?: *Build|))'\n    device_replacement: 'HTC $1 $2 $3'\n    brand_replacement: 'HTC'\n    model_replacement: '$1 $2 $3'\n  - regex: '; *(?:HTC[ _/])+([^ _/]+)(?:[ _/]([^ _/]+)(?:[ _/]([^ _/]+)(?:[ _/]([^ _/]+))?)?)?(?:[/\\]1.0 | V|/| +)d+.d[d.]*(?: *Build|))'\n    device_replacement: 'HTC $1 $2 $3 $4'\n    brand_replacement: 'HTC'\n    model_replacement: '$1 $2 $3 $4'\n\n  # Android HTC without Version Number matcher\n  - regex: '; *(?:(?:HTC|htc)(?:_blocked)*[ _/])+([^ _/;]+)(?: *Build|[;)]| - )'\n    device_replacement: 'HTC $1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n  - regex: '; *(?:(?:HTC|htc)(?:_blocked)*[ _/])+([^ _/]+)(?:[ _/]([^ _/;)]+))?(?: *Build|[;)]| - )'\n    device_replacement: 'HTC $1 $2'\n    brand_replacement: 'HTC'\n    model_replacement: '$1 $2'\n  - regex: '; *(?:(?:HTC|htc)(?:_blocked)*[ _/])+([^ _/]+)(?:[ _/]([^ _/]+)(?:[ _/]([^ _/;)]+))?)?(?: *Build|[;)]| - )'\n    device_replacement: 'HTC $1 $2 $3'\n    brand_replacement: 'HTC'\n    model_replacement: '$1 $2 $3'\n  - regex: '; *(?:(?:HTC|htc)(?:_blocked)*[ _/])+([^ _/]+)(?:[ _/]([^ _/]+)(?:[ _/]([^ _/]+)(?:[ _/]([^ /;]+))?)?)?(?: *Build|[;)]| - )'\n    device_replacement: 'HTC $1 $2 $3 $4'\n    brand_replacement: 'HTC'\n    model_replacement: '$1 $2 $3 $4'\n\n  # HTC Streaming Player\n  - regex: 'HTC Streaming Player [^/]*/[^/]*/ htc_([^/]+) /'\n    device_replacement: 'HTC $1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n  # general matcher for anything else\n  - regex: '(?:[;,] *|^)(?:htccn_chs-)?HTC[ _-]?([^;]+?)(?: *Build|clay|Android|-?Mozilla| Opera| Profile| UNTRUSTED|[;/()]|$)'\n    regex_flag: 'i'\n    device_replacement: 'HTC $1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n  # Android matchers without HTC\n  - regex: '; *(A6277|ADR6200|ADR6300|ADR6350|ADR6400[A-Z]*|ADR6425[A-Z]*|APX515CKT|ARIA|Desire[^_ ]*|Dream|EndeavorU|Eris|Evo|Flyer|HD2|Hero|HERO200|Hero CDMA|HTL21|Incredible|Inspire[A-Z0-9]*|Legend|Liberty|Nexus ?(?:One|HD2)|One|One S C2|One[ _]?(?:S|V|X+?)w*|PC36100|PG06100|PG86100|S31HT|Sensation|Wildfire)(?: Build|[/;()])'\n    regex_flag: 'i'\n    device_replacement: 'HTC $1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n  - regex: '; *(ADR6200|ADR6400L|ADR6425LVW|Amaze|DesireS?|EndeavorU|Eris|EVO|Evod[A-Z]+|HD2|IncredibleS?|Inspire[A-Z0-9]*|Inspire[A-Z0-9]*|Sensation[A-Z0-9]*|Wildfire)[ _-](.+?)(?:[/;)]|Build|MIUI|1.0)'\n    regex_flag: 'i'\n    device_replacement: 'HTC $1 $2'\n    brand_replacement: 'HTC'\n    model_replacement: '$1 $2'\n\n  #########\n  # Hyundai\n  # @ref: http://www.hyundaitechnologies.com\n  #########\n  - regex: '; *HYUNDAI (Td[^/]*) Build'\n    device_replacement: 'Hyundai $1'\n    brand_replacement: 'Hyundai'\n    model_replacement: '$1'\n  - regex: '; *HYUNDAI ([^;/]+) Build'\n    device_replacement: 'Hyundai $1'\n    brand_replacement: 'Hyundai'\n    model_replacement: '$1'\n  # X900? http://www.amazon.com/Hyundai-X900-Retina-Android-Bluetooth/dp/B00AO07H3O\n  - regex: '; *(X700|Hold X|MB-6900) Build'\n    device_replacement: 'Hyundai $1'\n    brand_replacement: 'Hyundai'\n    model_replacement: '$1'\n\n  #########\n  # iBall\n  # @ref: http://www.iball.co.in/Category/Mobiles/22\n  #########\n  - regex: '; *(?:iBall[ _-])?(Andi)[ _]?(d[^;/]*) Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'iBall'\n    model_replacement: '$1 $2'\n  - regex: '; *(IBall)(?:[ _]([^;/]+)|) Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'iBall'\n    model_replacement: '$2'\n\n  #########\n  # IconBIT\n  # @ref: http://www.iconbit.com/catalog/tablets/\n  #########\n  - regex: '; *(NT-d+[^ ;/]*|Net[Tt]AB [^;/]+|Mercury [A-Z]+|iconBIT)(?: S/N:[^;/]+)? Build'\n    device_replacement: '$1'\n    brand_replacement: 'IconBIT'\n    model_replacement: '$1'\n\n  #########\n  # IMO\n  # @ref: http://www.ponselimo.com/\n  #########\n  - regex: '; *(IMO)[ _]([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'IMO'\n    model_replacement: '$2'\n\n  #########\n  # i-mobile\n  # @ref: http://www.i-mobilephone.com/\n  #########\n  - regex: '; *i-?mobile[ _]([^/]+) Build/'\n    regex_flag: 'i'\n    device_replacement: 'i-mobile $1'\n    brand_replacement: 'imobile'\n    model_replacement: '$1'\n  - regex: '; *(i-(?:style|note)[^/]*) Build/'\n    regex_flag: 'i'\n    device_replacement: 'i-mobile $1'\n    brand_replacement: 'imobile'\n    model_replacement: '$1'\n\n  #########\n  # Impression\n  # @ref: http://impression.ua/planshetnye-kompyutery\n  #########\n  - regex: '; *(ImPAD) ?(d+(?:.)*) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Impression'\n    model_replacement: '$1 $2'\n\n  #########\n  # Infinix\n  # @ref: http://www.infinixmobility.com/index.html\n  #########\n  - regex: '; *(Infinix)[ _]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Infinix'\n    model_replacement: '$2'\n\n  #########\n  # Informer\n  # @ref: ??\n  #########\n  - regex: '; *(Informer)[ -]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Informer'\n    model_replacement: '$2'\n\n  #########\n  # Intenso\n  # @ref: http://www.intenso.de\n  # @models: 7\":TAB 714,TAB 724;8\":TAB 814,TAB 824;10\":TAB 1004\n  #########\n  - regex: '; *(TAB) ?([78][12]4) Build'\n    device_replacement: 'Intenso $1'\n    brand_replacement: 'Intenso'\n    model_replacement: '$1 $2'\n\n  #########\n  # Intex\n  # @ref: http://intexmobile.in/index.aspx\n  # @note: Zync also offers a \"Cloud Z5\" device\n  #########\n  # smartphones\n  - regex: '; *(?:Intex[ _])?(AQUA|Aqua)([ _.-])([^;/]+) *(?:Build|;)'\n    device_replacement: '$1$2$3'\n    brand_replacement: 'Intex'\n    model_replacement: '$1 $3'\n  # matches \"INTEX CLOUD X1\"\n  - regex: '; *(?:INTEX|Intex)(?:[_ ]([^ _;/]+))(?:[_ ]([^ _;/]+))? *(?:Build|;)'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Intex'\n    model_replacement: '$1 $2'\n  # tablets\n  - regex: '; *([iI]Buddy)[ _]?(Connect)(?:_|?_| )?([^;/]*) *(?:Build|;)'\n    device_replacement: '$1 $2 $3'\n    brand_replacement: 'Intex'\n    model_replacement: 'iBuddy $2 $3'\n  - regex: '; *(I-Buddy)[ _]([^;/]+) *(?:Build|;)'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Intex'\n    model_replacement: 'iBuddy $2'\n\n  #########\n  # iOCEAN\n  # @ref: http://www.iocean.cc/\n  #########\n  - regex: '; *(iOCEAN) ([^/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'iOCEAN'\n    model_replacement: '$2'\n\n  #########\n  # i.onik\n  # @ref: http://www.i-onik.de/\n  #########\n  - regex: '; *(TPd+(?:.d+)?-d[^;/]+) Build'\n    device_replacement: 'ionik $1'\n    brand_replacement: 'ionik'\n    model_replacement: '$1'\n\n  #########\n  # IRU.ru\n  # @ref: http://www.iru.ru/catalog/soho/planetable/\n  #########\n  - regex: '; *(M702pro) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Iru'\n    model_replacement: '$1'\n\n  #########\n  # Ivio\n  # @ref: http://www.ivio.com/mobile.php\n  # @models: DG80,DG20,DE38,DE88,MD70\n  #########\n  - regex: '; *(DE88Plus|MD70) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Ivio'\n    model_replacement: '$1'\n  - regex: '; *IVIO[_-]([^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Ivio'\n    model_replacement: '$1'\n\n  #########\n  # Jaytech\n  # @ref: http://www.jay-tech.de/jaytech/servlet/frontend/\n  #########\n  - regex: '; *(TPC-d+|JAY-TECH) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Jaytech'\n    model_replacement: '$1'\n\n  #########\n  # Jiayu\n  # @ref: http://www.ejiayu.com/en/Product.html\n  #########\n  - regex: '; *(JY-[^;/]+|G[234]S?) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Jiayu'\n    model_replacement: '$1'\n\n  #########\n  # JXD\n  # @ref: http://www.jxd.hk/\n  #########\n  - regex: '; *(JXD)[ _-]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'JXD'\n    model_replacement: '$2'\n\n  #########\n  # Karbonn\n  # @ref: http://www.karbonnmobiles.com/products_tablet.php\n  #########\n  - regex: '; *Karbonn[ _]?([^;/]+) *(?:Build|;)'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Karbonn'\n    model_replacement: '$1'\n  - regex: '; *([^;]+) Build/Karbonn'\n    device_replacement: '$1'\n    brand_replacement: 'Karbonn'\n    model_replacement: '$1'\n  - regex: '; *(A11|A39|A37|A34|ST8|ST10|ST7|Smart Tab3|Smart Tab2|Titanium Sd) +Build'\n    device_replacement: '$1'\n    brand_replacement: 'Karbonn'\n    model_replacement: '$1'\n\n  #########\n  # KDDI (Operator Branded Device)\n  # @ref: http://www.ipentec.com/document/document.aspx?page=android-useragent\n  #########\n  - regex: '; *(IS01|IS03|IS05|ISd{2}SH) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Sharp'\n    model_replacement: '$1'\n  - regex: '; *(IS04) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Regza'\n    model_replacement: '$1'\n  - regex: '; *(IS06|ISd{2}PT) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Pantech'\n    model_replacement: '$1'\n  - regex: '; *(IS11S) Build'\n    device_replacement: '$1'\n    brand_replacement: 'SonyEricsson'\n    model_replacement: 'Xperia Acro'\n  - regex: '; *(IS11CA) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Casio'\n    model_replacement: 'GzOne $1'\n  - regex: '; *(IS11LG) Build'\n    device_replacement: '$1'\n    brand_replacement: 'LG'\n    model_replacement: 'Optimus X'\n  - regex: '; *(IS11N) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Medias'\n    model_replacement: '$1'\n  - regex: '; *(IS11PT) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Pantech'\n    model_replacement: 'MIRACH'\n  - regex: '; *(IS12F) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Fujitsu'\n    model_replacement: 'Arrows ES'\n  # @ref: https://ja.wikipedia.org/wiki/IS12M\n  - regex: '; *(IS12M) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Motorola'\n    model_replacement: 'XT909'\n  - regex: '; *(IS12S) Build'\n    device_replacement: '$1'\n    brand_replacement: 'SonyEricsson'\n    model_replacement: 'Xperia Acro HD'\n  - regex: '; *(ISW11F) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Fujitsu'\n    model_replacement: 'Arrowz Z'\n  - regex: '; *(ISW11HT) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: 'EVO'\n  - regex: '; *(ISW11K) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Kyocera'\n    model_replacement: 'DIGNO'\n  - regex: '; *(ISW11M) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Motorola'\n    model_replacement: 'Photon'\n  - regex: '; *(ISW11SC) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Samsung'\n    model_replacement: 'GALAXY S II WiMAX'\n  - regex: '; *(ISW12HT) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: 'EVO 3D'\n  - regex: '; *(ISW13HT) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: 'J'\n  - regex: '; *(ISW?[0-9]{2}[A-Z]{0,2}) Build'\n    device_replacement: '$1'\n    brand_replacement: 'KDDI'\n    model_replacement: '$1'\n  - regex: '; *(INFOBAR [^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'KDDI'\n    model_replacement: '$1'\n\n  #########\n  # Kingcom\n  # @ref: http://www.e-kingcom.com\n  #########\n  - regex: '; *(JOYPAD|Joypad)[ _]([^;/]+) Build/'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Kingcom'\n    model_replacement: '$1 $2'\n\n  #########\n  # Kobo\n  # @ref: https://en.wikipedia.org/wiki/Kobo_Inc.\n  # @ref: http://www.kobo.com/devices#tablets\n  #########\n  - regex: '; *(Vox|VOX|Arc|K080) Build/'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Kobo'\n    model_replacement: '$1'\n  - regex: '\b(Kobo Touch)\b'\n    device_replacement: '$1'\n    brand_replacement: 'Kobo'\n    model_replacement: '$1'\n\n  #########\n  # K-Touch\n  # @ref: ??\n  #########\n  - regex: '; *(K-Touch)[ _]([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Ktouch'\n    model_replacement: '$2'\n\n  #########\n  # KT Tech\n  # @ref: http://www.kttech.co.kr\n  #########\n  - regex: '; *((?:EV|KM)-Sd+[A-Z]?) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'KTtech'\n    model_replacement: '$1'\n\n  #########\n  # Kyocera\n  # @ref: http://www.android.com/devices/?country=all&m=kyocera\n  #########\n  - regex: '; *(Zio|Hydro|Torque|Event|EVENT|Echo|Milano|Rise|URBANO PROGRESSO|WX04K|WX06K|WX10K|KYL21|101K|C5[12]d{2}) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Kyocera'\n    model_replacement: '$1'\n\n  #########\n  # Lava\n  # @ref: http://www.lavamobiles.com/\n  #########\n  - regex: '; *(?:LAVA[ _])?IRIS[ _-]?([^/;)]+) *(?:;|)|Build)'\n    regex_flag: 'i'\n    device_replacement: 'Iris $1'\n    brand_replacement: 'Lava'\n    model_replacement: 'Iris $1'\n  - regex: '; *LAVA[ _]([^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Lava'\n    model_replacement: '$1'\n\n  #########\n  # Lemon\n  # @ref: http://www.lemonmobiles.com/products.php?type=1\n  #########\n  - regex: '; *(?:(Aspire A1)|(?:LEMON|Lemon)[ _]([^;/]+))_? Build'\n    device_replacement: 'Lemon $1$2'\n    brand_replacement: 'Lemon'\n    model_replacement: '$1$2'\n\n  #########\n  # Lenco\n  # @ref: http://www.lenco.com/c/tablets/\n  #########\n  - regex: '; *(TAB-1012) Build/'\n    device_replacement: 'Lenco $1'\n    brand_replacement: 'Lenco'\n    model_replacement: '$1'\n  - regex: '; Lenco ([^;/]+) Build/'\n    device_replacement: 'Lenco $1'\n    brand_replacement: 'Lenco'\n    model_replacement: '$1'\n\n  #########\n  # Lenovo\n  # @ref: http://support.lenovo.com/en_GB/downloads/default.page?#\n  #########\n  - regex: '; *(A1_07|A2107A-H|S2005A-H|S1-37AH0) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1'\n  - regex: '; *(Idea[Tp]ab)[ _]([^;/]+);? Build'\n    device_replacement: 'Lenovo $1 $2'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1 $2'\n  - regex: '; *(Idea(?:Tab|pad)) ?([^;/]+) Build'\n    device_replacement: 'Lenovo $1 $2'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1 $2'\n  - regex: '; *(ThinkPad) ?(Tablet) Build/'\n    device_replacement: 'Lenovo $1 $2'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1 $2'\n  - regex: '; *(?:LNV-)?(?:=?[Ll]enovo[ _-]?|LENOVO[ _])+(.+?)(?:Build|[;/)])'\n    device_replacement: 'Lenovo $1'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1'\n  - regex: '[;,] (?:Vodafone )?(SmartTab) ?(II) ?(d+) Build/'\n    device_replacement: 'Lenovo $1 $2 $3'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1 $2 $3'\n  - regex: '; *(?:Ideapad )?K1 Build/'\n    device_replacement: 'Lenovo Ideapad K1'\n    brand_replacement: 'Lenovo'\n    model_replacement: 'Ideapad K1'\n  - regex: '; *(3GC101|3GW10[01]|A390) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1'\n  - regex: '\b(?:Lenovo|LENOVO)+[ _-]?([^,;:/ ]+)'\n    device_replacement: 'Lenovo $1'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1'\n\n  #########\n  # Lexibook\n  # @ref: http://www.lexibook.com/fr\n  #########\n  - regex: '; *(MFCd+)[A-Z]{2}([^;,/]*),? Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Lexibook'\n    model_replacement: '$1$2'\n\n  #########\n  # LG\n  # @ref: http://www.lg.com/uk/mobile\n  #########\n  - regex: '; *(E[34][0-9]{2}|LS[6-8][0-9]{2}|VS[6-9][0-9]+[^;/]+|Nexus 4|Nexus 5X?|GT540f?|Optimus (?:2X|G|4X HD)|OptimusX4HD) *(?:Build|;)'\n    device_replacement: '$1'\n    brand_replacement: 'LG'\n    model_replacement: '$1'\n  - regex: '[;:] *(L-d+[A-Z]|LGLd+[A-Z]?)(?:/Vd+)? *(?:Build|[;)])'\n    device_replacement: '$1'\n    brand_replacement: 'LG'\n    model_replacement: '$1'\n  - regex: '; *(LG-)([A-Z]{1,2}d{2,}[^,;/)(]*?)(?:Build| Vd+|[,;/)(]|$)'\n    device_replacement: '$1$2'\n    brand_replacement: 'LG'\n    model_replacement: '$2'\n  - regex: '; *(LG[ -]|LG)([^;/]+)[;/]? Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'LG'\n    model_replacement: '$2'\n  - regex: '^(LG)-([^;/]+)/ Mozilla/.*; Android'\n    device_replacement: '$1 $2'\n    brand_replacement: 'LG'\n    model_replacement: '$2'\n  - regex: '(Web0S); Linux/(SmartTV)'\n    device_replacement: 'LG $1 $2'\n    brand_replacement: 'LG'\n    model_replacement: '$1 $2'\n\n  #########\n  # Malata\n  # @ref: http://www.malata.com/en/products.aspx?classid=680\n  #########\n  - regex: '; *((?:SMB|smb)[^;/]+) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Malata'\n    model_replacement: '$1'\n  - regex: '; *(?:Malata|MALATA) ([^;/]+) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Malata'\n    model_replacement: '$1'\n\n  #########\n  # Manta\n  # @ref: http://www.manta.com.pl/en\n  #########\n  - regex: '; *(MS[45][0-9]{3}|MID0[568][NS]?|MID[1-9]|MID[78]0[1-9]|MID970[1-9]|MID100[1-9]) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Manta'\n    model_replacement: '$1'\n\n  #########\n  # Match\n  # @ref: http://www.match.net.cn/products.asp\n  #########\n  - regex: '; *(M1052|M806|M9000|M9100|M9701|MID100|MID120|MID125|MID130|MID135|MID140|MID701|MID710|MID713|MID727|MID728|MID731|MID732|MID733|MID735|MID736|MID737|MID760|MID800|MID810|MID820|MID830|MID833|MID835|MID860|MID900|MID930|MID933|MID960|MID980) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Match'\n    model_replacement: '$1'\n\n  #########\n  # Maxx\n  # @ref: http://www.maxxmobile.in/\n  # @models: Maxx MSD7-Play, Maxx MX245+ Trance, Maxx AX8 Race, Maxx MSD7 3G- AX50, Maxx Genx Droid 7 - AX40, Maxx AX5 Duo,\n  #   Maxx AX3 Duo, Maxx AX3, Maxx AX8 Note II (Note 2), Maxx AX8 Note I, Maxx AX8, Maxx AX5 Plus, Maxx MSD7 Smarty,\n  #   Maxx AX9Z Race,\n  #   Maxx MT150, Maxx MQ601, Maxx M2020, Maxx Sleek MX463neo, Maxx MX525, Maxx MX192-Tune, Maxx Genx Droid 7 AX353,\n  # @note: Need more User-Agents!!!\n  #########\n  - regex: '; *(GenxDroid7|MSD7.*|AXd.*|Tab 701|Tab 722) Build/'\n    device_replacement: 'Maxx $1'\n    brand_replacement: 'Maxx'\n    model_replacement: '$1'\n\n  #########\n  # Mediacom\n  # @ref: http://www.mediacomeurope.it/\n  #########\n  - regex: '; *(M-PP[^;/]+|PhonePad ?d{2,}[^;/]+) Build'\n    device_replacement: 'Mediacom $1'\n    brand_replacement: 'Mediacom'\n    model_replacement: '$1'\n  - regex: '; *(M-MP[^;/]+|SmartPad ?d{2,}[^;/]+) Build'\n    device_replacement: 'Mediacom $1'\n    brand_replacement: 'Mediacom'\n    model_replacement: '$1'\n\n  #########\n  # Medion\n  # @ref: http://www.medion.com/en/\n  #########\n  - regex: '; *(?:MD_)?LIFETAB[ _]([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: 'Medion Lifetab $1'\n    brand_replacement: 'Medion'\n    model_replacement: 'Lifetab $1'\n  - regex: '; *MEDION ([^;/]+) Build'\n    device_replacement: 'Medion $1'\n    brand_replacement: 'Medion'\n    model_replacement: '$1'\n\n  #########\n  # Meizu\n  # @ref: http://www.meizu.com\n  #########\n  - regex: '; *(M030|M031|M035|M040|M065|m9) Build'\n    device_replacement: 'Meizu $1'\n    brand_replacement: 'Meizu'\n    model_replacement: '$1'\n  - regex: '; *(?:meizu_|MEIZU )(.+?) *(?:Build|[;)])'\n    device_replacement: 'Meizu $1'\n    brand_replacement: 'Meizu'\n    model_replacement: '$1'\n\n  #########\n  # Micromax\n  # @ref: http://www.micromaxinfo.com\n  #########\n  - regex: '; *(?:Micromax[ _](A111|A240)|(A111|A240)) Build'\n    regex_flag: 'i'\n    device_replacement: 'Micromax $1$2'\n    brand_replacement: 'Micromax'\n    model_replacement: '$1$2'\n  - regex: '; *Micromax[ _](Ad{2,3}[^;/]*) Build'\n    regex_flag: 'i'\n    device_replacement: 'Micromax $1'\n    brand_replacement: 'Micromax'\n    model_replacement: '$1'\n  # be carefull here with Acer e.g. A500\n  - regex: '; *(Ad{2}|A[12]d{2}|A90S|A110Q) Build'\n    regex_flag: 'i'\n    device_replacement: 'Micromax $1'\n    brand_replacement: 'Micromax'\n    model_replacement: '$1'\n  - regex: '; *Micromax[ _](Pd{3}[^;/]*) Build'\n    regex_flag: 'i'\n    device_replacement: 'Micromax $1'\n    brand_replacement: 'Micromax'\n    model_replacement: '$1'\n  - regex: '; *(Pd{3}|Pd{3}(Funbook)) Build'\n    regex_flag: 'i'\n    device_replacement: 'Micromax $1'\n    brand_replacement: 'Micromax'\n    model_replacement: '$1'\n\n  #########\n  # Mito\n  # @ref: http://new.mitomobile.com/\n  #########\n  - regex: '; *(MITO)[ _-]?([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Mito'\n    model_replacement: '$2'\n\n  #########\n  # Mobistel\n  # @ref: http://www.mobistel.com/\n  #########\n  - regex: '; *(Cynus)[ _](F5|Td|.+?) *(?:Build|[;/)])'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Mobistel'\n    model_replacement: '$1 $2'\n\n  #########\n  # Modecom\n  # @ref: http://www.modecom.eu/tablets/portal/\n  #########\n  - regex: '; *(MODECOM )?(FreeTab) ?([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1$2 $3'\n    brand_replacement: 'Modecom'\n    model_replacement: '$2 $3'\n  - regex: '; *(MODECOM )([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Modecom'\n    model_replacement: '$2'\n\n  #########\n  # Motorola\n  # @ref: http://www.motorola.com/us/shop-all-mobile-phones/\n  #########\n  - regex: '; *(MZd{3}+?|MZd{3} 4G|Xoom|XOOM[^;/]*) Build'\n    device_replacement: 'Motorola $1'\n    brand_replacement: 'Motorola'\n    model_replacement: '$1'\n  - regex: '; *(Milestone )(XT[^;/]*) Build'\n    device_replacement: 'Motorola $1$2'\n    brand_replacement: 'Motorola'\n    model_replacement: '$2'\n  - regex: '; *(Motoroi ?x|Droid X|DROIDX) Build'\n    regex_flag: 'i'\n    device_replacement: 'Motorola $1'\n    brand_replacement: 'Motorola'\n    model_replacement: 'DROID X'\n  - regex: '; *(Droid[^;/]*|DROID[^;/]*|Milestone[^;/]*|Photon|Triumph|Devour|Titanium) Build'\n    device_replacement: 'Motorola $1'\n    brand_replacement: 'Motorola'\n    model_replacement: '$1'\n  - regex: '; *(A555|A85[34][^;/]*|A95[356]|ME[58]d{2}+?|ME600|ME632|ME722|MBd{3}+?|MT680|MT710|MT870|MT887|MT917|WX435|WX453|WX44[25]|XTd{3,4}[A-Z+]*|CL[iI]Q|CL[iI]Q XT) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Motorola'\n    model_replacement: '$1'\n  - regex: '; *(Motorola MOT-|Motorola[ _-]|MOT-?)([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Motorola'\n    model_replacement: '$2'\n  - regex: '; *(Moto[_ ]?|MOT-)([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Motorola'\n    model_replacement: '$2'\n\n  #########\n  # MpMan\n  # @ref: http://www.mpmaneurope.com\n  #########\n  - regex: '; *((?:MP[DQ]C|MPGd{1,4}|MPd{3,4}|MID(?:(?:10[234]|114|43|7[247]|8[24]|7)C|8[01]1))[^;/]*) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Mpman'\n    model_replacement: '$1'\n\n  #########\n  # MSI\n  # @ref: http://www.msi.com/product/windpad/\n  #########\n  - regex: '; *(?:MSI[ _])?(Primod+|Enjoy[ _-][^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Msi'\n    model_replacement: '$1'\n\n  #########\n  # Multilaser\n  # http://www.multilaser.com.br/listagem_produtos.php?cat=5\n  #########\n  - regex: '; *Multilaser[ _]([^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Multilaser'\n    model_replacement: '$1'\n\n  #########\n  # MyPhone\n  # @ref: http://myphone.com.ph/\n  #########\n  - regex: '; *(My)[_]?(Pad)[ _]([^;/]+) Build'\n    device_replacement: '$1$2 $3'\n    brand_replacement: 'MyPhone'\n    model_replacement: '$1$2 $3'\n  - regex: '; *(My)|?(Phone)[ _]([^;/]+) Build'\n    device_replacement: '$1$2 $3'\n    brand_replacement: 'MyPhone'\n    model_replacement: '$3'\n  - regex: '; *(Ad+)[ _](Duo)? Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'MyPhone'\n    model_replacement: '$1 $2'\n\n  #########\n  # Mytab\n  # @ref: http://www.mytab.eu/en/category/mytab-products/\n  #########\n  - regex: '; *(myTab[^;/]*) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Mytab'\n    model_replacement: '$1'\n\n  #########\n  # Nabi\n  # @ref: https://www.nabitablet.com\n  #########\n  - regex: '; *(NABI2?-)([^;/]+) Build/'\n    device_replacement: '$1$2'\n    brand_replacement: 'Nabi'\n    model_replacement: '$2'\n\n  #########\n  # Nec Medias\n  # @ref: http://www.n-keitai.com/\n  #########\n  - regex: '; *(N-d+[CDE]) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Nec'\n    model_replacement: '$1'\n  - regex: '; ?(NEC-)(.*) Build/'\n    device_replacement: '$1$2'\n    brand_replacement: 'Nec'\n    model_replacement: '$2'\n  - regex: '; *(LT-NA7) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Nec'\n    model_replacement: 'Lifetouch Note'\n\n  #########\n  # Nextbook\n  # @ref: http://nextbookusa.com\n  #########\n  - regex: '; *(NXMd+[A-z0-9_]*|Nextd[A-z0-9_ -]*|NEXTd[A-z0-9_ -]*|Nextbook [A-z0-9_ ]*|DATAM803HC|M805)(?: Build|[);])'\n    device_replacement: '$1'\n    brand_replacement: 'Nextbook'\n    model_replacement: '$1'\n\n  #########\n  # Nokia\n  # @ref: http://www.nokia.com\n  #########\n  - regex: '; *(Nokia)([ _-]*)([^;/]*) Build'\n    regex_flag: 'i'\n    device_replacement: '$1$2$3'\n    brand_replacement: 'Nokia'\n    model_replacement: '$3'\n\n  #########\n  # Nook\n  # @ref:\n  # TODO nook browser/1.0\n  #########\n  - regex: '; *(Nook ?|Barnes & Noble Nook |BN )([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Nook'\n    model_replacement: '$2'\n  - regex: '; *(NOOK )?(BNRV200|BNRV200A|BNTV250|BNTV250A|BNTV400|BNTV600|LogicPD Zoom2) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Nook'\n    model_replacement: '$2'\n  - regex: '; Build/(Nook)'\n    device_replacement: '$1'\n    brand_replacement: 'Nook'\n    model_replacement: 'Tablet'\n\n  #########\n  # Olivetti\n  # @ref: http://www.olivetti.de/EN/Page/t02/view_html?idp=348\n  #########\n  - regex: '; *(OP110|OliPad[^;/]+) Build'\n    device_replacement: 'Olivetti $1'\n    brand_replacement: 'Olivetti'\n    model_replacement: '$1'\n\n  #########\n  # Omega\n  # @ref: http://omega-technology.eu/en/produkty/346/tablets\n  # @note: MID tablets might get matched by CobyKyros first\n  # @models: (T107|MID(?:700[2-5]|7031|7108|7132|750[02]|8001|8500|9001|971[12])\n  #########\n  - regex: '; *OMEGA[ _-](MID[^;/]+) Build'\n    device_replacement: 'Omega $1'\n    brand_replacement: 'Omega'\n    model_replacement: '$1'\n  - regex: '^(MID7500|MIDd+) Mozilla/5.0 (iPad;'\n    device_replacement: 'Omega $1'\n    brand_replacement: 'Omega'\n    model_replacement: '$1'\n\n  #########\n  # OpenPeak\n  # @ref: https://support.google.com/googleplay/answer/1727131?hl=en\n  #########\n  - regex: '; *((?:CIUS|cius)[^;/]*) Build'\n    device_replacement: 'Openpeak $1'\n    brand_replacement: 'Openpeak'\n    model_replacement: '$1'\n\n  #########\n  # Oppo\n  # @ref: http://en.oppo.com/products/\n  #########\n  - regex: '; *(Find ?(?:5|7a)|R8[012]d{1,2}|T703d{0,1}|U70d{1,2}T?|X90d{1,2}) Build'\n    device_replacement: 'Oppo $1'\n    brand_replacement: 'Oppo'\n    model_replacement: '$1'\n  - regex: '; *OPPO ?([^;/]+) Build/'\n    device_replacement: 'Oppo $1'\n    brand_replacement: 'Oppo'\n    model_replacement: '$1'\n\n  #########\n  # Odys\n  # @ref: http://odys.de\n  #########\n  - regex: '; *(?:Odys-|ODYS-|ODYS )([^;/]+) Build'\n    device_replacement: 'Odys $1'\n    brand_replacement: 'Odys'\n    model_replacement: '$1'\n  - regex: '; *(SELECT) ?(7) Build'\n    device_replacement: 'Odys $1 $2'\n    brand_replacement: 'Odys'\n    model_replacement: '$1 $2'\n  - regex: '; *(PEDI)_(PLUS)_(W) Build'\n    device_replacement: 'Odys $1 $2 $3'\n    brand_replacement: 'Odys'\n    model_replacement: '$1 $2 $3'\n  # Weltbild - Tablet PC 4 = Cat Phoenix = Odys Tablet PC 4?\n  - regex: '; *(AEON|BRAVIO|FUSION|FUSION2IN1|Genio|EOS10|IEOS[^;/]*|IRON|Loox|LOOX|LOOX Plus|Motion|NOON|NOON_PRO|NEXT|OPOS|PEDI[^;/]*|PRIME[^;/]*|STUDYTAB|TABLO|Tablet-PC-4|UNO_X8|XELIO[^;/]*|Xelio ?d+ ?[Pp]ro|XENO10|XPRESS PRO) Build'\n    device_replacement: 'Odys $1'\n    brand_replacement: 'Odys'\n    model_replacement: '$1'\n\n  #########\n  # OnePlus\n  # @ref https://oneplus.net/\n  #########\n  - regex: '; (ONE [a-zA-Z]d+) Build/'\n    device_replacement: 'OnePlus $1'\n    brand_replacement: 'OnePlus'\n    model_replacement: '$1'\n  - regex: '; (ONEPLUS [a-zA-Z]d+) Build/'\n    device_replacement: 'OnePlus $1'\n    brand_replacement: 'OnePlus'\n    model_replacement: '$1'\n\n  #########\n  # Orion\n  # @ref: http://www.orion.ua/en/products/computer-products/tablet-pcs.html\n  #########\n  - regex: '; *(TP-d+) Build/'\n    device_replacement: 'Orion $1'\n    brand_replacement: 'Orion'\n    model_replacement: '$1'\n\n  #########\n  # PackardBell\n  # @ref: http://www.packardbell.com/pb/en/AE/content/productgroup/tablets\n  #########\n  - regex: '; *(G100W?) Build/'\n    device_replacement: 'PackardBell $1'\n    brand_replacement: 'PackardBell'\n    model_replacement: '$1'\n\n  #########\n  # Panasonic\n  # @ref: http://panasonic.jp/mobile/\n  # @models: T11, T21, T31, P11, P51, Eluga Power, Eluga DL1\n  # @models: (tab) Toughpad FZ-A1, Toughpad JT-B1\n  #########\n  - regex: '; *(Panasonic)[_ ]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  # Toughpad\n  - regex: '; *(FZ-A1B|JT-B1) Build'\n    device_replacement: 'Panasonic $1'\n    brand_replacement: 'Panasonic'\n    model_replacement: '$1'\n  # Eluga Power\n  - regex: '; *(dL1|DL1) Build'\n    device_replacement: 'Panasonic $1'\n    brand_replacement: 'Panasonic'\n    model_replacement: '$1'\n\n  #########\n  # Pantech\n  # @href: http://www.pantech.co.kr/en/prod/prodList.do?gbrand=PANTECH\n  # @href: http://www.pantech.co.kr/en/prod/prodList.do?gbrand=VEGA\n  # @models: ADR8995, ADR910L, ADR930VW, C790, CDM8992, CDM8999, IS06, IS11PT, P2000, P2020, P2030, P4100, P5000, P6010, P6020, P6030, P7000, P7040, P8000, P8010, P9020, P9050, P9060, P9070, P9090, PT001, PT002, PT003, TXT8040, TXT8045, VEGA PTL21\n  #########\n  - regex: '; *(SKY[ _])?(IM-[AT]d{3}[^;/]+).* Build/'\n    device_replacement: 'Pantech $1$2'\n    brand_replacement: 'Pantech'\n    model_replacement: '$1$2'\n  - regex: '; *((?:ADR8995|ADR910L|ADR930L|ADR930VW|PTL21|P8000)(?: 4G)?) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Pantech'\n    model_replacement: '$1'\n  - regex: '; *Pantech([^;/]+).* Build/'\n    device_replacement: 'Pantech $1'\n    brand_replacement: 'Pantech'\n    model_replacement: '$1'\n\n  #########\n  # Papayre\n  # @ref: http://grammata.es/\n  #########\n  - regex: '; *(papyre)[ _-]([^;/]+) Build/'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Papyre'\n    model_replacement: '$2'\n\n  #########\n  # Pearl\n  # @ref: http://www.pearl.de/c-1540.shtml\n  #########\n  - regex: '; *(?:Touchlet )?(X10.[^;/]+) Build/'\n    device_replacement: 'Pearl $1'\n    brand_replacement: 'Pearl'\n    model_replacement: '$1'\n\n  #########\n  # Phicomm\n  # @ref: http://www.phicomm.com.cn/\n  #########\n  - regex: '; PHICOMM (i800) Build/'\n    device_replacement: 'Phicomm $1'\n    brand_replacement: 'Phicomm'\n    model_replacement: '$1'\n  - regex: '; PHICOMM ([^;/]+) Build/'\n    device_replacement: 'Phicomm $1'\n    brand_replacement: 'Phicomm'\n    model_replacement: '$1'\n  - regex: '; *(FWSd{3}[^;/]+) Build/'\n    device_replacement: 'Phicomm $1'\n    brand_replacement: 'Phicomm'\n    model_replacement: '$1'\n\n  #########\n  # Philips\n  # @ref: http://www.support.philips.com/support/catalog/products.jsp?_dyncharset=UTF-8&country=&categoryid=MOBILE_PHONES_SMART_SU_CN_CARE&userLanguage=en&navCount=2&groupId=PC_PRODUCTS_AND_PHONES_GR_CN_CARE&catalogType=&navAction=push&userCountry=cn&title=Smartphones&cateId=MOBILE_PHONES_CA_CN_CARE\n  # @TODO: Philips Tablets User-Agents missing!\n  # @ref: http://www.support.philips.com/support/catalog/products.jsp?_dyncharset=UTF-8&country=&categoryid=ENTERTAINMENT_TABLETS_SU_CN_CARE&userLanguage=en&navCount=0&groupId=&catalogType=&navAction=push&userCountry=cn&title=Entertainment+Tablets&cateId=TABLETS_CA_CN_CARE\n  #########\n  # @note: this a best guess according to available philips models. Need more User-Agents\n  - regex: '; *(D633|D822|D833|T539|T939|V726|W335|W336|W337|W3568|W536|W5510|W626|W632|W6350|W6360|W6500|W732|W736|W737|W7376|W820|W832|W8355|W8500|W8510|W930) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Philips'\n    model_replacement: '$1'\n  - regex: '; *(?:Philips|PHILIPS)[ _]([^;/]+) Build'\n    device_replacement: 'Philips $1'\n    brand_replacement: 'Philips'\n    model_replacement: '$1'\n\n  #########\n  # Pipo\n  # @ref: http://www.pipo.cn/En/\n  #########\n  - regex: 'Android 4..*; *(M[12356789]|U[12368]|S[123]) ?(pro)? Build'\n    device_replacement: 'Pipo $1$2'\n    brand_replacement: 'Pipo'\n    model_replacement: '$1$2'\n\n  #########\n  # Ployer\n  # @ref: http://en.ployer.cn/\n  #########\n  - regex: '; *(MOMO[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Ployer'\n    model_replacement: '$1'\n\n  #########\n  # Polaroid/ Acho\n  # @ref: http://polaroidstore.com/store/start.asp?category_id=382&category_id2=0&order=title&filter1=&filter2=&filter3=&view=all\n  #########\n  - regex: '; *(?:Polaroid[ _])?((?:MIDCd{3,}|PMIDd{2,}|PTABd{3,})[^;/]*)(/[^;/]*)? Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Polaroid'\n    model_replacement: '$1'\n  - regex: '; *(?:Polaroid )(Tablet) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Polaroid'\n    model_replacement: '$1'\n\n  #########\n  # Pomp\n  # @ref: http://pompmobileshop.com/\n  #########\n  #~ TODO\n  - regex: '; *(POMP)[ _-](.+?) *(?:Build|[;/)])'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Pomp'\n    model_replacement: '$2'\n\n  #########\n  # Positivo\n  # @ref: http://www.positivoinformatica.com.br/www/pessoal/tablet-ypy/\n  #########\n  - regex: '; *(TB07STA|TB10STA|TB07FTA|TB10FTA) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Positivo'\n    model_replacement: '$1'\n  - regex: '; *(?:Positivo )?((?:YPY|Ypy)[^;/]+) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Positivo'\n    model_replacement: '$1'\n\n  #########\n  # POV\n  # @ref: http://www.pointofview-online.com/default2.php\n  # @TODO: Smartphone Models MOB-3515, MOB-5045-B missing\n  #########\n  - regex: '; *(MOB-[^;/]+) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'POV'\n    model_replacement: '$1'\n  - regex: '; *POV[ _-]([^;/]+) Build/'\n    device_replacement: 'POV $1'\n    brand_replacement: 'POV'\n    model_replacement: '$1'\n  - regex: '; *((?:TAB-PLAYTAB|TAB-PROTAB|PROTAB|PlayTabPro|Mobii[ _-]|TAB-P)[^;/]*) Build/'\n    device_replacement: 'POV $1'\n    brand_replacement: 'POV'\n    model_replacement: '$1'\n\n  #########\n  # Prestigio\n  # @ref: http://www.prestigio.com/catalogue/MultiPhones\n  # @ref: http://www.prestigio.com/catalogue/MultiPads\n  #########\n  - regex: '; *(?:Prestigio )?((?:PAP|PMP)d[^;/]+) Build/'\n    device_replacement: 'Prestigio $1'\n    brand_replacement: 'Prestigio'\n    model_replacement: '$1'\n\n  #########\n  # Proscan\n  # @ref: http://www.proscanvideo.com/products-search.asp?itemClass=TABLET&itemnmbr=\n  #########\n  - regex: '; *(PLT[0-9]{4}.*) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Proscan'\n    model_replacement: '$1'\n\n  #########\n  # QMobile\n  # @ref: http://www.qmobile.com.pk/\n  #########\n  - regex: '; *(A2|A5|A8|A900)_?(Classic)? Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Qmobile'\n    model_replacement: '$1 $2'\n  - regex: '; *(Q[Mm]obile)_([^_]+)_([^_]+) Build'\n    device_replacement: 'Qmobile $2 $3'\n    brand_replacement: 'Qmobile'\n    model_replacement: '$2 $3'\n  - regex: '; *(Q-?[Mm]obile)[_ ](A[^;/]+) Build'\n    device_replacement: 'Qmobile $2'\n    brand_replacement: 'Qmobile'\n    model_replacement: '$2'\n\n  #########\n  # Qmobilevn\n  # @ref: http://qmobile.vn/san-pham.html\n  #########\n  - regex: '; *(Q-Smart)[ _]([^;/]+) Build/'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Qmobilevn'\n    model_replacement: '$2'\n  - regex: '; *(Q-?[Mm]obile)[ _-](S[^;/]+) Build/'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Qmobilevn'\n    model_replacement: '$2'\n\n  #########\n  # Quanta\n  # @ref: ?\n  #########\n  - regex: '; *(TA1013) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Quanta'\n    model_replacement: '$1'\n\n  #########\n  # RCA\n  # @ref: http://rcamobilephone.com/\n  #########\n  - regex: '; (RCTw+) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'RCA'\n    model_replacement: '$1'\n\n  #########\n  # Rockchip\n  # @ref: http://www.rock-chips.com/a/cn/product/index.html\n  # @note: manufacturer sells chipsets - I assume that these UAs are dev-boards\n  #########\n  - regex: '; *(RKd+),? Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Rockchip'\n    model_replacement: '$1'\n  - regex: ' Build/(RKd+)'\n    device_replacement: '$1'\n    brand_replacement: 'Rockchip'\n    model_replacement: '$1'\n\n  #########\n  # Samsung Android Devices\n  # @ref: http://www.samsung.com/us/mobile/cell-phones/all-products\n  #########\n  - regex: '; *(SAMSUNG |Samsung )?((?:Galaxy (?:Note II|Sd)|GT-I9082|GT-I9205|GT-N7d{3}|SM-N9005)[^;/]*)/?[^;/]* Build/'\n    device_replacement: 'Samsung $1$2'\n    brand_replacement: 'Samsung'\n    model_replacement: '$2'\n  - regex: '; *(Google )?(Nexus [Ss](?: 4G)?) Build/'\n    device_replacement: 'Samsung $1$2'\n    brand_replacement: 'Samsung'\n    model_replacement: '$2'\n  - regex: '; *(SAMSUNG |Samsung )([^/]*)/[^ ]* Build/'\n    device_replacement: 'Samsung $2'\n    brand_replacement: 'Samsung'\n    model_replacement: '$2'\n  - regex: '; *(Galaxy(?: Ace| Nexus| S ?II+|Nexus S| with MCR 1.2| Mini Plus 4G)?) Build/'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n  - regex: '; *(SAMSUNG[ _-] *)+([^;/]+) Build'\n    device_replacement: 'Samsung $2'\n    brand_replacement: 'Samsung'\n    model_replacement: '$2'\n  - regex: '; *(SAMSUNG-)?(GT-[BINPS]d{4}[^/]*)(/[^ ]*) Build'\n    device_replacement: 'Samsung $1$2$3'\n    brand_replacement: 'Samsung'\n    model_replacement: '$2'\n  - regex: '(?:; *|^)((?:GT-[BIiNPS]d{4}|I9d{2}0[A-Za-z+]?\b)[^;/)]*?)(?:Build|Linux|MIUI|[;/)])'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n  - regex: '; (SAMSUNG-)([A-Za-z0-9-]+).* Build/'\n    device_replacement: 'Samsung $1$2'\n    brand_replacement: 'Samsung'\n    model_replacement: '$2'\n  - regex: '; *((?:SCH|SGH|SHV|SHW|SPH|SC|SM)-[A-Za-z0-9 ]+)(/?[^ ]*)? Build'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n  - regex: ' ((?:SCH)-[A-Za-z0-9 ]+)(/?[^ ]*)? Build'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n  - regex: '; *(Behold ?(?:2|II)|YP-G[^;/]+|EK-GC100|SCL21|I9300) Build'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n\n  #########\n  # Sharp\n  # @ref: http://www.sharp-phone.com/en/index.html\n  # @ref: http://www.android.com/devices/?country=all&m=sharp\n  #########\n  - regex: '; *(SH-?dd[^;/]+|SBMd[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Sharp'\n    model_replacement: '$1'\n  - regex: '; *(SHARP[ -])([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Sharp'\n    model_replacement: '$2'\n\n  #########\n  # Simvalley\n  # @ref: http://www.simvalley-mobile.de/\n  #########\n  - regex: '; *(SPX[_-]d[^;/]*) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Simvalley'\n    model_replacement: '$1'\n  - regex: '; *(SX7-PEARL.GmbH) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Simvalley'\n    model_replacement: '$1'\n  - regex: '; *(SP[T]?-d{2}[^;/]*) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Simvalley'\n    model_replacement: '$1'\n\n  #########\n  # SK Telesys\n  # @ref: http://www.sk-w.com/phone/phone_list.jsp\n  # @ref: http://www.android.com/devices/?country=all&m=sk-telesys\n  #########\n  - regex: '; *(SK-.*) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'SKtelesys'\n    model_replacement: '$1'\n\n  #########\n  # Skytex\n  # @ref: http://skytex.com/android\n  #########\n  - regex: '; *(?:SKYTEX|SX)-([^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Skytex'\n    model_replacement: '$1'\n  - regex: '; *(IMAGINE [^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Skytex'\n    model_replacement: '$1'\n\n  #########\n  # SmartQ\n  # @ref: http://en.smartdevices.com.cn/Products/\n  # @models: Z8, X7, U7H, U7, T30, T20, Ten3, V5-II, T7-3G, SmartQ5, K7, S7, Q8, T19, Ten2, Ten, R10, T7, R7, V5, V7, SmartQ7\n  #########\n  - regex: '; *(SmartQ) ?([^;/]+) Build/'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  #########\n  # Smartbitt\n  # @ref: http://www.smartbitt.com/\n  # @missing: SBT Useragents\n  #########\n  - regex: '; *(WF7C|WF10C|SBT[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Smartbitt'\n    model_replacement: '$1'\n\n  #########\n  # Softbank (Operator Branded Devices)\n  # @ref: http://www.ipentec.com/document/document.aspx?page=android-useragent\n  #########\n  - regex: '; *(SBM(?:003SH|005SH|006SH|007SH|102SH)) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Sharp'\n    model_replacement: '$1'\n  - regex: '; *(003P|101P|101P11C|102P) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Panasonic'\n    model_replacement: '$1'\n  - regex: '; *(00dZ) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1'\n  - regex: '; HTC(X06HT) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n  - regex: '; *(001HT|X06HT) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n  - regex: '; *(201M) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Motorola'\n    model_replacement: 'XT902'\n\n  #########\n  # Trekstor\n  # @ref: http://www.trekstor.co.uk/surftabs-en.html\n  # @note: Must come before SonyEricsson\n  #########\n  - regex: '; *(STd{4}.*)Build/ST'\n    device_replacement: 'Trekstor $1'\n    brand_replacement: 'Trekstor'\n    model_replacement: '$1'\n  - regex: '; *(STd{4}.*) Build/'\n    device_replacement: 'Trekstor $1'\n    brand_replacement: 'Trekstor'\n    model_replacement: '$1'\n\n  #########\n  # SonyEricsson\n  # @note: Must come before nokia since they also use symbian\n  # @ref: http://www.android.com/devices/?country=all&m=sony-ericssons\n  # @TODO: type!\n  #########\n  # android matchers\n  - regex: '; *(Sony ?Ericsson ?)([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'SonyEricsson'\n    model_replacement: '$2'\n  - regex: '; *((?:SK|ST|E|X|LT|MK|MT|WT)d{2}[a-z0-9]*(?:-o)?|R800i|U20i) Build'\n    device_replacement: '$1'\n    brand_replacement: 'SonyEricsson'\n    model_replacement: '$1'\n  # TODO Xd+ is wrong\n  - regex: '; *(Xperia (?:A8|Arc|Acro|Active|Live with Walkman|Mini|Neo|Play|Pro|Ray|Xd+)[^;/]*) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'SonyEricsson'\n    model_replacement: '$1'\n\n  #########\n  # Sony\n  # @ref: http://www.sonymobile.co.jp/index.html\n  # @ref: http://www.sonymobile.com/global-en/products/phones/\n  # @ref: http://www.sony.jp/tablet/\n  #########\n  - regex: '; Sony (Tablet[^;/]+) Build'\n    device_replacement: 'Sony $1'\n    brand_replacement: 'Sony'\n    model_replacement: '$1'\n  - regex: '; Sony ([^;/]+) Build'\n    device_replacement: 'Sony $1'\n    brand_replacement: 'Sony'\n    model_replacement: '$1'\n  - regex: '; *(Sony)([A-Za-z0-9-]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  - regex: '; *(Xperia [^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Sony'\n    model_replacement: '$1'\n  - regex: '; *(C(?:1[0-9]|2[0-9]|53|55|6[0-9])[0-9]{2}|D[25]d{3}|D6[56]d{2}) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Sony'\n    model_replacement: '$1'\n  - regex: '; *(SGPd{3}|SGPTd{2}) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Sony'\n    model_replacement: '$1'\n  - regex: '; *(NW-Z1000Series) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Sony'\n    model_replacement: '$1'\n\n  ##########\n  # Sony PlayStation\n  # @ref: http://playstation.com\n  # The Vita spoofs the Kindle\n  ##########\n  - regex: 'PLAYSTATION 3'\n    device_replacement: 'PlayStation 3'\n    brand_replacement: 'Sony'\n    model_replacement: 'PlayStation 3'\n  - regex: '(PlayStation (?:Portable|Vita|d+))'\n    device_replacement: '$1'\n    brand_replacement: 'Sony'\n    model_replacement: '$1'\n\n  #########\n  # Spice\n  # @ref: http://www.spicemobilephones.co.in/\n  #########\n  - regex: '; *((?:CSL_Spice|Spice|SPICE|CSL)[ _-]?)?([Mm][Ii])([ _-])?(d{3}[^;/]*) Build/'\n    device_replacement: '$1$2$3$4'\n    brand_replacement: 'Spice'\n    model_replacement: 'Mi$4'\n\n  #########\n  # Sprint (Operator Branded Devices)\n  # @ref:\n  #########\n  - regex: '; *(Sprint )(.+?) *(?:Build|[;/])'\n    device_replacement: '$1$2'\n    brand_replacement: 'Sprint'\n    model_replacement: '$2'\n  - regex: '\b(Sprint)[: ]([^;,/ ]+)'\n    device_replacement: '$1$2'\n    brand_replacement: 'Sprint'\n    model_replacement: '$2'\n\n  #########\n  # Tagi\n  # @ref: ??\n  #########\n  - regex: '; *(TAGI[ ]?)(MID) ?([^;/]+) Build/'\n    device_replacement: '$1$2$3'\n    brand_replacement: 'Tagi'\n    model_replacement: '$2$3'\n\n  #########\n  # Tecmobile\n  # @ref: http://www.tecmobile.com/\n  #########\n  - regex: '; *(Oyster500|Opal 800) Build'\n    device_replacement: 'Tecmobile $1'\n    brand_replacement: 'Tecmobile'\n    model_replacement: '$1'\n\n  #########\n  # Tecno\n  # @ref: www.tecno-mobile.com/\u200E\n  #########\n  - regex: '; *(TECNO[ _])([^;/]+) Build/'\n    device_replacement: '$1$2'\n    brand_replacement: 'Tecno'\n    model_replacement: '$2'\n\n  #########\n  # Telechips, Techvision evaluation boards\n  # @ref:\n  #########\n  - regex: '; *Android for (Telechips|Techvision) ([^ ]+) '\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  #########\n  # Telstra\n  # @ref: http://www.telstra.com.au/home-phone/thub-2/\n  # @ref: https://support.google.com/googleplay/answer/1727131?hl=en\n  #########\n  - regex: '; *(T-Hub2) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Telstra'\n    model_replacement: '$1'\n\n  #########\n  # Terra\n  # @ref: http://www.wortmann.de/\n  #########\n  - regex: '; *(PAD) ?(100[12]) Build/'\n    device_replacement: 'Terra $1$2'\n    brand_replacement: 'Terra'\n    model_replacement: '$1$2'\n\n  #########\n  # Texet\n  # @ref: http://www.texet.ru/tablet/\n  #########\n  - regex: '; *(T[BM]-d{3}[^;/]+) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Texet'\n    model_replacement: '$1'\n\n  #########\n  # Thalia\n  # @ref: http://www.thalia.de/shop/tolino-shine-ereader/show/\n  #########\n  - regex: '; *(tolino [^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Thalia'\n    model_replacement: '$1'\n  - regex: '; *Build/.* (TOLINO_BROWSER)'\n    device_replacement: '$1'\n    brand_replacement: 'Thalia'\n    model_replacement: 'Tolino Shine'\n\n  #########\n  # Thl\n  # @ref: http://en.thl.com.cn/Mobile\n  # @ref: http://thlmobilestore.com\n  #########\n  - regex: '; *(?:CJ[ -])?(ThL|THL)[ -]([^;/]+) Build/'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Thl'\n    model_replacement: '$2'\n  - regex: '; *(T100|T200|T5|W100|W200|W8s) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Thl'\n    model_replacement: '$1'\n\n  #########\n  # T-Mobile (Operator Branded Devices)\n  #########\n  # @ref: https://en.wikipedia.org/wiki/HTC_Hero\n  - regex: '; *(T-Mobile[ _]G2[ _]Touch) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: 'Hero'\n  # @ref: https://en.wikipedia.org/wiki/HTC_Desire_Z\n  - regex: '; *(T-Mobile[ _]G2) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: 'Desire Z'\n  - regex: '; *(T-Mobile myTouch Q) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Huawei'\n    model_replacement: 'U8730'\n  - regex: '; *(T-Mobile myTouch) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Huawei'\n    model_replacement: 'U8680'\n  - regex: '; *(T-Mobile_Espresso) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: 'Espresso'\n  - regex: '; *(T-Mobile G1) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: 'Dream'\n  - regex: '\b(T-Mobile ?)?(myTouch)[ _]?([34]G)[ _]?([^/]*) (?:Mozilla|Build)'\n    device_replacement: '$1$2 $3 $4'\n    brand_replacement: 'HTC'\n    model_replacement: '$2 $3 $4'\n  - regex: '\b(T-Mobile)_([^_]+)_(.*) Build'\n    device_replacement: '$1 $2 $3'\n    brand_replacement: 'Tmobile'\n    model_replacement: '$2 $3'\n  - regex: '\b(T-Mobile)[_ ]?(.*?)Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Tmobile'\n    model_replacement: '$2'\n\n  #########\n  # Tomtec\n  # @ref: http://www.tom-tec.eu/pages/tablets.php\n  #########\n  - regex: ' (ATP[0-9]{4}) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Tomtec'\n    model_replacement: '$1'\n\n  #########\n  # Tooky\n  # @ref: http://www.tookymobile.com/\n  #########\n  - regex: ' *(TOOKY)[ _-]([^;/]+) ?(?:Build|;)'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Tooky'\n    model_replacement: '$2'\n\n  #########\n  # Toshiba\n  # @ref: http://www.toshiba.co.jp/\n  # @missing: LT170, Thrive 7, TOSHIBA STB10\n  #########\n  - regex: '\b(TOSHIBA_AC_AND_AZ|TOSHIBA_FOLIO_AND_A|FOLIO_AND_A)'\n    device_replacement: '$1'\n    brand_replacement: 'Toshiba'\n    model_replacement: 'Folio 100'\n  - regex: '; *([Ff]olio ?100) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Toshiba'\n    model_replacement: 'Folio 100'\n  - regex: '; *(AT[0-9]{2,3}(?:-A|LE-A|PE-A|SE|a)?|AT7-A|AT1S0|Hikari-iFrame/WDPF-[^;/]+|THRiVE|Thrive) Build/'\n    device_replacement: 'Toshiba $1'\n    brand_replacement: 'Toshiba'\n    model_replacement: '$1'\n\n  #########\n  # Touchmate\n  # @ref: http://touchmatepc.com/new/\n  #########\n  - regex: '; *(TM-MIDd+[^;/]+|TOUCHMATE|MID-750) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Touchmate'\n    model_replacement: '$1'\n  # @todo: needs verification user-agents missing\n  - regex: '; *(TM-SMd+[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Touchmate'\n    model_replacement: '$1'\n\n  #########\n  # Treq\n  # @ref: http://www.treq.co.id/product\n  #########\n  - regex: '; *(A10 [Bb]asic2?) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Treq'\n    model_replacement: '$1'\n  - regex: '; *(TREQ[ _-])([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1$2'\n    brand_replacement: 'Treq'\n    model_replacement: '$2'\n\n  #########\n  # Umeox\n  # @ref: http://umeox.com/\n  # @models: A936|A603|X-5|X-3\n  #########\n  # @todo: guessed markers\n  - regex: '; *(X-?5|X-?3) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Umeox'\n    model_replacement: '$1'\n  # @todo: guessed markers\n  - regex: '; *(A502+?|A936|A603|X1|X2) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Umeox'\n    model_replacement: '$1'\n\n  #########\n  # Versus\n  # @ref: http://versusuk.com/support.html\n  #########\n  - regex: '(TOUCH(?:TAB|PAD).+?) Build/'\n    regex_flag: 'i'\n    device_replacement: 'Versus $1'\n    brand_replacement: 'Versus'\n    model_replacement: '$1'\n\n  #########\n  # Vertu\n  # @ref: http://www.vertu.com/\n  #########\n  - regex: '(VERTU) ([^;/]+) Build/'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Vertu'\n    model_replacement: '$2'\n\n  #########\n  # Videocon\n  # @ref: http://www.videoconmobiles.com\n  #########\n  - regex: '; *(Videocon)[ _-]([^;/]+) *(?:Build|;)'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Videocon'\n    model_replacement: '$2'\n  - regex: ' (VTd{2}[A-Za-z]*) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Videocon'\n    model_replacement: '$1'\n\n  #########\n  # Viewsonic\n  # @ref: http://viewsonic.com\n  #########\n  - regex: '; *((?:ViewPad|ViewPhone|VSD)[^;/]+) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Viewsonic'\n    model_replacement: '$1'\n  - regex: '; *(ViewSonic-)([^;/]+) Build/'\n    device_replacement: '$1$2'\n    brand_replacement: 'Viewsonic'\n    model_replacement: '$2'\n  - regex: '; *(GTablet.*) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Viewsonic'\n    model_replacement: '$1'\n\n  #########\n  # vivo\n  # @ref: http://vivo.cn/\n  #########\n  - regex: '; *([Vv]ivo)[ _]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'vivo'\n    model_replacement: '$2'\n\n  #########\n  # Vodafone (Operator Branded Devices)\n  # @ref: ??\n  #########\n  - regex: '(Vodafone) (.*) Build/'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  #########\n  # Walton\n  # @ref: http://www.waltonbd.com/\n  #########\n  - regex: '; *(?:Walton[ _-])?(Primo[ _-][^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: 'Walton $1'\n    brand_replacement: 'Walton'\n    model_replacement: '$1'\n\n  #########\n  # Wiko\n  # @ref: http://fr.wikomobile.com/collection.php?s=Smartphones\n  #########\n  - regex: '; *(?:WIKO[ -])?(CINK+?|BARRY|BLOOM|DARKFULL|DARKMOON|DARKNIGHT|DARKSIDE|FIZZ|HIGHWAY|IGGY|OZZY|RAINBOW|STAIRWAY|SUBLIM|WAX|CINK [^;/]+) Build/'\n    regex_flag: 'i'\n    device_replacement: 'Wiko $1'\n    brand_replacement: 'Wiko'\n    model_replacement: '$1'\n\n  #########\n  # WellcoM\n  # @ref: ??\n  #########\n  - regex: '; *WellcoM-([^;/]+) Build'\n    device_replacement: 'Wellcom $1'\n    brand_replacement: 'Wellcom'\n    model_replacement: '$1'\n\n  ##########\n  # WeTab\n  # @ref: http://wetab.mobi/\n  ##########\n  - regex: '(?:(WeTab)-Browser|; (wetab) Build)'\n    device_replacement: '$1'\n    brand_replacement: 'WeTab'\n    model_replacement: 'WeTab'\n\n  #########\n  # Wolfgang\n  # @ref: http://wolfgangmobile.com/\n  #########\n  - regex: '; *(AT-AS[^;/]+) Build'\n    device_replacement: 'Wolfgang $1'\n    brand_replacement: 'Wolfgang'\n    model_replacement: '$1'\n\n  #########\n  # Woxter\n  # @ref: http://www.woxter.es/es-es/categories/index\n  #########\n  - regex: '; *(?:Woxter|Wxt) ([^;/]+) Build'\n    device_replacement: 'Woxter $1'\n    brand_replacement: 'Woxter'\n    model_replacement: '$1'\n\n  #########\n  # Yarvik Zania\n  # @ref: http://yarvik.com\n  #########\n  - regex: '; *(?:Xenta |Luna )?(TAB[234][0-9]{2}|TAB0[78]-d{3}|TAB0?9-d{3}|TAB1[03]-d{3}|SMPd{2}-d{3}) Build/'\n    device_replacement: 'Yarvik $1'\n    brand_replacement: 'Yarvik'\n    model_replacement: '$1'\n\n  #########\n  # Yifang\n  # @note: Needs to be at the very last as manufacturer builds for other brands.\n  # @ref: http://www.yifangdigital.com/\n  # @models: M1010, M1011, M1007, M1008, M1005, M899, M899LP, M909, M8000,\n  #   M8001, M8002, M8003, M849, M815, M816, M819, M805, M878, M780LPW,\n  #   M778, M7000, M7000AD, M7000NBD, M7001, M7002, M7002KBD, M777, M767,\n  #   M789, M799, M769, M757, M755, M753, M752, M739, M729, M723, M712, M727\n  #########\n  - regex: '; *([A-Z]{2,4})(Md{3,}[A-Z]{2})([^;)/]*)(?: Build|[;)])'\n    device_replacement: 'Yifang $1$2$3'\n    brand_replacement: 'Yifang'\n    model_replacement: '$2'\n\n  #########\n  # XiaoMi\n  # @ref: http://www.xiaomi.com/event/buyphone\n  #########\n  - regex: '; *((MI|HM|MI-ONE|Redmi)[ -](NOTE |Note )?[^;/]*) (Build|MIUI)/'\n    device_replacement: 'XiaoMi $1'\n    brand_replacement: 'XiaoMi'\n    model_replacement: '$1'\n\n  #########\n  # Xolo\n  # @ref: http://www.xolo.in/\n  #########\n  - regex: '; *XOLO[ _]([^;/]*tab.*) Build'\n    regex_flag: 'i'\n    device_replacement: 'Xolo $1'\n    brand_replacement: 'Xolo'\n    model_replacement: '$1'\n  - regex: '; *XOLO[ _]([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: 'Xolo $1'\n    brand_replacement: 'Xolo'\n    model_replacement: '$1'\n  - regex: '; *(qd0{2,3}[a-z]?) Build'\n    regex_flag: 'i'\n    device_replacement: 'Xolo $1'\n    brand_replacement: 'Xolo'\n    model_replacement: '$1'\n\n  #########\n  # Xoro\n  # @ref: http://www.xoro.de/produkte/\n  #########\n  - regex: '; *(PAD ?[79]d+[^;/]*|TelePADd+[^;/]) Build'\n    device_replacement: 'Xoro $1'\n    brand_replacement: 'Xoro'\n    model_replacement: '$1'\n\n  #########\n  # Zopo\n  # @ref: http://www.zopomobiles.com/products.html\n  #########\n  - regex: '; *(?:(?:ZOPO|Zopo)[ _]([^;/]+)|(ZP ?(?:d{2}[^;/]+|C2))|(C[2379])) Build'\n    device_replacement: '$1$2$3'\n    brand_replacement: 'Zopo'\n    model_replacement: '$1$2$3'\n\n  #########\n  # ZiiLabs\n  # @ref: http://www.ziilabs.com/products/platforms/androidreferencetablets.php\n  #########\n  - regex: '; *(ZiiLABS) (Zii[^;/]*) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'ZiiLabs'\n    model_replacement: '$2'\n  - regex: '; *(Zii)_([^;/]*) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'ZiiLabs'\n    model_replacement: '$2'\n\n  #########\n  # ZTE\n  # @ref: http://www.ztedevices.com/\n  #########\n  - regex: '; *(ARIZONA|(?:ATLAS|Atlas) W|D930|Grand (?:[SX][^;]*|Era|Memo[^;]*)|JOE|(?:Kis|KIS)\b[^;]*|Libra|Light [^;]*|N8[056][01]|N850L|N8000|N9[15]d{2}|N9810|NX501|Optik|(?:Vip )Racer[^;]*|RacerII|RACERII|San Francisco[^;]*|V9[AC]|V55|V881|Z[679][0-9]{2}[A-z]?) Build'\n    device_replacement: '$1'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1'\n  - regex: '; *([A-Z]d+)_USA_[^;]* Build'\n    device_replacement: '$1'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1'\n  - regex: '; *(SmartTabd+)[^;]* Build'\n    device_replacement: '$1'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1'\n  - regex: '; *(?:Blade|BLADE|ZTE-BLADE)([^;/]*) Build'\n    device_replacement: 'ZTE Blade$1'\n    brand_replacement: 'ZTE'\n    model_replacement: 'Blade$1'\n  - regex: '; *(?:Skate|SKATE|ZTE-SKATE)([^;/]*) Build'\n    device_replacement: 'ZTE Skate$1'\n    brand_replacement: 'ZTE'\n    model_replacement: 'Skate$1'\n  - regex: '; *(Orange |Optimus )(Monte Carlo|San Francisco) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1$2'\n  - regex: '; *(?:ZXY-ZTE_|ZTE-U |ZTE[- _]|ZTE-C[_ ])([^;/]+) Build'\n    device_replacement: 'ZTE $1'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1'\n  # operator specific\n  - regex: '; (BASE) (lutea|Lutea 2|Tab[^;]*) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1 $2'\n  - regex: '; (Avea inTouch 2|soft stone|tmn smart a7|Movistar[ _]Link) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1'\n  - regex: '; *(vp9plus))'\n    device_replacement: '$1'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1'\n\n  ##########\n  # Zync\n  # @ref: http://www.zync.in/index.php/our-products/tablet-phablets\n  ##########\n  - regex: '; ?(Cloud[ _]Z5|z1000|Z99 2G|z99|z930|z999|z990|z909|Z919|z900) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Zync'\n    model_replacement: '$1'\n\n  ##########\n  # Kindle\n  # @note: Needs to be after Sony Playstation Vita as this UA contains Silk/3.2\n  # @ref: https://developer.amazon.com/sdk/fire/specifications.html\n  # @ref: http://amazonsilk.wordpress.com/useful-bits/silk-user-agent/\n  ##########\n  - regex: '; ?(KFOT|Kindle Fire) Build\b'\n    device_replacement: 'Kindle Fire'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire'\n  - regex: '; ?(KFOTE|Amazon Kindle Fire2) Build\b'\n    device_replacement: 'Kindle Fire 2'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire 2'\n  - regex: '; ?(KFTT) Build\b'\n    device_replacement: 'Kindle Fire HD'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire HD 7\"'\n  - regex: '; ?(KFJWI) Build\b'\n    device_replacement: 'Kindle Fire HD 8.9\" WiFi'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire HD 8.9\" WiFi'\n  - regex: '; ?(KFJWA) Build\b'\n    device_replacement: 'Kindle Fire HD 8.9\" 4G'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire HD 8.9\" 4G'\n  - regex: '; ?(KFSOWI) Build\b'\n    device_replacement: 'Kindle Fire HD 7\" WiFi'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire HD 7\" WiFi'\n  - regex: '; ?(KFTHWI) Build\b'\n    device_replacement: 'Kindle Fire HDX 7\" WiFi'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire HDX 7\" WiFi'\n  - regex: '; ?(KFTHWA) Build\b'\n    device_replacement: 'Kindle Fire HDX 7\" 4G'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire HDX 7\" 4G'\n  - regex: '; ?(KFAPWI) Build\b'\n    device_replacement: 'Kindle Fire HDX 8.9\" WiFi'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire HDX 8.9\" WiFi'\n  - regex: '; ?(KFAPWA) Build\b'\n    device_replacement: 'Kindle Fire HDX 8.9\" 4G'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire HDX 8.9\" 4G'\n  - regex: '; ?Amazon ([^;/]+) Build\b'\n    device_replacement: '$1'\n    brand_replacement: 'Amazon'\n    model_replacement: '$1'\n  - regex: '; ?(Kindle) Build\b'\n    device_replacement: 'Kindle'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle'\n  - regex: '; ?(Silk)/(d+).(d+)(?:.([0-9-]+))? Build\b'\n    device_replacement: 'Kindle Fire'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire$2'\n  - regex: ' (Kindle)/(d+.d+)'\n    device_replacement: 'Kindle'\n    brand_replacement: 'Amazon'\n    model_replacement: '$1 $2'\n  - regex: ' (Silk|Kindle)/(d+).'\n    device_replacement: 'Kindle'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle'\n\n  #########\n  # Devices from chinese manufacturer(s)\n  # @note: identified by x-wap-profile http://218.249.47.94/Xianghe/.*\n  #########\n  - regex: '(sprd)-([^/]+)/'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  # @ref: http://eshinechina.en.alibaba.com/\n  - regex: '; *(Hd{2}00+?) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Hero'\n    model_replacement: '$1'\n  - regex: '; *(iphone|iPhone5) Build/'\n    device_replacement: 'Xianghe $1'\n    brand_replacement: 'Xianghe'\n    model_replacement: '$1'\n  - regex: '; *(ed{4}[a-z]?_?vd+|v89_[^;/]+)[^;/]+ Build/'\n    device_replacement: 'Xianghe $1'\n    brand_replacement: 'Xianghe'\n    model_replacement: '$1'\n\n  #########\n  # Cellular\n  # @ref:\n  # @note: Operator branded devices\n  #########\n  - regex: '\bUSCC[_-]?([^ ;/)]+)'\n    device_replacement: '$1'\n    brand_replacement: 'Cellular'\n    model_replacement: '$1'\n\n  ######################################################################\n  # Windows Phone Parsers\n  ######################################################################\n\n  #########\n  # Alcatel Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;)]+[;)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:ALCATEL)[^;]*; *([^;,)]+)'\n    device_replacement: 'Alcatel $1'\n    brand_replacement: 'Alcatel'\n    model_replacement: '$1'\n\n  #########\n  # Asus Windows Phones\n  #########\n  #~ - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;)]+[;)] ?(?:ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?(?:ASUS|Asus)[^;]*; *([^;,)]+)'\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;)]+[;)] ?(?:ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?(?:ASUS|Asus)[^;]*; *([^;,)]+)'\n    device_replacement: 'Asus $1'\n    brand_replacement: 'Asus'\n    model_replacement: '$1'\n\n  #########\n  # Dell Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;)]+[;)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:DELL|Dell)[^;]*; *([^;,)]+)'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: '$1'\n\n  #########\n  # HTC Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;)]+[;)] ?(?:ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?(?:HTC|Htc|HTC_blocked[^;]*)[^;]*; *(?:HTC)?([^;,)]+)'\n    device_replacement: 'HTC $1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n\n  #########\n  # Huawei Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;)]+[;)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:HUAWEI)[^;]*; *(?:HUAWEI )?([^;,)]+)'\n    device_replacement: 'Huawei $1'\n    brand_replacement: 'Huawei'\n    model_replacement: '$1'\n\n  #########\n  # LG Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;)]+[;)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:LG|Lg)[^;]*; *(?:LG[ -])?([^;,)]+)'\n    device_replacement: 'LG $1'\n    brand_replacement: 'LG'\n    model_replacement: '$1'\n\n  #########\n  # Noka Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;)]+[;)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:NOKIA|Nokia)[^;]*; *(?:NOKIA ?|Nokia ?|LUMIA ?|[Ll]umia ?)*(d{3,}[^;)]*)'\n    device_replacement: 'Lumia $1'\n    brand_replacement: 'Nokia'\n    model_replacement: 'Lumia $1'\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;)]+[;)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:NOKIA|Nokia)[^;]*; *(RM-d{3,})'\n    device_replacement: 'Nokia $1'\n    brand_replacement: 'Nokia'\n    model_replacement: '$1'\n  - regex: '(?:Windows Phone [^;]+; .*?IEMobile/[^;)]+[;)]|WPDesktop;) ?(?:ARM; ?Touch; ?|Touch; ?)?(?:NOKIA|Nokia)[^;]*; *(?:NOKIA ?|Nokia ?|LUMIA ?|[Ll]umia ?)*([^;)]+)'\n    device_replacement: 'Nokia $1'\n    brand_replacement: 'Nokia'\n    model_replacement: '$1'\n\n  #########\n  # Microsoft Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;)]+[;)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:Microsoft(?: Corporation)?)[^;]*; *([^;,)]+)'\n    device_replacement: 'Microsoft $1'\n    brand_replacement: 'Microsoft'\n    model_replacement: '$1'\n\n  #########\n  # Samsung Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;)]+[;)] ?(?:ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?(?:SAMSUNG)[^;]*; *(?:SAMSUNG )?([^;,.)]+)'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n\n  #########\n  # Toshiba Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;)]+[;)] ?(?:ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?(?:TOSHIBA|FujitsuToshibaMobileCommun)[^;]*; *([^;,)]+)'\n    device_replacement: 'Toshiba $1'\n    brand_replacement: 'Toshiba'\n    model_replacement: '$1'\n\n  #########\n  # Generic Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;)]+[;)] ?(?:ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?([^;]+); *([^;,)]+)'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  ######################################################################\n  # Other Devices Parser\n  ######################################################################\n\n  #########\n  # Samsung Bada Phones\n  #########\n  - regex: '(?:^|; )SAMSUNG-([A-Za-z0-9-]+).* Bada/'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n\n  #########\n  # Firefox OS\n  #########\n  - regex: '(Mobile; ALCATEL ?(One|ONE) ?(Touch|TOUCH) ?([^;/]+)(?:/[^;]+)?; rv:[^)]+) Gecko/[^/]+ Firefox/'\n    device_replacement: 'Alcatel $1 $2 $3'\n    brand_replacement: 'Alcatel'\n    model_replacement: 'One Touch $3'\n  - regex: '(Mobile; (?:ZTE([^;]+)|(OpenC)); rv:[^)]+) Gecko/[^/]+ Firefox/'\n    device_replacement: 'ZTE $1$2'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1$2'\n\n  ##########\n  # NOKIA\n  # @note: NokiaN8-00 comes before iphone. Sometimes spoofs iphone\n  ##########\n  - regex: 'Nokia(N[0-9]+)([A-z_-][A-z0-9_-]*)'\n    device_replacement: 'Nokia $1'\n    brand_replacement: 'Nokia'\n    model_replacement: '$1$2'\n  - regex: '(?:NOKIA|Nokia)(?:-| *)(?:([A-Za-z0-9]+)-[0-9a-f]{32}|([A-Za-z0-9-]+)(?:UCBrowser)|([A-Za-z0-9-]+))'\n    device_replacement: 'Nokia $1$2$3'\n    brand_replacement: 'Nokia'\n    model_replacement: '$1$2$3'\n  - regex: 'Lumia ([A-Za-z0-9-]+)'\n    device_replacement: 'Lumia $1'\n    brand_replacement: 'Nokia'\n    model_replacement: 'Lumia $1'\n  # UCWEB Browser on Symbian\n  - regex: '(Symbian; U; S60 V5; [A-z]{2}-[A-z]{2}; (SonyEricsson|Samsung|Nokia|LG)([^;/]+))'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  # Nokia Symbian\n  - regex: '(Symbian(?:/3)?; U; ([^;]+);'\n    device_replacement: 'Nokia $1'\n    brand_replacement: 'Nokia'\n    model_replacement: '$1'\n\n  ##########\n  # BlackBerry\n  # @ref: http://www.useragentstring.com/pages/BlackBerry/\n  ##########\n  - regex: 'BB10; ([A-Za-z0-9- ]+))'\n    device_replacement: 'BlackBerry $1'\n    brand_replacement: 'BlackBerry'\n    model_replacement: '$1'\n  - regex: 'Play[Bb]ook.+RIM Tablet OS'\n    device_replacement: 'BlackBerry Playbook'\n    brand_replacement: 'BlackBerry'\n    model_replacement: 'Playbook'\n  - regex: 'Black[Bb]erry ([0-9]+);'\n    device_replacement: 'BlackBerry $1'\n    brand_replacement: 'BlackBerry'\n    model_replacement: '$1'\n  - regex: 'Black[Bb]erry([0-9]+)'\n    device_replacement: 'BlackBerry $1'\n    brand_replacement: 'BlackBerry'\n    model_replacement: '$1'\n  - regex: 'Black[Bb]erry;'\n    device_replacement: 'BlackBerry'\n    brand_replacement: 'BlackBerry'\n\n  ##########\n  # PALM / HP\n  # @note: some palm devices must come before iphone. sometimes spoofs iphone in ua\n  ##########\n  - regex: '(Pre|Pixi)/d+.d+'\n    device_replacement: 'Palm $1'\n    brand_replacement: 'Palm'\n    model_replacement: '$1'\n  - regex: 'Palm([0-9]+)'\n    device_replacement: 'Palm $1'\n    brand_replacement: 'Palm'\n    model_replacement: '$1'\n  - regex: 'Treo([A-Za-z0-9]+)'\n    device_replacement: 'Palm Treo $1'\n    brand_replacement: 'Palm'\n    model_replacement: 'Treo $1'\n  - regex: 'webOS.*(P160U(?:NA)?)/(d+).(d+)'\n    device_replacement: 'HP Veer'\n    brand_replacement: 'HP'\n    model_replacement: 'Veer'\n  - regex: '(Touch[Pp]ad)/d+.d+'\n    device_replacement: 'HP TouchPad'\n    brand_replacement: 'HP'\n    model_replacement: 'TouchPad'\n  - regex: 'HPiPAQ([A-Za-z0-9]+)/d+.d+'\n    device_replacement: 'HP iPAQ $1'\n    brand_replacement: 'HP'\n    model_replacement: 'iPAQ $1'\n  - regex: 'PDA; (PalmOS)/sony/model ([a-z]+)/Revision'\n    device_replacement: '$1'\n    brand_replacement: 'Sony'\n    model_replacement: '$1 $2'\n\n  ##########\n  # AppleTV\n  # No built in browser that I can tell\n  # Stack Overflow indicated iTunes-AppleTV/4.1 as a known UA for app available and I'm seeing it in live traffic\n  ##########\n  - regex: '(Apples?TV)'\n    device_replacement: 'AppleTV'\n    brand_replacement: 'Apple'\n    model_replacement: 'AppleTV'\n\n  #########\n  # Tesla Model S\n  #########\n  - regex: '(QtCarBrowser)'\n    device_replacement: 'Tesla Model S'\n    brand_replacement: 'Tesla'\n    model_replacement: 'Model S'\n\n  ##########\n  # iSTUFF\n  # @note: complete but probably catches spoofs\n  #   ipad and ipod must be parsed before iphone\n  #   cannot determine specific device type from ua string. (3g, 3gs, 4, etc)\n  ##########\n  # @note: on some ua the device can be identified e.g. iPhone5,1\n  - regex: '(iPhone|iPad|iPod)(d+,d+)'\n    device_replacement: '$1'\n    brand_replacement: 'Apple'\n    model_replacement: '$1$2'\n  # @note: iPad needs to be before iPhone\n  - regex: '(iPad)(?:;| Simulator;)'\n    device_replacement: '$1'\n    brand_replacement: 'Apple'\n    model_replacement: '$1'\n  - regex: '(iPod)(?:;| touch;| Simulator;)'\n    device_replacement: '$1'\n    brand_replacement: 'Apple'\n    model_replacement: '$1'\n  - regex: '(iPhone)(?:;| Simulator;)'\n    device_replacement: '$1'\n    brand_replacement: 'Apple'\n    model_replacement: '$1'\n  # @note: desktop applications show device info\n  - regex: 'CFNetwork/.* Darwin/d.*(((?:Mac|iMac|PowerMac|PowerBook)[^d]*)(d+)(?:,|%2C)(d+)'\n    device_replacement: '$1$2,$3'\n    brand_replacement: 'Apple'\n    model_replacement: '$1$2,$3'\n  # @note: newer desktop applications don't show device info\n  # This is here so as to not have them recorded as iOS-Device\n  - regex: 'CFNetwork/.* Darwin/d+.d+.d+ (x86_64)'\n  # @note: iOS applications do not show device info\n  - regex: 'CFNetwork/.* Darwin/d'\n    device_replacement: 'iOS-Device'\n    brand_replacement: 'Apple'\n    model_replacement: 'iOS-Device'\n\n  ##########\n  # Acer\n  ##########\n  - regex: 'acer_([A-Za-z0-9]+)_'\n    device_replacement: 'Acer $1'\n    brand_replacement: 'Acer'\n    model_replacement: '$1'\n\n  ##########\n  # Alcatel\n  ##########\n  - regex: '(?:ALCATEL|Alcatel)-([A-Za-z0-9-]+)'\n    device_replacement: 'Alcatel $1'\n    brand_replacement: 'Alcatel'\n    model_replacement: '$1'\n\n  ##########\n  # Amoi\n  ##########\n  - regex: '(?:Amoi|AMOI)-([A-Za-z0-9]+)'\n    device_replacement: 'Amoi $1'\n    brand_replacement: 'Amoi'\n    model_replacement: '$1'\n\n  ##########\n  # Asus\n  ##########\n  - regex: '(?:; |/|^)((?:Transformer (?:Pad|Prime) |Transformer |PadFone[ _]?)[A-Za-z0-9]*)'\n    device_replacement: 'Asus $1'\n    brand_replacement: 'Asus'\n    model_replacement: '$1'\n  - regex: '(?:asus.*?ASUS|Asus|ASUS|asus)[- ;]*((?:Transformer (?:Pad|Prime) |Transformer |Padfone |Nexus[ _])?[A-Za-z0-9]+)'\n    device_replacement: 'Asus $1'\n    brand_replacement: 'Asus'\n    model_replacement: '$1'\n\n\n  ##########\n  # Bird\n  ##########\n  - regex: '\bBIRD[ -.]([A-Za-z0-9]+)'\n    device_replacement: 'Bird $1'\n    brand_replacement: 'Bird'\n    model_replacement: '$1'\n\n  ##########\n  # Dell\n  ##########\n  - regex: '\bDell ([A-Za-z0-9]+)'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: '$1'\n\n  ##########\n  # DoCoMo\n  ##########\n  - regex: 'DoCoMo/2.0 ([A-Za-z0-9]+)'\n    device_replacement: 'DoCoMo $1'\n    brand_replacement: 'DoCoMo'\n    model_replacement: '$1'\n  - regex: '([A-Za-z0-9]+)_W;FOMA'\n    device_replacement: 'DoCoMo $1'\n    brand_replacement: 'DoCoMo'\n    model_replacement: '$1'\n  - regex: '([A-Za-z0-9]+);FOMA'\n    device_replacement: 'DoCoMo $1'\n    brand_replacement: 'DoCoMo'\n    model_replacement: '$1'\n\n  ##########\n  # htc\n  ##########\n  - regex: '\b(?:HTC/|HTC/[a-z0-9]+/)?HTC[ _-;]? *(.*?)(?:-?Mozilla|fingerPrint|[;/()]|$)'\n    device_replacement: 'HTC $1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n\n  ##########\n  # Huawei\n  ##########\n  - regex: 'Huawei([A-Za-z0-9]+)'\n    device_replacement: 'Huawei $1'\n    brand_replacement: 'Huawei'\n    model_replacement: '$1'\n  - regex: 'HUAWEI-([A-Za-z0-9]+)'\n    device_replacement: 'Huawei $1'\n    brand_replacement: 'Huawei'\n    model_replacement: '$1'\n  - regex: 'vodafone([A-Za-z0-9]+)'\n    device_replacement: 'Huawei Vodafone $1'\n    brand_replacement: 'Huawei'\n    model_replacement: 'Vodafone $1'\n\n  ##########\n  # i-mate\n  ##########\n  - regex: 'i-mate ([A-Za-z0-9]+)'\n    device_replacement: 'i-mate $1'\n    brand_replacement: 'i-mate'\n    model_replacement: '$1'\n\n  ##########\n  # kyocera\n  ##########\n  - regex: 'Kyocera-([A-Za-z0-9]+)'\n    device_replacement: 'Kyocera $1'\n    brand_replacement: 'Kyocera'\n    model_replacement: '$1'\n  - regex: 'KWC-([A-Za-z0-9]+)'\n    device_replacement: 'Kyocera $1'\n    brand_replacement: 'Kyocera'\n    model_replacement: '$1'\n\n  ##########\n  # lenovo\n  ##########\n  - regex: 'Lenovo[_-]([A-Za-z0-9]+)'\n    device_replacement: 'Lenovo $1'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1'\n\n  ##########\n  # HbbTV (European and Australian standard)\n  # written before the LG regexes, as LG is making HbbTV too\n  ##########\n  - regex: '(HbbTV)/[0-9]+.[0-9]+.[0-9]+ ([^;]*; *(LG)E *; *([^;]*) *;[^;]*;[^;]*;)'\n    device_replacement: '$1'\n    brand_replacement: '$2'\n    model_replacement: '$3'\n  - regex: '(HbbTV)/1.1.1.*CE-HTML/1.d;(Vendor/)*(THOM[^;]*?)[;s](?:.*SW-Version/.*)*(LF[^;]+);?'\n    device_replacement: '$1'\n    brand_replacement: 'Thomson'\n    model_replacement: '$4'\n  - regex: '(HbbTV)(?:/1.1.1)?(?: ?(;;;;;))?; *CE-HTML(?:/1.d)?; *([^ ]+) ([^;]+);'\n    device_replacement: '$1'\n    brand_replacement: '$2'\n    model_replacement: '$3'\n  - regex: '(HbbTV)/1.1.1 (;;;;;) Maple_2011'\n    device_replacement: '$1'\n    brand_replacement: 'Samsung'\n  - regex: '(HbbTV)/[0-9]+.[0-9]+.[0-9]+ ([^;]*; *(?:CUS:([^;]*)|([^;]+)) *; *([^;]*) *;.*;'\n    device_replacement: '$1'\n    brand_replacement: '$2$3'\n    model_replacement: '$4'\n  - regex: '(HbbTV)/[0-9]+.[0-9]+.[0-9]+'\n    device_replacement: '$1'\n\n  ##########\n  # LGE NetCast TV\n  ##########\n  - regex: 'LGE; (?:Media/)?([^;]*);[^;]*;[^;]*;?); \"?LG NetCast(.TV|.Media|)-d+'\n    device_replacement: 'NetCast$2'\n    brand_replacement: 'LG'\n    model_replacement: '$1'\n\n  ##########\n  # InettvBrowser\n  ##########\n  - regex: 'InettvBrowser/[0-9]+.[0-9A-Z]+ ([^;]*;(Sony)([^;]*);[^;]*;[^)]*)'\n    device_replacement: 'Inettv'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  - regex: 'InettvBrowser/[0-9]+.[0-9A-Z]+ ([^;]*;([^;]*);[^;]*;[^)]*)'\n    device_replacement: 'Inettv'\n    brand_replacement: 'Generic_Inettv'\n    model_replacement: '$1'\n  - regex: '(?:InettvBrowser|TSBNetTV|NETTV|HBBTV)'\n    device_replacement: 'Inettv'\n    brand_replacement: 'Generic_Inettv'\n\n  ##########\n  # lg\n  ##########\n  # LG Symbian Phones\n  - regex: 'Series60/d.d (LG)[-]?([A-Za-z0-9 -]+)'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  # other LG phones\n  - regex: '\b(?:LGE[ -]LG-(?:AX)?|LGE |LGE?-LG|LGE?[ -]|LG[ /-]|lg[-])([A-Za-z0-9]+)\b'\n    device_replacement: 'LG $1'\n    brand_replacement: 'LG'\n    model_replacement: '$1'\n  - regex: '(?:^LG[-]?|^LGE[-/]?)([A-Za-z]+[0-9]+[A-Za-z]*)'\n    device_replacement: 'LG $1'\n    brand_replacement: 'LG'\n    model_replacement: '$1'\n  - regex: '^LG([0-9]+[A-Za-z]*)'\n    device_replacement: 'LG $1'\n    brand_replacement: 'LG'\n    model_replacement: '$1'\n\n  ##########\n  # microsoft\n  ##########\n  - regex: '(KIN.[^ ]+) (d+).(d+)'\n    device_replacement: 'Microsoft $1'\n    brand_replacement: 'Microsoft'\n    model_replacement: '$1'\n  - regex: '(?:MSIE|XBMC).*\b(Xbox)\b'\n    device_replacement: '$1'\n    brand_replacement: 'Microsoft'\n    model_replacement: '$1'\n  - regex: '; ARM; Trident/6.0; Touch[);]'\n    device_replacement: 'Microsoft Surface RT'\n    brand_replacement: 'Microsoft'\n    model_replacement: 'Surface RT'\n\n  ##########\n  # motorola\n  ##########\n  - regex: 'Motorola-([A-Za-z0-9]+)'\n    device_replacement: 'Motorola $1'\n    brand_replacement: 'Motorola'\n    model_replacement: '$1'\n  - regex: 'MOTO-([A-Za-z0-9]+)'\n    device_replacement: 'Motorola $1'\n    brand_replacement: 'Motorola'\n    model_replacement: '$1'\n  - regex: 'MOT-([A-z0-9][A-z0-9-]*)'\n    device_replacement: 'Motorola $1'\n    brand_replacement: 'Motorola'\n    model_replacement: '$1'\n\n  ##########\n  # nintendo\n  ##########\n  - regex: 'Nintendo WiiU'\n    device_replacement: 'Nintendo Wii U'\n    brand_replacement: 'Nintendo'\n    model_replacement: 'Wii U'\n  - regex: 'Nintendo (DS|3DS|DSi|Wii);'\n    device_replacement: 'Nintendo $1'\n    brand_replacement: 'Nintendo'\n    model_replacement: '$1'\n\n  ##########\n  # pantech\n  ##########\n  - regex: '(?:Pantech|PANTECH)[ _-]?([A-Za-z0-9-]+)'\n    device_replacement: 'Pantech $1'\n    brand_replacement: 'Pantech'\n    model_replacement: '$1'\n\n  ##########\n  # philips\n  ##########\n  - regex: 'Philips([A-Za-z0-9]+)'\n    device_replacement: 'Philips $1'\n    brand_replacement: 'Philips'\n    model_replacement: '$1'\n  - regex: 'Philips ([A-Za-z0-9]+)'\n    device_replacement: 'Philips $1'\n    brand_replacement: 'Philips'\n    model_replacement: '$1'\n\n  ##########\n  # Samsung\n  ##########\n  # Samsung Smart-TV\n  - regex: '(SMART-TV); .* Tizen '\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n  # Samsung Symbian Devices\n  - regex: 'SymbianOS/9.d.* Samsung[/-]([A-Za-z0-9 -]+)'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n  - regex: '(Samsung)(SGH)(i[0-9]+)'\n    device_replacement: '$1 $2$3'\n    brand_replacement: '$1'\n    model_replacement: '$2-$3'\n  - regex: 'SAMSUNG-ANDROID-MMS/([^;/]+)'\n    device_replacement: '$1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n  # Other Samsung\n  #- regex: 'SAMSUNG(?:; |-)([A-Za-z0-9-]+)'\n  - regex: 'SAMSUNG(?:; |[ -/])([A-Za-z0-9-]+)'\n    regex_flag: 'i'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n\n  ##########\n  # Sega\n  ##########\n  - regex: '(Dreamcast)'\n    device_replacement: 'Sega $1'\n    brand_replacement: 'Sega'\n    model_replacement: '$1'\n\n  ##########\n  # Siemens mobile\n  ##########\n  - regex: '^SIE-([A-Za-z0-9]+)'\n    device_replacement: 'Siemens $1'\n    brand_replacement: 'Siemens'\n    model_replacement: '$1'\n\n  ##########\n  # Softbank\n  ##########\n  - regex: 'Softbank/[12].0/([A-Za-z0-9]+)'\n    device_replacement: 'Softbank $1'\n    brand_replacement: 'Softbank'\n    model_replacement: '$1'\n\n  ##########\n  # SonyEricsson\n  ##########\n  - regex: 'SonyEricsson ?([A-Za-z0-9-]+)'\n    device_replacement: 'Ericsson $1'\n    brand_replacement: 'SonyEricsson'\n    model_replacement: '$1'\n\n  ##########\n  # Sony\n  ##########\n  - regex: 'Android [^;]+; ([^ ]+) (Sony)/'\n    device_replacement: '$2 $1'\n    brand_replacement: '$2'\n    model_replacement: '$1'\n  - regex: '(Sony)(?:BDP/|/)?([^ /;)]+)[ /;)]'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  #########\n  # Puffin Browser Device detect\n  # A=Android, I=iOS, P=Phone, T=Tablet\n  # AT=Android+Tablet\n  #########\n  - regex: 'Puffin/[d.]+IT'\n    device_replacement: 'iPad'\n    brand_replacement: 'Apple'\n    model_replacement: 'iPad'\n  - regex: 'Puffin/[d.]+IP'\n    device_replacement: 'iPhone'\n    brand_replacement: 'Apple'\n    model_replacement: 'iPhone'\n  - regex: 'Puffin/[d.]+AT'\n    device_replacement: 'Generic Tablet'\n    brand_replacement: 'Generic'\n    model_replacement: 'Tablet'\n  - regex: 'Puffin/[d.]+AP'\n    device_replacement: 'Generic Smartphone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Smartphone'\n\n  #########\n  # Android General Device Matching (far from perfect)\n  #########\n  - regex: 'Android[- ][d]+.[d]+; [A-Za-z]{2}-[A-Za-z]{0,2}; WOWMobile (.+) Build[/ ]'\n    brand_replacement: 'Generic_Android'\n    model_replacement: '$1'\n  - regex: 'Android[- ][d]+.[d]+-update1; [A-Za-z]{2}-[A-Za-z]{0,2} *; *(.+?) Build[/ ]'\n    brand_replacement: 'Generic_Android'\n    model_replacement: '$1'\n  - regex: 'Android[- ][d]+(?:.[d]+){1,2}; *[A-Za-z]{2}[_-][A-Za-z]{0,2}-? *; *(.+?) Build[/ ]'\n    brand_replacement: 'Generic_Android'\n    model_replacement: '$1'\n  - regex: 'Android[- ][d]+(?:.[d]+){1,2}; *[A-Za-z]{0,2}- *; *(.+?) Build[/ ]'\n    brand_replacement: 'Generic_Android'\n    model_replacement: '$1'\n  # No build info at all - \"Build\" follows locale immediately\n  - regex: 'Android[- ][d]+(?:.[d]+){1,2}; *[a-z]{0,2}[_-]?[A-Za-z]{0,2};? Build[/ ]'\n    device_replacement: 'Generic Smartphone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Smartphone'\n  - regex: 'Android[- ][d]+(?:.[d]+){1,2}; *-?[A-Za-z]{2}; *(.+?) Build[/ ]'\n    brand_replacement: 'Generic_Android'\n    model_replacement: '$1'\n  - regex: 'Android[- ][d]+(?:.[d]+){1,2}(?:;.*)?; *(.+?) Build[/ ]'\n    brand_replacement: 'Generic_Android'\n    model_replacement: '$1'\n\n  ##########\n  # Google TV\n  ##########\n  - regex: '(GoogleTV)'\n    brand_replacement: 'Generic_Inettv'\n    model_replacement: '$1'\n\n  ##########\n  # WebTV\n  ##########\n  - regex: '(WebTV)/d+.d+'\n    brand_replacement: 'Generic_Inettv'\n    model_replacement: '$1'\n  # Roku Digital-Video-Players https://www.roku.com/\n  - regex: '^(Roku)/DVP-d+.d+'\n    brand_replacement: 'Generic_Inettv'\n    model_replacement: '$1'\n\n  ##########\n  # Generic Tablet\n  ##########\n  - regex: '(Android 3.d|Opera Tablet|Tablet; .+Firefox/|Android.*(?:Tab|Pad))'\n    regex_flag: 'i'\n    device_replacement: 'Generic Tablet'\n    brand_replacement: 'Generic'\n    model_replacement: 'Tablet'\n\n  ##########\n  # Generic Smart Phone\n  ##########\n  - regex: '(Symbian|\bS60(Version|Vd)|\bS60\b|((Series 60|Windows Mobile|Palm OS|Bada); Opera Mini|Windows CE|Opera Mobi|BREW|Brew|Mobile; .+Firefox/|iPhone OS|Android|MobileSafari|Windows *Phone|(webOS/|PalmOS)'\n    device_replacement: 'Generic Smartphone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Smartphone'\n  - regex: '(hiptop|avantgo|plucker|xiino|blazer|elaine)'\n    regex_flag: 'i'\n    device_replacement: 'Generic Smartphone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Smartphone'\n\n  ##########\n  # Spiders (this is hack...)\n  ##########\n  - regex: '(bot|zao|borg|DBot|oegp|silk|Xenu|zeal|^NING|CCBot|crawl|htdig|lycos|slurp|teoma|voila|yahoo|Sogou|CiBra|Nutch|^Java/|^JNLP/|Daumoa|Genieo|ichiro|larbin|pompos|Scrapy|snappy|speedy|spider|msnbot|msrbot|vortex|^vortex|crawler|favicon|indexer|Riddler|scooter|scraper|scrubby|WhatWeb|WinHTTP|bingbot|BingPreview|openbot|gigabot|furlbot|polybot|seekbot|^voyager|archiver|Icarus6j|mogimogi|Netvibes|blitzbot|altavista|charlotte|findlinks|Retreiver|TLSProber|WordPress|SeznamBot|ProoXiBot|wsr-agent|Squrl Java|EtaoSpider|PaperLiBot|SputnikBot|A6-Indexer|netresearch|searchsight|baiduspider|YisouSpider|ICC-Crawler|http%20client|Python-urllib|dataparksearch|converacrawler|Screaming Frog|AppEngine-Google|YahooCacheSystem|fast-webcrawler|Sogou Pic Spider|semanticdiscovery|Innovazion Crawler|facebookexternalhit|Google.*/+/web/snippet|Google-HTTP-Java-Client|BlogBridge|IlTrovatore-Setaccio|InternetArchive|GomezAgent|WebThumbnail|heritrix|NewsGator|PagePeeker|Reaper|ZooShot|holmes|NL-Crawler|Pingdom|WhatsApp|masscan)'\n    regex_flag: 'i'\n    device_replacement: 'Spider'\n    brand_replacement: 'Spider'\n    model_replacement: 'Desktop'\n\n  ##########\n  # Generic Feature Phone\n  # take care to do case insensitive matching\n  ##########\n  - regex: '^(1207|3gso|4thp|501i|502i|503i|504i|505i|506i|6310|6590|770s|802s|a wa|acer|acs-|airn|alav|asus|attw|au-m|aur |aus |abac|acoo|aiko|alco|alca|amoi|anex|anny|anyw|aptu|arch|argo|bmobile|bell|bird|bw-n|bw-u|beck|benq|bilb|blac|c55/|cdm-|chtm|capi|comp|cond|dall|dbte|dc-s|dica|ds-d|ds12|dait|devi|dmob|doco|dopo|dorado|el(?:38|39|48|49|50|55|58|68)|el[3456]d{2}dual|erk0|esl8|ex300|ez40|ez60|ez70|ezos|ezze|elai|emul|eric|ezwa|fake|fly-|fly_|g-mo|g1 u|g560|gf-5|grun|gene|go.w|good|grad|hcit|hd-m|hd-p|hd-t|hei-|hp i|hpip|hs-c|htc |htc-|htca|htcg)'\n    regex_flag: 'i'\n    device_replacement: 'Generic Feature Phone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Feature Phone'\n  - regex: '^(htcp|htcs|htct|htc_|haie|hita|huaw|hutc|i-20|i-go|i-ma|i-mobile|i230|iac|iac-|iac/|ig01|im1k|inno|iris|jata|kddi|kgt|kgt/|kpt |kwc-|klon|lexi|lg g|lg-a|lg-b|lg-c|lg-d|lg-f|lg-g|lg-k|lg-l|lg-m|lg-o|lg-p|lg-s|lg-t|lg-u|lg-w|lg/k|lg/l|lg/u|lg50|lg54|lge-|lge/|leno|m1-w|m3ga|m50/|maui|mc01|mc21|mcca|medi|meri|mio8|mioa|mo01|mo02|mode|modo|mot |mot-|mt50|mtp1|mtv |mate|maxo|merc|mits|mobi|motv|mozz|n100|n101|n102|n202|n203|n300|n302|n500|n502|n505|n700|n701|n710|nec-|nem-|newg|neon)'\n    regex_flag: 'i'\n    device_replacement: 'Generic Feature Phone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Feature Phone'\n  - regex: '^(netf|noki|nzph|o2 x|o2-x|opwv|owg1|opti|oran|ot-s|p800|pand|pg-1|pg-2|pg-3|pg-6|pg-8|pg-c|pg13|phil|pn-2|pt-g|palm|pana|pire|pock|pose|psio|qa-a|qc-2|qc-3|qc-5|qc-7|qc07|qc12|qc21|qc32|qc60|qci-|qwap|qtek|r380|r600|raks|rim9|rove|s55/|sage|sams|sc01|sch-|scp-|sdk/|se47|sec-|sec0|sec1|semc|sgh-|shar|sie-|sk-0|sl45|slid|smb3|smt5|sp01|sph-|spv |spv-|sy01|samm|sany|sava|scoo|send|siem|smar|smit|soft|sony|t-mo|t218|t250|t600|t610|t618|tcl-|tdg-|telm|tim-|ts70|tsm-|tsm3|tsm5|tx-9|tagt)'\n    regex_flag: 'i'\n    device_replacement: 'Generic Feature Phone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Feature Phone'\n  - regex: '^(talk|teli|topl|tosh|up.b|upg1|utst|v400|v750|veri|vk-v|vk40|vk50|vk52|vk53|vm40|vx98|virg|vertu|vite|voda|vulc|w3c |w3c-|wapj|wapp|wapu|wapm|wig |wapi|wapr|wapv|wapy|wapa|waps|wapt|winc|winw|wonu|x700|xda2|xdag|yas-|your|zte-|zeto|aste|audi|avan|blaz|brew|brvw|bumb|ccwa|cell|cldc|cmd-|dang|eml2|fetc|hipt|http|ibro|idea|ikom|ipaq|jbro|jemu|jigs|keji|kyoc|kyok|libw|m-cr|midp|mmef|moto|mwbp|mywa|newt|nok6|o2im|pant|pdxg|play|pluc|port|prox|rozo|sama|seri|smal|symb|treo|upsi|vx52|vx53|vx60|vx61|vx70|vx80|vx81|vx83|vx85|wap-|webc|whit|wmlb|xda-|xda_)'\n    regex_flag: 'i'\n    device_replacement: 'Generic Feature Phone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Feature Phone'\n  - regex: '^(Ice)$'\n    device_replacement: 'Generic Feature Phone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Feature Phone'\n  - regex: '(wap[- ]browser|maui|netfront|obigo|teleca|up.browser|midp|Opera Mini)'\n    regex_flag: 'i'\n    device_replacement: 'Generic Feature Phone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Feature Phone'\n"], ["\nuser_agent_parsers:\n  #### SPECIAL CASES TOP ####\n\n  # @note: iOS / OSX Applications\n  - regex: '(CFNetwork)(?:/(\\d+)\\.(\\d+)\\.?(\\d+)?)?'\n    family_replacement: 'CFNetwork'\n\n  # Pingdom\n  - regex: '(Pingdom.com_bot_version_)(\\d+)\\.(\\d+)'\n    family_replacement: 'PingdomBot'\n    # 'Mozilla/5.0 (Unknown; Linux x86_64) AppleWebKit/534.34 (KHTML, like Gecko) PingdomTMS/0.8.5 Safari/534.34'\n  - regex: '(PingdomTMS)/(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'PingdomBot'\n\n  # Facebook\n  - regex: '(facebookexternalhit)/(\\d+)\\.(\\d+)'\n    family_replacement: 'FacebookBot'\n\n  # Google Plus\n  - regex: 'Google.*/\\+/web/snippet'\n    family_replacement: 'GooglePlusBot'\n\n  # Gmail\n  - regex: 'via ggpht.com GoogleImageProxy'\n    family_replacement: 'GmailImageProxy'\n\n  # Twitter\n  - regex: '(Twitterbot)/(\\d+)\\.(\\d+)'\n    family_replacement: 'TwitterBot'\n\n  # Bots Pattern '/name-0.0'\n  - regex: '/((?:Ant-)?Nutch|[A-z]+[Bb]ot|[A-z]+[Ss]pider|Axtaris|fetchurl|Isara|ShopSalad|Tailsweep)[ \\-](\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?'\n  # Bots Pattern 'name/0.0'\n  - regex: '\\b(008|Altresium|Argus|BaiduMobaider|BoardReader|DNSGroup|DataparkSearch|EDI|Goodzer|Grub|INGRID|Infohelfer|LinkedInBot|LOOQ|Nutch|PathDefender|Peew|PostPost|Steeler|Twitterbot|VSE|WebCrunch|WebZIP|Y!J-BR[A-Z]|YahooSeeker|envolk|sproose|wminer)/(\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?'\n\n  # MSIECrawler\n  - regex: '(MSIE) (\\d+)\\.(\\d+)([a-z]\\d?)?;.* MSIECrawler'\n    family_replacement: 'MSIECrawler'\n\n  # Downloader ...\n  - regex: '(Google-HTTP-Java-Client|Apache-HttpClient|http%20client|Python-urllib|HttpMonitor|TLSProber|WinHTTP|JNLP|okhttp)(?:[ /](\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?)?'\n\n  # Bots\n  - regex: '(1470\\.net crawler|50\\.nu|8bo Crawler Bot|Aboundex|Accoona-[A-z]+-Agent|AdsBot-Google(?:-[a-z]+)?|altavista|AppEngine-Google|archive.*?\\.org_bot|archiver|Ask Jeeves|[Bb]ai[Dd]u[Ss]pider(?:-[A-Za-z]+)*|bingbot|BingPreview|blitzbot|BlogBridge|BoardReader(?: [A-Za-z]+)*|boitho.com-dc|BotSeer|\\b\\w*favicon\\w*\\b|\\bYeti(?:-[a-z]+)?|Catchpoint bot|[Cc]harlotte|Checklinks|clumboot|Comodo HTTP\\(S\\) Crawler|Comodo-Webinspector-Crawler|ConveraCrawler|CRAWL-E|CrawlConvera|Daumoa(?:-feedfetcher)?|Feed Seeker Bot|findlinks|Flamingo_SearchEngine|FollowSite Bot|furlbot|Genieo|gigabot|GomezAgent|gonzo1|(?:[a-zA-Z]+-)?Googlebot(?:-[a-zA-Z]+)?|Google SketchUp|grub-client|gsa-crawler|heritrix|HiddenMarket|holmes|HooWWWer|htdig|ia_archiver|ICC-Crawler|Icarus6j|ichiro(?:/mobile)?|IconSurf|IlTrovatore(?:-Setaccio)?|InfuzApp|Innovazion Crawler|InternetArchive|IP2[a-z]+Bot|jbot\\b|KaloogaBot|Kraken|Kurzor|larbin|LEIA|LesnikBot|Linguee Bot|LinkAider|LinkedInBot|Lite Bot|Llaut|lycos|Mail\\.RU_Bot|masscan|masidani_bot|Mediapartners-Google|Microsoft .*? Bot|mogimogi|mozDex|MJ12bot|msnbot(?:-media *)?|msrbot|netresearch|Netvibes|NewsGator[^/]*|^NING|Nutch[^/]*|Nymesis|ObjectsSearch|Orbiter|OOZBOT|PagePeeker|PagesInventory|PaxleFramework|Peeplo Screenshot Bot|PlantyNet_WebRobot|Pompos|Read%20Later|Reaper|RedCarpet|Retreiver|Riddler|Rival IQ|scooter|Scrapy|Scrubby|searchsight|seekbot|semanticdiscovery|Simpy|SimplePie|SEOstats|SimpleRSS|SiteCon|Slackbot-LinkExpanding|Slack-ImgProxy|Slurp|snappy|Speedy Spider|Squrl Java|TheUsefulbot|ThumbShotsBot|Thumbshots\\.ru|TwitterBot|WhatsApp|URL2PNG|Vagabondo|VoilaBot|^vortex|Votay bot|^voyager|WASALive.Bot|Web-sniffer|WebThumb|WeSEE:[A-z]+|WhatWeb|WIRE|WordPress|Wotbox|www\\.almaden\\.ibm\\.com|Xenu(?:.s)? Link Sleuth|Xerka [A-z]+Bot|yacy(?:bot)?|Yahoo[a-z]*Seeker|Yahoo! Slurp|Yandex\\w+|YodaoBot(?:-[A-z]+)?|YottaaMonitor|Yowedo|^Zao|^Zao-Crawler|ZeBot_www\\.ze\\.bz|ZooShot|ZyBorg)(?:[ /]v?(\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?)?'\n\n  # Bots General matcher 'name/0.0'\n  - regex: '(?:\\/[A-Za-z0-9\\.]+)? *([A-Za-z0-9 \\-_\\!\\[\\]:]*(?:[Aa]rchiver|[Ii]ndexer|[Ss]craper|[Bb]ot|[Ss]pider|[Cc]rawl[a-z]*))/(\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?'\n  # Bots General matcher 'name 0.0'\n  - regex: '(?:\\/[A-Za-z0-9\\.]+)? *([A-Za-z0-9 _\\!\\[\\]:]*(?:[Aa]rchiver|[Ii]ndexer|[Ss]craper|[Bb]ot|[Ss]pider|[Cc]rawl[a-z]*)) (\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?'\n  # Bots containing spider|scrape|bot(but not CUBOT)|Crawl\n  - regex: '((?:[A-z0-9]+|[A-z\\-]+ ?)?(?: the )?(?:[Ss][Pp][Ii][Dd][Ee][Rr]|[Ss]crape|[A-Za-z0-9-]*(?:[^C][^Uu])[Bb]ot|[Cc][Rr][Aa][Ww][Ll])[A-z0-9]*)(?:(?:[ /]| v)(\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?)?'\n\n  # HbbTV standard defines what features the browser should understand.\n  # but it's like targeting \"HTML5 browsers\", effective browser support depends on the model\n  # See os_parsers if you want to target a specific TV\n  - regex: '(HbbTV)/(\\d+)\\.(\\d+)\\.(\\d+) \\('\n\n  # must go before Firefox to catch Chimera/SeaMonkey/Camino\n  - regex: '(Chimera|SeaMonkey|Camino)/(\\d+)\\.(\\d+)\\.?([ab]?\\d+[a-z]*)?'\n\n  # Social Networks\n  # Facebook\n  - regex: '\\[FB.*;(FBAV)/(\\d+)(?:\\.(\\d+)(?:\\.(\\d)+)?)?'\n    family_replacement: 'Facebook'\n  # Pinterest\n  - regex: '\\[(Pinterest)/[^\\]]+\\]'\n  - regex: '(Pinterest)(?: for Android(?: Tablet)?)?/(\\d+)(?:\\.(\\d+)(?:\\.(\\d)+)?)?'\n\n  # Pale Moon\n  - regex: '(PaleMoon)/(\\d+)\\.(\\d+)\\.?(\\d+)?'\n    family_replacement: 'Pale Moon'\n\n  # Firefox\n  - regex: '(Fennec)/(\\d+)\\.(\\d+)\\.?([ab]?\\d+[a-z]*)'\n    family_replacement: 'Firefox Mobile'\n  - regex: '(Fennec)/(\\d+)\\.(\\d+)(pre)'\n    family_replacement: 'Firefox Mobile'\n  - regex: '(Fennec)/(\\d+)\\.(\\d+)'\n    family_replacement: 'Firefox Mobile'\n  - regex: '(?:Mobile|Tablet);.*(Firefox)/(\\d+)\\.(\\d+)'\n    family_replacement: 'Firefox Mobile'\n  - regex: '(Namoroka|Shiretoko|Minefield)/(\\d+)\\.(\\d+)\\.(\\d+(?:pre)?)'\n    family_replacement: 'Firefox ($1)'\n  - regex: '(Firefox)/(\\d+)\\.(\\d+)(a\\d+[a-z]*)'\n    family_replacement: 'Firefox Alpha'\n  - regex: '(Firefox)/(\\d+)\\.(\\d+)(b\\d+[a-z]*)'\n    family_replacement: 'Firefox Beta'\n  - regex: '(Firefox)-(?:\\d+\\.\\d+)?/(\\d+)\\.(\\d+)(a\\d+[a-z]*)'\n    family_replacement: 'Firefox Alpha'\n  - regex: '(Firefox)-(?:\\d+\\.\\d+)?/(\\d+)\\.(\\d+)(b\\d+[a-z]*)'\n    family_replacement: 'Firefox Beta'\n  - regex: '(Namoroka|Shiretoko|Minefield)/(\\d+)\\.(\\d+)([ab]\\d+[a-z]*)?'\n    family_replacement: 'Firefox ($1)'\n  - regex: '(Firefox).*Tablet browser (\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'MicroB'\n  - regex: '(MozillaDeveloperPreview)/(\\d+)\\.(\\d+)([ab]\\d+[a-z]*)?'\n  - regex: '(FxiOS)/(\\d+)\\.(\\d+)(\\.(\\d+))?(\\.(\\d+))?'\n    family_replacement: 'Firefox iOS'\n\n  # e.g.: Flock/2.0b2\n  - regex: '(Flock)/(\\d+)\\.(\\d+)(b\\d+?)'\n\n  # RockMelt\n  - regex: '(RockMelt)/(\\d+)\\.(\\d+)\\.(\\d+)'\n\n  # e.g.: Fennec/0.9pre\n  - regex: '(Navigator)/(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'Netscape'\n\n  - regex: '(Navigator)/(\\d+)\\.(\\d+)([ab]\\d+)'\n    family_replacement: 'Netscape'\n\n  - regex: '(Netscape6)/(\\d+)\\.(\\d+)\\.?([ab]?\\d+)?'\n    family_replacement: 'Netscape'\n\n  - regex: '(MyIBrow)/(\\d+)\\.(\\d+)'\n    family_replacement: 'My Internet Browser'\n\n  # UC Browser\n  # we need check it before opera. In other case case UC Browser detected look like Opera Mini\n  - regex: '(UC? ?Browser|UCWEB|U3)[ /]?(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'UC Browser'\n\n  # Opera will stop at 9.80 and hide the real version in the Version string.\n  # see: http://dev.opera.com/articles/view/opera-ua-string-changes/\n  - regex: '(Opera Tablet).*Version/(\\d+)\\.(\\d+)(?:\\.(\\d+))?'\n  - regex: '(Opera Mini)(?:/att)?/?(\\d+)?(?:\\.(\\d+))?(?:\\.(\\d+))?'\n  - regex: '(Opera)/.+Opera Mobi.+Version/(\\d+)\\.(\\d+)'\n    family_replacement: 'Opera Mobile'\n  - regex: '(Opera)/(\\d+)\\.(\\d+).+Opera Mobi'\n    family_replacement: 'Opera Mobile'\n  - regex: 'Opera Mobi.+(Opera)(?:/|\\s+)(\\d+)\\.(\\d+)'\n    family_replacement: 'Opera Mobile'\n  - regex: 'Opera Mobi'\n    family_replacement: 'Opera Mobile'\n  - regex: '(Opera)/9.80.*Version/(\\d+)\\.(\\d+)(?:\\.(\\d+))?'\n\n  # Opera 14 for Android uses a WebKit render engine.\n  - regex: '(?:Mobile Safari).*(OPR)/(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'Opera Mobile'\n\n  # Opera >=15 for Desktop is similar to Chrome but includes an \"OPR\" Version string.\n  - regex: '(?:Chrome).*(OPR)/(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'Opera'\n\n  # Opera Coast\n  - regex: '(Coast)/(\\d+).(\\d+).(\\d+)'\n    family_replacement: 'Opera Coast'\n\n  # Opera Mini for iOS (from version 8.0.0)\n  - regex: '(OPiOS)/(\\d+).(\\d+).(\\d+)'\n    family_replacement: 'Opera Mini'\n\n  # Opera Neon\n  - regex: 'Chrome/.+( MMS)/(\\d+).(\\d+).(\\d+)'\n    family_replacement: 'Opera Neon'\n\n  # Palm WebOS looks a lot like Safari.\n  - regex: '(hpw|web)OS/(\\d+)\\.(\\d+)(?:\\.(\\d+))?'\n    family_replacement: 'webOS Browser'\n\n  # LuaKit has no version info.\n  # http://luakit.org/projects/luakit/\n  - regex: '(luakit)'\n    family_replacement: 'LuaKit'\n\n  # Snowshoe\n  - regex: '(Snowshoe)/(\\d+)\\.(\\d+).(\\d+)'\n\n  # Lightning (for Thunderbird)\n  # http://www.mozilla.org/projects/calendar/lightning/\n  - regex: 'Gecko/\\d+ (Lightning)/(\\d+)\\.(\\d+)\\.?((?:[ab]?\\d+[a-z]*)|(?:\\d*))'\n\n  # Swiftfox\n  - regex: '(Firefox)/(\\d+)\\.(\\d+)\\.(\\d+(?:pre)?) \\(Swiftfox\\)'\n    family_replacement: 'Swiftfox'\n  - regex: '(Firefox)/(\\d+)\\.(\\d+)([ab]\\d+[a-z]*)? \\(Swiftfox\\)'\n    family_replacement: 'Swiftfox'\n\n  # Rekonq\n  - regex: '(rekonq)/(\\d+)\\.(\\d+)\\.?(\\d+)? Safari'\n    family_replacement: 'Rekonq'\n  - regex: 'rekonq'\n    family_replacement: 'Rekonq'\n\n  # Conkeror lowercase/uppercase\n  # http://conkeror.org/\n  - regex: '(conkeror|Conkeror)/(\\d+)\\.(\\d+)\\.?(\\d+)?'\n    family_replacement: 'Conkeror'\n\n  # catches lower case konqueror\n  - regex: '(konqueror)/(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'Konqueror'\n\n  - regex: '(WeTab)-Browser'\n\n  - regex: '(Comodo_Dragon)/(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'Comodo Dragon'\n\n  - regex: '(Symphony) (\\d+).(\\d+)'\n\n  - regex: 'PLAYSTATION 3.+WebKit'\n    family_replacement: 'NetFront NX'\n  - regex: 'PLAYSTATION 3'\n    family_replacement: 'NetFront'\n  - regex: '(PlayStation Portable)'\n    family_replacement: 'NetFront'\n  - regex: '(PlayStation Vita)'\n    family_replacement: 'NetFront NX'\n\n  - regex: 'AppleWebKit.+ (NX)/(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'NetFront NX'\n  - regex: '(Nintendo 3DS)'\n    family_replacement: 'NetFront NX'\n\n  # Amazon Silk, should go before Safari and Chrome Mobile\n  - regex: '(Silk)/(\\d+)\\.(\\d+)(?:\\.([0-9\\-]+))?'\n    family_replacement: 'Amazon Silk'\n\n  # @ref: http://www.puffinbrowser.com\n  - regex: '(Puffin)/(\\d+)\\.(\\d+)(?:\\.(\\d+))?'\n\n  # Edge Mobile\n  - regex: 'Windows Phone .*(Edge)/(\\d+)\\.(\\d+)'\n    family_replacement: 'Edge Mobile'\n\n  # Samsung Internet (based on Chrome, but lacking some features)\n  - regex: '(SamsungBrowser)/(\\d+)\\.(\\d+)'\n    family_replacement: 'Samsung Internet'\n\n  # Baidu Browsers (desktop spoofs chrome & IE, explorer is mobile)\n  - regex: '(baidubrowser)[/\\s](\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?'\n    family_replacement: 'Baidu Browser'\n  - regex: '(FlyFlow)/(\\d+)\\.(\\d+)'\n    family_replacement: 'Baidu Explorer'\n\n  # Chrome Mobile\n  - regex: '(CrMo)/(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'Chrome Mobile'\n  - regex: '(CriOS)/(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'Chrome Mobile iOS'\n  - regex: '(Chrome)/(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+) Mobile(?:[ /]|$)'\n    family_replacement: 'Chrome Mobile'\n  - regex: ' Mobile .*(Chrome)/(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'Chrome Mobile'\n\n  # Chrome Frame must come before MSIE.\n  - regex: '(chromeframe)/(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'Chrome Frame'\n\n  # Tizen Browser (second case included in browser/major.minor regex)\n  - regex: '(SLP Browser)/(\\d+)\\.(\\d+)'\n    family_replacement: 'Tizen Browser'\n\n  # Sogou Explorer 2.X\n  - regex: '(SE 2\\.X) MetaSr (\\d+)\\.(\\d+)'\n    family_replacement: 'Sogou Explorer'\n\n  # QQ Browsers\n  - regex: '(MQQBrowser/Mini)(?:(\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?)?'\n    family_replacement: 'QQ Browser Mini'\n  - regex: '(MQQBrowser)(?:/(\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?)?'\n    family_replacement: 'QQ Browser Mobile'\n  - regex: '(QQBrowser)(?:/(\\d+)(?:\\.(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?)?'\n    family_replacement: 'QQ Browser'\n\n  # Rackspace Monitoring\n  - regex: '(Rackspace Monitoring)/(\\d+)\\.(\\d+)'\n    family_replacement: 'RackspaceBot'\n\n  # PyAMF\n  - regex: '(PyAMF)/(\\d+)\\.(\\d+)\\.(\\d+)'\n\n  # Yandex Browser\n  - regex: '(YaBrowser)/(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'Yandex Browser'\n\n  # Mail.ru Amigo/Internet Browser (Chromium-based)\n  - regex: '(Chrome)/(\\d+)\\.(\\d+)\\.(\\d+).* MRCHROME'\n    family_replacement: 'Mail.ru Chromium Browser'\n\n  # AOL Browser (IE-based)\n  - regex: '(AOL) (\\d+)\\.(\\d+); AOLBuild (\\d+)'\n\n  # MxBrowser is Maxthon\n  - regex: '(MxBrowser)/(\\d+)\\.(\\d+)(?:\\.(\\d+))?'\n    family_replacement: 'Maxthon'\n\n  #### END SPECIAL CASES TOP ####\n\n  #### MAIN CASES - this catches > 50% of all browsers ####\n\n  # Browser/major_version.minor_version.beta_version\n  - regex: '\\b(MobileIron|Crosswalk|FireWeb|Jasmine|ANTGalio|Midori|Fresco|Lobo|PaleMoon|Maxthon|Lynx|OmniWeb|Dillo|Camino|Demeter|Fluid|Fennec|Epiphany|Shiira|Sunrise|Spotify|Flock|Netscape|Lunascape|WebPilot|NetFront|Netfront|Konqueror|SeaMonkey|Kazehakase|Vienna|Iceape|Iceweasel|IceWeasel|Iron|K-Meleon|Sleipnir|Galeon|GranParadiso|Opera Mini|iCab|NetNewsWire|ThunderBrowse|Iris|UP\\.Browser|Bunjalloo|Google Earth|Raven for Mac|Openwave|MacOutlook|Electron)/(\\d+)\\.(\\d+)\\.(\\d+)'\n\n  # Outlook 2007\n  - regex: 'Microsoft Office Outlook 12\\.\\d+\\.\\d+|MSOffice 12'\n    family_replacement: 'Outlook'\n    v1_replacement: '2007'\n\n  # Outlook 2010\n  - regex: 'Microsoft Outlook 14\\.\\d+\\.\\d+|MSOffice 14'\n    family_replacement: 'Outlook'\n    v1_replacement: '2010'\n\n  # Outlook 2013\n  - regex: 'Microsoft Outlook 15\\.\\d+\\.\\d+'\n    family_replacement: 'Outlook'\n    v1_replacement: '2013'\n\n  # Outlook 2016\n  - regex: 'Microsoft Outlook (?:Mail )?16\\.\\d+\\.\\d+'\n    family_replacement: 'Outlook'\n    v1_replacement: '2016'\n\n  # Windows Live Mail\n  - regex: 'Outlook-Express\\/7\\.0.*'\n    family_replacement: 'Windows Live Mail'\n\n  # Apple Air Mail\n  - regex: '(Airmail) (\\d+)\\.(\\d+)(?:\\.(\\d+))?'\n\n  # Thunderbird\n  - regex: '(Thunderbird)/(\\d+)\\.(\\d+)(?:\\.(\\d+(?:pre)?))?'\n    family_replacement: 'Thunderbird'\n\n  # Postbox\n  - regex: '(Postbox)/(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'Postbox'\n\n  # Barca\n  - regex: '(Barca(?:Pro)?)/(\\d+)\\.(\\d+)(?:\\.(\\d+))?'\n    family_replacement: 'Barca'\n\n  # Lotus Notes\n  - regex: '(Lotus-Notes)/(\\d+)\\.(\\d+)(?:\\.(\\d+))?'\n    family_replacement: 'Lotus Notes'\n\n  # Vivaldi uses \"Vivaldi\"\n  - regex: '(Vivaldi)/(\\d+)\\.(\\d+)\\.(\\d+)'\n\n  # Edge/major_version.minor_version\n  - regex: '(Edge)/(\\d+)\\.(\\d+)'\n\n  # Brave Browser https://brave.com/\n  - regex: '(brave)/(\\d+)\\.(\\d+)\\.(\\d+) Chrome'\n    family_replacement: 'Brave'\n\n  # Iron Browser ~since version 50\n  - regex: '(Chrome)/(\\d+)\\.(\\d+)\\.(\\d+)[\\d.]* Iron[^/]'\n    family_replacement: 'Iron'\n\n  # Dolphin Browser\n  # @ref: http://www.dolphin.com\n  - regex: '\\b(Dolphin)(?: |HDCN/|/INT\\-)(\\d+)\\.(\\d+)\\.?(\\d+)?'\n\n  # Headless Chrome\n  # https://chromium.googlesource.com/chromium/src/+/lkgr/headless/README.md\n  # Currently only available on Linux\n  - regex: 'HeadlessChrome'\n    family_replacement: 'HeadlessChrome'\n\n  # Browser/major_version.minor_version\n  - regex: '(bingbot|Bolt|AdobeAIR|Jasmine|IceCat|Skyfire|Midori|Maxthon|Lynx|Arora|IBrowse|Dillo|Camino|Shiira|Fennec|Phoenix|Flock|Netscape|Lunascape|Epiphany|WebPilot|Opera Mini|Opera|NetFront|Netfront|Konqueror|Googlebot|SeaMonkey|Kazehakase|Vienna|Iceape|Iceweasel|IceWeasel|Iron|K-Meleon|Sleipnir|Galeon|GranParadiso|iCab|iTunes|MacAppStore|NetNewsWire|Space Bison|Stainless|Orca|Dolfin|BOLT|Minimo|Tizen Browser|Polaris|Abrowser|Planetweb|ICE Browser|mDolphin|qutebrowser|Otter|QupZilla|MailBar|kmail2|YahooMobileMail|ExchangeWebServices|ExchangeServicesClient|Dragon|Outlook-iOS-Android)/(\\d+)\\.(\\d+)(?:\\.(\\d+))?'\n\n  # Chrome/Chromium/major_version.minor_version\n  - regex: '(Chromium|Chrome)/(\\d+)\\.(\\d+)(?:\\.(\\d+))?'\n\n  ##########\n  # IE Mobile needs to happen before Android to catch cases such as:\n  # Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 920)...\n  # Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 920; ANZ821)...\n  # Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 920; Orange)...\n  # Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 920; Vodafone)...\n  ##########\n\n  # IE Mobile\n  - regex: '(IEMobile)[ /](\\d+)\\.(\\d+)'\n    family_replacement: 'IE Mobile'\n\n  # Baca Berita App News Reader\n  - regex: '(BacaBerita App)\\/(\\d+)\\.(\\d+)\\.(\\d+)'\n\n  # Browser major_version.minor_version.beta_version (space instead of slash)\n  - regex: '(iRider|Crazy Browser|SkipStone|iCab|Lunascape|Sleipnir|Maemo Browser) (\\d+)\\.(\\d+)\\.(\\d+)'\n  # Browser major_version.minor_version (space instead of slash)\n  - regex: '(iCab|Lunascape|Opera|Android|Jasmine|Polaris|Microsoft SkyDriveSync|The Bat!) (\\d+)\\.(\\d+)\\.?(\\d+)?'\n\n  # Kindle WebKit\n  - regex: '(Kindle)/(\\d+)\\.(\\d+)'\n\n  # weird android UAs\n  - regex: '(Android) Donut'\n    v1_replacement: '1'\n    v2_replacement: '2'\n\n  - regex: '(Android) Eclair'\n    v1_replacement: '2'\n    v2_replacement: '1'\n\n  - regex: '(Android) Froyo'\n    v1_replacement: '2'\n    v2_replacement: '2'\n\n  - regex: '(Android) Gingerbread'\n    v1_replacement: '2'\n    v2_replacement: '3'\n\n  - regex: '(Android) Honeycomb'\n    v1_replacement: '3'\n\n  # desktop mode\n  # http://www.anandtech.com/show/3982/windows-phone-7-review\n  - regex: '(MSIE) (\\d+)\\.(\\d+).*XBLWP7'\n    family_replacement: 'IE Large Screen'\n\n  # Slack desktop client (needs to be before Apple Mail as it gets wrongly detected on Mac OS otherwise)\n  - regex: '(Slack_SSB)/(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'Slack Desktop Client'\n\n  #### END MAIN CASES ####\n\n  #### SPECIAL CASES ####\n  - regex: '(Obigo)InternetBrowser'\n  - regex: '(Obigo)\\-Browser'\n  - regex: '(Obigo|OBIGO)[^\\d]*(\\d+)(?:.(\\d+))?'\n    family_replacement: 'Obigo'\n\n  - regex: '(MAXTHON|Maxthon) (\\d+)\\.(\\d+)'\n    family_replacement: 'Maxthon'\n  - regex: '(Maxthon|MyIE2|Uzbl|Shiira)'\n    v1_replacement: '0'\n\n  - regex: '(BrowseX) \\((\\d+)\\.(\\d+)\\.(\\d+)'\n\n  - regex: '(NCSA_Mosaic)/(\\d+)\\.(\\d+)'\n    family_replacement: 'NCSA Mosaic'\n\n  # Polaris/d.d is above\n  - regex: '(POLARIS)/(\\d+)\\.(\\d+)'\n    family_replacement: 'Polaris'\n  - regex: '(Embider)/(\\d+)\\.(\\d+)'\n    family_replacement: 'Polaris'\n\n  - regex: '(BonEcho)/(\\d+)\\.(\\d+)\\.?([ab]?\\d+)?'\n    family_replacement: 'Bon Echo'\n\n  # @note: iOS / OSX Applications\n  - regex: '(iPod|iPhone|iPad).+Version/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.*[ +]Safari'\n    family_replacement: 'Mobile Safari'\n  - regex: '(iPod|iPhone|iPad).+Version/(\\d+)\\.(\\d+)(?:\\.(\\d+))?'\n    family_replacement: 'Mobile Safari UI/WKWebView'\n  - regex: '(iPod|iPod touch|iPhone|iPad);.*CPU.*OS[ +](\\d+)_(\\d+)(?:_(\\d+))?.*Mobile.*[ +]Safari'\n    family_replacement: 'Mobile Safari'\n  - regex: '(iPod|iPod touch|iPhone|iPad);.*CPU.*OS[ +](\\d+)_(\\d+)(?:_(\\d+))?.*Mobile'\n    family_replacement: 'Mobile Safari UI/WKWebView'\n  - regex: '(iPod|iPhone|iPad).* Safari'\n    family_replacement: 'Mobile Safari'\n  - regex: '(iPod|iPhone|iPad)'\n    family_replacement: 'Mobile Safari UI/WKWebView'\n\n  - regex: '(AvantGo) (\\d+).(\\d+)'\n\n  - regex: '(OneBrowser)/(\\d+).(\\d+)'\n    family_replacement: 'ONE Browser'\n\n  - regex: '(Avant)'\n    v1_replacement: '1'\n\n  # This is the Tesla Model S (see similar entry in device parsers)\n  - regex: '(QtCarBrowser)'\n    v1_replacement: '1'\n\n  - regex: '^(iBrowser/Mini)(\\d+).(\\d+)'\n    family_replacement: 'iBrowser Mini'\n  - regex: '^(iBrowser|iRAPP)/(\\d+).(\\d+)'\n\n  # nokia browsers\n  # based on: http://www.developer.nokia.com/Community/Wiki/User-Agent_headers_for_Nokia_devices\n  - regex: '^(Nokia)'\n    family_replacement: 'Nokia Services (WAP) Browser'\n  - regex: '(NokiaBrowser)/(\\d+)\\.(\\d+).(\\d+)\\.(\\d+)'\n    family_replacement: 'Nokia Browser'\n  - regex: '(NokiaBrowser)/(\\d+)\\.(\\d+).(\\d+)'\n    family_replacement: 'Nokia Browser'\n  - regex: '(NokiaBrowser)/(\\d+)\\.(\\d+)'\n    family_replacement: 'Nokia Browser'\n  - regex: '(BrowserNG)/(\\d+)\\.(\\d+).(\\d+)'\n    family_replacement: 'Nokia Browser'\n  - regex: '(Series60)/5\\.0'\n    family_replacement: 'Nokia Browser'\n    v1_replacement: '7'\n    v2_replacement: '0'\n  - regex: '(Series60)/(\\d+)\\.(\\d+)'\n    family_replacement: 'Nokia OSS Browser'\n  - regex: '(S40OviBrowser)/(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'Ovi Browser'\n  - regex: '(Nokia)[EN]?(\\d+)'\n\n  # BlackBerry devices\n  - regex: '(PlayBook).+RIM Tablet OS (\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'BlackBerry WebKit'\n  - regex: '(Black[bB]erry|BB10).+Version/(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'BlackBerry WebKit'\n  - regex: '(Black[bB]erry)\\s?(\\d+)'\n    family_replacement: 'BlackBerry'\n\n  - regex: '(OmniWeb)/v(\\d+)\\.(\\d+)'\n\n  - regex: '(Blazer)/(\\d+)\\.(\\d+)'\n    family_replacement: 'Palm Blazer'\n\n  - regex: '(Pre)/(\\d+)\\.(\\d+)'\n    family_replacement: 'Palm Pre'\n\n  # fork of Links\n  - regex: '(ELinks)/(\\d+)\\.(\\d+)'\n  - regex: '(ELinks) \\((\\d+)\\.(\\d+)'\n  - regex: '(Links) \\((\\d+)\\.(\\d+)'\n\n  - regex: '(QtWeb) Internet Browser/(\\d+)\\.(\\d+)'\n\n  #- regex: '\\(iPad;.+(Version)/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.*Safari/'\n  #  family_replacement: 'iPad'\n\n  # Phantomjs, should go before Safari\n  - regex: '(PhantomJS)/(\\d+)\\.(\\d+)\\.(\\d+)'\n\n  # WebKit Nightly\n  - regex: '(AppleWebKit)/(\\d+)\\.?(\\d+)?\\+ .* Safari'\n    family_replacement: 'WebKit Nightly'\n\n  # Safari\n  - regex: '(Version)/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.*Safari/'\n    family_replacement: 'Safari'\n  # Safari didn't provide \"Version/d.d.d\" prior to 3.0\n  - regex: '(Safari)/\\d+'\n\n  - regex: '(OLPC)/Update(\\d+)\\.(\\d+)'\n\n  - regex: '(OLPC)/Update()\\.(\\d+)'\n    v1_replacement: '0'\n\n  - regex: '(SEMC\\-Browser)/(\\d+)\\.(\\d+)'\n\n  - regex: '(Teleca)'\n    family_replacement: 'Teleca Browser'\n\n  - regex: '(Phantom)/V(\\d+)\\.(\\d+)'\n    family_replacement: 'Phantom Browser'\n\n  - regex: 'Trident(.*)rv.(\\d+)\\.(\\d+)'\n    family_replacement: 'IE'\n\n  # Espial\n  - regex: '(Espial)/(\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))?'\n\n # Apple Mail\n\n  # apple mail - not directly detectable, have it after Safari stuff\n  - regex: '(AppleWebKit)/(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'Apple Mail'\n\n  # AFTER THE EDGE CASES ABOVE!\n  # AFTER IE11\n  # BEFORE all other IE\n  - regex: '(Firefox)/(\\d+)\\.(\\d+)\\.(\\d+)'\n  - regex: '(Firefox)/(\\d+)\\.(\\d+)(pre|[ab]\\d+[a-z]*)?'\n\n  - regex: '([MS]?IE) (\\d+)\\.(\\d+)'\n    family_replacement: 'IE'\n\n  - regex: '(python-requests)/(\\d+)\\.(\\d+)'\n    family_replacement: 'Python Requests'\n\n  # headless user-agents\n  - regex: '\\b(Windows-Update-Agent|Microsoft-CryptoAPI|SophosUpdateManager|SophosAgent|Debian APT-HTTP|Ubuntu APT-HTTP|libcurl-agent|libwww-perl|urlgrabber|curl|Wget|OpenBSD ftp|jupdate)(?:[ /](\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?)?'\n\n  - regex: '(Java)[/ ]{0,1}\\d+\\.(\\d+)\\.(\\d+)[_-]*([a-zA-Z0-9]+)*'\n\n  # Roku Digital-Video-Players https://www.roku.com/\n  - regex: '^(Roku)/DVP-(\\d+)\\.(\\d+)'\n\n  # Kurio App News Reader https://kurio.co.id/\n  - regex: '(Kurio)\\/(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'Kurio App'\n\n\nos_parsers:\n  ##########\n  # HbbTV vendors\n  ##########\n\n  # starts with the easy one : Panasonic seems consistent across years, hope it will continue\n  #HbbTV/1.1.1 (;Panasonic;VIERA 2011;f.532;0071-0802 2000-0000;)\n  #HbbTV/1.1.1 (;Panasonic;VIERA 2012;1.261;0071-3103 2000-0000;)\n  #HbbTV/1.2.1 (;Panasonic;VIERA 2013;3.672;4101-0003 0002-0000;)\n  #- regex: 'HbbTV/\\d+\\.\\d+\\.\\d+ \\(;(Panasonic);VIERA ([0-9]{4});'\n\n  # Sony is consistent too but do not place year like the other\n  # Opera/9.80 (Linux armv7l; HbbTV/1.1.1 (; Sony; KDL32W650A; PKG3.211EUA; 2013;); ) Presto/2.12.362 Version/12.11\n  # Opera/9.80 (Linux mips; U;  HbbTV/1.1.1 (; Sony; KDL40HX751; PKG1.902EUA; 2012;);; en) Presto/2.10.250 Version/11.60\n  # Opera/9.80 (Linux mips; U;  HbbTV/1.1.1 (; Sony; KDL22EX320; PKG4.017EUA; 2011;);; en) Presto/2.7.61 Version/11.00\n  #- regex: 'HbbTV/\\d+\\.\\d+\\.\\d+ \\(; (Sony);.*;.*; ([0-9]{4});\\)'\n\n\n  # LG is consistent too, but we need to add manually the year model\n  #Mozilla/5.0 (Unknown; Linux armv7l) AppleWebKit/537.1+ (KHTML, like Gecko) Safari/537.1+ HbbTV/1.1.1 ( ;LGE ;NetCast 4.0 ;03.20.30 ;1.0M ;)\n  #Mozilla/5.0 (DirectFB; Linux armv7l) AppleWebKit/534.26+ (KHTML, like Gecko) Version/5.0 Safari/534.26+ HbbTV/1.1.1 ( ;LGE ;NetCast 3.0 ;1.0 ;1.0M ;)\n  - regex: 'HbbTV/\\d+\\.\\d+\\.\\d+ \\( ;(LG)E ;NetCast 4.0'\n    os_v1_replacement: '2013'\n  - regex: 'HbbTV/\\d+\\.\\d+\\.\\d+ \\( ;(LG)E ;NetCast 3.0'\n    os_v1_replacement: '2012'\n\n  # Samsung is on its way of normalizing their user-agent\n  # HbbTV/1.1.1 (;Samsung;SmartTV2013;T-FXPDEUC-1102.2;;) WebKit\n  # HbbTV/1.1.1 (;Samsung;SmartTV2013;T-MST12DEUC-1102.1;;) WebKit\n  # HbbTV/1.1.1 (;Samsung;SmartTV2012;;;) WebKit\n  # HbbTV/1.1.1 (;;;;;) Maple_2011\n  - regex: 'HbbTV/1.1.1 \\(;;;;;\\) Maple_2011'\n    os_replacement: 'Samsung'\n    os_v1_replacement: '2011'\n  # manage the two models of 2013\n  - regex: 'HbbTV/\\d+\\.\\d+\\.\\d+ \\(;(Samsung);SmartTV([0-9]{4});.*FXPDEUC'\n    os_v2_replacement: 'UE40F7000'\n  - regex: 'HbbTV/\\d+\\.\\d+\\.\\d+ \\(;(Samsung);SmartTV([0-9]{4});.*MST12DEUC'\n    os_v2_replacement: 'UE32F4500'\n  # generic Samsung (works starting in 2012)\n  #- regex: 'HbbTV/\\d+\\.\\d+\\.\\d+ \\(;(Samsung);SmartTV([0-9]{4});'\n\n  # Philips : not found any other way than a manual mapping\n  # Opera/9.80 (Linux mips; U; HbbTV/1.1.1 (; Philips; ; ; ; ) CE-HTML/1.0 NETTV/4.1.3 PHILIPSTV/1.1.1; en) Presto/2.10.250 Version/11.60\n  # Opera/9.80 (Linux mips ; U; HbbTV/1.1.1 (; Philips; ; ; ; ) CE-HTML/1.0 NETTV/3.2.1; en) Presto/2.6.33 Version/10.70\n  - regex: 'HbbTV/1.1.1 \\(; (Philips);.*NETTV/4'\n    os_v1_replacement: '2013'\n  - regex: 'HbbTV/1.1.1 \\(; (Philips);.*NETTV/3'\n    os_v1_replacement: '2012'\n  - regex: 'HbbTV/1.1.1 \\(; (Philips);.*NETTV/2'\n    os_v1_replacement: '2011'\n\n  # the HbbTV emulator developers use HbbTV/1.1.1 (;;;;;) firetv-firefox-plugin 1.1.20\n  - regex: 'HbbTV/\\d+\\.\\d+\\.\\d+.*(firetv)-firefox-plugin (\\d+).(\\d+).(\\d+)'\n    os_replacement: 'FireHbbTV'\n\n  # generic HbbTV, hoping to catch manufacturer name (always after 2nd comma) and the first string that looks like a 2011-2019 year\n  - regex: 'HbbTV/\\d+\\.\\d+\\.\\d+ \\(.*; ?([a-zA-Z]+) ?;.*(201[1-9]).*\\)'\n\n  ##########\n  # @note: Windows Phone needs to come before Windows NT 6.1 *and* before Android to catch cases such as:\n  # Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 920)...\n  # Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 920; ANZ821)...\n  # Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 920; Orange)...\n  # Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 920; Vodafone)...\n  ##########\n\n  - regex: '(Windows Phone) (?:OS[ /])?(\\d+)\\.(\\d+)'\n\n  # Again a MS-special one: iPhone.*Outlook-iOS-Android/x.x is erroneously detected as Android\n  - regex: '(CPU[ +]OS|iPhone[ +]OS|CPU[ +]iPhone)[ +]+(\\d+)[_\\.](\\d+)(?:[_\\.](\\d+))?.*Outlook-iOS-Android'\n    os_replacement: 'iOS'\n\n  ##########\n  # Android\n  # can actually detect rooted android os. do we care?\n  ##########\n  - regex: '(Android)[ \\-/](\\d+)\\.(\\d+)(?:[.\\-]([a-z0-9]+))?'\n\n  - regex: '(Android) Donut'\n    os_v1_replacement: '1'\n    os_v2_replacement: '2'\n\n  - regex: '(Android) Eclair'\n    os_v1_replacement: '2'\n    os_v2_replacement: '1'\n\n  - regex: '(Android) Froyo'\n    os_v1_replacement: '2'\n    os_v2_replacement: '2'\n\n  - regex: '(Android) Gingerbread'\n    os_v1_replacement: '2'\n    os_v2_replacement: '3'\n\n  - regex: '(Android) Honeycomb'\n    os_v1_replacement: '3'\n\n  # UCWEB\n  - regex: '^UCWEB.*; (Adr) (\\d+)\\.(\\d+)(?:[.\\-]([a-z0-9]+))?;'\n    os_replacement: 'Android'\n  - regex: '^UCWEB.*; (iPad|iPh|iPd) OS (\\d+)_(\\d+)(?:_(\\d+))?;'\n    os_replacement: 'iOS'\n  - regex: '^UCWEB.*; (wds) (\\d+)\\.(\\d+)(?:\\.(\\d+))?;'\n    os_replacement: 'Windows Phone'\n  # JUC\n  - regex: '^(JUC).*; ?U; ?(?:Android)?(\\d+)\\.(\\d+)(?:[\\.\\-]([a-z0-9]+))?'\n    os_replacement: 'Android'\n\n  ##########\n  # Kindle Android\n  ##########\n  - regex: '(Silk-Accelerated=[a-z]{4,5})'\n    os_replacement: 'Android'\n\n  ##########\n  # Windows\n  # http://en.wikipedia.org/wiki/Windows_NT#Releases\n  # possibility of false positive when different marketing names share same NT kernel\n  # e.g. windows server 2003 and windows xp\n  # lots of ua strings have Windows NT 4.1 !?!?!?!? !?!? !? !????!?! !!! ??? !?!?! ?\n  # (very) roughly ordered in terms of frequency of occurence of regex (win xp currently most frequent, etc)\n  ##########\n\n  # ie mobile desktop mode\n  # spoofs nt 6.1. must come before windows 7\n  - regex: '(XBLWP7)'\n    os_replacement: 'Windows Phone'\n\n  # @note: This needs to come before Windows NT 6.1\n  - regex: '(Windows ?Mobile)'\n    os_replacement: 'Windows Mobile'\n\n  - regex: '(Windows (?:NT 5\\.2|NT 5\\.1))'\n    os_replacement: 'Windows XP'\n\n  - regex: '(Windows NT 6\\.1)'\n    os_replacement: 'Windows 7'\n\n  - regex: '(Windows NT 6\\.0)'\n    os_replacement: 'Windows Vista'\n\n  - regex: '(Win 9x 4\\.90)'\n    os_replacement: 'Windows ME'\n\n  - regex: '(Windows 98|Windows XP|Windows ME|Windows 95|Windows CE|Windows 7|Windows NT 4\\.0|Windows Vista|Windows 2000|Windows 3.1)'\n\n  - regex: '(Windows NT 6\\.2; ARM;)'\n    os_replacement: 'Windows RT'\n  - regex: '(Windows NT 6\\.2)'\n    os_replacement: 'Windows 8'\n\n  - regex: '(Windows NT 6\\.3; ARM;)'\n    os_replacement: 'Windows RT 8.1'\n  - regex: '(Windows NT 6\\.3)'\n    os_replacement: 'Windows 8.1'\n\n  - regex: '(Windows NT 6\\.4)'\n    os_replacement: 'Windows 10'\n  - regex: '(Windows NT 10\\.0)'\n    os_replacement: 'Windows 10'\n\n  - regex: '(Windows NT 5\\.0)'\n    os_replacement: 'Windows 2000'\n\n  - regex: '(WinNT4.0)'\n    os_replacement: 'Windows NT 4.0'\n\n  - regex: '(Windows ?CE)'\n    os_replacement: 'Windows CE'\n\n  - regex: 'Win ?(95|98|3.1|NT|ME|2000)'\n    os_replacement: 'Windows $1'\n\n  - regex: 'Win16'\n    os_replacement: 'Windows 3.1'\n\n  - regex: 'Win32'\n    os_replacement: 'Windows 95'\n\n  ##########\n  # Tizen OS from Samsung\n  # spoofs Android so pushing it above\n  ##########\n  - regex: '(Tizen)[/ ](\\d+)\\.(\\d+)'\n\n  ##########\n  # Mac OS\n  # @ref: http://en.wikipedia.org/wiki/Mac_OS_X#Versions\n  # @ref: http://www.puredarwin.org/curious/versions\n  ##########\n  - regex: '((?:Mac[ +]?|; )OS[ +]X)[\\s+/](?:(\\d+)[_.](\\d+)(?:[_.](\\d+))?|Mach-O)'\n    os_replacement: 'Mac OS X'\n  # Leopard\n  - regex: ' (Dar)(win)/(9).(\\d+).*\\((?:i386|x86_64|Power Macintosh)\\)'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '5'\n  # Snow Leopard\n  - regex: ' (Dar)(win)/(10).(\\d+).*\\((?:i386|x86_64)\\)'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '6'\n  # Lion\n  - regex: ' (Dar)(win)/(11).(\\d+).*\\((?:i386|x86_64)\\)'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '7'\n  # Mountain Lion\n  - regex: ' (Dar)(win)/(12).(\\d+).*\\((?:i386|x86_64)\\)'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '8'\n  # Mavericks\n  - regex: ' (Dar)(win)/(13).(\\d+).*\\((?:i386|x86_64)\\)'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '9'\n  # Yosemite is Darwin/14.x but patch versions are inconsistent in the Darwin string;\n  # more accurately covered by CFNetwork regexes downstream\n\n  # IE on Mac doesn't specify version number\n  - regex: 'Mac_PowerPC'\n    os_replacement: 'Mac OS'\n\n  # builds before tiger don't seem to specify version?\n\n  # ios devices spoof (mac os x), so including intel/ppc prefixes\n  - regex: '(?:PPC|Intel) (Mac OS X)'\n\n  ##########\n  # iOS\n  # http://en.wikipedia.org/wiki/IOS_version_history\n  ##########\n  # keep this above generic iOS, since AppleTV UAs contain 'CPU OS'\n  - regex: '(Apple\\s?TV)(?:/(\\d+)\\.(\\d+))?'\n    os_replacement: 'ATV OS X'\n\n  - regex: '(CPU[ +]OS|iPhone[ +]OS|CPU[ +]iPhone|CPU IPhone OS)[ +]+(\\d+)[_\\.](\\d+)(?:[_\\.](\\d+))?'\n    os_replacement: 'iOS'\n\n  # remaining cases are mostly only opera uas, so catch opera as to not catch iphone spoofs\n  - regex: '(iPhone|iPad|iPod); Opera'\n    os_replacement: 'iOS'\n\n  # few more stragglers\n  - regex: '(iPhone|iPad|iPod).*Mac OS X.*Version/(\\d+)\\.(\\d+)'\n    os_replacement: 'iOS'\n\n  # CFNetwork/Darwin - The specific CFNetwork or Darwin version determines\n  # whether the os maps to Mac OS, or iOS, or just Darwin.\n  # See: http://user-agents.me/cfnetwork-version-list\n  - regex: '(CFNetwork)/(5)48\\.0\\.3.* Darwin/11\\.0\\.0'\n    os_replacement: 'iOS'\n  - regex: '(CFNetwork)/(5)48\\.(0)\\.4.* Darwin/(1)1\\.0\\.0'\n    os_replacement: 'iOS'\n  - regex: '(CFNetwork)/(5)48\\.(1)\\.4'\n    os_replacement: 'iOS'\n  - regex: '(CFNetwork)/(4)85\\.1(3)\\.9'\n    os_replacement: 'iOS'\n  - regex: '(CFNetwork)/(6)09\\.(1)\\.4'\n    os_replacement: 'iOS'\n  - regex: '(CFNetwork)/(6)(0)9'\n    os_replacement: 'iOS'\n  - regex: '(CFNetwork)/6(7)2\\.(1)\\.13'\n    os_replacement: 'iOS'\n  - regex: '(CFNetwork)/6(7)2\\.(1)\\.(1)4'\n    os_replacement: 'iOS'\n  - regex: '(CF)(Network)/6(7)(2)\\.1\\.15'\n    os_replacement: 'iOS'\n    os_v1_replacement: '7'\n    os_v2_replacement: '1'\n  - regex: '(CFNetwork)/6(7)2\\.(0)\\.(?:2|8)'\n    os_replacement: 'iOS'\n  - regex: '(CFNetwork)/709\\.1'\n    os_replacement: 'iOS'\n    os_v1_replacement: '8'\n    os_v2_replacement: '0.b5'\n  - regex: '(CF)(Network)/711\\.(\\d)'\n    os_replacement: 'iOS'\n    os_v1_replacement: '8'\n  - regex: '(CF)(Network)/(720)\\.(\\d)'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '10'\n  - regex: '(CF)(Network)/(760)\\.(\\d)'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '11'\n  - regex: '(CF)(Network)/758\\.(\\d)'\n    os_replacement: 'iOS'\n    os_v1_replacement: '9'\n  - regex: '(CF)(Network)/808\\.(\\d)'\n    os_replacement: 'iOS'\n    os_v1_replacement: '10'\n\n  ##########\n  # CFNetwork macOS Apps (must be before CFNetwork iOS Apps\n  # @ref: https://en.wikipedia.org/wiki/Darwin_(operating_system)#Release_history\n  ##########\n  - regex: 'CFNetwork/.* Darwin/16\\.\\d+.*\\(x86_64\\)'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '12'\n  - regex: 'CFNetwork/8.* Darwin/15\\.\\d+.*\\(x86_64\\)'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '11'\n  ##########\n  # CFNetwork iOS Apps\n  # @ref: https://en.wikipedia.org/wiki/Darwin_(operating_system)#Release_history\n  ##########\n  - regex: 'CFNetwork/.* Darwin/(9)\\.\\d+'\n    os_replacement: 'iOS'\n    os_v1_replacement: '1'\n  - regex: 'CFNetwork/.* Darwin/(10)\\.\\d+'\n    os_replacement: 'iOS'\n    os_v1_replacement: '4'\n  - regex: 'CFNetwork/.* Darwin/(11)\\.\\d+'\n    os_replacement: 'iOS'\n    os_v1_replacement: '5'\n  - regex: 'CFNetwork/.* Darwin/(13)\\.\\d+'\n    os_replacement: 'iOS'\n    os_v1_replacement: '6'\n  - regex: 'CFNetwork/6.* Darwin/(14)\\.\\d+'\n    os_replacement: 'iOS'\n    os_v1_replacement: '7'\n  - regex: 'CFNetwork/7.* Darwin/(14)\\.\\d+'\n    os_replacement: 'iOS'\n    os_v1_replacement: '8'\n    os_v2_replacement: '0'\n  - regex: 'CFNetwork/7.* Darwin/(15)\\.\\d+'\n    os_replacement: 'iOS'\n    os_v1_replacement: '9'\n    os_v2_replacement: '0'\n  - regex: 'CFNetwork/8.* Darwin/(16)\\.\\d+'\n    os_replacement: 'iOS'\n    os_v1_replacement: '10'\n  # iOS Apps\n  - regex: '\\b(iOS[ /]|iOS; |iPhone(?:/| v|[ _]OS[/,]|; | OS : |\\d,\\d/|\\d,\\d; )|iPad/)(\\d{1,2})[_\\.](\\d{1,2})(?:[_\\.](\\d+))?'\n    os_replacement: 'iOS'\n  - regex: '\\((iOS);'\n\n  ##########\n  # Apple TV\n  ##########\n  - regex: '(tvOS)/(\\d+).(\\d+)'\n    os_replacement: 'tvOS'\n\n  ##########\n  # Chrome OS\n  # if version 0.0.0, probably this stuff:\n  # http://code.google.com/p/chromium-os/issues/detail?id=11573\n  # http://code.google.com/p/chromium-os/issues/detail?id=13790\n  ##########\n  - regex: '(CrOS) [a-z0-9_]+ (\\d+)\\.(\\d+)(?:\\.(\\d+))?'\n    os_replacement: 'Chrome OS'\n\n  ##########\n  # Linux distros\n  ##########\n  - regex: '([Dd]ebian)'\n    os_replacement: 'Debian'\n  - regex: '(Linux Mint)(?:/(\\d+))?'\n  - regex: '(Mandriva)(?: Linux)?/(?:[\\d.-]+m[a-z]{2}(\\d+).(\\d))?'\n\n  ##########\n  # Symbian + Symbian OS\n  # http://en.wikipedia.org/wiki/History_of_Symbian\n  ##########\n  - regex: '(Symbian[Oo][Ss])[/ ](\\d+)\\.(\\d+)'\n    os_replacement: 'Symbian OS'\n  - regex: '(Symbian/3).+NokiaBrowser/7\\.3'\n    os_replacement: 'Symbian^3 Anna'\n  - regex: '(Symbian/3).+NokiaBrowser/7\\.4'\n    os_replacement: 'Symbian^3 Belle'\n  - regex: '(Symbian/3)'\n    os_replacement: 'Symbian^3'\n  - regex: '\\b(Series 60|SymbOS|S60Version|S60V\\d|S60\\b)'\n    os_replacement: 'Symbian OS'\n  - regex: '(MeeGo)'\n  - regex: 'Symbian [Oo][Ss]'\n    os_replacement: 'Symbian OS'\n  - regex: 'Series40;'\n    os_replacement: 'Nokia Series 40'\n  - regex: 'Series30Plus;'\n    os_replacement: 'Nokia Series 30 Plus'\n\n  ##########\n  # BlackBerry devices\n  ##########\n  - regex: '(BB10);.+Version/(\\d+)\\.(\\d+)\\.(\\d+)'\n    os_replacement: 'BlackBerry OS'\n  - regex: '(Black[Bb]erry)[0-9a-z]+/(\\d+)\\.(\\d+)\\.(\\d+)(?:\\.(\\d+))?'\n    os_replacement: 'BlackBerry OS'\n  - regex: '(Black[Bb]erry).+Version/(\\d+)\\.(\\d+)\\.(\\d+)(?:\\.(\\d+))?'\n    os_replacement: 'BlackBerry OS'\n  - regex: '(RIM Tablet OS) (\\d+)\\.(\\d+)\\.(\\d+)'\n    os_replacement: 'BlackBerry Tablet OS'\n  - regex: '(Play[Bb]ook)'\n    os_replacement: 'BlackBerry Tablet OS'\n  - regex: '(Black[Bb]erry)'\n    os_replacement: 'BlackBerry OS'\n\n  ##########\n  # Firefox OS\n  ##########\n  - regex: '\\((?:Mobile|Tablet);.+Gecko/18.0 Firefox/\\d+\\.\\d+'\n    os_replacement: 'Firefox OS'\n    os_v1_replacement: '1'\n    os_v2_replacement: '0'\n    os_v3_replacement: '1'\n\n  - regex: '\\((?:Mobile|Tablet);.+Gecko/18.1 Firefox/\\d+\\.\\d+'\n    os_replacement: 'Firefox OS'\n    os_v1_replacement: '1'\n    os_v2_replacement: '1'\n\n  - regex: '\\((?:Mobile|Tablet);.+Gecko/26.0 Firefox/\\d+\\.\\d+'\n    os_replacement: 'Firefox OS'\n    os_v1_replacement: '1'\n    os_v2_replacement: '2'\n\n  - regex: '\\((?:Mobile|Tablet);.+Gecko/28.0 Firefox/\\d+\\.\\d+'\n    os_replacement: 'Firefox OS'\n    os_v1_replacement: '1'\n    os_v2_replacement: '3'\n\n  - regex: '\\((?:Mobile|Tablet);.+Gecko/30.0 Firefox/\\d+\\.\\d+'\n    os_replacement: 'Firefox OS'\n    os_v1_replacement: '1'\n    os_v2_replacement: '4'\n\n  - regex: '\\((?:Mobile|Tablet);.+Gecko/32.0 Firefox/\\d+\\.\\d+'\n    os_replacement: 'Firefox OS'\n    os_v1_replacement: '2'\n    os_v2_replacement: '0'\n\n  - regex: '\\((?:Mobile|Tablet);.+Gecko/34.0 Firefox/\\d+\\.\\d+'\n    os_replacement: 'Firefox OS'\n    os_v1_replacement: '2'\n    os_v2_replacement: '1'\n\n  # Firefox OS Generic\n  - regex: '\\((?:Mobile|Tablet);.+Firefox/\\d+\\.\\d+'\n    os_replacement: 'Firefox OS'\n\n\n  ##########\n  # BREW\n  # yes, Brew is lower-cased for Brew MP\n  ##########\n  - regex: '(BREW)[ /](\\d+)\\.(\\d+)\\.(\\d+)'\n  - regex: '(BREW);'\n  - regex: '(Brew MP|BMP)[ /](\\d+)\\.(\\d+)\\.(\\d+)'\n    os_replacement: 'Brew MP'\n  - regex: 'BMP;'\n    os_replacement: 'Brew MP'\n\n  ##########\n  # Google TV\n  ##########\n  - regex: '(GoogleTV)(?: (\\d+)\\.(\\d+)(?:\\.(\\d+))?|/[\\da-z]+)'\n\n  - regex: '(WebTV)/(\\d+).(\\d+)'\n\n  ##########\n  # Chromecast\n  ##########\n  - regex: '(CrKey)(?:[/](\\d+)\\.(\\d+)(?:\\.(\\d+))?)?'\n    os_replacement: 'Chromecast'\n\n  ##########\n  # Misc mobile\n  ##########\n  - regex: '(hpw|web)OS/(\\d+)\\.(\\d+)(?:\\.(\\d+))?'\n    os_replacement: 'webOS'\n  - regex: '(VRE);'\n\n  ##########\n  # Generic patterns\n  # since the majority of os cases are very specific, these go last\n  ##########\n  - regex: '(Fedora|Red Hat|PCLinuxOS|Puppy|Ubuntu|Kindle|Bada|Lubuntu|BackTrack|Slackware|(?:Free|Open|Net|\\b)BSD)[/ ](\\d+)\\.(\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?'\n\n  # Gentoo Linux + Kernel Version\n  - regex: '(Linux)[ /](\\d+)\\.(\\d+)(?:\\.(\\d+))?.*gentoo'\n    os_replacement: 'Gentoo'\n\n  # Opera Mini Bada\n  - regex: '\\((Bada);'\n\n  # just os\n  - regex: '(Windows|Android|WeTab|Maemo|Web0S)'\n  - regex: '(Ubuntu|Kubuntu|Arch Linux|CentOS|Slackware|Gentoo|openSUSE|SUSE|Red Hat|Fedora|PCLinuxOS|Mageia|(?:Free|Open|Net|\\b)BSD)'\n  # Linux + Kernel Version\n  - regex: '(Linux)(?:[ /](\\d+)\\.(\\d+)(?:\\.(\\d+))?)?'\n  - regex: 'SunOS'\n    os_replacement: 'Solaris'\n\n  # Roku Digital-Video-Players https://www.roku.com/\n  - regex: '^(Roku)/DVP-(\\d+)\\.(\\d+)'\n\ndevice_parsers:\n\n  #########\n  # Mobile Spiders\n  # Catch the mobile crawler before checking for iPhones / Androids.\n  #########\n  - regex: '(?:(?:iPhone|Windows CE|Windows Phone|Android).*(?:(?:Bot|Yeti)-Mobile|YRSpider|BingPreview|bots?/\\d|(?:bot|spider)\\.html)|AdsBot-Google-Mobile.*iPhone)'\n    regex_flag: 'i'\n    device_replacement: 'Spider'\n    brand_replacement: 'Spider'\n    model_replacement: 'Smartphone'\n  - regex: '(?:DoCoMo|\\bMOT\\b|\\bLG\\b|Nokia|Samsung|SonyEricsson).*(?:(?:Bot|Yeti)-Mobile|bots?/\\d|(?:bot|crawler)\\.html|(?:jump|google|Wukong)bot|ichiro/mobile|/spider|YahooSeeker)'\n    regex_flag: 'i'\n    device_replacement: 'Spider'\n    brand_replacement: 'Spider'\n    model_replacement: 'Feature Phone'\n\n  #########\n  # WebBrowser for SmartWatch\n  # @ref: https://play.google.com/store/apps/details?id=se.vaggan.webbrowser&hl=en\n  #########\n  - regex: '\\bSmartWatch *\\( *([^;]+) *; *([^;]+) *;'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  ######################################################################\n  # Android parsers\n  #\n  # @ref: https://support.google.com/googleplay/answer/1727131?hl=en\n  ######################################################################\n\n  # Android Application\n  - regex: 'Android Application[^\\-]+ - (Sony) ?(Ericsson)? (.+) \\w+ - '\n    device_replacement: '$1 $2'\n    brand_replacement: '$1$2'\n    model_replacement: '$3'\n  - regex: 'Android Application[^\\-]+ - (?:HTC|HUAWEI|LGE|LENOVO|MEDION|TCT) (HTC|HUAWEI|LG|LENOVO|MEDION|ALCATEL)[ _\\-](.+) \\w+ - '\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  - regex: 'Android Application[^\\-]+ - ([^ ]+) (.+) \\w+ - '\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  #########\n  # 3Q\n  # @ref: http://www.3q-int.com/\n  #########\n  - regex: '; *([BLRQ]C\\d{4}[A-Z]+) +Build/'\n    device_replacement: '3Q $1'\n    brand_replacement: '3Q'\n    model_replacement: '$1'\n  - regex: '; *(?:3Q_)([^;/]+) +Build'\n    device_replacement: '3Q $1'\n    brand_replacement: '3Q'\n    model_replacement: '$1'\n\n  #########\n  # Acer\n  # @ref: http://us.acer.com/ac/en/US/content/group/tablets\n  #########\n  - regex: 'Android [34].*; *(A100|A101|A110|A200|A210|A211|A500|A501|A510|A511|A700(?: Lite| 3G)?|A701|B1-A71|A1-\\d{3}|B1-\\d{3}|V360|V370|W500|W500P|W501|W501P|W510|W511|W700|Slider SL101|DA22[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Acer'\n    model_replacement: '$1'\n  - regex: '; *Acer Iconia Tab ([^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Acer'\n    model_replacement: '$1'\n  - regex: '; *(Z1[1235]0|E320[^/]*|S500|S510|Liquid[^;/]*|Iconia A\\d+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Acer'\n    model_replacement: '$1'\n  - regex: '; *(Acer |ACER )([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Acer'\n    model_replacement: '$2'\n\n  #########\n  # Advent\n  # @ref: https://en.wikipedia.org/wiki/Advent_Vega\n  # @note: VegaBean and VegaComb (names derived from jellybean, honeycomb) are\n  #   custom ROM builds for Vega\n  #########\n  - regex: '; *(Advent )?(Vega(?:Bean|Comb)?).* Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Advent'\n    model_replacement: '$2'\n\n  #########\n  # Ainol\n  # @ref: http://www.ainol.com/plugin.php?identifier=ainol&module=product\n  #########\n  - regex: '; *(Ainol )?((?:NOVO|[Nn]ovo)[^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Ainol'\n    model_replacement: '$2'\n\n  #########\n  # Airis\n  # @ref: http://airis.es/Tienda/Default.aspx?idG=001\n  #########\n  - regex: '; *AIRIS[ _\\-]?([^/;\\)]+) *(?:;|\\)|Build)'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Airis'\n    model_replacement: '$1'\n  - regex: '; *(OnePAD[^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Airis'\n    model_replacement: '$1'\n\n  #########\n  # Airpad\n  # @ref: ??\n  #########\n  - regex: '; *Airpad[ \\-]([^;/]+) Build'\n    device_replacement: 'Airpad $1'\n    brand_replacement: 'Airpad'\n    model_replacement: '$1'\n\n  #########\n  # Alcatel - TCT\n  # @ref: http://www.alcatelonetouch.com/global-en/products/smartphones.html\n  #########\n  - regex: '; *(one ?touch) (EVO7|T10|T20) Build'\n    device_replacement: 'Alcatel One Touch $2'\n    brand_replacement: 'Alcatel'\n    model_replacement: 'One Touch $2'\n  - regex: '; *(?:alcatel[ _])?(?:(?:one[ _]?touch[ _])|ot[ \\-])([^;/]+);? Build'\n    regex_flag: 'i'\n    device_replacement: 'Alcatel One Touch $1'\n    brand_replacement: 'Alcatel'\n    model_replacement: 'One Touch $1'\n  - regex: '; *(TCL)[ _]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  # operator specific models\n  - regex: '; *(Vodafone Smart II|Optimus_Madrid) Build'\n    device_replacement: 'Alcatel $1'\n    brand_replacement: 'Alcatel'\n    model_replacement: '$1'\n  - regex: '; *BASE_Lutea_3 Build'\n    device_replacement: 'Alcatel One Touch 998'\n    brand_replacement: 'Alcatel'\n    model_replacement: 'One Touch 998'\n  - regex: '; *BASE_Varia Build'\n    device_replacement: 'Alcatel One Touch 918D'\n    brand_replacement: 'Alcatel'\n    model_replacement: 'One Touch 918D'\n\n  #########\n  # Allfine\n  # @ref: http://www.myallfine.com/Products.asp\n  #########\n  - regex: '; *((?:FINE|Fine)\\d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Allfine'\n    model_replacement: '$1'\n\n  #########\n  # Allview\n  # @ref: http://www.allview.ro/produse/droseries/lista-tablete-pc/\n  #########\n  - regex: '; *(ALLVIEW[ _]?|Allview[ _]?)((?:Speed|SPEED).*) Build/'\n    device_replacement: '$1$2'\n    brand_replacement: 'Allview'\n    model_replacement: '$2'\n  - regex: '; *(ALLVIEW[ _]?|Allview[ _]?)?(AX1_Shine|AX2_Frenzy) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Allview'\n    model_replacement: '$2'\n  - regex: '; *(ALLVIEW[ _]?|Allview[ _]?)([^;/]*) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Allview'\n    model_replacement: '$2'\n\n  #########\n  # Allwinner\n  # @ref: http://www.allwinner.com/\n  # @models: A31 (13.3\"),A20,A10,\n  #########\n  - regex: '; *(A13-MID) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Allwinner'\n    model_replacement: '$1'\n  - regex: '; *(Allwinner)[ _\\-]?([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Allwinner'\n    model_replacement: '$1'\n\n  #########\n  # Amaway\n  # @ref: http://www.amaway.cn/\n  #########\n  - regex: '; *(A651|A701B?|A702|A703|A705|A706|A707|A711|A712|A713|A717|A722|A785|A801|A802|A803|A901|A902|A1002|A1003|A1006|A1007|A9701|A9703|Q710|Q80) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Amaway'\n    model_replacement: '$1'\n\n  #########\n  # Amoi\n  # @ref: http://www.amoi.com/en/prd/prd_index.jspx\n  #########\n  - regex: '; *(?:AMOI|Amoi)[ _]([^;/]+) Build'\n    device_replacement: 'Amoi $1'\n    brand_replacement: 'Amoi'\n    model_replacement: '$1'\n  - regex: '^(?:AMOI|Amoi)[ _]([^;/]+) Linux'\n    device_replacement: 'Amoi $1'\n    brand_replacement: 'Amoi'\n    model_replacement: '$1'\n\n  #########\n  # Aoc\n  # @ref: http://latin.aoc.com/media_tablet\n  #########\n  - regex: '; *(MW(?:0[789]|10)[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Aoc'\n    model_replacement: '$1'\n\n  #########\n  # Aoson\n  # @ref: http://www.luckystar.com.cn/en/mid.aspx?page=1\n  # @ref: http://www.luckystar.com.cn/en/mobiletel.aspx?page=1\n  # @note: brand owned by luckystar\n  #########\n  - regex: '; *(G7|M1013|M1015G|M11[CG]?|M-?12[B]?|M15|M19[G]?|M30[ACQ]?|M31[GQ]|M32|M33[GQ]|M36|M37|M38|M701T|M710|M712B|M713|M715G|M716G|M71(?:G|GS|T)?|M72[T]?|M73[T]?|M75[GT]?|M77G|M79T|M7L|M7LN|M81|M810|M81T|M82|M92|M92KS|M92S|M717G|M721|M722G|M723|M725G|M739|M785|M791|M92SK|M93D) Build'\n    device_replacement: 'Aoson $1'\n    brand_replacement: 'Aoson'\n    model_replacement: '$1'\n  - regex: '; *Aoson ([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: 'Aoson $1'\n    brand_replacement: 'Aoson'\n    model_replacement: '$1'\n\n  #########\n  # Apanda\n  # @ref: http://www.apanda.com.cn/\n  #########\n  - regex: '; *[Aa]panda[ _\\-]([^;/]+) Build'\n    device_replacement: 'Apanda $1'\n    brand_replacement: 'Apanda'\n    model_replacement: '$1'\n\n  #########\n  # Archos\n  # @ref: http://www.archos.com/de/products/tablets.html\n  # @ref: http://www.archos.com/de/products/smartphones/index.html\n  #########\n  - regex: '; *(?:ARCHOS|Archos) ?(GAMEPAD.*?)(?: Build|[;/\\(\\)\\-])'\n    device_replacement: 'Archos $1'\n    brand_replacement: 'Archos'\n    model_replacement: '$1'\n  - regex: 'ARCHOS; GOGI; ([^;]+);'\n    device_replacement: 'Archos $1'\n    brand_replacement: 'Archos'\n    model_replacement: '$1'\n  - regex: '(?:ARCHOS|Archos)[ _]?(.*?)(?: Build|[;/\\(\\)\\-]|$)'\n    device_replacement: 'Archos $1'\n    brand_replacement: 'Archos'\n    model_replacement: '$1'\n  - regex: '; *(AN(?:7|8|9|10|13)[A-Z0-9]{1,4}) Build'\n    device_replacement: 'Archos $1'\n    brand_replacement: 'Archos'\n    model_replacement: '$1'\n  - regex: '; *(A28|A32|A43|A70(?:BHT|CHT|HB|S|X)|A101(?:B|C|IT)|A7EB|A7EB-WK|101G9|80G9) Build'\n    device_replacement: 'Archos $1'\n    brand_replacement: 'Archos'\n    model_replacement: '$1'\n\n  #########\n  # A-rival\n  # @ref: http://www.a-rival.de/de/\n  #########\n  - regex: '; *(PAD-FMD[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Arival'\n    model_replacement: '$1'\n  - regex: '; *(BioniQ) ?([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Arival'\n    model_replacement: '$1 $2'\n\n  #########\n  # Arnova\n  # @ref: http://arnovatech.com/\n  #########\n  - regex: '; *(AN\\d[^;/]+|ARCHM\\d+) Build'\n    device_replacement: 'Arnova $1'\n    brand_replacement: 'Arnova'\n    model_replacement: '$1'\n  - regex: '; *(?:ARNOVA|Arnova) ?([^;/]+) Build'\n    device_replacement: 'Arnova $1'\n    brand_replacement: 'Arnova'\n    model_replacement: '$1'\n\n  #########\n  # Assistant\n  # @ref: http://www.assistant.ua\n  #########\n  - regex: '; *(?:ASSISTANT )?(AP)-?([1789]\\d{2}[A-Z]{0,2}|80104) Build'\n    device_replacement: 'Assistant $1-$2'\n    brand_replacement: 'Assistant'\n    model_replacement: '$1-$2'\n\n  #########\n  # Asus\n  # @ref: http://www.asus.com/uk/Tablets_Mobile/\n  #########\n  - regex: '; *(ME17\\d[^;/]*|ME3\\d{2}[^;/]+|K00[A-Z]|Nexus 10|Nexus 7(?: 2013)?|PadFone[^;/]*|Transformer[^;/]*|TF\\d{3}[^;/]*|eeepc) Build'\n    device_replacement: 'Asus $1'\n    brand_replacement: 'Asus'\n    model_replacement: '$1'\n  - regex: '; *ASUS[ _]*([^;/]+) Build'\n    device_replacement: 'Asus $1'\n    brand_replacement: 'Asus'\n    model_replacement: '$1'\n\n  #########\n  # Garmin-Asus\n  #########\n  - regex: '; *Garmin-Asus ([^;/]+) Build'\n    device_replacement: 'Garmin-Asus $1'\n    brand_replacement: 'Garmin-Asus'\n    model_replacement: '$1'\n  - regex: '; *(Garminfone) Build'\n    device_replacement: 'Garmin $1'\n    brand_replacement: 'Garmin-Asus'\n    model_replacement: '$1'\n\n  #########\n  # Attab\n  # @ref: http://www.theattab.com/\n  #########\n  - regex: '; (@TAB-[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Attab'\n    model_replacement: '$1'\n\n  #########\n  # Audiosonic\n  # @ref: ??\n  # @note: Take care with Docomo T-01 Toshiba\n  #########\n  - regex: '; *(T-(?:07|[^0]\\d)[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Audiosonic'\n    model_replacement: '$1'\n\n  #########\n  # Axioo\n  # @ref: http://www.axiooworld.com/ww/index.php\n  #########\n  - regex: '; *(?:Axioo[ _\\-]([^;/]+)|(picopad)[ _\\-]([^;/]+)) Build'\n    regex_flag: 'i'\n    device_replacement: 'Axioo $1$2 $3'\n    brand_replacement: 'Axioo'\n    model_replacement: '$1$2 $3'\n\n  #########\n  # Azend\n  # @ref: http://azendcorp.com/index.php/products/portable-electronics\n  #########\n  - regex: '; *(V(?:100|700|800)[^;/]*) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Azend'\n    model_replacement: '$1'\n\n  #########\n  # Bak\n  # @ref: http://www.bakinternational.com/produtos.php?cat=80\n  #########\n  - regex: '; *(IBAK\\-[^;/]*) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Bak'\n    model_replacement: '$1'\n\n  #########\n  # Bedove\n  # @ref: http://www.bedove.com/product.html\n  # @models: HY6501|HY5001|X12|X21|I5\n  #########\n  - regex: '; *(HY5001|HY6501|X12|X21|I5) Build'\n    device_replacement: 'Bedove $1'\n    brand_replacement: 'Bedove'\n    model_replacement: '$1'\n\n  #########\n  # Benss\n  # @ref: http://www.benss.net/\n  #########\n  - regex: '; *(JC-[^;/]*) Build'\n    device_replacement: 'Benss $1'\n    brand_replacement: 'Benss'\n    model_replacement: '$1'\n\n  #########\n  # Blackberry\n  # @ref: http://uk.blackberry.com/\n  # @note: Android Apps seams to be used here\n  #########\n  - regex: '; *(BB) ([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Blackberry'\n    model_replacement: '$2'\n\n  #########\n  # Blackbird\n  # @ref: http://iblackbird.co.kr\n  #########\n  - regex: '; *(BlackBird)[ _](I8.*) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  - regex: '; *(BlackBird)[ _](.*) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  #########\n  # Blaupunkt\n  # @ref: http://www.blaupunkt.com\n  #########\n  # Endeavour\n  - regex: '; *([0-9]+BP[EM][^;/]*|Endeavour[^;/]+) Build'\n    device_replacement: 'Blaupunkt $1'\n    brand_replacement: 'Blaupunkt'\n    model_replacement: '$1'\n\n  #########\n  # Blu\n  # @ref: http://bluproducts.com\n  #########\n  - regex: '; *((?:BLU|Blu)[ _\\-])([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Blu'\n    model_replacement: '$2'\n  # BMOBILE = operator branded device\n  - regex: '; *(?:BMOBILE )?(Blu|BLU|DASH [^;/]+|VIVO 4\\.3|TANK 4\\.5) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Blu'\n    model_replacement: '$1'\n\n  #########\n  # Blusens\n  # @ref: http://www.blusens.com/es/?sg=1&sv=al&roc=1\n  #########\n  # tablet\n  - regex: '; *(TOUCH\\d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Blusens'\n    model_replacement: '$1'\n\n  #########\n  # Bmobile\n  # @ref: http://bmobile.eu.com/?categoria=smartphones-2\n  # @note: Might collide with Maxx as AX is used also there.\n  #########\n  # smartphone\n  - regex: '; *(AX5\\d+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Bmobile'\n    model_replacement: '$1'\n\n  #########\n  # bq\n  # @ref: http://bqreaders.com\n  #########\n  - regex: '; *([Bb]q) ([^;/]+);? Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'bq'\n    model_replacement: '$2'\n  - regex: '; *(Maxwell [^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'bq'\n    model_replacement: '$1'\n\n  #########\n  # Braun Phototechnik\n  # @ref: http://www.braun-phototechnik.de/en/products/list/~pcat.250/Tablet-PC.html\n  #########\n  - regex: '; *((?:B-Tab|B-TAB) ?\\d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Braun'\n    model_replacement: '$1'\n\n  #########\n  # Broncho\n  # @ref: http://www.broncho.cn/\n  #########\n  - regex: '; *(Broncho) ([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  #########\n  # Captiva\n  # @ref: http://www.captiva-power.de\n  #########\n  - regex: '; *CAPTIVA ([^;/]+) Build'\n    device_replacement: 'Captiva $1'\n    brand_replacement: 'Captiva'\n    model_replacement: '$1'\n\n  #########\n  # Casio\n  # @ref: http://www.casiogzone.com/\n  #########\n  - regex: '; *(C771|CAL21|IS11CA) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Casio'\n    model_replacement: '$1'\n\n  #########\n  # Cat\n  # @ref: http://www.cat-sound.com\n  #########\n  - regex: '; *(?:Cat|CAT) ([^;/]+) Build'\n    device_replacement: 'Cat $1'\n    brand_replacement: 'Cat'\n    model_replacement: '$1'\n  - regex: '; *(?:Cat)(Nova.*) Build'\n    device_replacement: 'Cat $1'\n    brand_replacement: 'Cat'\n    model_replacement: '$1'\n  - regex: '; *(INM8002KP|ADM8000KP_[AB]) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Cat'\n    model_replacement: 'Tablet PHOENIX 8.1J0'\n\n  #########\n  # Celkon\n  # @ref: http://www.celkonmobiles.com/?_a=products\n  # @models: A10, A19Q, A101, A105, A107, A107\\+, A112, A118, A119, A119Q, A15, A19, A20, A200, A220, A225, A22 Race, A27, A58, A59, A60, A62, A63, A64, A66, A67, A69, A75, A77, A79, A8\\+, A83, A85, A86, A87, A89 Ultima, A9\\+, A90, A900, A95, A97i, A98, AR 40, AR 45, AR 50, ML5\n  #########\n  - regex: '; *(?:[Cc]elkon[ _\\*]|CELKON[ _\\*])([^;/\\)]+) ?(?:Build|;|\\))'\n    device_replacement: '$1'\n    brand_replacement: 'Celkon'\n    model_replacement: '$1'\n  - regex: 'Build/(?:[Cc]elkon)+_?([^;/_\\)]+)'\n    device_replacement: '$1'\n    brand_replacement: 'Celkon'\n    model_replacement: '$1'\n  - regex: '; *(CT)-?(\\d+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Celkon'\n    model_replacement: '$1$2'\n  # smartphones\n  - regex: '; *(A19|A19Q|A105|A107[^;/\\)]*) ?(?:Build|;|\\))'\n    device_replacement: '$1'\n    brand_replacement: 'Celkon'\n    model_replacement: '$1'\n\n  #########\n  # ChangJia\n  # @ref: http://www.cjshowroom.com/eproducts.aspx?classcode=004001001\n  # @brief: China manufacturer makes tablets for different small brands\n  #         (eg. http://www.zeepad.net/index.html)\n  #########\n  - regex: '; *(TPC[0-9]{4,5}) Build'\n    device_replacement: '$1'\n    brand_replacement: 'ChangJia'\n    model_replacement: '$1'\n\n  #########\n  # Cloudfone\n  # @ref: http://www.cloudfonemobile.com/\n  #########\n  - regex: '; *(Cloudfone)[ _](Excite)([^ ][^;/]+) Build'\n    device_replacement: '$1 $2 $3'\n    brand_replacement: 'Cloudfone'\n    model_replacement: '$1 $2 $3'\n  - regex: '; *(Excite|ICE)[ _](\\d+[^;/]+) Build'\n    device_replacement: 'Cloudfone $1 $2'\n    brand_replacement: 'Cloudfone'\n    model_replacement: 'Cloudfone $1 $2'\n  - regex: '; *(Cloudfone|CloudPad)[ _]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Cloudfone'\n    model_replacement: '$1 $2'\n\n  #########\n  # Cmx\n  # @ref: http://cmx.at/de/\n  #########\n  - regex: '; *((?:Aquila|Clanga|Rapax)[^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Cmx'\n    model_replacement: '$1'\n\n  #########\n  # CobyKyros\n  # @ref: http://cobykyros.com\n  # @note: Be careful with MID\\d{3} from MpMan or Manta\n  #########\n  - regex: '; *(?:CFW-|Kyros )?(MID[0-9]{4}(?:[ABC]|SR|TV)?)(\\(3G\\)-4G| GB 8K| 3G| 8K| GB)? *(?:Build|[;\\)])'\n    device_replacement: 'CobyKyros $1$2'\n    brand_replacement: 'CobyKyros'\n    model_replacement: '$1$2'\n\n  #########\n  # Coolpad\n  # @ref: ??\n  #########\n  - regex: '; *([^;/]*)Coolpad[ _]([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Coolpad'\n    model_replacement: '$1$2'\n\n  #########\n  # Cube\n  # @ref: http://www.cube-tablet.com/buy-products.html\n  #########\n  - regex: '; *(CUBE[ _])?([KU][0-9]+ ?GT.*|A5300) Build'\n    regex_flag: 'i'\n    device_replacement: '$1$2'\n    brand_replacement: 'Cube'\n    model_replacement: '$2'\n\n  #########\n  # Cubot\n  # @ref: http://www.cubotmall.com/\n  #########\n  - regex: '; *CUBOT ([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Cubot'\n    model_replacement: '$1'\n  - regex: '; *(BOBBY) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Cubot'\n    model_replacement: '$1'\n\n  #########\n  # Danew\n  # @ref: http://www.danew.com/produits-tablette.php\n  #########\n  - regex: '; *(Dslide [^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Danew'\n    model_replacement: '$1'\n\n  #########\n  # Dell\n  # @ref: http://www.dell.com\n  # @ref: http://www.softbank.jp/mobile/support/product/101dl/\n  # @ref: http://www.softbank.jp/mobile/support/product/001dl/\n  # @ref: http://developer.emnet.ne.jp/android.html\n  # @ref: http://www.dell.com/in/p/mobile-xcd28/pd\n  # @ref: http://www.dell.com/in/p/mobile-xcd35/pd\n  #########\n  - regex: '; *(XCD)[ _]?(28|35) Build'\n    device_replacement: 'Dell $1$2'\n    brand_replacement: 'Dell'\n    model_replacement: '$1$2'\n  - regex: '; *(001DL) Build'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: 'Streak'\n  - regex: '; *(?:Dell|DELL) (Streak) Build'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: 'Streak'\n  - regex: '; *(101DL|GS01|Streak Pro[^;/]*) Build'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: 'Streak Pro'\n  - regex: '; *([Ss]treak ?7) Build'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: 'Streak 7'\n  - regex: '; *(Mini-3iX) Build'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: '$1'\n  - regex: '; *(?:Dell|DELL)[ _](Aero|Venue|Thunder|Mini.*|Streak[ _]Pro) Build'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: '$1'\n  - regex: '; *Dell[ _]([^;/]+) Build'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: '$1'\n  - regex: '; *Dell ([^;/]+) Build'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: '$1'\n\n  #########\n  # Denver\n  # @ref: http://www.denver-electronics.com/tablets1/\n  #########\n  - regex: '; *(TA[CD]-\\d+[^;/]*) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Denver'\n    model_replacement: '$1'\n\n  #########\n  # Dex\n  # @ref: http://dex.ua/\n  #########\n  - regex: '; *(iP[789]\\d{2}(?:-3G)?|IP10\\d{2}(?:-8GB)?) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Dex'\n    model_replacement: '$1'\n\n  #########\n  # DNS AirTab\n  # @ref: http://www.dns-shop.ru/\n  #########\n  - regex: '; *(AirTab)[ _\\-]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'DNS'\n    model_replacement: '$1 $2'\n\n  #########\n  # Docomo (Operator Branded Device)\n  # @ref: http://www.ipentec.com/document/document.aspx?page=android-useragent\n  #########\n  - regex: '; *(F\\-\\d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Fujitsu'\n    model_replacement: '$1'\n  - regex: '; *(HT-03A) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: 'Magic'\n  - regex: '; *(HT\\-\\d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n  - regex: '; *(L\\-\\d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'LG'\n    model_replacement: '$1'\n  - regex: '; *(N\\-\\d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Nec'\n    model_replacement: '$1'\n  - regex: '; *(P\\-\\d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Panasonic'\n    model_replacement: '$1'\n  - regex: '; *(SC\\-\\d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n  - regex: '; *(SH\\-\\d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Sharp'\n    model_replacement: '$1'\n  - regex: '; *(SO\\-\\d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'SonyEricsson'\n    model_replacement: '$1'\n  - regex: '; *(T\\-0[12][^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Toshiba'\n    model_replacement: '$1'\n\n  #########\n  # DOOV\n  # @ref: http://www.doov.com.cn/\n  #########\n  - regex: '; *(DOOV)[ _]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'DOOV'\n    model_replacement: '$2'\n\n  #########\n  # Enot\n  # @ref: http://www.enot.ua/\n  #########\n  - regex: '; *(Enot|ENOT)[ -]?([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Enot'\n    model_replacement: '$2'\n\n  #########\n  # Evercoss\n  # @ref: http://evercoss.com/android/\n  #########\n  - regex: '; *[^;/]+ Build/(?:CROSS|Cross)+[ _\\-]([^\\)]+)'\n    device_replacement: 'CROSS $1'\n    brand_replacement: 'Evercoss'\n    model_replacement: 'Cross $1'\n  - regex: '; *(CROSS|Cross)[ _\\-]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Evercoss'\n    model_replacement: 'Cross $2'\n\n  #########\n  # Explay\n  # @ref: http://explay.ru/\n  #########\n  - regex: '; *Explay[_ ](.+?)(?:[\\)]| Build)'\n    device_replacement: '$1'\n    brand_replacement: 'Explay'\n    model_replacement: '$1'\n\n  #########\n  # Fly\n  # @ref: http://www.fly-phone.com/\n  #########\n  - regex: '; *(IQ.*) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Fly'\n    model_replacement: '$1'\n  - regex: '; *(Fly|FLY)[ _](IQ[^;]+|F[34]\\d+[^;]*);? Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Fly'\n    model_replacement: '$2'\n\n  #########\n  # Fujitsu\n  # @ref: http://www.fujitsu.com/global/\n  #########\n  - regex: '; *(M532|Q572|FJL21) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Fujitsu'\n    model_replacement: '$1'\n\n  #########\n  # Galapad\n  # @ref: http://www.galapad.net/product.html\n  #########\n  - regex: '; *(G1) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Galapad'\n    model_replacement: '$1'\n\n  #########\n  # Geeksphone\n  # @ref: http://www.geeksphone.com/\n  #########\n  - regex: '; *(Geeksphone) ([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  #########\n  # Gfive\n  # @ref: http://www.gfivemobile.com/en\n  #########\n  #- regex: '; *(G\\'?FIVE) ([^;/]+) Build' # there is a problem with python yaml parser here\n  - regex: '; *(G[^F]?FIVE) ([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Gfive'\n    model_replacement: '$2'\n\n  #########\n  # Gionee\n  # @ref: http://www.gionee.com/\n  #########\n  - regex: '; *(Gionee)[ _\\-]([^;/]+)(?:/[^;/]+)? Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Gionee'\n    model_replacement: '$2'\n  - regex: '; *(GN\\d+[A-Z]?|INFINITY_PASSION|Ctrl_V1) Build'\n    device_replacement: 'Gionee $1'\n    brand_replacement: 'Gionee'\n    model_replacement: '$1'\n  - regex: '; *(E3) Build/JOP40D'\n    device_replacement: 'Gionee $1'\n    brand_replacement: 'Gionee'\n    model_replacement: '$1'\n\n  #########\n  # GoClever\n  # @ref: http://www.goclever.com\n  #########\n  - regex: '; *((?:FONE|QUANTUM|INSIGNIA) \\d+[^;/]*|PLAYTAB) Build'\n    device_replacement: 'GoClever $1'\n    brand_replacement: 'GoClever'\n    model_replacement: '$1'\n  - regex: '; *GOCLEVER ([^;/]+) Build'\n    device_replacement: 'GoClever $1'\n    brand_replacement: 'GoClever'\n    model_replacement: '$1'\n\n  #########\n  # Google\n  # @ref: http://www.google.de/glass/start/\n  #########\n  - regex: '; *(Glass \\d+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Google'\n    model_replacement: '$1'\n  - regex: '; *(Pixel \\w+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Google'\n    model_replacement: '$1'\n\n  #########\n  # Gigabyte\n  # @ref: http://gsmart.gigabytecm.com/en/\n  #########\n  - regex: '; *(GSmart)[ -]([^/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Gigabyte'\n    model_replacement: '$1 $2'\n\n  #########\n  # Freescale development boards\n  # @ref: http://www.freescale.com/webapp/sps/site/prod_summary.jsp?code=IMX53QSB\n  #########\n  - regex: '; *(imx5[13]_[^/]+) Build'\n    device_replacement: 'Freescale $1'\n    brand_replacement: 'Freescale'\n    model_replacement: '$1'\n\n  #########\n  # Haier\n  # @ref: http://www.haier.com/\n  # @ref: http://www.haier.com/de/produkte/tablet/\n  #########\n  - regex: '; *Haier[ _\\-]([^/]+) Build'\n    device_replacement: 'Haier $1'\n    brand_replacement: 'Haier'\n    model_replacement: '$1'\n  - regex: '; *(PAD1016) Build'\n    device_replacement: 'Haipad $1'\n    brand_replacement: 'Haipad'\n    model_replacement: '$1'\n\n  #########\n  # Haipad\n  # @ref: http://www.haipad.net/\n  # @models: V7P|M7SM7S|M9XM9X|M7XM7X|M9|M8|M7-M|M1002|M7|M701\n  #########\n  - regex: '; *(M701|M7|M8|M9) Build'\n    device_replacement: 'Haipad $1'\n    brand_replacement: 'Haipad'\n    model_replacement: '$1'\n\n  #########\n  # Hannspree\n  # @ref: http://www.hannspree.eu/\n  # @models: SN10T1|SN10T2|SN70T31B|SN70T32W\n  #########\n  - regex: '; *(SN\\d+T[^;\\)/]*)(?: Build|[;\\)])'\n    device_replacement: 'Hannspree $1'\n    brand_replacement: 'Hannspree'\n    model_replacement: '$1'\n\n  #########\n  # HCLme\n  # @ref: http://www.hclmetablet.com/india/\n  #########\n  - regex: 'Build/HCL ME Tablet ([^;\\)]+)[\\);]'\n    device_replacement: 'HCLme $1'\n    brand_replacement: 'HCLme'\n    model_replacement: '$1'\n  - regex: '; *([^;\\/]+) Build/HCL'\n    device_replacement: 'HCLme $1'\n    brand_replacement: 'HCLme'\n    model_replacement: '$1'\n\n  #########\n  # Hena\n  # @ref: http://www.henadigital.com/en/product/index.asp?id=6\n  #########\n  - regex: '; *(MID-?\\d{4}C[EM]) Build'\n    device_replacement: 'Hena $1'\n    brand_replacement: 'Hena'\n    model_replacement: '$1'\n\n  #########\n  # Hisense\n  # @ref: http://www.hisense.com/\n  #########\n  - regex: '; *(EG\\d{2,}|HS-[^;/]+|MIRA[^;/]+) Build'\n    device_replacement: 'Hisense $1'\n    brand_replacement: 'Hisense'\n    model_replacement: '$1'\n  - regex: '; *(andromax[^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: 'Hisense $1'\n    brand_replacement: 'Hisense'\n    model_replacement: '$1'\n\n  #########\n  # hitech\n  # @ref: http://www.hitech-mobiles.com/\n  #########\n  - regex: '; *(?:AMAZE[ _](S\\d+)|(S\\d+)[ _]AMAZE) Build'\n    device_replacement: 'AMAZE $1$2'\n    brand_replacement: 'hitech'\n    model_replacement: 'AMAZE $1$2'\n\n  #########\n  # HP\n  # @ref: http://www.hp.com/\n  #########\n  - regex: '; *(PlayBook) Build'\n    device_replacement: 'HP $1'\n    brand_replacement: 'HP'\n    model_replacement: '$1'\n  - regex: '; *HP ([^/]+) Build'\n    device_replacement: 'HP $1'\n    brand_replacement: 'HP'\n    model_replacement: '$1'\n  - regex: '; *([^/]+_tenderloin) Build'\n    device_replacement: 'HP TouchPad'\n    brand_replacement: 'HP'\n    model_replacement: 'TouchPad'\n\n  #########\n  # Huawei\n  # @ref: http://www.huaweidevice.com\n  # @note: Needs to be before HTC due to Desire HD Build on U8815\n  #########\n  - regex: '; *(HUAWEI |Huawei-)?([UY][^;/]+) Build/(?:Huawei|HUAWEI)([UY][^\\);]+)\\)'\n    device_replacement: '$1$2'\n    brand_replacement: 'Huawei'\n    model_replacement: '$2'\n  - regex: '; *([^;/]+) Build[/ ]Huawei(MT1-U06|[A-Z]+\\d+[^\\);]+)[^\\);]*\\)'\n    device_replacement: '$1'\n    brand_replacement: 'Huawei'\n    model_replacement: '$2'\n  - regex: '; *(S7|M860) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Huawei'\n    model_replacement: '$1'\n  - regex: '; *((?:HUAWEI|Huawei)[ \\-]?)(MediaPad) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Huawei'\n    model_replacement: '$2'\n  - regex: '; *((?:HUAWEI[ _]?|Huawei[ _])?Ascend[ _])([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Huawei'\n    model_replacement: '$2'\n  - regex: '; *((?:HUAWEI|Huawei)[ _\\-]?)((?:G700-|MT-)[^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Huawei'\n    model_replacement: '$2'\n  - regex: '; *((?:HUAWEI|Huawei)[ _\\-]?)([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Huawei'\n    model_replacement: '$2'\n  - regex: '; *(MediaPad[^;]+|SpringBoard) Build/Huawei'\n    device_replacement: '$1'\n    brand_replacement: 'Huawei'\n    model_replacement: '$1'\n  - regex: '; *([^;]+) Build/(?:Huawei|HUAWEI)'\n    device_replacement: '$1'\n    brand_replacement: 'Huawei'\n    model_replacement: '$1'\n  - regex: '; *([Uu])([89]\\d{3}) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Huawei'\n    model_replacement: 'U$2'\n  - regex: '; *(?:Ideos |IDEOS )(S7) Build'\n    device_replacement: 'Huawei Ideos$1'\n    brand_replacement: 'Huawei'\n    model_replacement: 'Ideos$1'\n  - regex: '; *(?:Ideos |IDEOS )([^;/]+\\s*|\\s*)Build'\n    device_replacement: 'Huawei Ideos$1'\n    brand_replacement: 'Huawei'\n    model_replacement: 'Ideos$1'\n  - regex: '; *(Orange Daytona|Pulse|Pulse Mini|Vodafone 858|C8500|C8600|C8650|C8660|Nexus 6P|ATH-.+?) Build[/ ]'\n    device_replacement: 'Huawei $1'\n    brand_replacement: 'Huawei'\n    model_replacement: '$1'\n\n  #########\n  # HTC\n  # @ref: http://www.htc.com/www/products/\n  # @ref: http://en.wikipedia.org/wiki/List_of_HTC_phones\n  #########\n\n  - regex: '; *HTC[ _]([^;]+); Windows Phone'\n    device_replacement: 'HTC $1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n\n  # Android HTC with Version Number matcher\n  # ; HTC_0P3Z11/1.12.161.3 Build\n  # ;HTC_A3335 V2.38.841.1 Build\n  - regex: '; *(?:HTC[ _/])+([^ _/]+)(?:[/\\\\]1\\.0 | V|/| +)\\d+\\.\\d[\\d\\.]*(?: *Build|\\))'\n    device_replacement: 'HTC $1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n  - regex: '; *(?:HTC[ _/])+([^ _/]+)(?:[ _/]([^ _/]+))?(?:[/\\\\]1\\.0 | V|/| +)\\d+\\.\\d[\\d\\.]*(?: *Build|\\))'\n    device_replacement: 'HTC $1 $2'\n    brand_replacement: 'HTC'\n    model_replacement: '$1 $2'\n  - regex: '; *(?:HTC[ _/])+([^ _/]+)(?:[ _/]([^ _/]+)(?:[ _/]([^ _/]+))?)?(?:[/\\\\]1\\.0 | V|/| +)\\d+\\.\\d[\\d\\.]*(?: *Build|\\))'\n    device_replacement: 'HTC $1 $2 $3'\n    brand_replacement: 'HTC'\n    model_replacement: '$1 $2 $3'\n  - regex: '; *(?:HTC[ _/])+([^ _/]+)(?:[ _/]([^ _/]+)(?:[ _/]([^ _/]+)(?:[ _/]([^ _/]+))?)?)?(?:[/\\\\]1\\.0 | V|/| +)\\d+\\.\\d[\\d\\.]*(?: *Build|\\))'\n    device_replacement: 'HTC $1 $2 $3 $4'\n    brand_replacement: 'HTC'\n    model_replacement: '$1 $2 $3 $4'\n\n  # Android HTC without Version Number matcher\n  - regex: '; *(?:(?:HTC|htc)(?:_blocked)*[ _/])+([^ _/;]+)(?: *Build|[;\\)]| - )'\n    device_replacement: 'HTC $1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n  - regex: '; *(?:(?:HTC|htc)(?:_blocked)*[ _/])+([^ _/]+)(?:[ _/]([^ _/;\\)]+))?(?: *Build|[;\\)]| - )'\n    device_replacement: 'HTC $1 $2'\n    brand_replacement: 'HTC'\n    model_replacement: '$1 $2'\n  - regex: '; *(?:(?:HTC|htc)(?:_blocked)*[ _/])+([^ _/]+)(?:[ _/]([^ _/]+)(?:[ _/]([^ _/;\\)]+))?)?(?: *Build|[;\\)]| - )'\n    device_replacement: 'HTC $1 $2 $3'\n    brand_replacement: 'HTC'\n    model_replacement: '$1 $2 $3'\n  - regex: '; *(?:(?:HTC|htc)(?:_blocked)*[ _/])+([^ _/]+)(?:[ _/]([^ _/]+)(?:[ _/]([^ _/]+)(?:[ _/]([^ /;]+))?)?)?(?: *Build|[;\\)]| - )'\n    device_replacement: 'HTC $1 $2 $3 $4'\n    brand_replacement: 'HTC'\n    model_replacement: '$1 $2 $3 $4'\n\n  # HTC Streaming Player\n  - regex: 'HTC Streaming Player [^\\/]*/[^\\/]*/ htc_([^/]+) /'\n    device_replacement: 'HTC $1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n  # general matcher for anything else\n  - regex: '(?:[;,] *|^)(?:htccn_chs-)?HTC[ _-]?([^;]+?)(?: *Build|clay|Android|-?Mozilla| Opera| Profile| UNTRUSTED|[;/\\(\\)]|$)'\n    regex_flag: 'i'\n    device_replacement: 'HTC $1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n  # Android matchers without HTC\n  - regex: '; *(A6277|ADR6200|ADR6300|ADR6350|ADR6400[A-Z]*|ADR6425[A-Z]*|APX515CKT|ARIA|Desire[^_ ]*|Dream|EndeavorU|Eris|Evo|Flyer|HD2|Hero|HERO200|Hero CDMA|HTL21|Incredible|Inspire[A-Z0-9]*|Legend|Liberty|Nexus ?(?:One|HD2)|One|One S C2|One[ _]?(?:S|V|X\\+?)\\w*|PC36100|PG06100|PG86100|S31HT|Sensation|Wildfire)(?: Build|[/;\\(\\)])'\n    regex_flag: 'i'\n    device_replacement: 'HTC $1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n  - regex: '; *(ADR6200|ADR6400L|ADR6425LVW|Amaze|DesireS?|EndeavorU|Eris|EVO|Evo\\d[A-Z]+|HD2|IncredibleS?|Inspire[A-Z0-9]*|Inspire[A-Z0-9]*|Sensation[A-Z0-9]*|Wildfire)[ _-](.+?)(?:[/;\\)]|Build|MIUI|1\\.0)'\n    regex_flag: 'i'\n    device_replacement: 'HTC $1 $2'\n    brand_replacement: 'HTC'\n    model_replacement: '$1 $2'\n\n  #########\n  # Hyundai\n  # @ref: http://www.hyundaitechnologies.com\n  #########\n  - regex: '; *HYUNDAI (T\\d[^/]*) Build'\n    device_replacement: 'Hyundai $1'\n    brand_replacement: 'Hyundai'\n    model_replacement: '$1'\n  - regex: '; *HYUNDAI ([^;/]+) Build'\n    device_replacement: 'Hyundai $1'\n    brand_replacement: 'Hyundai'\n    model_replacement: '$1'\n  # X900? http://www.amazon.com/Hyundai-X900-Retina-Android-Bluetooth/dp/B00AO07H3O\n  - regex: '; *(X700|Hold X|MB-6900) Build'\n    device_replacement: 'Hyundai $1'\n    brand_replacement: 'Hyundai'\n    model_replacement: '$1'\n\n  #########\n  # iBall\n  # @ref: http://www.iball.co.in/Category/Mobiles/22\n  #########\n  - regex: '; *(?:iBall[ _\\-])?(Andi)[ _]?(\\d[^;/]*) Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'iBall'\n    model_replacement: '$1 $2'\n  - regex: '; *(IBall)(?:[ _]([^;/]+)|) Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'iBall'\n    model_replacement: '$2'\n\n  #########\n  # IconBIT\n  # @ref: http://www.iconbit.com/catalog/tablets/\n  #########\n  - regex: '; *(NT-\\d+[^ ;/]*|Net[Tt]AB [^;/]+|Mercury [A-Z]+|iconBIT)(?: S/N:[^;/]+)? Build'\n    device_replacement: '$1'\n    brand_replacement: 'IconBIT'\n    model_replacement: '$1'\n\n  #########\n  # IMO\n  # @ref: http://www.ponselimo.com/\n  #########\n  - regex: '; *(IMO)[ _]([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'IMO'\n    model_replacement: '$2'\n\n  #########\n  # i-mobile\n  # @ref: http://www.i-mobilephone.com/\n  #########\n  - regex: '; *i-?mobile[ _]([^/]+) Build/'\n    regex_flag: 'i'\n    device_replacement: 'i-mobile $1'\n    brand_replacement: 'imobile'\n    model_replacement: '$1'\n  - regex: '; *(i-(?:style|note)[^/]*) Build/'\n    regex_flag: 'i'\n    device_replacement: 'i-mobile $1'\n    brand_replacement: 'imobile'\n    model_replacement: '$1'\n\n  #########\n  # Impression\n  # @ref: http://impression.ua/planshetnye-kompyutery\n  #########\n  - regex: '; *(ImPAD) ?(\\d+(?:.)*) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Impression'\n    model_replacement: '$1 $2'\n\n  #########\n  # Infinix\n  # @ref: http://www.infinixmobility.com/index.html\n  #########\n  - regex: '; *(Infinix)[ _]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Infinix'\n    model_replacement: '$2'\n\n  #########\n  # Informer\n  # @ref: ??\n  #########\n  - regex: '; *(Informer)[ \\-]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Informer'\n    model_replacement: '$2'\n\n  #########\n  # Intenso\n  # @ref: http://www.intenso.de\n  # @models: 7\":TAB 714,TAB 724;8\":TAB 814,TAB 824;10\":TAB 1004\n  #########\n  - regex: '; *(TAB) ?([78][12]4) Build'\n    device_replacement: 'Intenso $1'\n    brand_replacement: 'Intenso'\n    model_replacement: '$1 $2'\n\n  #########\n  # Intex\n  # @ref: http://intexmobile.in/index.aspx\n  # @note: Zync also offers a \"Cloud Z5\" device\n  #########\n  # smartphones\n  - regex: '; *(?:Intex[ _])?(AQUA|Aqua)([ _\\.\\-])([^;/]+) *(?:Build|;)'\n    device_replacement: '$1$2$3'\n    brand_replacement: 'Intex'\n    model_replacement: '$1 $3'\n  # matches \"INTEX CLOUD X1\"\n  - regex: '; *(?:INTEX|Intex)(?:[_ ]([^\\ _;/]+))(?:[_ ]([^\\ _;/]+))? *(?:Build|;)'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Intex'\n    model_replacement: '$1 $2'\n  # tablets\n  - regex: '; *([iI]Buddy)[ _]?(Connect)(?:_|\\?_| )?([^;/]*) *(?:Build|;)'\n    device_replacement: '$1 $2 $3'\n    brand_replacement: 'Intex'\n    model_replacement: 'iBuddy $2 $3'\n  - regex: '; *(I-Buddy)[ _]([^;/]+) *(?:Build|;)'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Intex'\n    model_replacement: 'iBuddy $2'\n\n  #########\n  # iOCEAN\n  # @ref: http://www.iocean.cc/\n  #########\n  - regex: '; *(iOCEAN) ([^/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'iOCEAN'\n    model_replacement: '$2'\n\n  #########\n  # i.onik\n  # @ref: http://www.i-onik.de/\n  #########\n  - regex: '; *(TP\\d+(?:\\.\\d+)?\\-\\d[^;/]+) Build'\n    device_replacement: 'ionik $1'\n    brand_replacement: 'ionik'\n    model_replacement: '$1'\n\n  #########\n  # IRU.ru\n  # @ref: http://www.iru.ru/catalog/soho/planetable/\n  #########\n  - regex: '; *(M702pro) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Iru'\n    model_replacement: '$1'\n\n  #########\n  # Ivio\n  # @ref: http://www.ivio.com/mobile.php\n  # @models: DG80,DG20,DE38,DE88,MD70\n  #########\n  - regex: '; *(DE88Plus|MD70) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Ivio'\n    model_replacement: '$1'\n  - regex: '; *IVIO[_\\-]([^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Ivio'\n    model_replacement: '$1'\n\n  #########\n  # Jaytech\n  # @ref: http://www.jay-tech.de/jaytech/servlet/frontend/\n  #########\n  - regex: '; *(TPC-\\d+|JAY-TECH) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Jaytech'\n    model_replacement: '$1'\n\n  #########\n  # Jiayu\n  # @ref: http://www.ejiayu.com/en/Product.html\n  #########\n  - regex: '; *(JY-[^;/]+|G[234]S?) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Jiayu'\n    model_replacement: '$1'\n\n  #########\n  # JXD\n  # @ref: http://www.jxd.hk/\n  #########\n  - regex: '; *(JXD)[ _\\-]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'JXD'\n    model_replacement: '$2'\n\n  #########\n  # Karbonn\n  # @ref: http://www.karbonnmobiles.com/products_tablet.php\n  #########\n  - regex: '; *Karbonn[ _]?([^;/]+) *(?:Build|;)'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Karbonn'\n    model_replacement: '$1'\n  - regex: '; *([^;]+) Build/Karbonn'\n    device_replacement: '$1'\n    brand_replacement: 'Karbonn'\n    model_replacement: '$1'\n  - regex: '; *(A11|A39|A37|A34|ST8|ST10|ST7|Smart Tab3|Smart Tab2|Titanium S\\d) +Build'\n    device_replacement: '$1'\n    brand_replacement: 'Karbonn'\n    model_replacement: '$1'\n\n  #########\n  # KDDI (Operator Branded Device)\n  # @ref: http://www.ipentec.com/document/document.aspx?page=android-useragent\n  #########\n  - regex: '; *(IS01|IS03|IS05|IS\\d{2}SH) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Sharp'\n    model_replacement: '$1'\n  - regex: '; *(IS04) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Regza'\n    model_replacement: '$1'\n  - regex: '; *(IS06|IS\\d{2}PT) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Pantech'\n    model_replacement: '$1'\n  - regex: '; *(IS11S) Build'\n    device_replacement: '$1'\n    brand_replacement: 'SonyEricsson'\n    model_replacement: 'Xperia Acro'\n  - regex: '; *(IS11CA) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Casio'\n    model_replacement: 'GzOne $1'\n  - regex: '; *(IS11LG) Build'\n    device_replacement: '$1'\n    brand_replacement: 'LG'\n    model_replacement: 'Optimus X'\n  - regex: '; *(IS11N) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Medias'\n    model_replacement: '$1'\n  - regex: '; *(IS11PT) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Pantech'\n    model_replacement: 'MIRACH'\n  - regex: '; *(IS12F) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Fujitsu'\n    model_replacement: 'Arrows ES'\n  # @ref: https://ja.wikipedia.org/wiki/IS12M\n  - regex: '; *(IS12M) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Motorola'\n    model_replacement: 'XT909'\n  - regex: '; *(IS12S) Build'\n    device_replacement: '$1'\n    brand_replacement: 'SonyEricsson'\n    model_replacement: 'Xperia Acro HD'\n  - regex: '; *(ISW11F) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Fujitsu'\n    model_replacement: 'Arrowz Z'\n  - regex: '; *(ISW11HT) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: 'EVO'\n  - regex: '; *(ISW11K) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Kyocera'\n    model_replacement: 'DIGNO'\n  - regex: '; *(ISW11M) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Motorola'\n    model_replacement: 'Photon'\n  - regex: '; *(ISW11SC) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Samsung'\n    model_replacement: 'GALAXY S II WiMAX'\n  - regex: '; *(ISW12HT) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: 'EVO 3D'\n  - regex: '; *(ISW13HT) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: 'J'\n  - regex: '; *(ISW?[0-9]{2}[A-Z]{0,2}) Build'\n    device_replacement: '$1'\n    brand_replacement: 'KDDI'\n    model_replacement: '$1'\n  - regex: '; *(INFOBAR [^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'KDDI'\n    model_replacement: '$1'\n\n  #########\n  # Kingcom\n  # @ref: http://www.e-kingcom.com\n  #########\n  - regex: '; *(JOYPAD|Joypad)[ _]([^;/]+) Build/'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Kingcom'\n    model_replacement: '$1 $2'\n\n  #########\n  # Kobo\n  # @ref: https://en.wikipedia.org/wiki/Kobo_Inc.\n  # @ref: http://www.kobo.com/devices#tablets\n  #########\n  - regex: '; *(Vox|VOX|Arc|K080) Build/'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Kobo'\n    model_replacement: '$1'\n  - regex: '\\b(Kobo Touch)\\b'\n    device_replacement: '$1'\n    brand_replacement: 'Kobo'\n    model_replacement: '$1'\n\n  #########\n  # K-Touch\n  # @ref: ??\n  #########\n  - regex: '; *(K-Touch)[ _]([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Ktouch'\n    model_replacement: '$2'\n\n  #########\n  # KT Tech\n  # @ref: http://www.kttech.co.kr\n  #########\n  - regex: '; *((?:EV|KM)-S\\d+[A-Z]?) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'KTtech'\n    model_replacement: '$1'\n\n  #########\n  # Kyocera\n  # @ref: http://www.android.com/devices/?country=all&m=kyocera\n  #########\n  - regex: '; *(Zio|Hydro|Torque|Event|EVENT|Echo|Milano|Rise|URBANO PROGRESSO|WX04K|WX06K|WX10K|KYL21|101K|C5[12]\\d{2}) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Kyocera'\n    model_replacement: '$1'\n\n  #########\n  # Lava\n  # @ref: http://www.lavamobiles.com/\n  #########\n  - regex: '; *(?:LAVA[ _])?IRIS[ _\\-]?([^/;\\)]+) *(?:;|\\)|Build)'\n    regex_flag: 'i'\n    device_replacement: 'Iris $1'\n    brand_replacement: 'Lava'\n    model_replacement: 'Iris $1'\n  - regex: '; *LAVA[ _]([^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Lava'\n    model_replacement: '$1'\n\n  #########\n  # Lemon\n  # @ref: http://www.lemonmobiles.com/products.php?type=1\n  #########\n  - regex: '; *(?:(Aspire A1)|(?:LEMON|Lemon)[ _]([^;/]+))_? Build'\n    device_replacement: 'Lemon $1$2'\n    brand_replacement: 'Lemon'\n    model_replacement: '$1$2'\n\n  #########\n  # Lenco\n  # @ref: http://www.lenco.com/c/tablets/\n  #########\n  - regex: '; *(TAB-1012) Build/'\n    device_replacement: 'Lenco $1'\n    brand_replacement: 'Lenco'\n    model_replacement: '$1'\n  - regex: '; Lenco ([^;/]+) Build/'\n    device_replacement: 'Lenco $1'\n    brand_replacement: 'Lenco'\n    model_replacement: '$1'\n\n  #########\n  # Lenovo\n  # @ref: http://support.lenovo.com/en_GB/downloads/default.page?#\n  #########\n  - regex: '; *(A1_07|A2107A-H|S2005A-H|S1-37AH0) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1'\n  - regex: '; *(Idea[Tp]ab)[ _]([^;/]+);? Build'\n    device_replacement: 'Lenovo $1 $2'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1 $2'\n  - regex: '; *(Idea(?:Tab|pad)) ?([^;/]+) Build'\n    device_replacement: 'Lenovo $1 $2'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1 $2'\n  - regex: '; *(ThinkPad) ?(Tablet) Build/'\n    device_replacement: 'Lenovo $1 $2'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1 $2'\n  - regex: '; *(?:LNV-)?(?:=?[Ll]enovo[ _\\-]?|LENOVO[ _])+(.+?)(?:Build|[;/\\)])'\n    device_replacement: 'Lenovo $1'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1'\n  - regex: '[;,] (?:Vodafone )?(SmartTab) ?(II) ?(\\d+) Build/'\n    device_replacement: 'Lenovo $1 $2 $3'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1 $2 $3'\n  - regex: '; *(?:Ideapad )?K1 Build/'\n    device_replacement: 'Lenovo Ideapad K1'\n    brand_replacement: 'Lenovo'\n    model_replacement: 'Ideapad K1'\n  - regex: '; *(3GC101|3GW10[01]|A390) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1'\n  - regex: '\\b(?:Lenovo|LENOVO)+[ _\\-]?([^,;:/ ]+)'\n    device_replacement: 'Lenovo $1'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1'\n\n  #########\n  # Lexibook\n  # @ref: http://www.lexibook.com/fr\n  #########\n  - regex: '; *(MFC\\d+)[A-Z]{2}([^;,/]*),? Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Lexibook'\n    model_replacement: '$1$2'\n\n  #########\n  # LG\n  # @ref: http://www.lg.com/uk/mobile\n  #########\n  - regex: '; *(E[34][0-9]{2}|LS[6-8][0-9]{2}|VS[6-9][0-9]+[^;/]+|Nexus 4|Nexus 5X?|GT540f?|Optimus (?:2X|G|4X HD)|OptimusX4HD) *(?:Build|;)'\n    device_replacement: '$1'\n    brand_replacement: 'LG'\n    model_replacement: '$1'\n  - regex: '[;:] *(L-\\d+[A-Z]|LGL\\d+[A-Z]?)(?:/V\\d+)? *(?:Build|[;\\)])'\n    device_replacement: '$1'\n    brand_replacement: 'LG'\n    model_replacement: '$1'\n  - regex: '; *(LG-)([A-Z]{1,2}\\d{2,}[^,;/\\)\\(]*?)(?:Build| V\\d+|[,;/\\)\\(]|$)'\n    device_replacement: '$1$2'\n    brand_replacement: 'LG'\n    model_replacement: '$2'\n  - regex: '; *(LG[ \\-]|LG)([^;/]+)[;/]? Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'LG'\n    model_replacement: '$2'\n  - regex: '^(LG)-([^;/]+)/ Mozilla/.*; Android'\n    device_replacement: '$1 $2'\n    brand_replacement: 'LG'\n    model_replacement: '$2'\n  - regex: '(Web0S); Linux/(SmartTV)'\n    device_replacement: 'LG $1 $2'\n    brand_replacement: 'LG'\n    model_replacement: '$1 $2'\n\n  #########\n  # Malata\n  # @ref: http://www.malata.com/en/products.aspx?classid=680\n  #########\n  - regex: '; *((?:SMB|smb)[^;/]+) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Malata'\n    model_replacement: '$1'\n  - regex: '; *(?:Malata|MALATA) ([^;/]+) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Malata'\n    model_replacement: '$1'\n\n  #########\n  # Manta\n  # @ref: http://www.manta.com.pl/en\n  #########\n  - regex: '; *(MS[45][0-9]{3}|MID0[568][NS]?|MID[1-9]|MID[78]0[1-9]|MID970[1-9]|MID100[1-9]) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Manta'\n    model_replacement: '$1'\n\n  #########\n  # Match\n  # @ref: http://www.match.net.cn/products.asp\n  #########\n  - regex: '; *(M1052|M806|M9000|M9100|M9701|MID100|MID120|MID125|MID130|MID135|MID140|MID701|MID710|MID713|MID727|MID728|MID731|MID732|MID733|MID735|MID736|MID737|MID760|MID800|MID810|MID820|MID830|MID833|MID835|MID860|MID900|MID930|MID933|MID960|MID980) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Match'\n    model_replacement: '$1'\n\n  #########\n  # Maxx\n  # @ref: http://www.maxxmobile.in/\n  # @models: Maxx MSD7-Play, Maxx MX245+ Trance, Maxx AX8 Race, Maxx MSD7 3G- AX50, Maxx Genx Droid 7 - AX40, Maxx AX5 Duo,\n  #   Maxx AX3 Duo, Maxx AX3, Maxx AX8 Note II (Note 2), Maxx AX8 Note I, Maxx AX8, Maxx AX5 Plus, Maxx MSD7 Smarty,\n  #   Maxx AX9Z Race,\n  #   Maxx MT150, Maxx MQ601, Maxx M2020, Maxx Sleek MX463neo, Maxx MX525, Maxx MX192-Tune, Maxx Genx Droid 7 AX353,\n  # @note: Need more User-Agents!!!\n  #########\n  - regex: '; *(GenxDroid7|MSD7.*|AX\\d.*|Tab 701|Tab 722) Build/'\n    device_replacement: 'Maxx $1'\n    brand_replacement: 'Maxx'\n    model_replacement: '$1'\n\n  #########\n  # Mediacom\n  # @ref: http://www.mediacomeurope.it/\n  #########\n  - regex: '; *(M-PP[^;/]+|PhonePad ?\\d{2,}[^;/]+) Build'\n    device_replacement: 'Mediacom $1'\n    brand_replacement: 'Mediacom'\n    model_replacement: '$1'\n  - regex: '; *(M-MP[^;/]+|SmartPad ?\\d{2,}[^;/]+) Build'\n    device_replacement: 'Mediacom $1'\n    brand_replacement: 'Mediacom'\n    model_replacement: '$1'\n\n  #########\n  # Medion\n  # @ref: http://www.medion.com/en/\n  #########\n  - regex: '; *(?:MD_)?LIFETAB[ _]([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: 'Medion Lifetab $1'\n    brand_replacement: 'Medion'\n    model_replacement: 'Lifetab $1'\n  - regex: '; *MEDION ([^;/]+) Build'\n    device_replacement: 'Medion $1'\n    brand_replacement: 'Medion'\n    model_replacement: '$1'\n\n  #########\n  # Meizu\n  # @ref: http://www.meizu.com\n  #########\n  - regex: '; *(M030|M031|M035|M040|M065|m9) Build'\n    device_replacement: 'Meizu $1'\n    brand_replacement: 'Meizu'\n    model_replacement: '$1'\n  - regex: '; *(?:meizu_|MEIZU )(.+?) *(?:Build|[;\\)])'\n    device_replacement: 'Meizu $1'\n    brand_replacement: 'Meizu'\n    model_replacement: '$1'\n\n  #########\n  # Micromax\n  # @ref: http://www.micromaxinfo.com\n  #########\n  - regex: '; *(?:Micromax[ _](A111|A240)|(A111|A240)) Build'\n    regex_flag: 'i'\n    device_replacement: 'Micromax $1$2'\n    brand_replacement: 'Micromax'\n    model_replacement: '$1$2'\n  - regex: '; *Micromax[ _](A\\d{2,3}[^;/]*) Build'\n    regex_flag: 'i'\n    device_replacement: 'Micromax $1'\n    brand_replacement: 'Micromax'\n    model_replacement: '$1'\n  # be carefull here with Acer e.g. A500\n  - regex: '; *(A\\d{2}|A[12]\\d{2}|A90S|A110Q) Build'\n    regex_flag: 'i'\n    device_replacement: 'Micromax $1'\n    brand_replacement: 'Micromax'\n    model_replacement: '$1'\n  - regex: '; *Micromax[ _](P\\d{3}[^;/]*) Build'\n    regex_flag: 'i'\n    device_replacement: 'Micromax $1'\n    brand_replacement: 'Micromax'\n    model_replacement: '$1'\n  - regex: '; *(P\\d{3}|P\\d{3}\\(Funbook\\)) Build'\n    regex_flag: 'i'\n    device_replacement: 'Micromax $1'\n    brand_replacement: 'Micromax'\n    model_replacement: '$1'\n\n  #########\n  # Mito\n  # @ref: http://new.mitomobile.com/\n  #########\n  - regex: '; *(MITO)[ _\\-]?([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Mito'\n    model_replacement: '$2'\n\n  #########\n  # Mobistel\n  # @ref: http://www.mobistel.com/\n  #########\n  - regex: '; *(Cynus)[ _](F5|T\\d|.+?) *(?:Build|[;/\\)])'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Mobistel'\n    model_replacement: '$1 $2'\n\n  #########\n  # Modecom\n  # @ref: http://www.modecom.eu/tablets/portal/\n  #########\n  - regex: '; *(MODECOM )?(FreeTab) ?([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1$2 $3'\n    brand_replacement: 'Modecom'\n    model_replacement: '$2 $3'\n  - regex: '; *(MODECOM )([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Modecom'\n    model_replacement: '$2'\n\n  #########\n  # Motorola\n  # @ref: http://www.motorola.com/us/shop-all-mobile-phones/\n  #########\n  - regex: '; *(MZ\\d{3}\\+?|MZ\\d{3} 4G|Xoom|XOOM[^;/]*) Build'\n    device_replacement: 'Motorola $1'\n    brand_replacement: 'Motorola'\n    model_replacement: '$1'\n  - regex: '; *(Milestone )(XT[^;/]*) Build'\n    device_replacement: 'Motorola $1$2'\n    brand_replacement: 'Motorola'\n    model_replacement: '$2'\n  - regex: '; *(Motoroi ?x|Droid X|DROIDX) Build'\n    regex_flag: 'i'\n    device_replacement: 'Motorola $1'\n    brand_replacement: 'Motorola'\n    model_replacement: 'DROID X'\n  - regex: '; *(Droid[^;/]*|DROID[^;/]*|Milestone[^;/]*|Photon|Triumph|Devour|Titanium) Build'\n    device_replacement: 'Motorola $1'\n    brand_replacement: 'Motorola'\n    model_replacement: '$1'\n  - regex: '; *(A555|A85[34][^;/]*|A95[356]|ME[58]\\d{2}\\+?|ME600|ME632|ME722|MB\\d{3}\\+?|MT680|MT710|MT870|MT887|MT917|WX435|WX453|WX44[25]|XT\\d{3,4}[A-Z\\+]*|CL[iI]Q|CL[iI]Q XT) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Motorola'\n    model_replacement: '$1'\n  - regex: '; *(Motorola MOT-|Motorola[ _\\-]|MOT\\-?)([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Motorola'\n    model_replacement: '$2'\n  - regex: '; *(Moto[_ ]?|MOT\\-)([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Motorola'\n    model_replacement: '$2'\n\n  #########\n  # MpMan\n  # @ref: http://www.mpmaneurope.com\n  #########\n  - regex: '; *((?:MP[DQ]C|MPG\\d{1,4}|MP\\d{3,4}|MID(?:(?:10[234]|114|43|7[247]|8[24]|7)C|8[01]1))[^;/]*) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Mpman'\n    model_replacement: '$1'\n\n  #########\n  # MSI\n  # @ref: http://www.msi.com/product/windpad/\n  #########\n  - regex: '; *(?:MSI[ _])?(Primo\\d+|Enjoy[ _\\-][^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Msi'\n    model_replacement: '$1'\n\n  #########\n  # Multilaser\n  # http://www.multilaser.com.br/listagem_produtos.php?cat=5\n  #########\n  - regex: '; *Multilaser[ _]([^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Multilaser'\n    model_replacement: '$1'\n\n  #########\n  # MyPhone\n  # @ref: http://myphone.com.ph/\n  #########\n  - regex: '; *(My)[_]?(Pad)[ _]([^;/]+) Build'\n    device_replacement: '$1$2 $3'\n    brand_replacement: 'MyPhone'\n    model_replacement: '$1$2 $3'\n  - regex: '; *(My)\\|?(Phone)[ _]([^;/]+) Build'\n    device_replacement: '$1$2 $3'\n    brand_replacement: 'MyPhone'\n    model_replacement: '$3'\n  - regex: '; *(A\\d+)[ _](Duo)? Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'MyPhone'\n    model_replacement: '$1 $2'\n\n  #########\n  # Mytab\n  # @ref: http://www.mytab.eu/en/category/mytab-products/\n  #########\n  - regex: '; *(myTab[^;/]*) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Mytab'\n    model_replacement: '$1'\n\n  #########\n  # Nabi\n  # @ref: https://www.nabitablet.com\n  #########\n  - regex: '; *(NABI2?-)([^;/]+) Build/'\n    device_replacement: '$1$2'\n    brand_replacement: 'Nabi'\n    model_replacement: '$2'\n\n  #########\n  # Nec Medias\n  # @ref: http://www.n-keitai.com/\n  #########\n  - regex: '; *(N-\\d+[CDE]) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Nec'\n    model_replacement: '$1'\n  - regex: '; ?(NEC-)(.*) Build/'\n    device_replacement: '$1$2'\n    brand_replacement: 'Nec'\n    model_replacement: '$2'\n  - regex: '; *(LT-NA7) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Nec'\n    model_replacement: 'Lifetouch Note'\n\n  #########\n  # Nextbook\n  # @ref: http://nextbookusa.com\n  #########\n  - regex: '; *(NXM\\d+[A-z0-9_]*|Next\\d[A-z0-9_ \\-]*|NEXT\\d[A-z0-9_ \\-]*|Nextbook [A-z0-9_ ]*|DATAM803HC|M805)(?: Build|[\\);])'\n    device_replacement: '$1'\n    brand_replacement: 'Nextbook'\n    model_replacement: '$1'\n\n  #########\n  # Nokia\n  # @ref: http://www.nokia.com\n  #########\n  - regex: '; *(Nokia)([ _\\-]*)([^;/]*) Build'\n    regex_flag: 'i'\n    device_replacement: '$1$2$3'\n    brand_replacement: 'Nokia'\n    model_replacement: '$3'\n\n  #########\n  # Nook\n  # @ref:\n  # TODO nook browser/1.0\n  #########\n  - regex: '; *(Nook ?|Barnes & Noble Nook |BN )([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Nook'\n    model_replacement: '$2'\n  - regex: '; *(NOOK )?(BNRV200|BNRV200A|BNTV250|BNTV250A|BNTV400|BNTV600|LogicPD Zoom2) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Nook'\n    model_replacement: '$2'\n  - regex: '; Build/(Nook)'\n    device_replacement: '$1'\n    brand_replacement: 'Nook'\n    model_replacement: 'Tablet'\n\n  #########\n  # Olivetti\n  # @ref: http://www.olivetti.de/EN/Page/t02/view_html?idp=348\n  #########\n  - regex: '; *(OP110|OliPad[^;/]+) Build'\n    device_replacement: 'Olivetti $1'\n    brand_replacement: 'Olivetti'\n    model_replacement: '$1'\n\n  #########\n  # Omega\n  # @ref: http://omega-technology.eu/en/produkty/346/tablets\n  # @note: MID tablets might get matched by CobyKyros first\n  # @models: (T107|MID(?:700[2-5]|7031|7108|7132|750[02]|8001|8500|9001|971[12])\n  #########\n  - regex: '; *OMEGA[ _\\-](MID[^;/]+) Build'\n    device_replacement: 'Omega $1'\n    brand_replacement: 'Omega'\n    model_replacement: '$1'\n  - regex: '^(MID7500|MID\\d+) Mozilla/5\\.0 \\(iPad;'\n    device_replacement: 'Omega $1'\n    brand_replacement: 'Omega'\n    model_replacement: '$1'\n\n  #########\n  # OpenPeak\n  # @ref: https://support.google.com/googleplay/answer/1727131?hl=en\n  #########\n  - regex: '; *((?:CIUS|cius)[^;/]*) Build'\n    device_replacement: 'Openpeak $1'\n    brand_replacement: 'Openpeak'\n    model_replacement: '$1'\n\n  #########\n  # Oppo\n  # @ref: http://en.oppo.com/products/\n  #########\n  - regex: '; *(Find ?(?:5|7a)|R8[012]\\d{1,2}|T703\\d{0,1}|U70\\d{1,2}T?|X90\\d{1,2}) Build'\n    device_replacement: 'Oppo $1'\n    brand_replacement: 'Oppo'\n    model_replacement: '$1'\n  - regex: '; *OPPO ?([^;/]+) Build/'\n    device_replacement: 'Oppo $1'\n    brand_replacement: 'Oppo'\n    model_replacement: '$1'\n\n  #########\n  # Odys\n  # @ref: http://odys.de\n  #########\n  - regex: '; *(?:Odys\\-|ODYS\\-|ODYS )([^;/]+) Build'\n    device_replacement: 'Odys $1'\n    brand_replacement: 'Odys'\n    model_replacement: '$1'\n  - regex: '; *(SELECT) ?(7) Build'\n    device_replacement: 'Odys $1 $2'\n    brand_replacement: 'Odys'\n    model_replacement: '$1 $2'\n  - regex: '; *(PEDI)_(PLUS)_(W) Build'\n    device_replacement: 'Odys $1 $2 $3'\n    brand_replacement: 'Odys'\n    model_replacement: '$1 $2 $3'\n  # Weltbild - Tablet PC 4 = Cat Phoenix = Odys Tablet PC 4?\n  - regex: '; *(AEON|BRAVIO|FUSION|FUSION2IN1|Genio|EOS10|IEOS[^;/]*|IRON|Loox|LOOX|LOOX Plus|Motion|NOON|NOON_PRO|NEXT|OPOS|PEDI[^;/]*|PRIME[^;/]*|STUDYTAB|TABLO|Tablet-PC-4|UNO_X8|XELIO[^;/]*|Xelio ?\\d+ ?[Pp]ro|XENO10|XPRESS PRO) Build'\n    device_replacement: 'Odys $1'\n    brand_replacement: 'Odys'\n    model_replacement: '$1'\n\n  #########\n  # OnePlus\n  # @ref https://oneplus.net/\n  #########\n  - regex: '; (ONE [a-zA-Z]\\d+) Build/'\n    device_replacement: 'OnePlus $1'\n    brand_replacement: 'OnePlus'\n    model_replacement: '$1'\n  - regex: '; (ONEPLUS [a-zA-Z]\\d+) Build/'\n    device_replacement: 'OnePlus $1'\n    brand_replacement: 'OnePlus'\n    model_replacement: '$1'\n\n  #########\n  # Orion\n  # @ref: http://www.orion.ua/en/products/computer-products/tablet-pcs.html\n  #########\n  - regex: '; *(TP-\\d+) Build/'\n    device_replacement: 'Orion $1'\n    brand_replacement: 'Orion'\n    model_replacement: '$1'\n\n  #########\n  # PackardBell\n  # @ref: http://www.packardbell.com/pb/en/AE/content/productgroup/tablets\n  #########\n  - regex: '; *(G100W?) Build/'\n    device_replacement: 'PackardBell $1'\n    brand_replacement: 'PackardBell'\n    model_replacement: '$1'\n\n  #########\n  # Panasonic\n  # @ref: http://panasonic.jp/mobile/\n  # @models: T11, T21, T31, P11, P51, Eluga Power, Eluga DL1\n  # @models: (tab) Toughpad FZ-A1, Toughpad JT-B1\n  #########\n  - regex: '; *(Panasonic)[_ ]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  # Toughpad\n  - regex: '; *(FZ-A1B|JT-B1) Build'\n    device_replacement: 'Panasonic $1'\n    brand_replacement: 'Panasonic'\n    model_replacement: '$1'\n  # Eluga Power\n  - regex: '; *(dL1|DL1) Build'\n    device_replacement: 'Panasonic $1'\n    brand_replacement: 'Panasonic'\n    model_replacement: '$1'\n\n  #########\n  # Pantech\n  # @href: http://www.pantech.co.kr/en/prod/prodList.do?gbrand=PANTECH\n  # @href: http://www.pantech.co.kr/en/prod/prodList.do?gbrand=VEGA\n  # @models: ADR8995, ADR910L, ADR930VW, C790, CDM8992, CDM8999, IS06, IS11PT, P2000, P2020, P2030, P4100, P5000, P6010, P6020, P6030, P7000, P7040, P8000, P8010, P9020, P9050, P9060, P9070, P9090, PT001, PT002, PT003, TXT8040, TXT8045, VEGA PTL21\n  #########\n  - regex: '; *(SKY[ _])?(IM\\-[AT]\\d{3}[^;/]+).* Build/'\n    device_replacement: 'Pantech $1$2'\n    brand_replacement: 'Pantech'\n    model_replacement: '$1$2'\n  - regex: '; *((?:ADR8995|ADR910L|ADR930L|ADR930VW|PTL21|P8000)(?: 4G)?) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Pantech'\n    model_replacement: '$1'\n  - regex: '; *Pantech([^;/]+).* Build/'\n    device_replacement: 'Pantech $1'\n    brand_replacement: 'Pantech'\n    model_replacement: '$1'\n\n  #########\n  # Papayre\n  # @ref: http://grammata.es/\n  #########\n  - regex: '; *(papyre)[ _\\-]([^;/]+) Build/'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Papyre'\n    model_replacement: '$2'\n\n  #########\n  # Pearl\n  # @ref: http://www.pearl.de/c-1540.shtml\n  #########\n  - regex: '; *(?:Touchlet )?(X10\\.[^;/]+) Build/'\n    device_replacement: 'Pearl $1'\n    brand_replacement: 'Pearl'\n    model_replacement: '$1'\n\n  #########\n  # Phicomm\n  # @ref: http://www.phicomm.com.cn/\n  #########\n  - regex: '; PHICOMM (i800) Build/'\n    device_replacement: 'Phicomm $1'\n    brand_replacement: 'Phicomm'\n    model_replacement: '$1'\n  - regex: '; PHICOMM ([^;/]+) Build/'\n    device_replacement: 'Phicomm $1'\n    brand_replacement: 'Phicomm'\n    model_replacement: '$1'\n  - regex: '; *(FWS\\d{3}[^;/]+) Build/'\n    device_replacement: 'Phicomm $1'\n    brand_replacement: 'Phicomm'\n    model_replacement: '$1'\n\n  #########\n  # Philips\n  # @ref: http://www.support.philips.com/support/catalog/products.jsp?_dyncharset=UTF-8&country=&categoryid=MOBILE_PHONES_SMART_SU_CN_CARE&userLanguage=en&navCount=2&groupId=PC_PRODUCTS_AND_PHONES_GR_CN_CARE&catalogType=&navAction=push&userCountry=cn&title=Smartphones&cateId=MOBILE_PHONES_CA_CN_CARE\n  # @TODO: Philips Tablets User-Agents missing!\n  # @ref: http://www.support.philips.com/support/catalog/products.jsp?_dyncharset=UTF-8&country=&categoryid=ENTERTAINMENT_TABLETS_SU_CN_CARE&userLanguage=en&navCount=0&groupId=&catalogType=&navAction=push&userCountry=cn&title=Entertainment+Tablets&cateId=TABLETS_CA_CN_CARE\n  #########\n  # @note: this a best guess according to available philips models. Need more User-Agents\n  - regex: '; *(D633|D822|D833|T539|T939|V726|W335|W336|W337|W3568|W536|W5510|W626|W632|W6350|W6360|W6500|W732|W736|W737|W7376|W820|W832|W8355|W8500|W8510|W930) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Philips'\n    model_replacement: '$1'\n  - regex: '; *(?:Philips|PHILIPS)[ _]([^;/]+) Build'\n    device_replacement: 'Philips $1'\n    brand_replacement: 'Philips'\n    model_replacement: '$1'\n\n  #########\n  # Pipo\n  # @ref: http://www.pipo.cn/En/\n  #########\n  - regex: 'Android 4\\..*; *(M[12356789]|U[12368]|S[123])\\ ?(pro)? Build'\n    device_replacement: 'Pipo $1$2'\n    brand_replacement: 'Pipo'\n    model_replacement: '$1$2'\n\n  #########\n  # Ployer\n  # @ref: http://en.ployer.cn/\n  #########\n  - regex: '; *(MOMO[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Ployer'\n    model_replacement: '$1'\n\n  #########\n  # Polaroid/ Acho\n  # @ref: http://polaroidstore.com/store/start.asp?category_id=382&category_id2=0&order=title&filter1=&filter2=&filter3=&view=all\n  #########\n  - regex: '; *(?:Polaroid[ _])?((?:MIDC\\d{3,}|PMID\\d{2,}|PTAB\\d{3,})[^;/]*)(\\/[^;/]*)? Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Polaroid'\n    model_replacement: '$1'\n  - regex: '; *(?:Polaroid )(Tablet) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Polaroid'\n    model_replacement: '$1'\n\n  #########\n  # Pomp\n  # @ref: http://pompmobileshop.com/\n  #########\n  #~ TODO\n  - regex: '; *(POMP)[ _\\-](.+?) *(?:Build|[;/\\)])'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Pomp'\n    model_replacement: '$2'\n\n  #########\n  # Positivo\n  # @ref: http://www.positivoinformatica.com.br/www/pessoal/tablet-ypy/\n  #########\n  - regex: '; *(TB07STA|TB10STA|TB07FTA|TB10FTA) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Positivo'\n    model_replacement: '$1'\n  - regex: '; *(?:Positivo )?((?:YPY|Ypy)[^;/]+) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Positivo'\n    model_replacement: '$1'\n\n  #########\n  # POV\n  # @ref: http://www.pointofview-online.com/default2.php\n  # @TODO: Smartphone Models MOB-3515, MOB-5045-B missing\n  #########\n  - regex: '; *(MOB-[^;/]+) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'POV'\n    model_replacement: '$1'\n  - regex: '; *POV[ _\\-]([^;/]+) Build/'\n    device_replacement: 'POV $1'\n    brand_replacement: 'POV'\n    model_replacement: '$1'\n  - regex: '; *((?:TAB-PLAYTAB|TAB-PROTAB|PROTAB|PlayTabPro|Mobii[ _\\-]|TAB-P)[^;/]*) Build/'\n    device_replacement: 'POV $1'\n    brand_replacement: 'POV'\n    model_replacement: '$1'\n\n  #########\n  # Prestigio\n  # @ref: http://www.prestigio.com/catalogue/MultiPhones\n  # @ref: http://www.prestigio.com/catalogue/MultiPads\n  #########\n  - regex: '; *(?:Prestigio )?((?:PAP|PMP)\\d[^;/]+) Build/'\n    device_replacement: 'Prestigio $1'\n    brand_replacement: 'Prestigio'\n    model_replacement: '$1'\n\n  #########\n  # Proscan\n  # @ref: http://www.proscanvideo.com/products-search.asp?itemClass=TABLET&itemnmbr=\n  #########\n  - regex: '; *(PLT[0-9]{4}.*) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Proscan'\n    model_replacement: '$1'\n\n  #########\n  # QMobile\n  # @ref: http://www.qmobile.com.pk/\n  #########\n  - regex: '; *(A2|A5|A8|A900)_?(Classic)? Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Qmobile'\n    model_replacement: '$1 $2'\n  - regex: '; *(Q[Mm]obile)_([^_]+)_([^_]+) Build'\n    device_replacement: 'Qmobile $2 $3'\n    brand_replacement: 'Qmobile'\n    model_replacement: '$2 $3'\n  - regex: '; *(Q\\-?[Mm]obile)[_ ](A[^;/]+) Build'\n    device_replacement: 'Qmobile $2'\n    brand_replacement: 'Qmobile'\n    model_replacement: '$2'\n\n  #########\n  # Qmobilevn\n  # @ref: http://qmobile.vn/san-pham.html\n  #########\n  - regex: '; *(Q\\-Smart)[ _]([^;/]+) Build/'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Qmobilevn'\n    model_replacement: '$2'\n  - regex: '; *(Q\\-?[Mm]obile)[ _\\-](S[^;/]+) Build/'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Qmobilevn'\n    model_replacement: '$2'\n\n  #########\n  # Quanta\n  # @ref: ?\n  #########\n  - regex: '; *(TA1013) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Quanta'\n    model_replacement: '$1'\n\n  #########\n  # RCA\n  # @ref: http://rcamobilephone.com/\n  #########\n  - regex: '; (RCT\\w+) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'RCA'\n    model_replacement: '$1'\n\n  #########\n  # Rockchip\n  # @ref: http://www.rock-chips.com/a/cn/product/index.html\n  # @note: manufacturer sells chipsets - I assume that these UAs are dev-boards\n  #########\n  - regex: '; *(RK\\d+),? Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Rockchip'\n    model_replacement: '$1'\n  - regex: ' Build/(RK\\d+)'\n    device_replacement: '$1'\n    brand_replacement: 'Rockchip'\n    model_replacement: '$1'\n\n  #########\n  # Samsung Android Devices\n  # @ref: http://www.samsung.com/us/mobile/cell-phones/all-products\n  #########\n  - regex: '; *(SAMSUNG |Samsung )?((?:Galaxy (?:Note II|S\\d)|GT-I9082|GT-I9205|GT-N7\\d{3}|SM-N9005)[^;/]*)\\/?[^;/]* Build/'\n    device_replacement: 'Samsung $1$2'\n    brand_replacement: 'Samsung'\n    model_replacement: '$2'\n  - regex: '; *(Google )?(Nexus [Ss](?: 4G)?) Build/'\n    device_replacement: 'Samsung $1$2'\n    brand_replacement: 'Samsung'\n    model_replacement: '$2'\n  - regex: '; *(SAMSUNG |Samsung )([^\\/]*)\\/[^ ]* Build/'\n    device_replacement: 'Samsung $2'\n    brand_replacement: 'Samsung'\n    model_replacement: '$2'\n  - regex: '; *(Galaxy(?: Ace| Nexus| S ?II+|Nexus S| with MCR 1.2| Mini Plus 4G)?) Build/'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n  - regex: '; *(SAMSUNG[ _\\-] *)+([^;/]+) Build'\n    device_replacement: 'Samsung $2'\n    brand_replacement: 'Samsung'\n    model_replacement: '$2'\n  - regex: '; *(SAMSUNG-)?(GT\\-[BINPS]\\d{4}[^\\/]*)(\\/[^ ]*) Build'\n    device_replacement: 'Samsung $1$2$3'\n    brand_replacement: 'Samsung'\n    model_replacement: '$2'\n  - regex: '(?:; *|^)((?:GT\\-[BIiNPS]\\d{4}|I9\\d{2}0[A-Za-z\\+]?\\b)[^;/\\)]*?)(?:Build|Linux|MIUI|[;/\\)])'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n  - regex: '; (SAMSUNG-)([A-Za-z0-9\\-]+).* Build/'\n    device_replacement: 'Samsung $1$2'\n    brand_replacement: 'Samsung'\n    model_replacement: '$2'\n  - regex: '; *((?:SCH|SGH|SHV|SHW|SPH|SC|SM)\\-[A-Za-z0-9 ]+)(/?[^ ]*)? Build'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n  - regex: ' ((?:SCH)\\-[A-Za-z0-9 ]+)(/?[^ ]*)? Build'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n  - regex: '; *(Behold ?(?:2|II)|YP\\-G[^;/]+|EK-GC100|SCL21|I9300) Build'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n\n  #########\n  # Sharp\n  # @ref: http://www.sharp-phone.com/en/index.html\n  # @ref: http://www.android.com/devices/?country=all&m=sharp\n  #########\n  - regex: '; *(SH\\-?\\d\\d[^;/]+|SBM\\d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Sharp'\n    model_replacement: '$1'\n  - regex: '; *(SHARP[ -])([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Sharp'\n    model_replacement: '$2'\n\n  #########\n  # Simvalley\n  # @ref: http://www.simvalley-mobile.de/\n  #########\n  - regex: '; *(SPX[_\\-]\\d[^;/]*) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Simvalley'\n    model_replacement: '$1'\n  - regex: '; *(SX7\\-PEARL\\.GmbH) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Simvalley'\n    model_replacement: '$1'\n  - regex: '; *(SP[T]?\\-\\d{2}[^;/]*) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Simvalley'\n    model_replacement: '$1'\n\n  #########\n  # SK Telesys\n  # @ref: http://www.sk-w.com/phone/phone_list.jsp\n  # @ref: http://www.android.com/devices/?country=all&m=sk-telesys\n  #########\n  - regex: '; *(SK\\-.*) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'SKtelesys'\n    model_replacement: '$1'\n\n  #########\n  # Skytex\n  # @ref: http://skytex.com/android\n  #########\n  - regex: '; *(?:SKYTEX|SX)-([^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Skytex'\n    model_replacement: '$1'\n  - regex: '; *(IMAGINE [^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Skytex'\n    model_replacement: '$1'\n\n  #########\n  # SmartQ\n  # @ref: http://en.smartdevices.com.cn/Products/\n  # @models: Z8, X7, U7H, U7, T30, T20, Ten3, V5-II, T7-3G, SmartQ5, K7, S7, Q8, T19, Ten2, Ten, R10, T7, R7, V5, V7, SmartQ7\n  #########\n  - regex: '; *(SmartQ) ?([^;/]+) Build/'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  #########\n  # Smartbitt\n  # @ref: http://www.smartbitt.com/\n  # @missing: SBT Useragents\n  #########\n  - regex: '; *(WF7C|WF10C|SBT[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Smartbitt'\n    model_replacement: '$1'\n\n  #########\n  # Softbank (Operator Branded Devices)\n  # @ref: http://www.ipentec.com/document/document.aspx?page=android-useragent\n  #########\n  - regex: '; *(SBM(?:003SH|005SH|006SH|007SH|102SH)) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Sharp'\n    model_replacement: '$1'\n  - regex: '; *(003P|101P|101P11C|102P) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Panasonic'\n    model_replacement: '$1'\n  - regex: '; *(00\\dZ) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1'\n  - regex: '; HTC(X06HT) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n  - regex: '; *(001HT|X06HT) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n  - regex: '; *(201M) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Motorola'\n    model_replacement: 'XT902'\n\n  #########\n  # Trekstor\n  # @ref: http://www.trekstor.co.uk/surftabs-en.html\n  # @note: Must come before SonyEricsson\n  #########\n  - regex: '; *(ST\\d{4}.*)Build/ST'\n    device_replacement: 'Trekstor $1'\n    brand_replacement: 'Trekstor'\n    model_replacement: '$1'\n  - regex: '; *(ST\\d{4}.*) Build/'\n    device_replacement: 'Trekstor $1'\n    brand_replacement: 'Trekstor'\n    model_replacement: '$1'\n\n  #########\n  # SonyEricsson\n  # @note: Must come before nokia since they also use symbian\n  # @ref: http://www.android.com/devices/?country=all&m=sony-ericssons\n  # @TODO: type!\n  #########\n  # android matchers\n  - regex: '; *(Sony ?Ericsson ?)([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'SonyEricsson'\n    model_replacement: '$2'\n  - regex: '; *((?:SK|ST|E|X|LT|MK|MT|WT)\\d{2}[a-z0-9]*(?:-o)?|R800i|U20i) Build'\n    device_replacement: '$1'\n    brand_replacement: 'SonyEricsson'\n    model_replacement: '$1'\n  # TODO X\\d+ is wrong\n  - regex: '; *(Xperia (?:A8|Arc|Acro|Active|Live with Walkman|Mini|Neo|Play|Pro|Ray|X\\d+)[^;/]*) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'SonyEricsson'\n    model_replacement: '$1'\n\n  #########\n  # Sony\n  # @ref: http://www.sonymobile.co.jp/index.html\n  # @ref: http://www.sonymobile.com/global-en/products/phones/\n  # @ref: http://www.sony.jp/tablet/\n  #########\n  - regex: '; Sony (Tablet[^;/]+) Build'\n    device_replacement: 'Sony $1'\n    brand_replacement: 'Sony'\n    model_replacement: '$1'\n  - regex: '; Sony ([^;/]+) Build'\n    device_replacement: 'Sony $1'\n    brand_replacement: 'Sony'\n    model_replacement: '$1'\n  - regex: '; *(Sony)([A-Za-z0-9\\-]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  - regex: '; *(Xperia [^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Sony'\n    model_replacement: '$1'\n  - regex: '; *(C(?:1[0-9]|2[0-9]|53|55|6[0-9])[0-9]{2}|D[25]\\d{3}|D6[56]\\d{2}) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Sony'\n    model_replacement: '$1'\n  - regex: '; *(SGP\\d{3}|SGPT\\d{2}) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Sony'\n    model_replacement: '$1'\n  - regex: '; *(NW-Z1000Series) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Sony'\n    model_replacement: '$1'\n\n  ##########\n  # Sony PlayStation\n  # @ref: http://playstation.com\n  # The Vita spoofs the Kindle\n  ##########\n  - regex: 'PLAYSTATION 3'\n    device_replacement: 'PlayStation 3'\n    brand_replacement: 'Sony'\n    model_replacement: 'PlayStation 3'\n  - regex: '(PlayStation (?:Portable|Vita|\\d+))'\n    device_replacement: '$1'\n    brand_replacement: 'Sony'\n    model_replacement: '$1'\n\n  #########\n  # Spice\n  # @ref: http://www.spicemobilephones.co.in/\n  #########\n  - regex: '; *((?:CSL_Spice|Spice|SPICE|CSL)[ _\\-]?)?([Mm][Ii])([ _\\-])?(\\d{3}[^;/]*) Build/'\n    device_replacement: '$1$2$3$4'\n    brand_replacement: 'Spice'\n    model_replacement: 'Mi$4'\n\n  #########\n  # Sprint (Operator Branded Devices)\n  # @ref:\n  #########\n  - regex: '; *(Sprint )(.+?) *(?:Build|[;/])'\n    device_replacement: '$1$2'\n    brand_replacement: 'Sprint'\n    model_replacement: '$2'\n  - regex: '\\b(Sprint)[: ]([^;,/ ]+)'\n    device_replacement: '$1$2'\n    brand_replacement: 'Sprint'\n    model_replacement: '$2'\n\n  #########\n  # Tagi\n  # @ref: ??\n  #########\n  - regex: '; *(TAGI[ ]?)(MID) ?([^;/]+) Build/'\n    device_replacement: '$1$2$3'\n    brand_replacement: 'Tagi'\n    model_replacement: '$2$3'\n\n  #########\n  # Tecmobile\n  # @ref: http://www.tecmobile.com/\n  #########\n  - regex: '; *(Oyster500|Opal 800) Build'\n    device_replacement: 'Tecmobile $1'\n    brand_replacement: 'Tecmobile'\n    model_replacement: '$1'\n\n  #########\n  # Tecno\n  # @ref: www.tecno-mobile.com/\u200E\n  #########\n  - regex: '; *(TECNO[ _])([^;/]+) Build/'\n    device_replacement: '$1$2'\n    brand_replacement: 'Tecno'\n    model_replacement: '$2'\n\n  #########\n  # Telechips, Techvision evaluation boards\n  # @ref:\n  #########\n  - regex: '; *Android for (Telechips|Techvision) ([^ ]+) '\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  #########\n  # Telstra\n  # @ref: http://www.telstra.com.au/home-phone/thub-2/\n  # @ref: https://support.google.com/googleplay/answer/1727131?hl=en\n  #########\n  - regex: '; *(T-Hub2) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Telstra'\n    model_replacement: '$1'\n\n  #########\n  # Terra\n  # @ref: http://www.wortmann.de/\n  #########\n  - regex: '; *(PAD) ?(100[12]) Build/'\n    device_replacement: 'Terra $1$2'\n    brand_replacement: 'Terra'\n    model_replacement: '$1$2'\n\n  #########\n  # Texet\n  # @ref: http://www.texet.ru/tablet/\n  #########\n  - regex: '; *(T[BM]-\\d{3}[^;/]+) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Texet'\n    model_replacement: '$1'\n\n  #########\n  # Thalia\n  # @ref: http://www.thalia.de/shop/tolino-shine-ereader/show/\n  #########\n  - regex: '; *(tolino [^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Thalia'\n    model_replacement: '$1'\n  - regex: '; *Build/.* (TOLINO_BROWSER)'\n    device_replacement: '$1'\n    brand_replacement: 'Thalia'\n    model_replacement: 'Tolino Shine'\n\n  #########\n  # Thl\n  # @ref: http://en.thl.com.cn/Mobile\n  # @ref: http://thlmobilestore.com\n  #########\n  - regex: '; *(?:CJ[ -])?(ThL|THL)[ -]([^;/]+) Build/'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Thl'\n    model_replacement: '$2'\n  - regex: '; *(T100|T200|T5|W100|W200|W8s) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Thl'\n    model_replacement: '$1'\n\n  #########\n  # T-Mobile (Operator Branded Devices)\n  #########\n  # @ref: https://en.wikipedia.org/wiki/HTC_Hero\n  - regex: '; *(T-Mobile[ _]G2[ _]Touch) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: 'Hero'\n  # @ref: https://en.wikipedia.org/wiki/HTC_Desire_Z\n  - regex: '; *(T-Mobile[ _]G2) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: 'Desire Z'\n  - regex: '; *(T-Mobile myTouch Q) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Huawei'\n    model_replacement: 'U8730'\n  - regex: '; *(T-Mobile myTouch) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Huawei'\n    model_replacement: 'U8680'\n  - regex: '; *(T-Mobile_Espresso) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: 'Espresso'\n  - regex: '; *(T-Mobile G1) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: 'Dream'\n  - regex: '\\b(T-Mobile ?)?(myTouch)[ _]?([34]G)[ _]?([^\\/]*) (?:Mozilla|Build)'\n    device_replacement: '$1$2 $3 $4'\n    brand_replacement: 'HTC'\n    model_replacement: '$2 $3 $4'\n  - regex: '\\b(T-Mobile)_([^_]+)_(.*) Build'\n    device_replacement: '$1 $2 $3'\n    brand_replacement: 'Tmobile'\n    model_replacement: '$2 $3'\n  - regex: '\\b(T-Mobile)[_ ]?(.*?)Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Tmobile'\n    model_replacement: '$2'\n\n  #########\n  # Tomtec\n  # @ref: http://www.tom-tec.eu/pages/tablets.php\n  #########\n  - regex: ' (ATP[0-9]{4}) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Tomtec'\n    model_replacement: '$1'\n\n  #########\n  # Tooky\n  # @ref: http://www.tookymobile.com/\n  #########\n  - regex: ' *(TOOKY)[ _\\-]([^;/]+) ?(?:Build|;)'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Tooky'\n    model_replacement: '$2'\n\n  #########\n  # Toshiba\n  # @ref: http://www.toshiba.co.jp/\n  # @missing: LT170, Thrive 7, TOSHIBA STB10\n  #########\n  - regex: '\\b(TOSHIBA_AC_AND_AZ|TOSHIBA_FOLIO_AND_A|FOLIO_AND_A)'\n    device_replacement: '$1'\n    brand_replacement: 'Toshiba'\n    model_replacement: 'Folio 100'\n  - regex: '; *([Ff]olio ?100) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Toshiba'\n    model_replacement: 'Folio 100'\n  - regex: '; *(AT[0-9]{2,3}(?:\\-A|LE\\-A|PE\\-A|SE|a)?|AT7-A|AT1S0|Hikari-iFrame/WDPF-[^;/]+|THRiVE|Thrive) Build/'\n    device_replacement: 'Toshiba $1'\n    brand_replacement: 'Toshiba'\n    model_replacement: '$1'\n\n  #########\n  # Touchmate\n  # @ref: http://touchmatepc.com/new/\n  #########\n  - regex: '; *(TM-MID\\d+[^;/]+|TOUCHMATE|MID-750) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Touchmate'\n    model_replacement: '$1'\n  # @todo: needs verification user-agents missing\n  - regex: '; *(TM-SM\\d+[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Touchmate'\n    model_replacement: '$1'\n\n  #########\n  # Treq\n  # @ref: http://www.treq.co.id/product\n  #########\n  - regex: '; *(A10 [Bb]asic2?) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Treq'\n    model_replacement: '$1'\n  - regex: '; *(TREQ[ _\\-])([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1$2'\n    brand_replacement: 'Treq'\n    model_replacement: '$2'\n\n  #########\n  # Umeox\n  # @ref: http://umeox.com/\n  # @models: A936|A603|X-5|X-3\n  #########\n  # @todo: guessed markers\n  - regex: '; *(X-?5|X-?3) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Umeox'\n    model_replacement: '$1'\n  # @todo: guessed markers\n  - regex: '; *(A502\\+?|A936|A603|X1|X2) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Umeox'\n    model_replacement: '$1'\n\n  #########\n  # Versus\n  # @ref: http://versusuk.com/support.html\n  #########\n  - regex: '(TOUCH(?:TAB|PAD).+?) Build/'\n    regex_flag: 'i'\n    device_replacement: 'Versus $1'\n    brand_replacement: 'Versus'\n    model_replacement: '$1'\n\n  #########\n  # Vertu\n  # @ref: http://www.vertu.com/\n  #########\n  - regex: '(VERTU) ([^;/]+) Build/'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Vertu'\n    model_replacement: '$2'\n\n  #########\n  # Videocon\n  # @ref: http://www.videoconmobiles.com\n  #########\n  - regex: '; *(Videocon)[ _\\-]([^;/]+) *(?:Build|;)'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Videocon'\n    model_replacement: '$2'\n  - regex: ' (VT\\d{2}[A-Za-z]*) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Videocon'\n    model_replacement: '$1'\n\n  #########\n  # Viewsonic\n  # @ref: http://viewsonic.com\n  #########\n  - regex: '; *((?:ViewPad|ViewPhone|VSD)[^;/]+) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Viewsonic'\n    model_replacement: '$1'\n  - regex: '; *(ViewSonic-)([^;/]+) Build/'\n    device_replacement: '$1$2'\n    brand_replacement: 'Viewsonic'\n    model_replacement: '$2'\n  - regex: '; *(GTablet.*) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Viewsonic'\n    model_replacement: '$1'\n\n  #########\n  # vivo\n  # @ref: http://vivo.cn/\n  #########\n  - regex: '; *([Vv]ivo)[ _]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'vivo'\n    model_replacement: '$2'\n\n  #########\n  # Vodafone (Operator Branded Devices)\n  # @ref: ??\n  #########\n  - regex: '(Vodafone) (.*) Build/'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  #########\n  # Walton\n  # @ref: http://www.waltonbd.com/\n  #########\n  - regex: '; *(?:Walton[ _\\-])?(Primo[ _\\-][^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: 'Walton $1'\n    brand_replacement: 'Walton'\n    model_replacement: '$1'\n\n  #########\n  # Wiko\n  # @ref: http://fr.wikomobile.com/collection.php?s=Smartphones\n  #########\n  - regex: '; *(?:WIKO[ \\-])?(CINK\\+?|BARRY|BLOOM|DARKFULL|DARKMOON|DARKNIGHT|DARKSIDE|FIZZ|HIGHWAY|IGGY|OZZY|RAINBOW|STAIRWAY|SUBLIM|WAX|CINK [^;/]+) Build/'\n    regex_flag: 'i'\n    device_replacement: 'Wiko $1'\n    brand_replacement: 'Wiko'\n    model_replacement: '$1'\n\n  #########\n  # WellcoM\n  # @ref: ??\n  #########\n  - regex: '; *WellcoM-([^;/]+) Build'\n    device_replacement: 'Wellcom $1'\n    brand_replacement: 'Wellcom'\n    model_replacement: '$1'\n\n  ##########\n  # WeTab\n  # @ref: http://wetab.mobi/\n  ##########\n  - regex: '(?:(WeTab)-Browser|; (wetab) Build)'\n    device_replacement: '$1'\n    brand_replacement: 'WeTab'\n    model_replacement: 'WeTab'\n\n  #########\n  # Wolfgang\n  # @ref: http://wolfgangmobile.com/\n  #########\n  - regex: '; *(AT-AS[^;/]+) Build'\n    device_replacement: 'Wolfgang $1'\n    brand_replacement: 'Wolfgang'\n    model_replacement: '$1'\n\n  #########\n  # Woxter\n  # @ref: http://www.woxter.es/es-es/categories/index\n  #########\n  - regex: '; *(?:Woxter|Wxt) ([^;/]+) Build'\n    device_replacement: 'Woxter $1'\n    brand_replacement: 'Woxter'\n    model_replacement: '$1'\n\n  #########\n  # Yarvik Zania\n  # @ref: http://yarvik.com\n  #########\n  - regex: '; *(?:Xenta |Luna )?(TAB[234][0-9]{2}|TAB0[78]-\\d{3}|TAB0?9-\\d{3}|TAB1[03]-\\d{3}|SMP\\d{2}-\\d{3}) Build/'\n    device_replacement: 'Yarvik $1'\n    brand_replacement: 'Yarvik'\n    model_replacement: '$1'\n\n  #########\n  # Yifang\n  # @note: Needs to be at the very last as manufacturer builds for other brands.\n  # @ref: http://www.yifangdigital.com/\n  # @models: M1010, M1011, M1007, M1008, M1005, M899, M899LP, M909, M8000,\n  #   M8001, M8002, M8003, M849, M815, M816, M819, M805, M878, M780LPW,\n  #   M778, M7000, M7000AD, M7000NBD, M7001, M7002, M7002KBD, M777, M767,\n  #   M789, M799, M769, M757, M755, M753, M752, M739, M729, M723, M712, M727\n  #########\n  - regex: '; *([A-Z]{2,4})(M\\d{3,}[A-Z]{2})([^;\\)\\/]*)(?: Build|[;\\)])'\n    device_replacement: 'Yifang $1$2$3'\n    brand_replacement: 'Yifang'\n    model_replacement: '$2'\n\n  #########\n  # XiaoMi\n  # @ref: http://www.xiaomi.com/event/buyphone\n  #########\n  - regex: '; *((MI|HM|MI-ONE|Redmi)[ -](NOTE |Note )?[^;/]*) (Build|MIUI)/'\n    device_replacement: 'XiaoMi $1'\n    brand_replacement: 'XiaoMi'\n    model_replacement: '$1'\n\n  #########\n  # Xolo\n  # @ref: http://www.xolo.in/\n  #########\n  - regex: '; *XOLO[ _]([^;/]*tab.*) Build'\n    regex_flag: 'i'\n    device_replacement: 'Xolo $1'\n    brand_replacement: 'Xolo'\n    model_replacement: '$1'\n  - regex: '; *XOLO[ _]([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: 'Xolo $1'\n    brand_replacement: 'Xolo'\n    model_replacement: '$1'\n  - regex: '; *(q\\d0{2,3}[a-z]?) Build'\n    regex_flag: 'i'\n    device_replacement: 'Xolo $1'\n    brand_replacement: 'Xolo'\n    model_replacement: '$1'\n\n  #########\n  # Xoro\n  # @ref: http://www.xoro.de/produkte/\n  #########\n  - regex: '; *(PAD ?[79]\\d+[^;/]*|TelePAD\\d+[^;/]) Build'\n    device_replacement: 'Xoro $1'\n    brand_replacement: 'Xoro'\n    model_replacement: '$1'\n\n  #########\n  # Zopo\n  # @ref: http://www.zopomobiles.com/products.html\n  #########\n  - regex: '; *(?:(?:ZOPO|Zopo)[ _]([^;/]+)|(ZP ?(?:\\d{2}[^;/]+|C2))|(C[2379])) Build'\n    device_replacement: '$1$2$3'\n    brand_replacement: 'Zopo'\n    model_replacement: '$1$2$3'\n\n  #########\n  # ZiiLabs\n  # @ref: http://www.ziilabs.com/products/platforms/androidreferencetablets.php\n  #########\n  - regex: '; *(ZiiLABS) (Zii[^;/]*) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'ZiiLabs'\n    model_replacement: '$2'\n  - regex: '; *(Zii)_([^;/]*) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'ZiiLabs'\n    model_replacement: '$2'\n\n  #########\n  # ZTE\n  # @ref: http://www.ztedevices.com/\n  #########\n  - regex: '; *(ARIZONA|(?:ATLAS|Atlas) W|D930|Grand (?:[SX][^;]*|Era|Memo[^;]*)|JOE|(?:Kis|KIS)\\b[^;]*|Libra|Light [^;]*|N8[056][01]|N850L|N8000|N9[15]\\d{2}|N9810|NX501|Optik|(?:Vip )Racer[^;]*|RacerII|RACERII|San Francisco[^;]*|V9[AC]|V55|V881|Z[679][0-9]{2}[A-z]?) Build'\n    device_replacement: '$1'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1'\n  - regex: '; *([A-Z]\\d+)_USA_[^;]* Build'\n    device_replacement: '$1'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1'\n  - regex: '; *(SmartTab\\d+)[^;]* Build'\n    device_replacement: '$1'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1'\n  - regex: '; *(?:Blade|BLADE|ZTE-BLADE)([^;/]*) Build'\n    device_replacement: 'ZTE Blade$1'\n    brand_replacement: 'ZTE'\n    model_replacement: 'Blade$1'\n  - regex: '; *(?:Skate|SKATE|ZTE-SKATE)([^;/]*) Build'\n    device_replacement: 'ZTE Skate$1'\n    brand_replacement: 'ZTE'\n    model_replacement: 'Skate$1'\n  - regex: '; *(Orange |Optimus )(Monte Carlo|San Francisco) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1$2'\n  - regex: '; *(?:ZXY-ZTE_|ZTE\\-U |ZTE[\\- _]|ZTE-C[_ ])([^;/]+) Build'\n    device_replacement: 'ZTE $1'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1'\n  # operator specific\n  - regex: '; (BASE) (lutea|Lutea 2|Tab[^;]*) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1 $2'\n  - regex: '; (Avea inTouch 2|soft stone|tmn smart a7|Movistar[ _]Link) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1'\n  - regex: '; *(vp9plus)\\)'\n    device_replacement: '$1'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1'\n\n  ##########\n  # Zync\n  # @ref: http://www.zync.in/index.php/our-products/tablet-phablets\n  ##########\n  - regex: '; ?(Cloud[ _]Z5|z1000|Z99 2G|z99|z930|z999|z990|z909|Z919|z900) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Zync'\n    model_replacement: '$1'\n\n  ##########\n  # Kindle\n  # @note: Needs to be after Sony Playstation Vita as this UA contains Silk/3.2\n  # @ref: https://developer.amazon.com/sdk/fire/specifications.html\n  # @ref: http://amazonsilk.wordpress.com/useful-bits/silk-user-agent/\n  ##########\n  - regex: '; ?(KFOT|Kindle Fire) Build\\b'\n    device_replacement: 'Kindle Fire'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire'\n  - regex: '; ?(KFOTE|Amazon Kindle Fire2) Build\\b'\n    device_replacement: 'Kindle Fire 2'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire 2'\n  - regex: '; ?(KFTT) Build\\b'\n    device_replacement: 'Kindle Fire HD'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire HD 7\"'\n  - regex: '; ?(KFJWI) Build\\b'\n    device_replacement: 'Kindle Fire HD 8.9\" WiFi'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire HD 8.9\" WiFi'\n  - regex: '; ?(KFJWA) Build\\b'\n    device_replacement: 'Kindle Fire HD 8.9\" 4G'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire HD 8.9\" 4G'\n  - regex: '; ?(KFSOWI) Build\\b'\n    device_replacement: 'Kindle Fire HD 7\" WiFi'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire HD 7\" WiFi'\n  - regex: '; ?(KFTHWI) Build\\b'\n    device_replacement: 'Kindle Fire HDX 7\" WiFi'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire HDX 7\" WiFi'\n  - regex: '; ?(KFTHWA) Build\\b'\n    device_replacement: 'Kindle Fire HDX 7\" 4G'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire HDX 7\" 4G'\n  - regex: '; ?(KFAPWI) Build\\b'\n    device_replacement: 'Kindle Fire HDX 8.9\" WiFi'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire HDX 8.9\" WiFi'\n  - regex: '; ?(KFAPWA) Build\\b'\n    device_replacement: 'Kindle Fire HDX 8.9\" 4G'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire HDX 8.9\" 4G'\n  - regex: '; ?Amazon ([^;/]+) Build\\b'\n    device_replacement: '$1'\n    brand_replacement: 'Amazon'\n    model_replacement: '$1'\n  - regex: '; ?(Kindle) Build\\b'\n    device_replacement: 'Kindle'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle'\n  - regex: '; ?(Silk)/(\\d+)\\.(\\d+)(?:\\.([0-9\\-]+))? Build\\b'\n    device_replacement: 'Kindle Fire'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire$2'\n  - regex: ' (Kindle)/(\\d+\\.\\d+)'\n    device_replacement: 'Kindle'\n    brand_replacement: 'Amazon'\n    model_replacement: '$1 $2'\n  - regex: ' (Silk|Kindle)/(\\d+)\\.'\n    device_replacement: 'Kindle'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle'\n\n  #########\n  # Devices from chinese manufacturer(s)\n  # @note: identified by x-wap-profile http://218.249.47.94/Xianghe/.*\n  #########\n  - regex: '(sprd)\\-([^/]+)/'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  # @ref: http://eshinechina.en.alibaba.com/\n  - regex: '; *(H\\d{2}00\\+?) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Hero'\n    model_replacement: '$1'\n  - regex: '; *(iphone|iPhone5) Build/'\n    device_replacement: 'Xianghe $1'\n    brand_replacement: 'Xianghe'\n    model_replacement: '$1'\n  - regex: '; *(e\\d{4}[a-z]?_?v\\d+|v89_[^;/]+)[^;/]+ Build/'\n    device_replacement: 'Xianghe $1'\n    brand_replacement: 'Xianghe'\n    model_replacement: '$1'\n\n  #########\n  # Cellular\n  # @ref:\n  # @note: Operator branded devices\n  #########\n  - regex: '\\bUSCC[_\\-]?([^ ;/\\)]+)'\n    device_replacement: '$1'\n    brand_replacement: 'Cellular'\n    model_replacement: '$1'\n\n  ######################################################################\n  # Windows Phone Parsers\n  ######################################################################\n\n  #########\n  # Alcatel Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:ALCATEL)[^;]*; *([^;,\\)]+)'\n    device_replacement: 'Alcatel $1'\n    brand_replacement: 'Alcatel'\n    model_replacement: '$1'\n\n  #########\n  # Asus Windows Phones\n  #########\n  #~ - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?(?:ASUS|Asus)[^;]*; *([^;,\\)]+)'\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?(?:ASUS|Asus)[^;]*; *([^;,\\)]+)'\n    device_replacement: 'Asus $1'\n    brand_replacement: 'Asus'\n    model_replacement: '$1'\n\n  #########\n  # Dell Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:DELL|Dell)[^;]*; *([^;,\\)]+)'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: '$1'\n\n  #########\n  # HTC Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?(?:HTC|Htc|HTC_blocked[^;]*)[^;]*; *(?:HTC)?([^;,\\)]+)'\n    device_replacement: 'HTC $1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n\n  #########\n  # Huawei Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:HUAWEI)[^;]*; *(?:HUAWEI )?([^;,\\)]+)'\n    device_replacement: 'Huawei $1'\n    brand_replacement: 'Huawei'\n    model_replacement: '$1'\n\n  #########\n  # LG Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:LG|Lg)[^;]*; *(?:LG[ \\-])?([^;,\\)]+)'\n    device_replacement: 'LG $1'\n    brand_replacement: 'LG'\n    model_replacement: '$1'\n\n  #########\n  # Noka Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:NOKIA|Nokia)[^;]*; *(?:NOKIA ?|Nokia ?|LUMIA ?|[Ll]umia ?)*(\\d{3,}[^;\\)]*)'\n    device_replacement: 'Lumia $1'\n    brand_replacement: 'Nokia'\n    model_replacement: 'Lumia $1'\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:NOKIA|Nokia)[^;]*; *(RM-\\d{3,})'\n    device_replacement: 'Nokia $1'\n    brand_replacement: 'Nokia'\n    model_replacement: '$1'\n  - regex: '(?:Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)]|WPDesktop;) ?(?:ARM; ?Touch; ?|Touch; ?)?(?:NOKIA|Nokia)[^;]*; *(?:NOKIA ?|Nokia ?|LUMIA ?|[Ll]umia ?)*([^;\\)]+)'\n    device_replacement: 'Nokia $1'\n    brand_replacement: 'Nokia'\n    model_replacement: '$1'\n\n  #########\n  # Microsoft Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:Microsoft(?: Corporation)?)[^;]*; *([^;,\\)]+)'\n    device_replacement: 'Microsoft $1'\n    brand_replacement: 'Microsoft'\n    model_replacement: '$1'\n\n  #########\n  # Samsung Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?(?:SAMSUNG)[^;]*; *(?:SAMSUNG )?([^;,\\.\\)]+)'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n\n  #########\n  # Toshiba Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?(?:TOSHIBA|FujitsuToshibaMobileCommun)[^;]*; *([^;,\\)]+)'\n    device_replacement: 'Toshiba $1'\n    brand_replacement: 'Toshiba'\n    model_replacement: '$1'\n\n  #########\n  # Generic Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?([^;]+); *([^;,\\)]+)'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  ######################################################################\n  # Other Devices Parser\n  ######################################################################\n\n  #########\n  # Samsung Bada Phones\n  #########\n  - regex: '(?:^|; )SAMSUNG\\-([A-Za-z0-9\\-]+).* Bada/'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n\n  #########\n  # Firefox OS\n  #########\n  - regex: '\\(Mobile; ALCATEL ?(One|ONE) ?(Touch|TOUCH) ?([^;/]+)(?:/[^;]+)?; rv:[^\\)]+\\) Gecko/[^\\/]+ Firefox/'\n    device_replacement: 'Alcatel $1 $2 $3'\n    brand_replacement: 'Alcatel'\n    model_replacement: 'One Touch $3'\n  - regex: '\\(Mobile; (?:ZTE([^;]+)|(OpenC)); rv:[^\\)]+\\) Gecko/[^\\/]+ Firefox/'\n    device_replacement: 'ZTE $1$2'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1$2'\n\n  ##########\n  # NOKIA\n  # @note: NokiaN8-00 comes before iphone. Sometimes spoofs iphone\n  ##########\n  - regex: 'Nokia(N[0-9]+)([A-z_\\-][A-z0-9_\\-]*)'\n    device_replacement: 'Nokia $1'\n    brand_replacement: 'Nokia'\n    model_replacement: '$1$2'\n  - regex: '(?:NOKIA|Nokia)(?:\\-| *)(?:([A-Za-z0-9]+)\\-[0-9a-f]{32}|([A-Za-z0-9\\-]+)(?:UCBrowser)|([A-Za-z0-9\\-]+))'\n    device_replacement: 'Nokia $1$2$3'\n    brand_replacement: 'Nokia'\n    model_replacement: '$1$2$3'\n  - regex: 'Lumia ([A-Za-z0-9\\-]+)'\n    device_replacement: 'Lumia $1'\n    brand_replacement: 'Nokia'\n    model_replacement: 'Lumia $1'\n  # UCWEB Browser on Symbian\n  - regex: '\\(Symbian; U; S60 V5; [A-z]{2}\\-[A-z]{2}; (SonyEricsson|Samsung|Nokia|LG)([^;/]+)\\)'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  # Nokia Symbian\n  - regex: '\\(Symbian(?:/3)?; U; ([^;]+);'\n    device_replacement: 'Nokia $1'\n    brand_replacement: 'Nokia'\n    model_replacement: '$1'\n\n  ##########\n  # BlackBerry\n  # @ref: http://www.useragentstring.com/pages/BlackBerry/\n  ##########\n  - regex: 'BB10; ([A-Za-z0-9\\- ]+)\\)'\n    device_replacement: 'BlackBerry $1'\n    brand_replacement: 'BlackBerry'\n    model_replacement: '$1'\n  - regex: 'Play[Bb]ook.+RIM Tablet OS'\n    device_replacement: 'BlackBerry Playbook'\n    brand_replacement: 'BlackBerry'\n    model_replacement: 'Playbook'\n  - regex: 'Black[Bb]erry ([0-9]+);'\n    device_replacement: 'BlackBerry $1'\n    brand_replacement: 'BlackBerry'\n    model_replacement: '$1'\n  - regex: 'Black[Bb]erry([0-9]+)'\n    device_replacement: 'BlackBerry $1'\n    brand_replacement: 'BlackBerry'\n    model_replacement: '$1'\n  - regex: 'Black[Bb]erry;'\n    device_replacement: 'BlackBerry'\n    brand_replacement: 'BlackBerry'\n\n  ##########\n  # PALM / HP\n  # @note: some palm devices must come before iphone. sometimes spoofs iphone in ua\n  ##########\n  - regex: '(Pre|Pixi)/\\d+\\.\\d+'\n    device_replacement: 'Palm $1'\n    brand_replacement: 'Palm'\n    model_replacement: '$1'\n  - regex: 'Palm([0-9]+)'\n    device_replacement: 'Palm $1'\n    brand_replacement: 'Palm'\n    model_replacement: '$1'\n  - regex: 'Treo([A-Za-z0-9]+)'\n    device_replacement: 'Palm Treo $1'\n    brand_replacement: 'Palm'\n    model_replacement: 'Treo $1'\n  - regex: 'webOS.*(P160U(?:NA)?)/(\\d+).(\\d+)'\n    device_replacement: 'HP Veer'\n    brand_replacement: 'HP'\n    model_replacement: 'Veer'\n  - regex: '(Touch[Pp]ad)/\\d+\\.\\d+'\n    device_replacement: 'HP TouchPad'\n    brand_replacement: 'HP'\n    model_replacement: 'TouchPad'\n  - regex: 'HPiPAQ([A-Za-z0-9]+)/\\d+.\\d+'\n    device_replacement: 'HP iPAQ $1'\n    brand_replacement: 'HP'\n    model_replacement: 'iPAQ $1'\n  - regex: 'PDA; (PalmOS)/sony/model ([a-z]+)/Revision'\n    device_replacement: '$1'\n    brand_replacement: 'Sony'\n    model_replacement: '$1 $2'\n\n  ##########\n  # AppleTV\n  # No built in browser that I can tell\n  # Stack Overflow indicated iTunes-AppleTV/4.1 as a known UA for app available and I'm seeing it in live traffic\n  ##########\n  - regex: '(Apple\\s?TV)'\n    device_replacement: 'AppleTV'\n    brand_replacement: 'Apple'\n    model_replacement: 'AppleTV'\n\n  #########\n  # Tesla Model S\n  #########\n  - regex: '(QtCarBrowser)'\n    device_replacement: 'Tesla Model S'\n    brand_replacement: 'Tesla'\n    model_replacement: 'Model S'\n\n  ##########\n  # iSTUFF\n  # @note: complete but probably catches spoofs\n  #   ipad and ipod must be parsed before iphone\n  #   cannot determine specific device type from ua string. (3g, 3gs, 4, etc)\n  ##########\n  # @note: on some ua the device can be identified e.g. iPhone5,1\n  - regex: '(iPhone|iPad|iPod)(\\d+,\\d+)'\n    device_replacement: '$1'\n    brand_replacement: 'Apple'\n    model_replacement: '$1$2'\n  # @note: iPad needs to be before iPhone\n  - regex: '(iPad)(?:;| Simulator;)'\n    device_replacement: '$1'\n    brand_replacement: 'Apple'\n    model_replacement: '$1'\n  - regex: '(iPod)(?:;| touch;| Simulator;)'\n    device_replacement: '$1'\n    brand_replacement: 'Apple'\n    model_replacement: '$1'\n  - regex: '(iPhone)(?:;| Simulator;)'\n    device_replacement: '$1'\n    brand_replacement: 'Apple'\n    model_replacement: '$1'\n  # @note: desktop applications show device info\n  - regex: 'CFNetwork/.* Darwin/\\d.*\\(((?:Mac|iMac|PowerMac|PowerBook)[^\\d]*)(\\d+)(?:,|%2C)(\\d+)'\n    device_replacement: '$1$2,$3'\n    brand_replacement: 'Apple'\n    model_replacement: '$1$2,$3'\n  # @note: newer desktop applications don't show device info\n  # This is here so as to not have them recorded as iOS-Device\n  - regex: 'CFNetwork/.* Darwin/\\d+\\.\\d+\\.\\d+ \\(x86_64\\)'\n  # @note: iOS applications do not show device info\n  - regex: 'CFNetwork/.* Darwin/\\d'\n    device_replacement: 'iOS-Device'\n    brand_replacement: 'Apple'\n    model_replacement: 'iOS-Device'\n\n  ##########\n  # Acer\n  ##########\n  - regex: 'acer_([A-Za-z0-9]+)_'\n    device_replacement: 'Acer $1'\n    brand_replacement: 'Acer'\n    model_replacement: '$1'\n\n  ##########\n  # Alcatel\n  ##########\n  - regex: '(?:ALCATEL|Alcatel)-([A-Za-z0-9\\-]+)'\n    device_replacement: 'Alcatel $1'\n    brand_replacement: 'Alcatel'\n    model_replacement: '$1'\n\n  ##########\n  # Amoi\n  ##########\n  - regex: '(?:Amoi|AMOI)\\-([A-Za-z0-9]+)'\n    device_replacement: 'Amoi $1'\n    brand_replacement: 'Amoi'\n    model_replacement: '$1'\n\n  ##########\n  # Asus\n  ##########\n  - regex: '(?:; |\\/|^)((?:Transformer (?:Pad|Prime) |Transformer |PadFone[ _]?)[A-Za-z0-9]*)'\n    device_replacement: 'Asus $1'\n    brand_replacement: 'Asus'\n    model_replacement: '$1'\n  - regex: '(?:asus.*?ASUS|Asus|ASUS|asus)[\\- ;]*((?:Transformer (?:Pad|Prime) |Transformer |Padfone |Nexus[ _])?[A-Za-z0-9]+)'\n    device_replacement: 'Asus $1'\n    brand_replacement: 'Asus'\n    model_replacement: '$1'\n\n\n  ##########\n  # Bird\n  ##########\n  - regex: '\\bBIRD[ \\-\\.]([A-Za-z0-9]+)'\n    device_replacement: 'Bird $1'\n    brand_replacement: 'Bird'\n    model_replacement: '$1'\n\n  ##########\n  # Dell\n  ##########\n  - regex: '\\bDell ([A-Za-z0-9]+)'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: '$1'\n\n  ##########\n  # DoCoMo\n  ##########\n  - regex: 'DoCoMo/2\\.0 ([A-Za-z0-9]+)'\n    device_replacement: 'DoCoMo $1'\n    brand_replacement: 'DoCoMo'\n    model_replacement: '$1'\n  - regex: '([A-Za-z0-9]+)_W;FOMA'\n    device_replacement: 'DoCoMo $1'\n    brand_replacement: 'DoCoMo'\n    model_replacement: '$1'\n  - regex: '([A-Za-z0-9]+);FOMA'\n    device_replacement: 'DoCoMo $1'\n    brand_replacement: 'DoCoMo'\n    model_replacement: '$1'\n\n  ##########\n  # htc\n  ##########\n  - regex: '\\b(?:HTC/|HTC/[a-z0-9]+/)?HTC[ _\\-;]? *(.*?)(?:-?Mozilla|fingerPrint|[;/\\(\\)]|$)'\n    device_replacement: 'HTC $1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n\n  ##########\n  # Huawei\n  ##########\n  - regex: 'Huawei([A-Za-z0-9]+)'\n    device_replacement: 'Huawei $1'\n    brand_replacement: 'Huawei'\n    model_replacement: '$1'\n  - regex: 'HUAWEI-([A-Za-z0-9]+)'\n    device_replacement: 'Huawei $1'\n    brand_replacement: 'Huawei'\n    model_replacement: '$1'\n  - regex: 'vodafone([A-Za-z0-9]+)'\n    device_replacement: 'Huawei Vodafone $1'\n    brand_replacement: 'Huawei'\n    model_replacement: 'Vodafone $1'\n\n  ##########\n  # i-mate\n  ##########\n  - regex: 'i\\-mate ([A-Za-z0-9]+)'\n    device_replacement: 'i-mate $1'\n    brand_replacement: 'i-mate'\n    model_replacement: '$1'\n\n  ##########\n  # kyocera\n  ##########\n  - regex: 'Kyocera\\-([A-Za-z0-9]+)'\n    device_replacement: 'Kyocera $1'\n    brand_replacement: 'Kyocera'\n    model_replacement: '$1'\n  - regex: 'KWC\\-([A-Za-z0-9]+)'\n    device_replacement: 'Kyocera $1'\n    brand_replacement: 'Kyocera'\n    model_replacement: '$1'\n\n  ##########\n  # lenovo\n  ##########\n  - regex: 'Lenovo[_\\-]([A-Za-z0-9]+)'\n    device_replacement: 'Lenovo $1'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1'\n\n  ##########\n  # HbbTV (European and Australian standard)\n  # written before the LG regexes, as LG is making HbbTV too\n  ##########\n  - regex: '(HbbTV)/[0-9]+\\.[0-9]+\\.[0-9]+ \\([^;]*; *(LG)E *; *([^;]*) *;[^;]*;[^;]*;\\)'\n    device_replacement: '$1'\n    brand_replacement: '$2'\n    model_replacement: '$3'\n  - regex: '(HbbTV)/1\\.1\\.1.*CE-HTML/1\\.\\d;(Vendor/)*(THOM[^;]*?)[;\\s](?:.*SW-Version/.*)*(LF[^;]+);?'\n    device_replacement: '$1'\n    brand_replacement: 'Thomson'\n    model_replacement: '$4'\n  - regex: '(HbbTV)(?:/1\\.1\\.1)?(?: ?\\(;;;;;\\))?; *CE-HTML(?:/1\\.\\d)?; *([^ ]+) ([^;]+);'\n    device_replacement: '$1'\n    brand_replacement: '$2'\n    model_replacement: '$3'\n  - regex: '(HbbTV)/1\\.1\\.1 \\(;;;;;\\) Maple_2011'\n    device_replacement: '$1'\n    brand_replacement: 'Samsung'\n  - regex: '(HbbTV)/[0-9]+\\.[0-9]+\\.[0-9]+ \\([^;]*; *(?:CUS:([^;]*)|([^;]+)) *; *([^;]*) *;.*;'\n    device_replacement: '$1'\n    brand_replacement: '$2$3'\n    model_replacement: '$4'\n  - regex: '(HbbTV)/[0-9]+\\.[0-9]+\\.[0-9]+'\n    device_replacement: '$1'\n\n  ##########\n  # LGE NetCast TV\n  ##########\n  - regex: 'LGE; (?:Media\\/)?([^;]*);[^;]*;[^;]*;?\\); \"?LG NetCast(\\.TV|\\.Media|)-\\d+'\n    device_replacement: 'NetCast$2'\n    brand_replacement: 'LG'\n    model_replacement: '$1'\n\n  ##########\n  # InettvBrowser\n  ##########\n  - regex: 'InettvBrowser/[0-9]+\\.[0-9A-Z]+ \\([^;]*;(Sony)([^;]*);[^;]*;[^\\)]*\\)'\n    device_replacement: 'Inettv'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  - regex: 'InettvBrowser/[0-9]+\\.[0-9A-Z]+ \\([^;]*;([^;]*);[^;]*;[^\\)]*\\)'\n    device_replacement: 'Inettv'\n    brand_replacement: 'Generic_Inettv'\n    model_replacement: '$1'\n  - regex: '(?:InettvBrowser|TSBNetTV|NETTV|HBBTV)'\n    device_replacement: 'Inettv'\n    brand_replacement: 'Generic_Inettv'\n\n  ##########\n  # lg\n  ##########\n  # LG Symbian Phones\n  - regex: 'Series60/\\d\\.\\d (LG)[\\-]?([A-Za-z0-9 \\-]+)'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  # other LG phones\n  - regex: '\\b(?:LGE[ \\-]LG\\-(?:AX)?|LGE |LGE?-LG|LGE?[ \\-]|LG[ /\\-]|lg[\\-])([A-Za-z0-9]+)\\b'\n    device_replacement: 'LG $1'\n    brand_replacement: 'LG'\n    model_replacement: '$1'\n  - regex: '(?:^LG[\\-]?|^LGE[\\-/]?)([A-Za-z]+[0-9]+[A-Za-z]*)'\n    device_replacement: 'LG $1'\n    brand_replacement: 'LG'\n    model_replacement: '$1'\n  - regex: '^LG([0-9]+[A-Za-z]*)'\n    device_replacement: 'LG $1'\n    brand_replacement: 'LG'\n    model_replacement: '$1'\n\n  ##########\n  # microsoft\n  ##########\n  - regex: '(KIN\\.[^ ]+) (\\d+)\\.(\\d+)'\n    device_replacement: 'Microsoft $1'\n    brand_replacement: 'Microsoft'\n    model_replacement: '$1'\n  - regex: '(?:MSIE|XBMC).*\\b(Xbox)\\b'\n    device_replacement: '$1'\n    brand_replacement: 'Microsoft'\n    model_replacement: '$1'\n  - regex: '; ARM; Trident/6\\.0; Touch[\\);]'\n    device_replacement: 'Microsoft Surface RT'\n    brand_replacement: 'Microsoft'\n    model_replacement: 'Surface RT'\n\n  ##########\n  # motorola\n  ##########\n  - regex: 'Motorola\\-([A-Za-z0-9]+)'\n    device_replacement: 'Motorola $1'\n    brand_replacement: 'Motorola'\n    model_replacement: '$1'\n  - regex: 'MOTO\\-([A-Za-z0-9]+)'\n    device_replacement: 'Motorola $1'\n    brand_replacement: 'Motorola'\n    model_replacement: '$1'\n  - regex: 'MOT\\-([A-z0-9][A-z0-9\\-]*)'\n    device_replacement: 'Motorola $1'\n    brand_replacement: 'Motorola'\n    model_replacement: '$1'\n\n  ##########\n  # nintendo\n  ##########\n  - regex: 'Nintendo WiiU'\n    device_replacement: 'Nintendo Wii U'\n    brand_replacement: 'Nintendo'\n    model_replacement: 'Wii U'\n  - regex: 'Nintendo (DS|3DS|DSi|Wii);'\n    device_replacement: 'Nintendo $1'\n    brand_replacement: 'Nintendo'\n    model_replacement: '$1'\n\n  ##########\n  # pantech\n  ##########\n  - regex: '(?:Pantech|PANTECH)[ _-]?([A-Za-z0-9\\-]+)'\n    device_replacement: 'Pantech $1'\n    brand_replacement: 'Pantech'\n    model_replacement: '$1'\n\n  ##########\n  # philips\n  ##########\n  - regex: 'Philips([A-Za-z0-9]+)'\n    device_replacement: 'Philips $1'\n    brand_replacement: 'Philips'\n    model_replacement: '$1'\n  - regex: 'Philips ([A-Za-z0-9]+)'\n    device_replacement: 'Philips $1'\n    brand_replacement: 'Philips'\n    model_replacement: '$1'\n\n  ##########\n  # Samsung\n  ##########\n  # Samsung Smart-TV\n  - regex: '(SMART-TV); .* Tizen '\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n  # Samsung Symbian Devices\n  - regex: 'SymbianOS/9\\.\\d.* Samsung[/\\-]([A-Za-z0-9 \\-]+)'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n  - regex: '(Samsung)(SGH)(i[0-9]+)'\n    device_replacement: '$1 $2$3'\n    brand_replacement: '$1'\n    model_replacement: '$2-$3'\n  - regex: 'SAMSUNG-ANDROID-MMS/([^;/]+)'\n    device_replacement: '$1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n  # Other Samsung\n  #- regex: 'SAMSUNG(?:; |-)([A-Za-z0-9\\-]+)'\n  - regex: 'SAMSUNG(?:; |[ -/])([A-Za-z0-9\\-]+)'\n    regex_flag: 'i'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n\n  ##########\n  # Sega\n  ##########\n  - regex: '(Dreamcast)'\n    device_replacement: 'Sega $1'\n    brand_replacement: 'Sega'\n    model_replacement: '$1'\n\n  ##########\n  # Siemens mobile\n  ##########\n  - regex: '^SIE-([A-Za-z0-9]+)'\n    device_replacement: 'Siemens $1'\n    brand_replacement: 'Siemens'\n    model_replacement: '$1'\n\n  ##########\n  # Softbank\n  ##########\n  - regex: 'Softbank/[12]\\.0/([A-Za-z0-9]+)'\n    device_replacement: 'Softbank $1'\n    brand_replacement: 'Softbank'\n    model_replacement: '$1'\n\n  ##########\n  # SonyEricsson\n  ##########\n  - regex: 'SonyEricsson ?([A-Za-z0-9\\-]+)'\n    device_replacement: 'Ericsson $1'\n    brand_replacement: 'SonyEricsson'\n    model_replacement: '$1'\n\n  ##########\n  # Sony\n  ##########\n  - regex: 'Android [^;]+; ([^ ]+) (Sony)/'\n    device_replacement: '$2 $1'\n    brand_replacement: '$2'\n    model_replacement: '$1'\n  - regex: '(Sony)(?:BDP\\/|\\/)?([^ /;\\)]+)[ /;\\)]'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  #########\n  # Puffin Browser Device detect\n  # A=Android, I=iOS, P=Phone, T=Tablet\n  # AT=Android+Tablet\n  #########\n  - regex: 'Puffin/[\\d\\.]+IT'\n    device_replacement: 'iPad'\n    brand_replacement: 'Apple'\n    model_replacement: 'iPad'\n  - regex: 'Puffin/[\\d\\.]+IP'\n    device_replacement: 'iPhone'\n    brand_replacement: 'Apple'\n    model_replacement: 'iPhone'\n  - regex: 'Puffin/[\\d\\.]+AT'\n    device_replacement: 'Generic Tablet'\n    brand_replacement: 'Generic'\n    model_replacement: 'Tablet'\n  - regex: 'Puffin/[\\d\\.]+AP'\n    device_replacement: 'Generic Smartphone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Smartphone'\n\n  #########\n  # Android General Device Matching (far from perfect)\n  #########\n  - regex: 'Android[\\- ][\\d]+\\.[\\d]+; [A-Za-z]{2}\\-[A-Za-z]{0,2}; WOWMobile (.+) Build[/ ]'\n    brand_replacement: 'Generic_Android'\n    model_replacement: '$1'\n  - regex: 'Android[\\- ][\\d]+\\.[\\d]+\\-update1; [A-Za-z]{2}\\-[A-Za-z]{0,2} *; *(.+?) Build[/ ]'\n    brand_replacement: 'Generic_Android'\n    model_replacement: '$1'\n  - regex: 'Android[\\- ][\\d]+(?:\\.[\\d]+){1,2}; *[A-Za-z]{2}[_\\-][A-Za-z]{0,2}\\-? *; *(.+?) Build[/ ]'\n    brand_replacement: 'Generic_Android'\n    model_replacement: '$1'\n  - regex: 'Android[\\- ][\\d]+(?:\\.[\\d]+){1,2}; *[A-Za-z]{0,2}\\- *; *(.+?) Build[/ ]'\n    brand_replacement: 'Generic_Android'\n    model_replacement: '$1'\n  # No build info at all - \"Build\" follows locale immediately\n  - regex: 'Android[\\- ][\\d]+(?:\\.[\\d]+){1,2}; *[a-z]{0,2}[_\\-]?[A-Za-z]{0,2};? Build[/ ]'\n    device_replacement: 'Generic Smartphone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Smartphone'\n  - regex: 'Android[\\- ][\\d]+(?:\\.[\\d]+){1,2}; *\\-?[A-Za-z]{2}; *(.+?) Build[/ ]'\n    brand_replacement: 'Generic_Android'\n    model_replacement: '$1'\n  - regex: 'Android[\\- ][\\d]+(?:\\.[\\d]+){1,2}(?:;.*)?; *(.+?) Build[/ ]'\n    brand_replacement: 'Generic_Android'\n    model_replacement: '$1'\n\n  ##########\n  # Google TV\n  ##########\n  - regex: '(GoogleTV)'\n    brand_replacement: 'Generic_Inettv'\n    model_replacement: '$1'\n\n  ##########\n  # WebTV\n  ##########\n  - regex: '(WebTV)/\\d+.\\d+'\n    brand_replacement: 'Generic_Inettv'\n    model_replacement: '$1'\n  # Roku Digital-Video-Players https://www.roku.com/\n  - regex: '^(Roku)/DVP-\\d+\\.\\d+'\n    brand_replacement: 'Generic_Inettv'\n    model_replacement: '$1'\n\n  ##########\n  # Generic Tablet\n  ##########\n  - regex: '(Android 3\\.\\d|Opera Tablet|Tablet; .+Firefox/|Android.*(?:Tab|Pad))'\n    regex_flag: 'i'\n    device_replacement: 'Generic Tablet'\n    brand_replacement: 'Generic'\n    model_replacement: 'Tablet'\n\n  ##########\n  # Generic Smart Phone\n  ##########\n  - regex: '(Symbian|\\bS60(Version|V\\d)|\\bS60\\b|\\((Series 60|Windows Mobile|Palm OS|Bada); Opera Mini|Windows CE|Opera Mobi|BREW|Brew|Mobile; .+Firefox/|iPhone OS|Android|MobileSafari|Windows *Phone|\\(webOS/|PalmOS)'\n    device_replacement: 'Generic Smartphone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Smartphone'\n  - regex: '(hiptop|avantgo|plucker|xiino|blazer|elaine)'\n    regex_flag: 'i'\n    device_replacement: 'Generic Smartphone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Smartphone'\n\n  ##########\n  # Spiders (this is hack...)\n  ##########\n  - regex: '(bot|zao|borg|DBot|oegp|silk|Xenu|zeal|^NING|CCBot|crawl|htdig|lycos|slurp|teoma|voila|yahoo|Sogou|CiBra|Nutch|^Java/|^JNLP/|Daumoa|Genieo|ichiro|larbin|pompos|Scrapy|snappy|speedy|spider|msnbot|msrbot|vortex|^vortex|crawler|favicon|indexer|Riddler|scooter|scraper|scrubby|WhatWeb|WinHTTP|bingbot|BingPreview|openbot|gigabot|furlbot|polybot|seekbot|^voyager|archiver|Icarus6j|mogimogi|Netvibes|blitzbot|altavista|charlotte|findlinks|Retreiver|TLSProber|WordPress|SeznamBot|ProoXiBot|wsr\\-agent|Squrl Java|EtaoSpider|PaperLiBot|SputnikBot|A6\\-Indexer|netresearch|searchsight|baiduspider|YisouSpider|ICC\\-Crawler|http%20client|Python-urllib|dataparksearch|converacrawler|Screaming Frog|AppEngine-Google|YahooCacheSystem|fast\\-webcrawler|Sogou Pic Spider|semanticdiscovery|Innovazion Crawler|facebookexternalhit|Google.*/\\+/web/snippet|Google-HTTP-Java-Client|BlogBridge|IlTrovatore-Setaccio|InternetArchive|GomezAgent|WebThumbnail|heritrix|NewsGator|PagePeeker|Reaper|ZooShot|holmes|NL-Crawler|Pingdom|WhatsApp|masscan)'\n    regex_flag: 'i'\n    device_replacement: 'Spider'\n    brand_replacement: 'Spider'\n    model_replacement: 'Desktop'\n\n  ##########\n  # Generic Feature Phone\n  # take care to do case insensitive matching\n  ##########\n  - regex: '^(1207|3gso|4thp|501i|502i|503i|504i|505i|506i|6310|6590|770s|802s|a wa|acer|acs\\-|airn|alav|asus|attw|au\\-m|aur |aus |abac|acoo|aiko|alco|alca|amoi|anex|anny|anyw|aptu|arch|argo|bmobile|bell|bird|bw\\-n|bw\\-u|beck|benq|bilb|blac|c55/|cdm\\-|chtm|capi|comp|cond|dall|dbte|dc\\-s|dica|ds\\-d|ds12|dait|devi|dmob|doco|dopo|dorado|el(?:38|39|48|49|50|55|58|68)|el[3456]\\d{2}dual|erk0|esl8|ex300|ez40|ez60|ez70|ezos|ezze|elai|emul|eric|ezwa|fake|fly\\-|fly_|g\\-mo|g1 u|g560|gf\\-5|grun|gene|go.w|good|grad|hcit|hd\\-m|hd\\-p|hd\\-t|hei\\-|hp i|hpip|hs\\-c|htc |htc\\-|htca|htcg)'\n    regex_flag: 'i'\n    device_replacement: 'Generic Feature Phone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Feature Phone'\n  - regex: '^(htcp|htcs|htct|htc_|haie|hita|huaw|hutc|i\\-20|i\\-go|i\\-ma|i\\-mobile|i230|iac|iac\\-|iac/|ig01|im1k|inno|iris|jata|kddi|kgt|kgt/|kpt |kwc\\-|klon|lexi|lg g|lg\\-a|lg\\-b|lg\\-c|lg\\-d|lg\\-f|lg\\-g|lg\\-k|lg\\-l|lg\\-m|lg\\-o|lg\\-p|lg\\-s|lg\\-t|lg\\-u|lg\\-w|lg/k|lg/l|lg/u|lg50|lg54|lge\\-|lge/|leno|m1\\-w|m3ga|m50/|maui|mc01|mc21|mcca|medi|meri|mio8|mioa|mo01|mo02|mode|modo|mot |mot\\-|mt50|mtp1|mtv |mate|maxo|merc|mits|mobi|motv|mozz|n100|n101|n102|n202|n203|n300|n302|n500|n502|n505|n700|n701|n710|nec\\-|nem\\-|newg|neon)'\n    regex_flag: 'i'\n    device_replacement: 'Generic Feature Phone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Feature Phone'\n  - regex: '^(netf|noki|nzph|o2 x|o2\\-x|opwv|owg1|opti|oran|ot\\-s|p800|pand|pg\\-1|pg\\-2|pg\\-3|pg\\-6|pg\\-8|pg\\-c|pg13|phil|pn\\-2|pt\\-g|palm|pana|pire|pock|pose|psio|qa\\-a|qc\\-2|qc\\-3|qc\\-5|qc\\-7|qc07|qc12|qc21|qc32|qc60|qci\\-|qwap|qtek|r380|r600|raks|rim9|rove|s55/|sage|sams|sc01|sch\\-|scp\\-|sdk/|se47|sec\\-|sec0|sec1|semc|sgh\\-|shar|sie\\-|sk\\-0|sl45|slid|smb3|smt5|sp01|sph\\-|spv |spv\\-|sy01|samm|sany|sava|scoo|send|siem|smar|smit|soft|sony|t\\-mo|t218|t250|t600|t610|t618|tcl\\-|tdg\\-|telm|tim\\-|ts70|tsm\\-|tsm3|tsm5|tx\\-9|tagt)'\n    regex_flag: 'i'\n    device_replacement: 'Generic Feature Phone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Feature Phone'\n  - regex: '^(talk|teli|topl|tosh|up.b|upg1|utst|v400|v750|veri|vk\\-v|vk40|vk50|vk52|vk53|vm40|vx98|virg|vertu|vite|voda|vulc|w3c |w3c\\-|wapj|wapp|wapu|wapm|wig |wapi|wapr|wapv|wapy|wapa|waps|wapt|winc|winw|wonu|x700|xda2|xdag|yas\\-|your|zte\\-|zeto|aste|audi|avan|blaz|brew|brvw|bumb|ccwa|cell|cldc|cmd\\-|dang|eml2|fetc|hipt|http|ibro|idea|ikom|ipaq|jbro|jemu|jigs|keji|kyoc|kyok|libw|m\\-cr|midp|mmef|moto|mwbp|mywa|newt|nok6|o2im|pant|pdxg|play|pluc|port|prox|rozo|sama|seri|smal|symb|treo|upsi|vx52|vx53|vx60|vx61|vx70|vx80|vx81|vx83|vx85|wap\\-|webc|whit|wmlb|xda\\-|xda_)'\n    regex_flag: 'i'\n    device_replacement: 'Generic Feature Phone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Feature Phone'\n  - regex: '^(Ice)$'\n    device_replacement: 'Generic Feature Phone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Feature Phone'\n  - regex: '(wap[\\-\\ ]browser|maui|netfront|obigo|teleca|up\\.browser|midp|Opera Mini)'\n    regex_flag: 'i'\n    device_replacement: 'Generic Feature Phone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Feature Phone'\n"]);

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

exports.default = String.raw(_templateObject);

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

var Results = __webpack_require__(8).Results,
    makeParser = __webpack_require__(5),
    ua = __webpack_require__(9),
    os = __webpack_require__(6),
    device = __webpack_require__(4);

module.exports = function(regexes) {
	var parseUA = makeParser(regexes.user_agent_parsers, ua.makeParser, ua.makeDefault);
	var parseOS = makeParser(regexes.os_parsers, os.makeParser, os.makeDefault);
	var parseDevice = makeParser(regexes.device_parsers, device.makeParser, device.makeDefault);
	
	function parse(str) {
	  var ua = parseUA(str),
	      os = parseOS(str),
	      device = parseDevice(str);
	  return new Results(str, ua, os, device);
	}
	
	return {
		parse: parse,
		parseUA: parseUA,
		parseOS: parseOS,
		parseDevice: parseDevice
	};
};


/***/ }),
/* 2 */
/***/ (function(module, exports) {

/*
YAML parser for Javascript
Author: Diogo Costa

This program is released under the MIT License as follows:

Copyright (c) 2011 Diogo Costa (costa.h4evr@gmail.com)

Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.
*/

/**
 * @name YAML
 * @namespace
*/

var YAML = 
(function() {
    var errors = [],
        reference_blocks = [],
        processing_time = 0,
        regex =
        {
            "regLevel" : new RegExp("^([\\s\\-]+)"),
            "invalidLine" : new RegExp("^\\-\\-\\-|^\\.\\.\\.|^\\s*#.*|^\\s*$"),
            "dashesString" : new RegExp("^\\s*\\\"([^\\\"]*)\\\"\\s*$"),
            "quotesString" : new RegExp("^\\s*\\\'([^\\\']*)\\\'\\s*$"),
            "float" : new RegExp("^[+-]?[0-9]+\\.[0-9]+(e[+-]?[0-9]+(\\.[0-9]+)?)?$"),
            "integer" : new RegExp("^[+-]?[0-9]+$"),
            "array" : new RegExp("\\[\\s*(.*)\\s*\\]"),
            "map" : new RegExp("\\{\\s*(.*)\\s*\\}"),
            "key_value" : new RegExp("([a-z0-9_-][ a-z0-9_-]*):( .+)", "i"),
            "single_key_value" : new RegExp("^([a-z0-9_-][ a-z0-9_-]*):( .+?)$", "i"),
            "key" : new RegExp("([a-z0-9_-][ a-z0-9_-]*):( .+)?", "i"),
            "item" : new RegExp("^-\\s+"),
            "trim" : new RegExp("^\\s+|\\s+$"),
            "comment" : new RegExp("([^\\\'\\\"#]+([\\\'\\\"][^\\\'\\\"]*[\\\'\\\"])*)*(#.*)?")
        };
 
     /**
      * @class A block of lines of a given level.
      * @param {int} lvl The block's level.
      * @private
      */
    function Block(lvl) {
        return {
            /* The block's parent */
            parent: null,
            /* Number of children */
            length: 0,
            /* Block's level */
            level: lvl,
            /* Lines of code to process */
            lines: [],
            /* Blocks with greater level */
            children : [],
            /* Add a block to the children collection */
            addChild : function(obj) {
                this.children.push(obj);
                obj.parent = this;
                ++this.length;
            }
        };
    }

    function parser(str) {
        var regLevel = regex["regLevel"];
        var invalidLine = regex["invalidLine"];
        var lines = str.split("\n");
        var m;
        var level = 0, curLevel = 0;
        
        var blocks = [];
        
        var result = new Block(-1);
        var currentBlock = new Block(0);
        result.addChild(currentBlock);
        var levels = [];
        var line = "";
        
        blocks.push(currentBlock);
        levels.push(level);
        
        for(var i = 0, len = lines.length; i < len; ++i) {
            line = lines[i];
            
            if(line.match(invalidLine)) {
                continue;
            }
        
            if(m = regLevel.exec(line)) {
                level = m[1].length;
            } else
                level = 0;
            
            if(level > curLevel) {
                var oldBlock = currentBlock;
                currentBlock = new Block(level);
                oldBlock.addChild(currentBlock);
                blocks.push(currentBlock);
                levels.push(level);
            } else if(level < curLevel) {                
                var added = false;

                var k = levels.length - 1;
                for(; k >= 0; --k) {
                    if(levels[k] == level) {
                        currentBlock = new Block(level);
                        blocks.push(currentBlock);
                        levels.push(level);
                        if(blocks[k].parent!= null)
                            blocks[k].parent.addChild(currentBlock);
                        added = true;
                        break;
                    }
                }
                
                if(!added) {
                    errors.push("Error: Invalid indentation at line " + i + ": " + line);
                    return;
                }
            }
            
            currentBlock.lines.push(line.replace(regex["trim"], ""));
            curLevel = level;
        }
        
        return result;
    }
    
    function processValue(val) {
        val = val.replace(regex["trim"], "");
        var m = null;

        if(val == 'true') {
            return true;
        } else if(val == 'false') {
            return false;
        } else if(val == '.NaN') {
            return Number.NaN;
        } else if(val == 'null') {
            return null;
        } else if(val == '.inf') {
            return Number.POSITIVE_INFINITY;
        } else if(val == '-.inf') {
            return Number.NEGATIVE_INFINITY;
        } else if(m = val.match(regex["dashesString"])) {
            return m[1];
        } else if(m = val.match(regex["quotesString"])) {
            return m[1];
        } else if(m = val.match(regex["float"])) {
            return parseFloat(m[0]);
        } else if(m = val.match(regex["integer"])) {
            return parseInt(m[0]);
        } else if( !isNaN(m = Date.parse(val))) {
            return new Date(m);
        } else if(m = val.match(regex["single_key_value"])) {
            var res = {};
            res[m[1]] = processValue(m[2]);
            return res;
        } else if(m = val.match(regex["array"])){
            var count = 0, c = ' ';
            var res = [];
            var content = "";
            var str = false;
            for(var j = 0, lenJ = m[1].length; j < lenJ; ++j) {
                c = m[1][j];
                if(c == '\'' || c == '"') {
                    if(str === false) {
                        str = c;
                        content += c;
                        continue;
                    } else if((c == '\'' && str == '\'') || (c == '"' && str == '"')) {
                        str = false;
                        content += c;
                        continue;
                    }
                } else if(str === false && (c == '[' || c == '{')) {
                    ++count;
                } else if(str === false && (c == ']' || c == '}')) {
                    --count;
                } else if(str === false && count == 0 && c == ',') {
                    res.push(processValue(content));
                    content = "";
                    continue;
                }
                
                content += c;
            }
            
            if(content.length > 0)
                res.push(processValue(content));
            return res;
        } else if(m = val.match(regex["map"])){
            var count = 0, c = ' ';
            var res = [];
            var content = "";
            var str = false;
            for(var j = 0, lenJ = m[1].length; j < lenJ; ++j) {
                c = m[1][j];
                if(c == '\'' || c == '"') {
                    if(str === false) {
                        str = c;
                        content += c;
                        continue;
                    } else if((c == '\'' && str == '\'') || (c == '"' && str == '"')) {
                        str = false;
                        content += c;
                        continue;
                    }
                } else if(str === false && (c == '[' || c == '{')) {
                    ++count;
                } else if(str === false && (c == ']' || c == '}')) {
                    --count;
                } else if(str === false && count == 0 && c == ',') {
                    res.push(content);
                    content = "";
                    continue;
                }
                
                content += c;
            }
            
            if(content.length > 0)
                res.push(content);
                
            var newRes = {};
            for(var j = 0, lenJ = res.length; j < lenJ; ++j) {
                if(m = res[j].match(regex["key_value"])) {
                    newRes[m[1]] = processValue(m[2]);
                }
            }
            
            return newRes;
        } else 
            return val;
    }
    
    function processFoldedBlock(block) {
        var lines = block.lines;
        var children = block.children;
        var str = lines.join(" ");
        var chunks = [str];
        for(var i = 0, len = children.length; i < len; ++i) {
            chunks.push(processFoldedBlock(children[i]));
        }
        return chunks.join("\n");
    }
    
    function processLiteralBlock(block) {
        var lines = block.lines;
        var children = block.children;
        var str = lines.join("\n");
        for(var i = 0, len = children.length; i < len; ++i) {
            str += processLiteralBlock(children[i]);
        }
        return str;
    }
    
    function processBlock(blocks) {
        var m = null;
        var res = {};
        var lines = null;
        var children = null;
        var currentObj = null;
        
        var level = -1;
        
        var processedBlocks = [];
        
        var isMap = true;
        
        for(var j = 0, lenJ = blocks.length; j < lenJ; ++j) {
            
            if(level != -1 && level != blocks[j].level)
                continue;
        
            processedBlocks.push(j);
        
            level = blocks[j].level;
            lines = blocks[j].lines;
            children = blocks[j].children;
            currentObj = null;
        
            for(var i = 0, len = lines.length; i < len; ++i) {
                var line = lines[i];

                if(m = line.match(regex["key"])) {
                    var key = m[1];
                    
                    if(key[0] == '-') {
                        key = key.replace(regex["item"], "");
                        if (isMap) { 
                            isMap = false;
                            if (typeof(res.length) === "undefined") {
                                res = [];
                            } 
                        }
                        if(currentObj != null) res.push(currentObj);
                        currentObj = {};
                        isMap = true;
                    }
                    
                    if(typeof m[2] != "undefined") {
                        var value = m[2].replace(regex["trim"], "");
                        if(value[0] == '&') {
                            var nb = processBlock(children);
                            if(currentObj != null) currentObj[key] = nb;
                            else res[key] = nb;
                            reference_blocks[value.substr(1)] = nb;
                        } else if(value[0] == '|') {
                            if(currentObj != null) currentObj[key] = processLiteralBlock(children.shift());
                            else res[key] = processLiteralBlock(children.shift());
                        } else if(value[0] == '*') {
                            var v = value.substr(1);
                            var no = {};
                            
                            if(typeof reference_blocks[v] == "undefined") {
                                errors.push("Reference '" + v + "' not found!");
                            } else {
                                for(var k in reference_blocks[v]) {
                                    no[k] = reference_blocks[v][k];
                                }
                                
                                if(currentObj != null) currentObj[key] = no;
                                else res[key] = no;
                            }
                        } else if(value[0] == '>') {
                            if(currentObj != null) currentObj[key] = processFoldedBlock(children.shift());
                            else res[key] = processFoldedBlock(children.shift());
                        } else {
                            if(currentObj != null) currentObj[key] = processValue(value);
                            else res[key] = processValue(value);
                        }
                    } else {
                        if(currentObj != null) currentObj[key] = processBlock(children);
                        else res[key] = processBlock(children);                        
                    }
                } else if(line.match(/^-\s*$/)) {
                    if (isMap) { 
                        isMap = false;
                        if (typeof(res.length) === "undefined") {
                            res = [];
                        } 
                    }
                    if(currentObj != null) res.push(currentObj);
                    currentObj = {};
                    isMap = true;
                    continue;
                } else if(m = line.match(/^-\s*(.*)/)) {
                    if(currentObj != null) 
                        currentObj.push(processValue(m[1]));
                    else {
                        if (isMap) { 
                            isMap = false;
                            if (typeof(res.length) === "undefined") {
                                res = [];
                            } 
                        }
                        res.push(processValue(m[1]));
                    }
                    continue;
                }
            }
            
            if(currentObj != null) {
                if (isMap) { 
                    isMap = false;
                    if (typeof(res.length) === "undefined") {
                        res = [];
                    } 
                }
                res.push(currentObj);
            }
        }
        
        for(var j = processedBlocks.length - 1; j >= 0; --j) {
            blocks.splice.call(blocks, processedBlocks[j], 1);
        }

        return res;
    }
        
    function semanticAnalysis(blocks) {
        var res = processBlock(blocks.children);
        return res;
    }
    
    function preProcess(src) {
        var m;
        var lines = src.split("\n");
        
        var r = regex["comment"];
        
        for(var i in lines) {
            if(m = (typeof lines[i] === 'string' && lines[i].match(r))) {
/*                var cmt = "";
                if(typeof m[3] != "undefined")
                    lines[i] = m[1];
                else if(typeof m[3] != "undefined")
                    lines[i] = m[3]; 
                else
                    lines[i] = "";
                    */
                if(typeof m[3] !== "undefined") {
                    lines[i] = m[0].substr(0, m[0].length - m[3].length);
                }
            }
        }
        
        return lines.join("\n");
    }
    
    function eval(str) {
        errors = [];
        reference_blocks = [];
        processing_time = (new Date()).getTime();
        var pre = preProcess(str)
        var doc = parser(pre);
        var res = semanticAnalysis(doc);
        processing_time = (new Date()).getTime() - processing_time;
        
        return res;
    }
        
    return {        
        /**
         * Parse a YAML file from a string.
         * @param {String} str String with the YAML file contents.
         * @function
         */
        eval : eval,
        
        /**
         * Get errors found when parsing the last file.
         * @function
         * @returns Errors found when parsing the last file.
         */
        getErrors : function() { return errors; },
        
        /**
         * Get the time it took to parse the last file.
         * @function
         * @returns Time in milliseconds.
         */
        getProcessingTime : function() { return processing_time; }
    }
})();

module.exports = YAML;

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _uapRefImpl = __webpack_require__(1);

var _uapRefImpl2 = _interopRequireDefault(_uapRefImpl);

var _regexes = __webpack_require__(0);

var _regexes2 = _interopRequireDefault(_regexes);

var _yamlparser = __webpack_require__(2);

var _yamlparser2 = _interopRequireDefault(_yamlparser);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var regexes = _yamlparser2.default.eval(_regexes2.default);
var parser = (0, _uapRefImpl2.default)(regexes);

if (document.readyState == 'loading') {
  document.addEventListener('DOMContentLoaded', start);
} else {
  start();
}

function start() {
  var uaRawList = document.getElementById('user-agents-raw');
  var uaConvertedList = document.getElementById('user-agents-converted');
  var convertButton = document.getElementById('convert');

  convertButton.addEventListener('click', convert);

  function convert() {
    var uaConvertedStr = '';
    var uaStrs = uaRawList.value.trim().split('\n');
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = uaStrs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var uaStr = _step.value;

        var agent = parser.parse(uaStr);
        uaConvertedStr += agent.ua.family + ' ' + agent.ua.major + '\n';
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }

    uaConvertedList.value = uaConvertedStr;
  }
}

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

var replaceMatches = __webpack_require__(7);

exports.makeDefault = function makeDefault(str) {
    return {
        userAgent: str,
        family: "Other",
        brand: null,
        model: null
    };
};

exports.makeParser = function makeParser(obj) {
  var regexp = new RegExp(obj.regex, obj.regex_flag || ''),
      deviceRep = obj.device_replacement,
      brandRep  = obj.brand_replacement,
      modelRep  = obj.model_replacement;

  function parser(str) {
    var m = str.match(regexp);
    if (!m) { return null; }
    
    return {
        userAgent: str,
        family: (deviceRep ? replaceMatches(deviceRep, m) : m[1]) || 'Other',
        brand:  (brandRep  ? replaceMatches(brandRep, m)  : null) || null,
        model:  (modelRep  ? replaceMatches(modelRep, m)  : m[1]) || null            
    };
  }

  return parser;
};


/***/ }),
/* 5 */
/***/ (function(module, exports) {

module.exports = function makeParser(regexes, parserMaker, defaultObjMaker) {
  var parsers = regexes.map(parserMaker);

  function parser(str) {
      var obj;
      
      if (typeof str === 'string') {
          for (var i = 0, length = parsers.length; i < length; i++) {
              obj = parsers[i](str);
              if (obj) { return obj; }
          }
      }
      
      return defaultObjMaker();
  }

  return parser;
};


/***/ }),
/* 6 */
/***/ (function(module, exports) {

exports.makeDefault = function makeDefault(str) {
    return {
        userAgent: str,
        family: "Other",
        major: null,
        minor: null,
        patch: null,
        patchMinor: null
    };
};

exports.makeParser = function makeParser(obj) {
  var regexp = new RegExp(obj.regex),
      famRep = obj.os_replacement,
      majorRep = obj.os_v1_replacement,
      minorRep = obj.os_v2_replacement,
      patchRep = obj.os_v3_replacement,
      patchMinorRep = obj.os_v4_replacement;
  
  function parser(str) {
    var m = str.match(regexp);
    if (!m) { return null; }
    
    return {
        userAgent: str,
        family: famRep ? famRep.replace('$1', m[1]) : m[1],
        major: majorRep || m[2] || null,
        minor: minorRep || m[3] || null,
        patch: patchRep || m[4] || null,
        patchMinor: patchMinorRep || m[5] || null
    };
  }

  return parser;
};


/***/ }),
/* 7 */
/***/ (function(module, exports) {

module.exports = function replaceMatches(str, m) {
  return str.replace(/\$(\d)/g, function(tmp, i) {
    return m[i] || '';
  }).trim();
};


/***/ }),
/* 8 */
/***/ (function(module, exports) {

exports.Results = Results;
function Results(ua_str, ua, os, device) {
  this.userAgent = ua_str;
  this.ua = ua;
  this.os = os;
  this.device = device;
  delete ua.userAgent;
  delete os.userAgent;
  delete device.userAgent;
}


/***/ }),
/* 9 */
/***/ (function(module, exports) {

exports.makeDefault = function makeDefault(str) {
    return {
        userAgent: str,
        family: "Other",
        major: null,
        minor: null,
        patch: null
    };
};

exports.makeParser = function makeParser(obj) {
  var regexp = new RegExp(obj.regex),
      famRep = obj.family_replacement,
      majorRep = obj.v1_replacement,
      minorRep = obj.v2_replacement,
      patchRep = obj.v3_replacement;

  function parser(str) {
    var m = str.match(regexp);
    if (!m) { return null; }
    
    return {
        userAgent: str,
        family: famRep ? famRep.replace('$1', m[1]) : m[1],
        major: majorRep || m[2] || null,
        minor: minorRep || m[3] || null,
        patch: patchRep || m[4] || null
    };
  }

  return parser;
};


/***/ })
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAgOGVlOWRlY2Q0OTcxNWIzNjVjNzAiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL3JlZ2V4ZXMuanMiLCJ3ZWJwYWNrOi8vLy4vfi91YXAtcmVmLWltcGwvbGliL3BhcnNlci5qcyIsIndlYnBhY2s6Ly8vLi9+L3lhbWxwYXJzZXIveWFtbHBhcnNlci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvYXBwLmpzIiwid2VicGFjazovLy8uL34vdWFwLXJlZi1pbXBsL2xpYi9kZXZpY2UuanMiLCJ3ZWJwYWNrOi8vLy4vfi91YXAtcmVmLWltcGwvbGliL21ha2VQYXJzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vfi91YXAtcmVmLWltcGwvbGliL29zLmpzIiwid2VicGFjazovLy8uL34vdWFwLXJlZi1pbXBsL2xpYi9yZXBsYWNlTWF0Y2hlcy5qcyIsIndlYnBhY2s6Ly8vLi9+L3VhcC1yZWYtaW1wbC9saWIvcmVzdWx0cy5qcyIsIndlYnBhY2s6Ly8vLi9+L3VhcC1yZWYtaW1wbC9saWIvdWEuanMiXSwibmFtZXMiOlsiU3RyaW5nIiwicmF3IiwicmVnZXhlcyIsImV2YWwiLCJwYXJzZXIiLCJkb2N1bWVudCIsInJlYWR5U3RhdGUiLCJhZGRFdmVudExpc3RlbmVyIiwic3RhcnQiLCJ1YVJhd0xpc3QiLCJnZXRFbGVtZW50QnlJZCIsInVhQ29udmVydGVkTGlzdCIsImNvbnZlcnRCdXR0b24iLCJjb252ZXJ0IiwidWFDb252ZXJ0ZWRTdHIiLCJ1YVN0cnMiLCJ2YWx1ZSIsInRyaW0iLCJzcGxpdCIsInVhU3RyIiwiYWdlbnQiLCJwYXJzZSIsInVhIiwiZmFtaWx5IiwibWFqb3IiXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxtREFBMkMsY0FBYzs7QUFFekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBMkIsMEJBQTBCLEVBQUU7QUFDdkQseUNBQWlDLGVBQWU7QUFDaEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0EsOERBQXNELCtEQUErRDs7QUFFckg7QUFDQTs7QUFFQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7a0JDaEVlQSxPQUFPQyxHOzs7Ozs7QUNBdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUN4QkE7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxlQUFlO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxnQkFBZ0IsSUFBSTtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLDBDQUEwQyxTQUFTO0FBQ25EOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsYUFBYTtBQUNiOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsNEI7QUFDYjs7QUFFQTtBQUNBLHFCQUFxQixRQUFRO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLFVBQVU7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDhDQUE4QztBQUMvRDtBQUNBLGlCQUFpQiw4Q0FBOEM7QUFDL0Q7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsVUFBVTtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsOENBQThDO0FBQy9EO0FBQ0EsaUJBQWlCLDhDQUE4QztBQUMvRDtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSw2Q0FBNkMsVUFBVTtBQUN2RDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFNBQVM7QUFDVDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsU0FBUztBQUN0RDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QyxTQUFTO0FBQ3REO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQSw0Q0FBNEMsVUFBVTs7QUFFdEQ7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSw4Q0FBOEMsU0FBUztBQUN2RDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxvQztBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0EsK0Q7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixnQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxvQztBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsNEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLCtDQUErQyxRQUFRO0FBQ3ZEO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLFk7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLE9BQU87QUFDMUI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsZUFBZSxFQUFFOztBQUVqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLHdCQUF3QjtBQUNoRTtBQUNBLENBQUM7O0FBRUQsc0I7Ozs7Ozs7OztBQ2pkQTs7OztBQUNBOzs7O0FBQ0E7Ozs7OztBQUVBLElBQU1DLFVBQVUscUJBQUtDLElBQUwsbUJBQWhCO0FBQ0EsSUFBTUMsU0FBUywwQkFBWUYsT0FBWixDQUFmOztBQUVBLElBQUlHLFNBQVNDLFVBQVQsSUFBdUIsU0FBM0IsRUFBc0M7QUFDcENELFdBQVNFLGdCQUFULENBQTBCLGtCQUExQixFQUE4Q0MsS0FBOUM7QUFDRCxDQUZELE1BRU87QUFDTEE7QUFDRDs7QUFFRCxTQUFTQSxLQUFULEdBQWlCO0FBQ2YsTUFBTUMsWUFBWUosU0FBU0ssY0FBVCxDQUF3QixpQkFBeEIsQ0FBbEI7QUFDQSxNQUFNQyxrQkFBa0JOLFNBQVNLLGNBQVQsQ0FBd0IsdUJBQXhCLENBQXhCO0FBQ0EsTUFBTUUsZ0JBQWdCUCxTQUFTSyxjQUFULENBQXdCLFNBQXhCLENBQXRCOztBQUVBRSxnQkFBY0wsZ0JBQWQsQ0FBK0IsT0FBL0IsRUFBd0NNLE9BQXhDOztBQUVBLFdBQVNBLE9BQVQsR0FBbUI7QUFDakIsUUFBSUMsaUJBQWlCLEVBQXJCO0FBQ0EsUUFBTUMsU0FBU04sVUFBVU8sS0FBVixDQUFnQkMsSUFBaEIsR0FBdUJDLEtBQXZCLENBQTZCLElBQTdCLENBQWY7QUFGaUI7QUFBQTtBQUFBOztBQUFBO0FBR2pCLDJCQUFvQkgsTUFBcEIsOEhBQTRCO0FBQUEsWUFBakJJLEtBQWlCOztBQUMxQixZQUFNQyxRQUFRaEIsT0FBT2lCLEtBQVAsQ0FBYUYsS0FBYixDQUFkO0FBQ0FMLDBCQUFxQk0sTUFBTUUsRUFBTixDQUFTQyxNQUE5QixTQUF3Q0gsTUFBTUUsRUFBTixDQUFTRSxLQUFqRDtBQUNEO0FBTmdCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBT2pCYixvQkFBZ0JLLEtBQWhCLEdBQXdCRixjQUF4QjtBQUNEO0FBQ0YsQzs7Ozs7O0FDN0JEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsYUFBYSxhQUFhOztBQUUxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOzs7Ozs7O0FDOUJBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLGtEQUFrRCxZQUFZO0FBQzlEO0FBQ0Esd0JBQXdCLFlBQVk7QUFDcEM7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7Ozs7Ozs7QUNqQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGFBQWEsYUFBYTs7QUFFMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7Ozs7Ozs7QUNsQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOzs7Ozs7O0FDSkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUNUQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxhQUFhLGFBQWE7O0FBRTFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSlcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcblxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gaWRlbnRpdHkgZnVuY3Rpb24gZm9yIGNhbGxpbmcgaGFybW9ueSBpbXBvcnRzIHdpdGggdGhlIGNvcnJlY3QgY29udGV4dFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5pID0gZnVuY3Rpb24odmFsdWUpIHsgcmV0dXJuIHZhbHVlOyB9O1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHtcbiBcdFx0XHRcdGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gXHRcdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuIFx0XHRcdFx0Z2V0OiBnZXR0ZXJcbiBcdFx0XHR9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAzKTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyB3ZWJwYWNrL2Jvb3RzdHJhcCA4ZWU5ZGVjZDQ5NzE1YjM2NWM3MCIsImV4cG9ydCBkZWZhdWx0IFN0cmluZy5yYXdgXG51c2VyX2FnZW50X3BhcnNlcnM6XG4gICMjIyMgU1BFQ0lBTCBDQVNFUyBUT1AgIyMjI1xuXG4gICMgQG5vdGU6IGlPUyAvIE9TWCBBcHBsaWNhdGlvbnNcbiAgLSByZWdleDogJyhDRk5ldHdvcmspKD86LyhcXGQrKVxcLihcXGQrKVxcLj8oXFxkKyk/KT8nXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnQ0ZOZXR3b3JrJ1xuXG4gICMgUGluZ2RvbVxuICAtIHJlZ2V4OiAnKFBpbmdkb20uY29tX2JvdF92ZXJzaW9uXykoXFxkKylcXC4oXFxkKyknXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnUGluZ2RvbUJvdCdcbiAgICAjICdNb3ppbGxhLzUuMCAoVW5rbm93bjsgTGludXggeDg2XzY0KSBBcHBsZVdlYktpdC81MzQuMzQgKEtIVE1MLCBsaWtlIEdlY2tvKSBQaW5nZG9tVE1TLzAuOC41IFNhZmFyaS81MzQuMzQnXG4gIC0gcmVnZXg6ICcoUGluZ2RvbVRNUykvKFxcZCspXFwuKFxcZCspXFwuKFxcZCspJ1xuICAgIGZhbWlseV9yZXBsYWNlbWVudDogJ1Bpbmdkb21Cb3QnXG5cbiAgIyBGYWNlYm9va1xuICAtIHJlZ2V4OiAnKGZhY2Vib29rZXh0ZXJuYWxoaXQpLyhcXGQrKVxcLihcXGQrKSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdGYWNlYm9va0JvdCdcblxuICAjIEdvb2dsZSBQbHVzXG4gIC0gcmVnZXg6ICdHb29nbGUuKi9cXCsvd2ViL3NuaXBwZXQnXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnR29vZ2xlUGx1c0JvdCdcblxuICAjIEdtYWlsXG4gIC0gcmVnZXg6ICd2aWEgZ2dwaHQuY29tIEdvb2dsZUltYWdlUHJveHknXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnR21haWxJbWFnZVByb3h5J1xuXG4gICMgVHdpdHRlclxuICAtIHJlZ2V4OiAnKFR3aXR0ZXJib3QpLyhcXGQrKVxcLihcXGQrKSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdUd2l0dGVyQm90J1xuXG4gICMgQm90cyBQYXR0ZXJuICcvbmFtZS0wLjAnXG4gIC0gcmVnZXg6ICcvKCg/OkFudC0pP051dGNofFtBLXpdK1tCYl1vdHxbQS16XStbU3NdcGlkZXJ8QXh0YXJpc3xmZXRjaHVybHxJc2FyYXxTaG9wU2FsYWR8VGFpbHN3ZWVwKVsgXFwtXShcXGQrKSg/OlxcLihcXGQrKSg/OlxcLihcXGQrKSk/KT8nXG4gICMgQm90cyBQYXR0ZXJuICduYW1lLzAuMCdcbiAgLSByZWdleDogJ1xcYigwMDh8QWx0cmVzaXVtfEFyZ3VzfEJhaWR1TW9iYWlkZXJ8Qm9hcmRSZWFkZXJ8RE5TR3JvdXB8RGF0YXBhcmtTZWFyY2h8RURJfEdvb2R6ZXJ8R3J1YnxJTkdSSUR8SW5mb2hlbGZlcnxMaW5rZWRJbkJvdHxMT09RfE51dGNofFBhdGhEZWZlbmRlcnxQZWV3fFBvc3RQb3N0fFN0ZWVsZXJ8VHdpdHRlcmJvdHxWU0V8V2ViQ3J1bmNofFdlYlpJUHxZIUotQlJbQS1aXXxZYWhvb1NlZWtlcnxlbnZvbGt8c3Byb29zZXx3bWluZXIpLyhcXGQrKSg/OlxcLihcXGQrKSg/OlxcLihcXGQrKSk/KT8nXG5cbiAgIyBNU0lFQ3Jhd2xlclxuICAtIHJlZ2V4OiAnKE1TSUUpIChcXGQrKVxcLihcXGQrKShbYS16XVxcZD8pPzsuKiBNU0lFQ3Jhd2xlcidcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdNU0lFQ3Jhd2xlcidcblxuICAjIERvd25sb2FkZXIgLi4uXG4gIC0gcmVnZXg6ICcoR29vZ2xlLUhUVFAtSmF2YS1DbGllbnR8QXBhY2hlLUh0dHBDbGllbnR8aHR0cCUyMGNsaWVudHxQeXRob24tdXJsbGlifEh0dHBNb25pdG9yfFRMU1Byb2JlcnxXaW5IVFRQfEpOTFB8b2todHRwKSg/OlsgL10oXFxkKykoPzpcXC4oXFxkKykoPzpcXC4oXFxkKykpPyk/KT8nXG5cbiAgIyBCb3RzXG4gIC0gcmVnZXg6ICcoMTQ3MFxcLm5ldCBjcmF3bGVyfDUwXFwubnV8OGJvIENyYXdsZXIgQm90fEFib3VuZGV4fEFjY29vbmEtW0Etel0rLUFnZW50fEFkc0JvdC1Hb29nbGUoPzotW2Etel0rKT98YWx0YXZpc3RhfEFwcEVuZ2luZS1Hb29nbGV8YXJjaGl2ZS4qP1xcLm9yZ19ib3R8YXJjaGl2ZXJ8QXNrIEplZXZlc3xbQmJdYWlbRGRddVtTc11waWRlcig/Oi1bQS1aYS16XSspKnxiaW5nYm90fEJpbmdQcmV2aWV3fGJsaXR6Ym90fEJsb2dCcmlkZ2V8Qm9hcmRSZWFkZXIoPzogW0EtWmEtel0rKSp8Ym9pdGhvLmNvbS1kY3xCb3RTZWVyfFxcYlxcdypmYXZpY29uXFx3KlxcYnxcXGJZZXRpKD86LVthLXpdKyk/fENhdGNocG9pbnQgYm90fFtDY11oYXJsb3R0ZXxDaGVja2xpbmtzfGNsdW1ib290fENvbW9kbyBIVFRQXFwoU1xcKSBDcmF3bGVyfENvbW9kby1XZWJpbnNwZWN0b3ItQ3Jhd2xlcnxDb252ZXJhQ3Jhd2xlcnxDUkFXTC1FfENyYXdsQ29udmVyYXxEYXVtb2EoPzotZmVlZGZldGNoZXIpP3xGZWVkIFNlZWtlciBCb3R8ZmluZGxpbmtzfEZsYW1pbmdvX1NlYXJjaEVuZ2luZXxGb2xsb3dTaXRlIEJvdHxmdXJsYm90fEdlbmllb3xnaWdhYm90fEdvbWV6QWdlbnR8Z29uem8xfCg/OlthLXpBLVpdKy0pP0dvb2dsZWJvdCg/Oi1bYS16QS1aXSspP3xHb29nbGUgU2tldGNoVXB8Z3J1Yi1jbGllbnR8Z3NhLWNyYXdsZXJ8aGVyaXRyaXh8SGlkZGVuTWFya2V0fGhvbG1lc3xIb29XV1dlcnxodGRpZ3xpYV9hcmNoaXZlcnxJQ0MtQ3Jhd2xlcnxJY2FydXM2anxpY2hpcm8oPzovbW9iaWxlKT98SWNvblN1cmZ8SWxUcm92YXRvcmUoPzotU2V0YWNjaW8pP3xJbmZ1ekFwcHxJbm5vdmF6aW9uIENyYXdsZXJ8SW50ZXJuZXRBcmNoaXZlfElQMlthLXpdK0JvdHxqYm90XFxifEthbG9vZ2FCb3R8S3Jha2VufEt1cnpvcnxsYXJiaW58TEVJQXxMZXNuaWtCb3R8TGluZ3VlZSBCb3R8TGlua0FpZGVyfExpbmtlZEluQm90fExpdGUgQm90fExsYXV0fGx5Y29zfE1haWxcXC5SVV9Cb3R8bWFzc2NhbnxtYXNpZGFuaV9ib3R8TWVkaWFwYXJ0bmVycy1Hb29nbGV8TWljcm9zb2Z0IC4qPyBCb3R8bW9naW1vZ2l8bW96RGV4fE1KMTJib3R8bXNuYm90KD86LW1lZGlhICopP3xtc3Jib3R8bmV0cmVzZWFyY2h8TmV0dmliZXN8TmV3c0dhdG9yW14vXSp8Xk5JTkd8TnV0Y2hbXi9dKnxOeW1lc2lzfE9iamVjdHNTZWFyY2h8T3JiaXRlcnxPT1pCT1R8UGFnZVBlZWtlcnxQYWdlc0ludmVudG9yeXxQYXhsZUZyYW1ld29ya3xQZWVwbG8gU2NyZWVuc2hvdCBCb3R8UGxhbnR5TmV0X1dlYlJvYm90fFBvbXBvc3xSZWFkJTIwTGF0ZXJ8UmVhcGVyfFJlZENhcnBldHxSZXRyZWl2ZXJ8UmlkZGxlcnxSaXZhbCBJUXxzY29vdGVyfFNjcmFweXxTY3J1YmJ5fHNlYXJjaHNpZ2h0fHNlZWtib3R8c2VtYW50aWNkaXNjb3Zlcnl8U2ltcHl8U2ltcGxlUGllfFNFT3N0YXRzfFNpbXBsZVJTU3xTaXRlQ29ufFNsYWNrYm90LUxpbmtFeHBhbmRpbmd8U2xhY2stSW1nUHJveHl8U2x1cnB8c25hcHB5fFNwZWVkeSBTcGlkZXJ8U3F1cmwgSmF2YXxUaGVVc2VmdWxib3R8VGh1bWJTaG90c0JvdHxUaHVtYnNob3RzXFwucnV8VHdpdHRlckJvdHxXaGF0c0FwcHxVUkwyUE5HfFZhZ2Fib25kb3xWb2lsYUJvdHxedm9ydGV4fFZvdGF5IGJvdHxedm95YWdlcnxXQVNBTGl2ZS5Cb3R8V2ViLXNuaWZmZXJ8V2ViVGh1bWJ8V2VTRUU6W0Etel0rfFdoYXRXZWJ8V0lSRXxXb3JkUHJlc3N8V290Ym94fHd3d1xcLmFsbWFkZW5cXC5pYm1cXC5jb218WGVudSg/Oi5zKT8gTGluayBTbGV1dGh8WGVya2EgW0Etel0rQm90fHlhY3koPzpib3QpP3xZYWhvb1thLXpdKlNlZWtlcnxZYWhvbyEgU2x1cnB8WWFuZGV4XFx3K3xZb2Rhb0JvdCg/Oi1bQS16XSspP3xZb3R0YWFNb25pdG9yfFlvd2Vkb3xeWmFvfF5aYW8tQ3Jhd2xlcnxaZUJvdF93d3dcXC56ZVxcLmJ6fFpvb1Nob3R8WnlCb3JnKSg/OlsgL112PyhcXGQrKSg/OlxcLihcXGQrKSg/OlxcLihcXGQrKSk/KT8pPydcblxuICAjIEJvdHMgR2VuZXJhbCBtYXRjaGVyICduYW1lLzAuMCdcbiAgLSByZWdleDogJyg/OlxcL1tBLVphLXowLTlcXC5dKyk/ICooW0EtWmEtejAtOSBcXC1fXFwhXFxbXFxdOl0qKD86W0FhXXJjaGl2ZXJ8W0lpXW5kZXhlcnxbU3NdY3JhcGVyfFtCYl1vdHxbU3NdcGlkZXJ8W0NjXXJhd2xbYS16XSopKS8oXFxkKykoPzpcXC4oXFxkKykoPzpcXC4oXFxkKykpPyk/J1xuICAjIEJvdHMgR2VuZXJhbCBtYXRjaGVyICduYW1lIDAuMCdcbiAgLSByZWdleDogJyg/OlxcL1tBLVphLXowLTlcXC5dKyk/ICooW0EtWmEtejAtOSBfXFwhXFxbXFxdOl0qKD86W0FhXXJjaGl2ZXJ8W0lpXW5kZXhlcnxbU3NdY3JhcGVyfFtCYl1vdHxbU3NdcGlkZXJ8W0NjXXJhd2xbYS16XSopKSAoXFxkKykoPzpcXC4oXFxkKykoPzpcXC4oXFxkKykpPyk/J1xuICAjIEJvdHMgY29udGFpbmluZyBzcGlkZXJ8c2NyYXBlfGJvdChidXQgbm90IENVQk9UKXxDcmF3bFxuICAtIHJlZ2V4OiAnKCg/OltBLXowLTldK3xbQS16XFwtXSsgPyk/KD86IHRoZSApPyg/OltTc11bUHBdW0lpXVtEZF1bRWVdW1JyXXxbU3NdY3JhcGV8W0EtWmEtejAtOS1dKig/OlteQ11bXlV1XSlbQmJdb3R8W0NjXVtScl1bQWFdW1d3XVtMbF0pW0EtejAtOV0qKSg/Oig/OlsgL118IHYpKFxcZCspKD86XFwuKFxcZCspKD86XFwuKFxcZCspKT8pPyk/J1xuXG4gICMgSGJiVFYgc3RhbmRhcmQgZGVmaW5lcyB3aGF0IGZlYXR1cmVzIHRoZSBicm93c2VyIHNob3VsZCB1bmRlcnN0YW5kLlxuICAjIGJ1dCBpdCdzIGxpa2UgdGFyZ2V0aW5nIFwiSFRNTDUgYnJvd3NlcnNcIiwgZWZmZWN0aXZlIGJyb3dzZXIgc3VwcG9ydCBkZXBlbmRzIG9uIHRoZSBtb2RlbFxuICAjIFNlZSBvc19wYXJzZXJzIGlmIHlvdSB3YW50IHRvIHRhcmdldCBhIHNwZWNpZmljIFRWXG4gIC0gcmVnZXg6ICcoSGJiVFYpLyhcXGQrKVxcLihcXGQrKVxcLihcXGQrKSBcXCgnXG5cbiAgIyBtdXN0IGdvIGJlZm9yZSBGaXJlZm94IHRvIGNhdGNoIENoaW1lcmEvU2VhTW9ua2V5L0NhbWlub1xuICAtIHJlZ2V4OiAnKENoaW1lcmF8U2VhTW9ua2V5fENhbWlubykvKFxcZCspXFwuKFxcZCspXFwuPyhbYWJdP1xcZCtbYS16XSopPydcblxuICAjIFNvY2lhbCBOZXR3b3Jrc1xuICAjIEZhY2Vib29rXG4gIC0gcmVnZXg6ICdcXFtGQi4qOyhGQkFWKS8oXFxkKykoPzpcXC4oXFxkKykoPzpcXC4oXFxkKSspPyk/J1xuICAgIGZhbWlseV9yZXBsYWNlbWVudDogJ0ZhY2Vib29rJ1xuICAjIFBpbnRlcmVzdFxuICAtIHJlZ2V4OiAnXFxbKFBpbnRlcmVzdCkvW15cXF1dK1xcXSdcbiAgLSByZWdleDogJyhQaW50ZXJlc3QpKD86IGZvciBBbmRyb2lkKD86IFRhYmxldCk/KT8vKFxcZCspKD86XFwuKFxcZCspKD86XFwuKFxcZCkrKT8pPydcblxuICAjIFBhbGUgTW9vblxuICAtIHJlZ2V4OiAnKFBhbGVNb29uKS8oXFxkKylcXC4oXFxkKylcXC4/KFxcZCspPydcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdQYWxlIE1vb24nXG5cbiAgIyBGaXJlZm94XG4gIC0gcmVnZXg6ICcoRmVubmVjKS8oXFxkKylcXC4oXFxkKylcXC4/KFthYl0/XFxkK1thLXpdKiknXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnRmlyZWZveCBNb2JpbGUnXG4gIC0gcmVnZXg6ICcoRmVubmVjKS8oXFxkKylcXC4oXFxkKykocHJlKSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdGaXJlZm94IE1vYmlsZSdcbiAgLSByZWdleDogJyhGZW5uZWMpLyhcXGQrKVxcLihcXGQrKSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdGaXJlZm94IE1vYmlsZSdcbiAgLSByZWdleDogJyg/Ok1vYmlsZXxUYWJsZXQpOy4qKEZpcmVmb3gpLyhcXGQrKVxcLihcXGQrKSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdGaXJlZm94IE1vYmlsZSdcbiAgLSByZWdleDogJyhOYW1vcm9rYXxTaGlyZXRva298TWluZWZpZWxkKS8oXFxkKylcXC4oXFxkKylcXC4oXFxkKyg/OnByZSk/KSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdGaXJlZm94ICgkMSknXG4gIC0gcmVnZXg6ICcoRmlyZWZveCkvKFxcZCspXFwuKFxcZCspKGFcXGQrW2Etel0qKSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdGaXJlZm94IEFscGhhJ1xuICAtIHJlZ2V4OiAnKEZpcmVmb3gpLyhcXGQrKVxcLihcXGQrKShiXFxkK1thLXpdKiknXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnRmlyZWZveCBCZXRhJ1xuICAtIHJlZ2V4OiAnKEZpcmVmb3gpLSg/OlxcZCtcXC5cXGQrKT8vKFxcZCspXFwuKFxcZCspKGFcXGQrW2Etel0qKSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdGaXJlZm94IEFscGhhJ1xuICAtIHJlZ2V4OiAnKEZpcmVmb3gpLSg/OlxcZCtcXC5cXGQrKT8vKFxcZCspXFwuKFxcZCspKGJcXGQrW2Etel0qKSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdGaXJlZm94IEJldGEnXG4gIC0gcmVnZXg6ICcoTmFtb3Jva2F8U2hpcmV0b2tvfE1pbmVmaWVsZCkvKFxcZCspXFwuKFxcZCspKFthYl1cXGQrW2Etel0qKT8nXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnRmlyZWZveCAoJDEpJ1xuICAtIHJlZ2V4OiAnKEZpcmVmb3gpLipUYWJsZXQgYnJvd3NlciAoXFxkKylcXC4oXFxkKylcXC4oXFxkKyknXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnTWljcm9CJ1xuICAtIHJlZ2V4OiAnKE1vemlsbGFEZXZlbG9wZXJQcmV2aWV3KS8oXFxkKylcXC4oXFxkKykoW2FiXVxcZCtbYS16XSopPydcbiAgLSByZWdleDogJyhGeGlPUykvKFxcZCspXFwuKFxcZCspKFxcLihcXGQrKSk/KFxcLihcXGQrKSk/J1xuICAgIGZhbWlseV9yZXBsYWNlbWVudDogJ0ZpcmVmb3ggaU9TJ1xuXG4gICMgZS5nLjogRmxvY2svMi4wYjJcbiAgLSByZWdleDogJyhGbG9jaykvKFxcZCspXFwuKFxcZCspKGJcXGQrPyknXG5cbiAgIyBSb2NrTWVsdFxuICAtIHJlZ2V4OiAnKFJvY2tNZWx0KS8oXFxkKylcXC4oXFxkKylcXC4oXFxkKyknXG5cbiAgIyBlLmcuOiBGZW5uZWMvMC45cHJlXG4gIC0gcmVnZXg6ICcoTmF2aWdhdG9yKS8oXFxkKylcXC4oXFxkKylcXC4oXFxkKyknXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnTmV0c2NhcGUnXG5cbiAgLSByZWdleDogJyhOYXZpZ2F0b3IpLyhcXGQrKVxcLihcXGQrKShbYWJdXFxkKyknXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnTmV0c2NhcGUnXG5cbiAgLSByZWdleDogJyhOZXRzY2FwZTYpLyhcXGQrKVxcLihcXGQrKVxcLj8oW2FiXT9cXGQrKT8nXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnTmV0c2NhcGUnXG5cbiAgLSByZWdleDogJyhNeUlCcm93KS8oXFxkKylcXC4oXFxkKyknXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnTXkgSW50ZXJuZXQgQnJvd3NlcidcblxuICAjIFVDIEJyb3dzZXJcbiAgIyB3ZSBuZWVkIGNoZWNrIGl0IGJlZm9yZSBvcGVyYS4gSW4gb3RoZXIgY2FzZSBjYXNlIFVDIEJyb3dzZXIgZGV0ZWN0ZWQgbG9vayBsaWtlIE9wZXJhIE1pbmlcbiAgLSByZWdleDogJyhVQz8gP0Jyb3dzZXJ8VUNXRUJ8VTMpWyAvXT8oXFxkKylcXC4oXFxkKylcXC4oXFxkKyknXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnVUMgQnJvd3NlcidcblxuICAjIE9wZXJhIHdpbGwgc3RvcCBhdCA5LjgwIGFuZCBoaWRlIHRoZSByZWFsIHZlcnNpb24gaW4gdGhlIFZlcnNpb24gc3RyaW5nLlxuICAjIHNlZTogaHR0cDovL2Rldi5vcGVyYS5jb20vYXJ0aWNsZXMvdmlldy9vcGVyYS11YS1zdHJpbmctY2hhbmdlcy9cbiAgLSByZWdleDogJyhPcGVyYSBUYWJsZXQpLipWZXJzaW9uLyhcXGQrKVxcLihcXGQrKSg/OlxcLihcXGQrKSk/J1xuICAtIHJlZ2V4OiAnKE9wZXJhIE1pbmkpKD86L2F0dCk/Lz8oXFxkKyk/KD86XFwuKFxcZCspKT8oPzpcXC4oXFxkKykpPydcbiAgLSByZWdleDogJyhPcGVyYSkvLitPcGVyYSBNb2JpLitWZXJzaW9uLyhcXGQrKVxcLihcXGQrKSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdPcGVyYSBNb2JpbGUnXG4gIC0gcmVnZXg6ICcoT3BlcmEpLyhcXGQrKVxcLihcXGQrKS4rT3BlcmEgTW9iaSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdPcGVyYSBNb2JpbGUnXG4gIC0gcmVnZXg6ICdPcGVyYSBNb2JpLisoT3BlcmEpKD86L3xcXHMrKShcXGQrKVxcLihcXGQrKSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdPcGVyYSBNb2JpbGUnXG4gIC0gcmVnZXg6ICdPcGVyYSBNb2JpJ1xuICAgIGZhbWlseV9yZXBsYWNlbWVudDogJ09wZXJhIE1vYmlsZSdcbiAgLSByZWdleDogJyhPcGVyYSkvOS44MC4qVmVyc2lvbi8oXFxkKylcXC4oXFxkKykoPzpcXC4oXFxkKykpPydcblxuICAjIE9wZXJhIDE0IGZvciBBbmRyb2lkIHVzZXMgYSBXZWJLaXQgcmVuZGVyIGVuZ2luZS5cbiAgLSByZWdleDogJyg/Ok1vYmlsZSBTYWZhcmkpLiooT1BSKS8oXFxkKylcXC4oXFxkKylcXC4oXFxkKyknXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnT3BlcmEgTW9iaWxlJ1xuXG4gICMgT3BlcmEgPj0xNSBmb3IgRGVza3RvcCBpcyBzaW1pbGFyIHRvIENocm9tZSBidXQgaW5jbHVkZXMgYW4gXCJPUFJcIiBWZXJzaW9uIHN0cmluZy5cbiAgLSByZWdleDogJyg/OkNocm9tZSkuKihPUFIpLyhcXGQrKVxcLihcXGQrKVxcLihcXGQrKSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdPcGVyYSdcblxuICAjIE9wZXJhIENvYXN0XG4gIC0gcmVnZXg6ICcoQ29hc3QpLyhcXGQrKS4oXFxkKykuKFxcZCspJ1xuICAgIGZhbWlseV9yZXBsYWNlbWVudDogJ09wZXJhIENvYXN0J1xuXG4gICMgT3BlcmEgTWluaSBmb3IgaU9TIChmcm9tIHZlcnNpb24gOC4wLjApXG4gIC0gcmVnZXg6ICcoT1BpT1MpLyhcXGQrKS4oXFxkKykuKFxcZCspJ1xuICAgIGZhbWlseV9yZXBsYWNlbWVudDogJ09wZXJhIE1pbmknXG5cbiAgIyBPcGVyYSBOZW9uXG4gIC0gcmVnZXg6ICdDaHJvbWUvLisoIE1NUykvKFxcZCspLihcXGQrKS4oXFxkKyknXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnT3BlcmEgTmVvbidcblxuICAjIFBhbG0gV2ViT1MgbG9va3MgYSBsb3QgbGlrZSBTYWZhcmkuXG4gIC0gcmVnZXg6ICcoaHB3fHdlYilPUy8oXFxkKylcXC4oXFxkKykoPzpcXC4oXFxkKykpPydcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICd3ZWJPUyBCcm93c2VyJ1xuXG4gICMgTHVhS2l0IGhhcyBubyB2ZXJzaW9uIGluZm8uXG4gICMgaHR0cDovL2x1YWtpdC5vcmcvcHJvamVjdHMvbHVha2l0L1xuICAtIHJlZ2V4OiAnKGx1YWtpdCknXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnTHVhS2l0J1xuXG4gICMgU25vd3Nob2VcbiAgLSByZWdleDogJyhTbm93c2hvZSkvKFxcZCspXFwuKFxcZCspLihcXGQrKSdcblxuICAjIExpZ2h0bmluZyAoZm9yIFRodW5kZXJiaXJkKVxuICAjIGh0dHA6Ly93d3cubW96aWxsYS5vcmcvcHJvamVjdHMvY2FsZW5kYXIvbGlnaHRuaW5nL1xuICAtIHJlZ2V4OiAnR2Vja28vXFxkKyAoTGlnaHRuaW5nKS8oXFxkKylcXC4oXFxkKylcXC4/KCg/OlthYl0/XFxkK1thLXpdKil8KD86XFxkKikpJ1xuXG4gICMgU3dpZnRmb3hcbiAgLSByZWdleDogJyhGaXJlZm94KS8oXFxkKylcXC4oXFxkKylcXC4oXFxkKyg/OnByZSk/KSBcXChTd2lmdGZveFxcKSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdTd2lmdGZveCdcbiAgLSByZWdleDogJyhGaXJlZm94KS8oXFxkKylcXC4oXFxkKykoW2FiXVxcZCtbYS16XSopPyBcXChTd2lmdGZveFxcKSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdTd2lmdGZveCdcblxuICAjIFJla29ucVxuICAtIHJlZ2V4OiAnKHJla29ucSkvKFxcZCspXFwuKFxcZCspXFwuPyhcXGQrKT8gU2FmYXJpJ1xuICAgIGZhbWlseV9yZXBsYWNlbWVudDogJ1Jla29ucSdcbiAgLSByZWdleDogJ3Jla29ucSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdSZWtvbnEnXG5cbiAgIyBDb25rZXJvciBsb3dlcmNhc2UvdXBwZXJjYXNlXG4gICMgaHR0cDovL2Nvbmtlcm9yLm9yZy9cbiAgLSByZWdleDogJyhjb25rZXJvcnxDb25rZXJvcikvKFxcZCspXFwuKFxcZCspXFwuPyhcXGQrKT8nXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnQ29ua2Vyb3InXG5cbiAgIyBjYXRjaGVzIGxvd2VyIGNhc2Uga29ucXVlcm9yXG4gIC0gcmVnZXg6ICcoa29ucXVlcm9yKS8oXFxkKylcXC4oXFxkKylcXC4oXFxkKyknXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnS29ucXVlcm9yJ1xuXG4gIC0gcmVnZXg6ICcoV2VUYWIpLUJyb3dzZXInXG5cbiAgLSByZWdleDogJyhDb21vZG9fRHJhZ29uKS8oXFxkKylcXC4oXFxkKylcXC4oXFxkKyknXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnQ29tb2RvIERyYWdvbidcblxuICAtIHJlZ2V4OiAnKFN5bXBob255KSAoXFxkKykuKFxcZCspJ1xuXG4gIC0gcmVnZXg6ICdQTEFZU1RBVElPTiAzLitXZWJLaXQnXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnTmV0RnJvbnQgTlgnXG4gIC0gcmVnZXg6ICdQTEFZU1RBVElPTiAzJ1xuICAgIGZhbWlseV9yZXBsYWNlbWVudDogJ05ldEZyb250J1xuICAtIHJlZ2V4OiAnKFBsYXlTdGF0aW9uIFBvcnRhYmxlKSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdOZXRGcm9udCdcbiAgLSByZWdleDogJyhQbGF5U3RhdGlvbiBWaXRhKSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdOZXRGcm9udCBOWCdcblxuICAtIHJlZ2V4OiAnQXBwbGVXZWJLaXQuKyAoTlgpLyhcXGQrKVxcLihcXGQrKVxcLihcXGQrKSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdOZXRGcm9udCBOWCdcbiAgLSByZWdleDogJyhOaW50ZW5kbyAzRFMpJ1xuICAgIGZhbWlseV9yZXBsYWNlbWVudDogJ05ldEZyb250IE5YJ1xuXG4gICMgQW1hem9uIFNpbGssIHNob3VsZCBnbyBiZWZvcmUgU2FmYXJpIGFuZCBDaHJvbWUgTW9iaWxlXG4gIC0gcmVnZXg6ICcoU2lsaykvKFxcZCspXFwuKFxcZCspKD86XFwuKFswLTlcXC1dKykpPydcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdBbWF6b24gU2lsaydcblxuICAjIEByZWY6IGh0dHA6Ly93d3cucHVmZmluYnJvd3Nlci5jb21cbiAgLSByZWdleDogJyhQdWZmaW4pLyhcXGQrKVxcLihcXGQrKSg/OlxcLihcXGQrKSk/J1xuXG4gICMgRWRnZSBNb2JpbGVcbiAgLSByZWdleDogJ1dpbmRvd3MgUGhvbmUgLiooRWRnZSkvKFxcZCspXFwuKFxcZCspJ1xuICAgIGZhbWlseV9yZXBsYWNlbWVudDogJ0VkZ2UgTW9iaWxlJ1xuXG4gICMgU2Ftc3VuZyBJbnRlcm5ldCAoYmFzZWQgb24gQ2hyb21lLCBidXQgbGFja2luZyBzb21lIGZlYXR1cmVzKVxuICAtIHJlZ2V4OiAnKFNhbXN1bmdCcm93c2VyKS8oXFxkKylcXC4oXFxkKyknXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnU2Ftc3VuZyBJbnRlcm5ldCdcblxuICAjIEJhaWR1IEJyb3dzZXJzIChkZXNrdG9wIHNwb29mcyBjaHJvbWUgJiBJRSwgZXhwbG9yZXIgaXMgbW9iaWxlKVxuICAtIHJlZ2V4OiAnKGJhaWR1YnJvd3NlcilbL1xcc10oXFxkKykoPzpcXC4oXFxkKykoPzpcXC4oXFxkKykpPyk/J1xuICAgIGZhbWlseV9yZXBsYWNlbWVudDogJ0JhaWR1IEJyb3dzZXInXG4gIC0gcmVnZXg6ICcoRmx5RmxvdykvKFxcZCspXFwuKFxcZCspJ1xuICAgIGZhbWlseV9yZXBsYWNlbWVudDogJ0JhaWR1IEV4cGxvcmVyJ1xuXG4gICMgQ2hyb21lIE1vYmlsZVxuICAtIHJlZ2V4OiAnKENyTW8pLyhcXGQrKVxcLihcXGQrKVxcLihcXGQrKVxcLihcXGQrKSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdDaHJvbWUgTW9iaWxlJ1xuICAtIHJlZ2V4OiAnKENyaU9TKS8oXFxkKylcXC4oXFxkKylcXC4oXFxkKylcXC4oXFxkKyknXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnQ2hyb21lIE1vYmlsZSBpT1MnXG4gIC0gcmVnZXg6ICcoQ2hyb21lKS8oXFxkKylcXC4oXFxkKylcXC4oXFxkKylcXC4oXFxkKykgTW9iaWxlKD86WyAvXXwkKSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdDaHJvbWUgTW9iaWxlJ1xuICAtIHJlZ2V4OiAnIE1vYmlsZSAuKihDaHJvbWUpLyhcXGQrKVxcLihcXGQrKVxcLihcXGQrKVxcLihcXGQrKSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdDaHJvbWUgTW9iaWxlJ1xuXG4gICMgQ2hyb21lIEZyYW1lIG11c3QgY29tZSBiZWZvcmUgTVNJRS5cbiAgLSByZWdleDogJyhjaHJvbWVmcmFtZSkvKFxcZCspXFwuKFxcZCspXFwuKFxcZCspJ1xuICAgIGZhbWlseV9yZXBsYWNlbWVudDogJ0Nocm9tZSBGcmFtZSdcblxuICAjIFRpemVuIEJyb3dzZXIgKHNlY29uZCBjYXNlIGluY2x1ZGVkIGluIGJyb3dzZXIvbWFqb3IubWlub3IgcmVnZXgpXG4gIC0gcmVnZXg6ICcoU0xQIEJyb3dzZXIpLyhcXGQrKVxcLihcXGQrKSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdUaXplbiBCcm93c2VyJ1xuXG4gICMgU29nb3UgRXhwbG9yZXIgMi5YXG4gIC0gcmVnZXg6ICcoU0UgMlxcLlgpIE1ldGFTciAoXFxkKylcXC4oXFxkKyknXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnU29nb3UgRXhwbG9yZXInXG5cbiAgIyBRUSBCcm93c2Vyc1xuICAtIHJlZ2V4OiAnKE1RUUJyb3dzZXIvTWluaSkoPzooXFxkKykoPzpcXC4oXFxkKykoPzpcXC4oXFxkKykpPyk/KT8nXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnUVEgQnJvd3NlciBNaW5pJ1xuICAtIHJlZ2V4OiAnKE1RUUJyb3dzZXIpKD86LyhcXGQrKSg/OlxcLihcXGQrKSg/OlxcLihcXGQrKSk/KT8pPydcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdRUSBCcm93c2VyIE1vYmlsZSdcbiAgLSByZWdleDogJyhRUUJyb3dzZXIpKD86LyhcXGQrKSg/OlxcLihcXGQrKVxcLihcXGQrKSg/OlxcLihcXGQrKSk/KT8pPydcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdRUSBCcm93c2VyJ1xuXG4gICMgUmFja3NwYWNlIE1vbml0b3JpbmdcbiAgLSByZWdleDogJyhSYWNrc3BhY2UgTW9uaXRvcmluZykvKFxcZCspXFwuKFxcZCspJ1xuICAgIGZhbWlseV9yZXBsYWNlbWVudDogJ1JhY2tzcGFjZUJvdCdcblxuICAjIFB5QU1GXG4gIC0gcmVnZXg6ICcoUHlBTUYpLyhcXGQrKVxcLihcXGQrKVxcLihcXGQrKSdcblxuICAjIFlhbmRleCBCcm93c2VyXG4gIC0gcmVnZXg6ICcoWWFCcm93c2VyKS8oXFxkKylcXC4oXFxkKylcXC4oXFxkKyknXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnWWFuZGV4IEJyb3dzZXInXG5cbiAgIyBNYWlsLnJ1IEFtaWdvL0ludGVybmV0IEJyb3dzZXIgKENocm9taXVtLWJhc2VkKVxuICAtIHJlZ2V4OiAnKENocm9tZSkvKFxcZCspXFwuKFxcZCspXFwuKFxcZCspLiogTVJDSFJPTUUnXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnTWFpbC5ydSBDaHJvbWl1bSBCcm93c2VyJ1xuXG4gICMgQU9MIEJyb3dzZXIgKElFLWJhc2VkKVxuICAtIHJlZ2V4OiAnKEFPTCkgKFxcZCspXFwuKFxcZCspOyBBT0xCdWlsZCAoXFxkKyknXG5cbiAgIyBNeEJyb3dzZXIgaXMgTWF4dGhvblxuICAtIHJlZ2V4OiAnKE14QnJvd3NlcikvKFxcZCspXFwuKFxcZCspKD86XFwuKFxcZCspKT8nXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnTWF4dGhvbidcblxuICAjIyMjIEVORCBTUEVDSUFMIENBU0VTIFRPUCAjIyMjXG5cbiAgIyMjIyBNQUlOIENBU0VTIC0gdGhpcyBjYXRjaGVzID4gNTAlIG9mIGFsbCBicm93c2VycyAjIyMjXG5cbiAgIyBCcm93c2VyL21ham9yX3ZlcnNpb24ubWlub3JfdmVyc2lvbi5iZXRhX3ZlcnNpb25cbiAgLSByZWdleDogJ1xcYihNb2JpbGVJcm9ufENyb3Nzd2Fsa3xGaXJlV2VifEphc21pbmV8QU5UR2FsaW98TWlkb3JpfEZyZXNjb3xMb2JvfFBhbGVNb29ufE1heHRob258THlueHxPbW5pV2VifERpbGxvfENhbWlub3xEZW1ldGVyfEZsdWlkfEZlbm5lY3xFcGlwaGFueXxTaGlpcmF8U3VucmlzZXxTcG90aWZ5fEZsb2NrfE5ldHNjYXBlfEx1bmFzY2FwZXxXZWJQaWxvdHxOZXRGcm9udHxOZXRmcm9udHxLb25xdWVyb3J8U2VhTW9ua2V5fEthemVoYWthc2V8Vmllbm5hfEljZWFwZXxJY2V3ZWFzZWx8SWNlV2Vhc2VsfElyb258Sy1NZWxlb258U2xlaXBuaXJ8R2FsZW9ufEdyYW5QYXJhZGlzb3xPcGVyYSBNaW5pfGlDYWJ8TmV0TmV3c1dpcmV8VGh1bmRlckJyb3dzZXxJcmlzfFVQXFwuQnJvd3NlcnxCdW5qYWxsb298R29vZ2xlIEVhcnRofFJhdmVuIGZvciBNYWN8T3BlbndhdmV8TWFjT3V0bG9va3xFbGVjdHJvbikvKFxcZCspXFwuKFxcZCspXFwuKFxcZCspJ1xuXG4gICMgT3V0bG9vayAyMDA3XG4gIC0gcmVnZXg6ICdNaWNyb3NvZnQgT2ZmaWNlIE91dGxvb2sgMTJcXC5cXGQrXFwuXFxkK3xNU09mZmljZSAxMidcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdPdXRsb29rJ1xuICAgIHYxX3JlcGxhY2VtZW50OiAnMjAwNydcblxuICAjIE91dGxvb2sgMjAxMFxuICAtIHJlZ2V4OiAnTWljcm9zb2Z0IE91dGxvb2sgMTRcXC5cXGQrXFwuXFxkK3xNU09mZmljZSAxNCdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdPdXRsb29rJ1xuICAgIHYxX3JlcGxhY2VtZW50OiAnMjAxMCdcblxuICAjIE91dGxvb2sgMjAxM1xuICAtIHJlZ2V4OiAnTWljcm9zb2Z0IE91dGxvb2sgMTVcXC5cXGQrXFwuXFxkKydcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdPdXRsb29rJ1xuICAgIHYxX3JlcGxhY2VtZW50OiAnMjAxMydcblxuICAjIE91dGxvb2sgMjAxNlxuICAtIHJlZ2V4OiAnTWljcm9zb2Z0IE91dGxvb2sgKD86TWFpbCApPzE2XFwuXFxkK1xcLlxcZCsnXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnT3V0bG9vaydcbiAgICB2MV9yZXBsYWNlbWVudDogJzIwMTYnXG5cbiAgIyBXaW5kb3dzIExpdmUgTWFpbFxuICAtIHJlZ2V4OiAnT3V0bG9vay1FeHByZXNzXFwvN1xcLjAuKidcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdXaW5kb3dzIExpdmUgTWFpbCdcblxuICAjIEFwcGxlIEFpciBNYWlsXG4gIC0gcmVnZXg6ICcoQWlybWFpbCkgKFxcZCspXFwuKFxcZCspKD86XFwuKFxcZCspKT8nXG5cbiAgIyBUaHVuZGVyYmlyZFxuICAtIHJlZ2V4OiAnKFRodW5kZXJiaXJkKS8oXFxkKylcXC4oXFxkKykoPzpcXC4oXFxkKyg/OnByZSk/KSk/J1xuICAgIGZhbWlseV9yZXBsYWNlbWVudDogJ1RodW5kZXJiaXJkJ1xuXG4gICMgUG9zdGJveFxuICAtIHJlZ2V4OiAnKFBvc3Rib3gpLyhcXGQrKVxcLihcXGQrKVxcLihcXGQrKSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdQb3N0Ym94J1xuXG4gICMgQmFyY2FcbiAgLSByZWdleDogJyhCYXJjYSg/OlBybyk/KS8oXFxkKylcXC4oXFxkKykoPzpcXC4oXFxkKykpPydcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdCYXJjYSdcblxuICAjIExvdHVzIE5vdGVzXG4gIC0gcmVnZXg6ICcoTG90dXMtTm90ZXMpLyhcXGQrKVxcLihcXGQrKSg/OlxcLihcXGQrKSk/J1xuICAgIGZhbWlseV9yZXBsYWNlbWVudDogJ0xvdHVzIE5vdGVzJ1xuXG4gICMgVml2YWxkaSB1c2VzIFwiVml2YWxkaVwiXG4gIC0gcmVnZXg6ICcoVml2YWxkaSkvKFxcZCspXFwuKFxcZCspXFwuKFxcZCspJ1xuXG4gICMgRWRnZS9tYWpvcl92ZXJzaW9uLm1pbm9yX3ZlcnNpb25cbiAgLSByZWdleDogJyhFZGdlKS8oXFxkKylcXC4oXFxkKyknXG5cbiAgIyBCcmF2ZSBCcm93c2VyIGh0dHBzOi8vYnJhdmUuY29tL1xuICAtIHJlZ2V4OiAnKGJyYXZlKS8oXFxkKylcXC4oXFxkKylcXC4oXFxkKykgQ2hyb21lJ1xuICAgIGZhbWlseV9yZXBsYWNlbWVudDogJ0JyYXZlJ1xuXG4gICMgSXJvbiBCcm93c2VyIH5zaW5jZSB2ZXJzaW9uIDUwXG4gIC0gcmVnZXg6ICcoQ2hyb21lKS8oXFxkKylcXC4oXFxkKylcXC4oXFxkKylbXFxkLl0qIElyb25bXi9dJ1xuICAgIGZhbWlseV9yZXBsYWNlbWVudDogJ0lyb24nXG5cbiAgIyBEb2xwaGluIEJyb3dzZXJcbiAgIyBAcmVmOiBodHRwOi8vd3d3LmRvbHBoaW4uY29tXG4gIC0gcmVnZXg6ICdcXGIoRG9scGhpbikoPzogfEhEQ04vfC9JTlRcXC0pKFxcZCspXFwuKFxcZCspXFwuPyhcXGQrKT8nXG5cbiAgIyBIZWFkbGVzcyBDaHJvbWVcbiAgIyBodHRwczovL2Nocm9taXVtLmdvb2dsZXNvdXJjZS5jb20vY2hyb21pdW0vc3JjLysvbGtnci9oZWFkbGVzcy9SRUFETUUubWRcbiAgIyBDdXJyZW50bHkgb25seSBhdmFpbGFibGUgb24gTGludXhcbiAgLSByZWdleDogJ0hlYWRsZXNzQ2hyb21lJ1xuICAgIGZhbWlseV9yZXBsYWNlbWVudDogJ0hlYWRsZXNzQ2hyb21lJ1xuXG4gICMgQnJvd3Nlci9tYWpvcl92ZXJzaW9uLm1pbm9yX3ZlcnNpb25cbiAgLSByZWdleDogJyhiaW5nYm90fEJvbHR8QWRvYmVBSVJ8SmFzbWluZXxJY2VDYXR8U2t5ZmlyZXxNaWRvcml8TWF4dGhvbnxMeW54fEFyb3JhfElCcm93c2V8RGlsbG98Q2FtaW5vfFNoaWlyYXxGZW5uZWN8UGhvZW5peHxGbG9ja3xOZXRzY2FwZXxMdW5hc2NhcGV8RXBpcGhhbnl8V2ViUGlsb3R8T3BlcmEgTWluaXxPcGVyYXxOZXRGcm9udHxOZXRmcm9udHxLb25xdWVyb3J8R29vZ2xlYm90fFNlYU1vbmtleXxLYXplaGFrYXNlfFZpZW5uYXxJY2VhcGV8SWNld2Vhc2VsfEljZVdlYXNlbHxJcm9ufEstTWVsZW9ufFNsZWlwbmlyfEdhbGVvbnxHcmFuUGFyYWRpc298aUNhYnxpVHVuZXN8TWFjQXBwU3RvcmV8TmV0TmV3c1dpcmV8U3BhY2UgQmlzb258U3RhaW5sZXNzfE9yY2F8RG9sZmlufEJPTFR8TWluaW1vfFRpemVuIEJyb3dzZXJ8UG9sYXJpc3xBYnJvd3NlcnxQbGFuZXR3ZWJ8SUNFIEJyb3dzZXJ8bURvbHBoaW58cXV0ZWJyb3dzZXJ8T3R0ZXJ8UXVwWmlsbGF8TWFpbEJhcnxrbWFpbDJ8WWFob29Nb2JpbGVNYWlsfEV4Y2hhbmdlV2ViU2VydmljZXN8RXhjaGFuZ2VTZXJ2aWNlc0NsaWVudHxEcmFnb258T3V0bG9vay1pT1MtQW5kcm9pZCkvKFxcZCspXFwuKFxcZCspKD86XFwuKFxcZCspKT8nXG5cbiAgIyBDaHJvbWUvQ2hyb21pdW0vbWFqb3JfdmVyc2lvbi5taW5vcl92ZXJzaW9uXG4gIC0gcmVnZXg6ICcoQ2hyb21pdW18Q2hyb21lKS8oXFxkKylcXC4oXFxkKykoPzpcXC4oXFxkKykpPydcblxuICAjIyMjIyMjIyMjXG4gICMgSUUgTW9iaWxlIG5lZWRzIHRvIGhhcHBlbiBiZWZvcmUgQW5kcm9pZCB0byBjYXRjaCBjYXNlcyBzdWNoIGFzOlxuICAjIE1vemlsbGEvNS4wIChNb2JpbGU7IFdpbmRvd3MgUGhvbmUgOC4xOyBBbmRyb2lkIDQuMDsgQVJNOyBUcmlkZW50LzcuMDsgVG91Y2g7IHJ2OjExLjA7IElFTW9iaWxlLzExLjA7IE5PS0lBOyBMdW1pYSA5MjApLi4uXG4gICMgTW96aWxsYS81LjAgKE1vYmlsZTsgV2luZG93cyBQaG9uZSA4LjE7IEFuZHJvaWQgNC4wOyBBUk07IFRyaWRlbnQvNy4wOyBUb3VjaDsgcnY6MTEuMDsgSUVNb2JpbGUvMTEuMDsgTk9LSUE7IEx1bWlhIDkyMDsgQU5aODIxKS4uLlxuICAjIE1vemlsbGEvNS4wIChNb2JpbGU7IFdpbmRvd3MgUGhvbmUgOC4xOyBBbmRyb2lkIDQuMDsgQVJNOyBUcmlkZW50LzcuMDsgVG91Y2g7IHJ2OjExLjA7IElFTW9iaWxlLzExLjA7IE5PS0lBOyBMdW1pYSA5MjA7IE9yYW5nZSkuLi5cbiAgIyBNb3ppbGxhLzUuMCAoTW9iaWxlOyBXaW5kb3dzIFBob25lIDguMTsgQW5kcm9pZCA0LjA7IEFSTTsgVHJpZGVudC83LjA7IFRvdWNoOyBydjoxMS4wOyBJRU1vYmlsZS8xMS4wOyBOT0tJQTsgTHVtaWEgOTIwOyBWb2RhZm9uZSkuLi5cbiAgIyMjIyMjIyMjI1xuXG4gICMgSUUgTW9iaWxlXG4gIC0gcmVnZXg6ICcoSUVNb2JpbGUpWyAvXShcXGQrKVxcLihcXGQrKSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdJRSBNb2JpbGUnXG5cbiAgIyBCYWNhIEJlcml0YSBBcHAgTmV3cyBSZWFkZXJcbiAgLSByZWdleDogJyhCYWNhQmVyaXRhIEFwcClcXC8oXFxkKylcXC4oXFxkKylcXC4oXFxkKyknXG5cbiAgIyBCcm93c2VyIG1ham9yX3ZlcnNpb24ubWlub3JfdmVyc2lvbi5iZXRhX3ZlcnNpb24gKHNwYWNlIGluc3RlYWQgb2Ygc2xhc2gpXG4gIC0gcmVnZXg6ICcoaVJpZGVyfENyYXp5IEJyb3dzZXJ8U2tpcFN0b25lfGlDYWJ8THVuYXNjYXBlfFNsZWlwbmlyfE1hZW1vIEJyb3dzZXIpIChcXGQrKVxcLihcXGQrKVxcLihcXGQrKSdcbiAgIyBCcm93c2VyIG1ham9yX3ZlcnNpb24ubWlub3JfdmVyc2lvbiAoc3BhY2UgaW5zdGVhZCBvZiBzbGFzaClcbiAgLSByZWdleDogJyhpQ2FifEx1bmFzY2FwZXxPcGVyYXxBbmRyb2lkfEphc21pbmV8UG9sYXJpc3xNaWNyb3NvZnQgU2t5RHJpdmVTeW5jfFRoZSBCYXQhKSAoXFxkKylcXC4oXFxkKylcXC4/KFxcZCspPydcblxuICAjIEtpbmRsZSBXZWJLaXRcbiAgLSByZWdleDogJyhLaW5kbGUpLyhcXGQrKVxcLihcXGQrKSdcblxuICAjIHdlaXJkIGFuZHJvaWQgVUFzXG4gIC0gcmVnZXg6ICcoQW5kcm9pZCkgRG9udXQnXG4gICAgdjFfcmVwbGFjZW1lbnQ6ICcxJ1xuICAgIHYyX3JlcGxhY2VtZW50OiAnMidcblxuICAtIHJlZ2V4OiAnKEFuZHJvaWQpIEVjbGFpcidcbiAgICB2MV9yZXBsYWNlbWVudDogJzInXG4gICAgdjJfcmVwbGFjZW1lbnQ6ICcxJ1xuXG4gIC0gcmVnZXg6ICcoQW5kcm9pZCkgRnJveW8nXG4gICAgdjFfcmVwbGFjZW1lbnQ6ICcyJ1xuICAgIHYyX3JlcGxhY2VtZW50OiAnMidcblxuICAtIHJlZ2V4OiAnKEFuZHJvaWQpIEdpbmdlcmJyZWFkJ1xuICAgIHYxX3JlcGxhY2VtZW50OiAnMidcbiAgICB2Ml9yZXBsYWNlbWVudDogJzMnXG5cbiAgLSByZWdleDogJyhBbmRyb2lkKSBIb25leWNvbWInXG4gICAgdjFfcmVwbGFjZW1lbnQ6ICczJ1xuXG4gICMgZGVza3RvcCBtb2RlXG4gICMgaHR0cDovL3d3dy5hbmFuZHRlY2guY29tL3Nob3cvMzk4Mi93aW5kb3dzLXBob25lLTctcmV2aWV3XG4gIC0gcmVnZXg6ICcoTVNJRSkgKFxcZCspXFwuKFxcZCspLipYQkxXUDcnXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnSUUgTGFyZ2UgU2NyZWVuJ1xuXG4gICMgU2xhY2sgZGVza3RvcCBjbGllbnQgKG5lZWRzIHRvIGJlIGJlZm9yZSBBcHBsZSBNYWlsIGFzIGl0IGdldHMgd3JvbmdseSBkZXRlY3RlZCBvbiBNYWMgT1Mgb3RoZXJ3aXNlKVxuICAtIHJlZ2V4OiAnKFNsYWNrX1NTQikvKFxcZCspXFwuKFxcZCspXFwuKFxcZCspJ1xuICAgIGZhbWlseV9yZXBsYWNlbWVudDogJ1NsYWNrIERlc2t0b3AgQ2xpZW50J1xuXG4gICMjIyMgRU5EIE1BSU4gQ0FTRVMgIyMjI1xuXG4gICMjIyMgU1BFQ0lBTCBDQVNFUyAjIyMjXG4gIC0gcmVnZXg6ICcoT2JpZ28pSW50ZXJuZXRCcm93c2VyJ1xuICAtIHJlZ2V4OiAnKE9iaWdvKVxcLUJyb3dzZXInXG4gIC0gcmVnZXg6ICcoT2JpZ298T0JJR08pW15cXGRdKihcXGQrKSg/Oi4oXFxkKykpPydcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdPYmlnbydcblxuICAtIHJlZ2V4OiAnKE1BWFRIT058TWF4dGhvbikgKFxcZCspXFwuKFxcZCspJ1xuICAgIGZhbWlseV9yZXBsYWNlbWVudDogJ01heHRob24nXG4gIC0gcmVnZXg6ICcoTWF4dGhvbnxNeUlFMnxVemJsfFNoaWlyYSknXG4gICAgdjFfcmVwbGFjZW1lbnQ6ICcwJ1xuXG4gIC0gcmVnZXg6ICcoQnJvd3NlWCkgXFwoKFxcZCspXFwuKFxcZCspXFwuKFxcZCspJ1xuXG4gIC0gcmVnZXg6ICcoTkNTQV9Nb3NhaWMpLyhcXGQrKVxcLihcXGQrKSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdOQ1NBIE1vc2FpYydcblxuICAjIFBvbGFyaXMvZC5kIGlzIGFib3ZlXG4gIC0gcmVnZXg6ICcoUE9MQVJJUykvKFxcZCspXFwuKFxcZCspJ1xuICAgIGZhbWlseV9yZXBsYWNlbWVudDogJ1BvbGFyaXMnXG4gIC0gcmVnZXg6ICcoRW1iaWRlcikvKFxcZCspXFwuKFxcZCspJ1xuICAgIGZhbWlseV9yZXBsYWNlbWVudDogJ1BvbGFyaXMnXG5cbiAgLSByZWdleDogJyhCb25FY2hvKS8oXFxkKylcXC4oXFxkKylcXC4/KFthYl0/XFxkKyk/J1xuICAgIGZhbWlseV9yZXBsYWNlbWVudDogJ0JvbiBFY2hvJ1xuXG4gICMgQG5vdGU6IGlPUyAvIE9TWCBBcHBsaWNhdGlvbnNcbiAgLSByZWdleDogJyhpUG9kfGlQaG9uZXxpUGFkKS4rVmVyc2lvbi8oXFxkKylcXC4oXFxkKykoPzpcXC4oXFxkKykpPy4qWyArXVNhZmFyaSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdNb2JpbGUgU2FmYXJpJ1xuICAtIHJlZ2V4OiAnKGlQb2R8aVBob25lfGlQYWQpLitWZXJzaW9uLyhcXGQrKVxcLihcXGQrKSg/OlxcLihcXGQrKSk/J1xuICAgIGZhbWlseV9yZXBsYWNlbWVudDogJ01vYmlsZSBTYWZhcmkgVUkvV0tXZWJWaWV3J1xuICAtIHJlZ2V4OiAnKGlQb2R8aVBvZCB0b3VjaHxpUGhvbmV8aVBhZCk7LipDUFUuKk9TWyArXShcXGQrKV8oXFxkKykoPzpfKFxcZCspKT8uKk1vYmlsZS4qWyArXVNhZmFyaSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdNb2JpbGUgU2FmYXJpJ1xuICAtIHJlZ2V4OiAnKGlQb2R8aVBvZCB0b3VjaHxpUGhvbmV8aVBhZCk7LipDUFUuKk9TWyArXShcXGQrKV8oXFxkKykoPzpfKFxcZCspKT8uKk1vYmlsZSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdNb2JpbGUgU2FmYXJpIFVJL1dLV2ViVmlldydcbiAgLSByZWdleDogJyhpUG9kfGlQaG9uZXxpUGFkKS4qIFNhZmFyaSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdNb2JpbGUgU2FmYXJpJ1xuICAtIHJlZ2V4OiAnKGlQb2R8aVBob25lfGlQYWQpJ1xuICAgIGZhbWlseV9yZXBsYWNlbWVudDogJ01vYmlsZSBTYWZhcmkgVUkvV0tXZWJWaWV3J1xuXG4gIC0gcmVnZXg6ICcoQXZhbnRHbykgKFxcZCspLihcXGQrKSdcblxuICAtIHJlZ2V4OiAnKE9uZUJyb3dzZXIpLyhcXGQrKS4oXFxkKyknXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnT05FIEJyb3dzZXInXG5cbiAgLSByZWdleDogJyhBdmFudCknXG4gICAgdjFfcmVwbGFjZW1lbnQ6ICcxJ1xuXG4gICMgVGhpcyBpcyB0aGUgVGVzbGEgTW9kZWwgUyAoc2VlIHNpbWlsYXIgZW50cnkgaW4gZGV2aWNlIHBhcnNlcnMpXG4gIC0gcmVnZXg6ICcoUXRDYXJCcm93c2VyKSdcbiAgICB2MV9yZXBsYWNlbWVudDogJzEnXG5cbiAgLSByZWdleDogJ14oaUJyb3dzZXIvTWluaSkoXFxkKykuKFxcZCspJ1xuICAgIGZhbWlseV9yZXBsYWNlbWVudDogJ2lCcm93c2VyIE1pbmknXG4gIC0gcmVnZXg6ICdeKGlCcm93c2VyfGlSQVBQKS8oXFxkKykuKFxcZCspJ1xuXG4gICMgbm9raWEgYnJvd3NlcnNcbiAgIyBiYXNlZCBvbjogaHR0cDovL3d3dy5kZXZlbG9wZXIubm9raWEuY29tL0NvbW11bml0eS9XaWtpL1VzZXItQWdlbnRfaGVhZGVyc19mb3JfTm9raWFfZGV2aWNlc1xuICAtIHJlZ2V4OiAnXihOb2tpYSknXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnTm9raWEgU2VydmljZXMgKFdBUCkgQnJvd3NlcidcbiAgLSByZWdleDogJyhOb2tpYUJyb3dzZXIpLyhcXGQrKVxcLihcXGQrKS4oXFxkKylcXC4oXFxkKyknXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnTm9raWEgQnJvd3NlcidcbiAgLSByZWdleDogJyhOb2tpYUJyb3dzZXIpLyhcXGQrKVxcLihcXGQrKS4oXFxkKyknXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnTm9raWEgQnJvd3NlcidcbiAgLSByZWdleDogJyhOb2tpYUJyb3dzZXIpLyhcXGQrKVxcLihcXGQrKSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdOb2tpYSBCcm93c2VyJ1xuICAtIHJlZ2V4OiAnKEJyb3dzZXJORykvKFxcZCspXFwuKFxcZCspLihcXGQrKSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdOb2tpYSBCcm93c2VyJ1xuICAtIHJlZ2V4OiAnKFNlcmllczYwKS81XFwuMCdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdOb2tpYSBCcm93c2VyJ1xuICAgIHYxX3JlcGxhY2VtZW50OiAnNydcbiAgICB2Ml9yZXBsYWNlbWVudDogJzAnXG4gIC0gcmVnZXg6ICcoU2VyaWVzNjApLyhcXGQrKVxcLihcXGQrKSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdOb2tpYSBPU1MgQnJvd3NlcidcbiAgLSByZWdleDogJyhTNDBPdmlCcm93c2VyKS8oXFxkKylcXC4oXFxkKylcXC4oXFxkKylcXC4oXFxkKyknXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnT3ZpIEJyb3dzZXInXG4gIC0gcmVnZXg6ICcoTm9raWEpW0VOXT8oXFxkKyknXG5cbiAgIyBCbGFja0JlcnJ5IGRldmljZXNcbiAgLSByZWdleDogJyhQbGF5Qm9vaykuK1JJTSBUYWJsZXQgT1MgKFxcZCspXFwuKFxcZCspXFwuKFxcZCspJ1xuICAgIGZhbWlseV9yZXBsYWNlbWVudDogJ0JsYWNrQmVycnkgV2ViS2l0J1xuICAtIHJlZ2V4OiAnKEJsYWNrW2JCXWVycnl8QkIxMCkuK1ZlcnNpb24vKFxcZCspXFwuKFxcZCspXFwuKFxcZCspJ1xuICAgIGZhbWlseV9yZXBsYWNlbWVudDogJ0JsYWNrQmVycnkgV2ViS2l0J1xuICAtIHJlZ2V4OiAnKEJsYWNrW2JCXWVycnkpXFxzPyhcXGQrKSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdCbGFja0JlcnJ5J1xuXG4gIC0gcmVnZXg6ICcoT21uaVdlYikvdihcXGQrKVxcLihcXGQrKSdcblxuICAtIHJlZ2V4OiAnKEJsYXplcikvKFxcZCspXFwuKFxcZCspJ1xuICAgIGZhbWlseV9yZXBsYWNlbWVudDogJ1BhbG0gQmxhemVyJ1xuXG4gIC0gcmVnZXg6ICcoUHJlKS8oXFxkKylcXC4oXFxkKyknXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnUGFsbSBQcmUnXG5cbiAgIyBmb3JrIG9mIExpbmtzXG4gIC0gcmVnZXg6ICcoRUxpbmtzKS8oXFxkKylcXC4oXFxkKyknXG4gIC0gcmVnZXg6ICcoRUxpbmtzKSBcXCgoXFxkKylcXC4oXFxkKyknXG4gIC0gcmVnZXg6ICcoTGlua3MpIFxcKChcXGQrKVxcLihcXGQrKSdcblxuICAtIHJlZ2V4OiAnKFF0V2ViKSBJbnRlcm5ldCBCcm93c2VyLyhcXGQrKVxcLihcXGQrKSdcblxuICAjLSByZWdleDogJ1xcKGlQYWQ7LisoVmVyc2lvbikvKFxcZCspXFwuKFxcZCspKD86XFwuKFxcZCspKT8uKlNhZmFyaS8nXG4gICMgIGZhbWlseV9yZXBsYWNlbWVudDogJ2lQYWQnXG5cbiAgIyBQaGFudG9tanMsIHNob3VsZCBnbyBiZWZvcmUgU2FmYXJpXG4gIC0gcmVnZXg6ICcoUGhhbnRvbUpTKS8oXFxkKylcXC4oXFxkKylcXC4oXFxkKyknXG5cbiAgIyBXZWJLaXQgTmlnaHRseVxuICAtIHJlZ2V4OiAnKEFwcGxlV2ViS2l0KS8oXFxkKylcXC4/KFxcZCspP1xcKyAuKiBTYWZhcmknXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnV2ViS2l0IE5pZ2h0bHknXG5cbiAgIyBTYWZhcmlcbiAgLSByZWdleDogJyhWZXJzaW9uKS8oXFxkKylcXC4oXFxkKykoPzpcXC4oXFxkKykpPy4qU2FmYXJpLydcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdTYWZhcmknXG4gICMgU2FmYXJpIGRpZG4ndCBwcm92aWRlIFwiVmVyc2lvbi9kLmQuZFwiIHByaW9yIHRvIDMuMFxuICAtIHJlZ2V4OiAnKFNhZmFyaSkvXFxkKydcblxuICAtIHJlZ2V4OiAnKE9MUEMpL1VwZGF0ZShcXGQrKVxcLihcXGQrKSdcblxuICAtIHJlZ2V4OiAnKE9MUEMpL1VwZGF0ZSgpXFwuKFxcZCspJ1xuICAgIHYxX3JlcGxhY2VtZW50OiAnMCdcblxuICAtIHJlZ2V4OiAnKFNFTUNcXC1Ccm93c2VyKS8oXFxkKylcXC4oXFxkKyknXG5cbiAgLSByZWdleDogJyhUZWxlY2EpJ1xuICAgIGZhbWlseV9yZXBsYWNlbWVudDogJ1RlbGVjYSBCcm93c2VyJ1xuXG4gIC0gcmVnZXg6ICcoUGhhbnRvbSkvVihcXGQrKVxcLihcXGQrKSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdQaGFudG9tIEJyb3dzZXInXG5cbiAgLSByZWdleDogJ1RyaWRlbnQoLiopcnYuKFxcZCspXFwuKFxcZCspJ1xuICAgIGZhbWlseV9yZXBsYWNlbWVudDogJ0lFJ1xuXG4gICMgRXNwaWFsXG4gIC0gcmVnZXg6ICcoRXNwaWFsKS8oXFxkKykoPzpcXC4oXFxkKykpPyg/OlxcLihcXGQrKSk/J1xuXG4gIyBBcHBsZSBNYWlsXG5cbiAgIyBhcHBsZSBtYWlsIC0gbm90IGRpcmVjdGx5IGRldGVjdGFibGUsIGhhdmUgaXQgYWZ0ZXIgU2FmYXJpIHN0dWZmXG4gIC0gcmVnZXg6ICcoQXBwbGVXZWJLaXQpLyhcXGQrKVxcLihcXGQrKVxcLihcXGQrKSdcbiAgICBmYW1pbHlfcmVwbGFjZW1lbnQ6ICdBcHBsZSBNYWlsJ1xuXG4gICMgQUZURVIgVEhFIEVER0UgQ0FTRVMgQUJPVkUhXG4gICMgQUZURVIgSUUxMVxuICAjIEJFRk9SRSBhbGwgb3RoZXIgSUVcbiAgLSByZWdleDogJyhGaXJlZm94KS8oXFxkKylcXC4oXFxkKylcXC4oXFxkKyknXG4gIC0gcmVnZXg6ICcoRmlyZWZveCkvKFxcZCspXFwuKFxcZCspKHByZXxbYWJdXFxkK1thLXpdKik/J1xuXG4gIC0gcmVnZXg6ICcoW01TXT9JRSkgKFxcZCspXFwuKFxcZCspJ1xuICAgIGZhbWlseV9yZXBsYWNlbWVudDogJ0lFJ1xuXG4gIC0gcmVnZXg6ICcocHl0aG9uLXJlcXVlc3RzKS8oXFxkKylcXC4oXFxkKyknXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnUHl0aG9uIFJlcXVlc3RzJ1xuXG4gICMgaGVhZGxlc3MgdXNlci1hZ2VudHNcbiAgLSByZWdleDogJ1xcYihXaW5kb3dzLVVwZGF0ZS1BZ2VudHxNaWNyb3NvZnQtQ3J5cHRvQVBJfFNvcGhvc1VwZGF0ZU1hbmFnZXJ8U29waG9zQWdlbnR8RGViaWFuIEFQVC1IVFRQfFVidW50dSBBUFQtSFRUUHxsaWJjdXJsLWFnZW50fGxpYnd3dy1wZXJsfHVybGdyYWJiZXJ8Y3VybHxXZ2V0fE9wZW5CU0QgZnRwfGp1cGRhdGUpKD86WyAvXShcXGQrKSg/OlxcLihcXGQrKSg/OlxcLihcXGQrKSk/KT8pPydcblxuICAtIHJlZ2V4OiAnKEphdmEpWy8gXXswLDF9XFxkK1xcLihcXGQrKVxcLihcXGQrKVtfLV0qKFthLXpBLVowLTldKykqJ1xuXG4gICMgUm9rdSBEaWdpdGFsLVZpZGVvLVBsYXllcnMgaHR0cHM6Ly93d3cucm9rdS5jb20vXG4gIC0gcmVnZXg6ICdeKFJva3UpL0RWUC0oXFxkKylcXC4oXFxkKyknXG5cbiAgIyBLdXJpbyBBcHAgTmV3cyBSZWFkZXIgaHR0cHM6Ly9rdXJpby5jby5pZC9cbiAgLSByZWdleDogJyhLdXJpbylcXC8oXFxkKylcXC4oXFxkKylcXC4oXFxkKyknXG4gICAgZmFtaWx5X3JlcGxhY2VtZW50OiAnS3VyaW8gQXBwJ1xuXG5cbm9zX3BhcnNlcnM6XG4gICMjIyMjIyMjIyNcbiAgIyBIYmJUViB2ZW5kb3JzXG4gICMjIyMjIyMjIyNcblxuICAjIHN0YXJ0cyB3aXRoIHRoZSBlYXN5IG9uZSA6IFBhbmFzb25pYyBzZWVtcyBjb25zaXN0ZW50IGFjcm9zcyB5ZWFycywgaG9wZSBpdCB3aWxsIGNvbnRpbnVlXG4gICNIYmJUVi8xLjEuMSAoO1BhbmFzb25pYztWSUVSQSAyMDExO2YuNTMyOzAwNzEtMDgwMiAyMDAwLTAwMDA7KVxuICAjSGJiVFYvMS4xLjEgKDtQYW5hc29uaWM7VklFUkEgMjAxMjsxLjI2MTswMDcxLTMxMDMgMjAwMC0wMDAwOylcbiAgI0hiYlRWLzEuMi4xICg7UGFuYXNvbmljO1ZJRVJBIDIwMTM7My42NzI7NDEwMS0wMDAzIDAwMDItMDAwMDspXG4gICMtIHJlZ2V4OiAnSGJiVFYvXFxkK1xcLlxcZCtcXC5cXGQrIFxcKDsoUGFuYXNvbmljKTtWSUVSQSAoWzAtOV17NH0pOydcblxuICAjIFNvbnkgaXMgY29uc2lzdGVudCB0b28gYnV0IGRvIG5vdCBwbGFjZSB5ZWFyIGxpa2UgdGhlIG90aGVyXG4gICMgT3BlcmEvOS44MCAoTGludXggYXJtdjdsOyBIYmJUVi8xLjEuMSAoOyBTb255OyBLREwzMlc2NTBBOyBQS0czLjIxMUVVQTsgMjAxMzspOyApIFByZXN0by8yLjEyLjM2MiBWZXJzaW9uLzEyLjExXG4gICMgT3BlcmEvOS44MCAoTGludXggbWlwczsgVTsgIEhiYlRWLzEuMS4xICg7IFNvbnk7IEtETDQwSFg3NTE7IFBLRzEuOTAyRVVBOyAyMDEyOyk7OyBlbikgUHJlc3RvLzIuMTAuMjUwIFZlcnNpb24vMTEuNjBcbiAgIyBPcGVyYS85LjgwIChMaW51eCBtaXBzOyBVOyAgSGJiVFYvMS4xLjEgKDsgU29ueTsgS0RMMjJFWDMyMDsgUEtHNC4wMTdFVUE7IDIwMTE7KTs7IGVuKSBQcmVzdG8vMi43LjYxIFZlcnNpb24vMTEuMDBcbiAgIy0gcmVnZXg6ICdIYmJUVi9cXGQrXFwuXFxkK1xcLlxcZCsgXFwoOyAoU29ueSk7Lio7Lio7IChbMC05XXs0fSk7XFwpJ1xuXG5cbiAgIyBMRyBpcyBjb25zaXN0ZW50IHRvbywgYnV0IHdlIG5lZWQgdG8gYWRkIG1hbnVhbGx5IHRoZSB5ZWFyIG1vZGVsXG4gICNNb3ppbGxhLzUuMCAoVW5rbm93bjsgTGludXggYXJtdjdsKSBBcHBsZVdlYktpdC81MzcuMSsgKEtIVE1MLCBsaWtlIEdlY2tvKSBTYWZhcmkvNTM3LjErIEhiYlRWLzEuMS4xICggO0xHRSA7TmV0Q2FzdCA0LjAgOzAzLjIwLjMwIDsxLjBNIDspXG4gICNNb3ppbGxhLzUuMCAoRGlyZWN0RkI7IExpbnV4IGFybXY3bCkgQXBwbGVXZWJLaXQvNTM0LjI2KyAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNS4wIFNhZmFyaS81MzQuMjYrIEhiYlRWLzEuMS4xICggO0xHRSA7TmV0Q2FzdCAzLjAgOzEuMCA7MS4wTSA7KVxuICAtIHJlZ2V4OiAnSGJiVFYvXFxkK1xcLlxcZCtcXC5cXGQrIFxcKCA7KExHKUUgO05ldENhc3QgNC4wJ1xuICAgIG9zX3YxX3JlcGxhY2VtZW50OiAnMjAxMydcbiAgLSByZWdleDogJ0hiYlRWL1xcZCtcXC5cXGQrXFwuXFxkKyBcXCggOyhMRylFIDtOZXRDYXN0IDMuMCdcbiAgICBvc192MV9yZXBsYWNlbWVudDogJzIwMTInXG5cbiAgIyBTYW1zdW5nIGlzIG9uIGl0cyB3YXkgb2Ygbm9ybWFsaXppbmcgdGhlaXIgdXNlci1hZ2VudFxuICAjIEhiYlRWLzEuMS4xICg7U2Ftc3VuZztTbWFydFRWMjAxMztULUZYUERFVUMtMTEwMi4yOzspIFdlYktpdFxuICAjIEhiYlRWLzEuMS4xICg7U2Ftc3VuZztTbWFydFRWMjAxMztULU1TVDEyREVVQy0xMTAyLjE7OykgV2ViS2l0XG4gICMgSGJiVFYvMS4xLjEgKDtTYW1zdW5nO1NtYXJ0VFYyMDEyOzs7KSBXZWJLaXRcbiAgIyBIYmJUVi8xLjEuMSAoOzs7OzspIE1hcGxlXzIwMTFcbiAgLSByZWdleDogJ0hiYlRWLzEuMS4xIFxcKDs7Ozs7XFwpIE1hcGxlXzIwMTEnXG4gICAgb3NfcmVwbGFjZW1lbnQ6ICdTYW1zdW5nJ1xuICAgIG9zX3YxX3JlcGxhY2VtZW50OiAnMjAxMSdcbiAgIyBtYW5hZ2UgdGhlIHR3byBtb2RlbHMgb2YgMjAxM1xuICAtIHJlZ2V4OiAnSGJiVFYvXFxkK1xcLlxcZCtcXC5cXGQrIFxcKDsoU2Ftc3VuZyk7U21hcnRUVihbMC05XXs0fSk7LipGWFBERVVDJ1xuICAgIG9zX3YyX3JlcGxhY2VtZW50OiAnVUU0MEY3MDAwJ1xuICAtIHJlZ2V4OiAnSGJiVFYvXFxkK1xcLlxcZCtcXC5cXGQrIFxcKDsoU2Ftc3VuZyk7U21hcnRUVihbMC05XXs0fSk7LipNU1QxMkRFVUMnXG4gICAgb3NfdjJfcmVwbGFjZW1lbnQ6ICdVRTMyRjQ1MDAnXG4gICMgZ2VuZXJpYyBTYW1zdW5nICh3b3JrcyBzdGFydGluZyBpbiAyMDEyKVxuICAjLSByZWdleDogJ0hiYlRWL1xcZCtcXC5cXGQrXFwuXFxkKyBcXCg7KFNhbXN1bmcpO1NtYXJ0VFYoWzAtOV17NH0pOydcblxuICAjIFBoaWxpcHMgOiBub3QgZm91bmQgYW55IG90aGVyIHdheSB0aGFuIGEgbWFudWFsIG1hcHBpbmdcbiAgIyBPcGVyYS85LjgwIChMaW51eCBtaXBzOyBVOyBIYmJUVi8xLjEuMSAoOyBQaGlsaXBzOyA7IDsgOyApIENFLUhUTUwvMS4wIE5FVFRWLzQuMS4zIFBISUxJUFNUVi8xLjEuMTsgZW4pIFByZXN0by8yLjEwLjI1MCBWZXJzaW9uLzExLjYwXG4gICMgT3BlcmEvOS44MCAoTGludXggbWlwcyA7IFU7IEhiYlRWLzEuMS4xICg7IFBoaWxpcHM7IDsgOyA7ICkgQ0UtSFRNTC8xLjAgTkVUVFYvMy4yLjE7IGVuKSBQcmVzdG8vMi42LjMzIFZlcnNpb24vMTAuNzBcbiAgLSByZWdleDogJ0hiYlRWLzEuMS4xIFxcKDsgKFBoaWxpcHMpOy4qTkVUVFYvNCdcbiAgICBvc192MV9yZXBsYWNlbWVudDogJzIwMTMnXG4gIC0gcmVnZXg6ICdIYmJUVi8xLjEuMSBcXCg7IChQaGlsaXBzKTsuKk5FVFRWLzMnXG4gICAgb3NfdjFfcmVwbGFjZW1lbnQ6ICcyMDEyJ1xuICAtIHJlZ2V4OiAnSGJiVFYvMS4xLjEgXFwoOyAoUGhpbGlwcyk7LipORVRUVi8yJ1xuICAgIG9zX3YxX3JlcGxhY2VtZW50OiAnMjAxMSdcblxuICAjIHRoZSBIYmJUViBlbXVsYXRvciBkZXZlbG9wZXJzIHVzZSBIYmJUVi8xLjEuMSAoOzs7OzspIGZpcmV0di1maXJlZm94LXBsdWdpbiAxLjEuMjBcbiAgLSByZWdleDogJ0hiYlRWL1xcZCtcXC5cXGQrXFwuXFxkKy4qKGZpcmV0diktZmlyZWZveC1wbHVnaW4gKFxcZCspLihcXGQrKS4oXFxkKyknXG4gICAgb3NfcmVwbGFjZW1lbnQ6ICdGaXJlSGJiVFYnXG5cbiAgIyBnZW5lcmljIEhiYlRWLCBob3BpbmcgdG8gY2F0Y2ggbWFudWZhY3R1cmVyIG5hbWUgKGFsd2F5cyBhZnRlciAybmQgY29tbWEpIGFuZCB0aGUgZmlyc3Qgc3RyaW5nIHRoYXQgbG9va3MgbGlrZSBhIDIwMTEtMjAxOSB5ZWFyXG4gIC0gcmVnZXg6ICdIYmJUVi9cXGQrXFwuXFxkK1xcLlxcZCsgXFwoLio7ID8oW2EtekEtWl0rKSA/Oy4qKDIwMVsxLTldKS4qXFwpJ1xuXG4gICMjIyMjIyMjIyNcbiAgIyBAbm90ZTogV2luZG93cyBQaG9uZSBuZWVkcyB0byBjb21lIGJlZm9yZSBXaW5kb3dzIE5UIDYuMSAqYW5kKiBiZWZvcmUgQW5kcm9pZCB0byBjYXRjaCBjYXNlcyBzdWNoIGFzOlxuICAjIE1vemlsbGEvNS4wIChNb2JpbGU7IFdpbmRvd3MgUGhvbmUgOC4xOyBBbmRyb2lkIDQuMDsgQVJNOyBUcmlkZW50LzcuMDsgVG91Y2g7IHJ2OjExLjA7IElFTW9iaWxlLzExLjA7IE5PS0lBOyBMdW1pYSA5MjApLi4uXG4gICMgTW96aWxsYS81LjAgKE1vYmlsZTsgV2luZG93cyBQaG9uZSA4LjE7IEFuZHJvaWQgNC4wOyBBUk07IFRyaWRlbnQvNy4wOyBUb3VjaDsgcnY6MTEuMDsgSUVNb2JpbGUvMTEuMDsgTk9LSUE7IEx1bWlhIDkyMDsgQU5aODIxKS4uLlxuICAjIE1vemlsbGEvNS4wIChNb2JpbGU7IFdpbmRvd3MgUGhvbmUgOC4xOyBBbmRyb2lkIDQuMDsgQVJNOyBUcmlkZW50LzcuMDsgVG91Y2g7IHJ2OjExLjA7IElFTW9iaWxlLzExLjA7IE5PS0lBOyBMdW1pYSA5MjA7IE9yYW5nZSkuLi5cbiAgIyBNb3ppbGxhLzUuMCAoTW9iaWxlOyBXaW5kb3dzIFBob25lIDguMTsgQW5kcm9pZCA0LjA7IEFSTTsgVHJpZGVudC83LjA7IFRvdWNoOyBydjoxMS4wOyBJRU1vYmlsZS8xMS4wOyBOT0tJQTsgTHVtaWEgOTIwOyBWb2RhZm9uZSkuLi5cbiAgIyMjIyMjIyMjI1xuXG4gIC0gcmVnZXg6ICcoV2luZG93cyBQaG9uZSkgKD86T1NbIC9dKT8oXFxkKylcXC4oXFxkKyknXG5cbiAgIyBBZ2FpbiBhIE1TLXNwZWNpYWwgb25lOiBpUGhvbmUuKk91dGxvb2staU9TLUFuZHJvaWQveC54IGlzIGVycm9uZW91c2x5IGRldGVjdGVkIGFzIEFuZHJvaWRcbiAgLSByZWdleDogJyhDUFVbICtdT1N8aVBob25lWyArXU9TfENQVVsgK11pUGhvbmUpWyArXSsoXFxkKylbX1xcLl0oXFxkKykoPzpbX1xcLl0oXFxkKykpPy4qT3V0bG9vay1pT1MtQW5kcm9pZCdcbiAgICBvc19yZXBsYWNlbWVudDogJ2lPUydcblxuICAjIyMjIyMjIyMjXG4gICMgQW5kcm9pZFxuICAjIGNhbiBhY3R1YWxseSBkZXRlY3Qgcm9vdGVkIGFuZHJvaWQgb3MuIGRvIHdlIGNhcmU/XG4gICMjIyMjIyMjIyNcbiAgLSByZWdleDogJyhBbmRyb2lkKVsgXFwtL10oXFxkKylcXC4oXFxkKykoPzpbLlxcLV0oW2EtejAtOV0rKSk/J1xuXG4gIC0gcmVnZXg6ICcoQW5kcm9pZCkgRG9udXQnXG4gICAgb3NfdjFfcmVwbGFjZW1lbnQ6ICcxJ1xuICAgIG9zX3YyX3JlcGxhY2VtZW50OiAnMidcblxuICAtIHJlZ2V4OiAnKEFuZHJvaWQpIEVjbGFpcidcbiAgICBvc192MV9yZXBsYWNlbWVudDogJzInXG4gICAgb3NfdjJfcmVwbGFjZW1lbnQ6ICcxJ1xuXG4gIC0gcmVnZXg6ICcoQW5kcm9pZCkgRnJveW8nXG4gICAgb3NfdjFfcmVwbGFjZW1lbnQ6ICcyJ1xuICAgIG9zX3YyX3JlcGxhY2VtZW50OiAnMidcblxuICAtIHJlZ2V4OiAnKEFuZHJvaWQpIEdpbmdlcmJyZWFkJ1xuICAgIG9zX3YxX3JlcGxhY2VtZW50OiAnMidcbiAgICBvc192Ml9yZXBsYWNlbWVudDogJzMnXG5cbiAgLSByZWdleDogJyhBbmRyb2lkKSBIb25leWNvbWInXG4gICAgb3NfdjFfcmVwbGFjZW1lbnQ6ICczJ1xuXG4gICMgVUNXRUJcbiAgLSByZWdleDogJ15VQ1dFQi4qOyAoQWRyKSAoXFxkKylcXC4oXFxkKykoPzpbLlxcLV0oW2EtejAtOV0rKSk/OydcbiAgICBvc19yZXBsYWNlbWVudDogJ0FuZHJvaWQnXG4gIC0gcmVnZXg6ICdeVUNXRUIuKjsgKGlQYWR8aVBofGlQZCkgT1MgKFxcZCspXyhcXGQrKSg/Ol8oXFxkKykpPzsnXG4gICAgb3NfcmVwbGFjZW1lbnQ6ICdpT1MnXG4gIC0gcmVnZXg6ICdeVUNXRUIuKjsgKHdkcykgKFxcZCspXFwuKFxcZCspKD86XFwuKFxcZCspKT87J1xuICAgIG9zX3JlcGxhY2VtZW50OiAnV2luZG93cyBQaG9uZSdcbiAgIyBKVUNcbiAgLSByZWdleDogJ14oSlVDKS4qOyA/VTsgPyg/OkFuZHJvaWQpPyhcXGQrKVxcLihcXGQrKSg/OltcXC5cXC1dKFthLXowLTldKykpPydcbiAgICBvc19yZXBsYWNlbWVudDogJ0FuZHJvaWQnXG5cbiAgIyMjIyMjIyMjI1xuICAjIEtpbmRsZSBBbmRyb2lkXG4gICMjIyMjIyMjIyNcbiAgLSByZWdleDogJyhTaWxrLUFjY2VsZXJhdGVkPVthLXpdezQsNX0pJ1xuICAgIG9zX3JlcGxhY2VtZW50OiAnQW5kcm9pZCdcblxuICAjIyMjIyMjIyMjXG4gICMgV2luZG93c1xuICAjIGh0dHA6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvV2luZG93c19OVCNSZWxlYXNlc1xuICAjIHBvc3NpYmlsaXR5IG9mIGZhbHNlIHBvc2l0aXZlIHdoZW4gZGlmZmVyZW50IG1hcmtldGluZyBuYW1lcyBzaGFyZSBzYW1lIE5UIGtlcm5lbFxuICAjIGUuZy4gd2luZG93cyBzZXJ2ZXIgMjAwMyBhbmQgd2luZG93cyB4cFxuICAjIGxvdHMgb2YgdWEgc3RyaW5ncyBoYXZlIFdpbmRvd3MgTlQgNC4xICE/IT8hPyE/ICE/IT8gIT8gIT8/Pz8hPyEgISEhID8/PyAhPyE/ISA/XG4gICMgKHZlcnkpIHJvdWdobHkgb3JkZXJlZCBpbiB0ZXJtcyBvZiBmcmVxdWVuY3kgb2Ygb2NjdXJlbmNlIG9mIHJlZ2V4ICh3aW4geHAgY3VycmVudGx5IG1vc3QgZnJlcXVlbnQsIGV0YylcbiAgIyMjIyMjIyMjI1xuXG4gICMgaWUgbW9iaWxlIGRlc2t0b3AgbW9kZVxuICAjIHNwb29mcyBudCA2LjEuIG11c3QgY29tZSBiZWZvcmUgd2luZG93cyA3XG4gIC0gcmVnZXg6ICcoWEJMV1A3KSdcbiAgICBvc19yZXBsYWNlbWVudDogJ1dpbmRvd3MgUGhvbmUnXG5cbiAgIyBAbm90ZTogVGhpcyBuZWVkcyB0byBjb21lIGJlZm9yZSBXaW5kb3dzIE5UIDYuMVxuICAtIHJlZ2V4OiAnKFdpbmRvd3MgP01vYmlsZSknXG4gICAgb3NfcmVwbGFjZW1lbnQ6ICdXaW5kb3dzIE1vYmlsZSdcblxuICAtIHJlZ2V4OiAnKFdpbmRvd3MgKD86TlQgNVxcLjJ8TlQgNVxcLjEpKSdcbiAgICBvc19yZXBsYWNlbWVudDogJ1dpbmRvd3MgWFAnXG5cbiAgLSByZWdleDogJyhXaW5kb3dzIE5UIDZcXC4xKSdcbiAgICBvc19yZXBsYWNlbWVudDogJ1dpbmRvd3MgNydcblxuICAtIHJlZ2V4OiAnKFdpbmRvd3MgTlQgNlxcLjApJ1xuICAgIG9zX3JlcGxhY2VtZW50OiAnV2luZG93cyBWaXN0YSdcblxuICAtIHJlZ2V4OiAnKFdpbiA5eCA0XFwuOTApJ1xuICAgIG9zX3JlcGxhY2VtZW50OiAnV2luZG93cyBNRSdcblxuICAtIHJlZ2V4OiAnKFdpbmRvd3MgOTh8V2luZG93cyBYUHxXaW5kb3dzIE1FfFdpbmRvd3MgOTV8V2luZG93cyBDRXxXaW5kb3dzIDd8V2luZG93cyBOVCA0XFwuMHxXaW5kb3dzIFZpc3RhfFdpbmRvd3MgMjAwMHxXaW5kb3dzIDMuMSknXG5cbiAgLSByZWdleDogJyhXaW5kb3dzIE5UIDZcXC4yOyBBUk07KSdcbiAgICBvc19yZXBsYWNlbWVudDogJ1dpbmRvd3MgUlQnXG4gIC0gcmVnZXg6ICcoV2luZG93cyBOVCA2XFwuMiknXG4gICAgb3NfcmVwbGFjZW1lbnQ6ICdXaW5kb3dzIDgnXG5cbiAgLSByZWdleDogJyhXaW5kb3dzIE5UIDZcXC4zOyBBUk07KSdcbiAgICBvc19yZXBsYWNlbWVudDogJ1dpbmRvd3MgUlQgOC4xJ1xuICAtIHJlZ2V4OiAnKFdpbmRvd3MgTlQgNlxcLjMpJ1xuICAgIG9zX3JlcGxhY2VtZW50OiAnV2luZG93cyA4LjEnXG5cbiAgLSByZWdleDogJyhXaW5kb3dzIE5UIDZcXC40KSdcbiAgICBvc19yZXBsYWNlbWVudDogJ1dpbmRvd3MgMTAnXG4gIC0gcmVnZXg6ICcoV2luZG93cyBOVCAxMFxcLjApJ1xuICAgIG9zX3JlcGxhY2VtZW50OiAnV2luZG93cyAxMCdcblxuICAtIHJlZ2V4OiAnKFdpbmRvd3MgTlQgNVxcLjApJ1xuICAgIG9zX3JlcGxhY2VtZW50OiAnV2luZG93cyAyMDAwJ1xuXG4gIC0gcmVnZXg6ICcoV2luTlQ0LjApJ1xuICAgIG9zX3JlcGxhY2VtZW50OiAnV2luZG93cyBOVCA0LjAnXG5cbiAgLSByZWdleDogJyhXaW5kb3dzID9DRSknXG4gICAgb3NfcmVwbGFjZW1lbnQ6ICdXaW5kb3dzIENFJ1xuXG4gIC0gcmVnZXg6ICdXaW4gPyg5NXw5OHwzLjF8TlR8TUV8MjAwMCknXG4gICAgb3NfcmVwbGFjZW1lbnQ6ICdXaW5kb3dzICQxJ1xuXG4gIC0gcmVnZXg6ICdXaW4xNidcbiAgICBvc19yZXBsYWNlbWVudDogJ1dpbmRvd3MgMy4xJ1xuXG4gIC0gcmVnZXg6ICdXaW4zMidcbiAgICBvc19yZXBsYWNlbWVudDogJ1dpbmRvd3MgOTUnXG5cbiAgIyMjIyMjIyMjI1xuICAjIFRpemVuIE9TIGZyb20gU2Ftc3VuZ1xuICAjIHNwb29mcyBBbmRyb2lkIHNvIHB1c2hpbmcgaXQgYWJvdmVcbiAgIyMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnKFRpemVuKVsvIF0oXFxkKylcXC4oXFxkKyknXG5cbiAgIyMjIyMjIyMjI1xuICAjIE1hYyBPU1xuICAjIEByZWY6IGh0dHA6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvTWFjX09TX1gjVmVyc2lvbnNcbiAgIyBAcmVmOiBodHRwOi8vd3d3LnB1cmVkYXJ3aW4ub3JnL2N1cmlvdXMvdmVyc2lvbnNcbiAgIyMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnKCg/Ok1hY1sgK10/fDsgKU9TWyArXVgpW1xccysvXSg/OihcXGQrKVtfLl0oXFxkKykoPzpbXy5dKFxcZCspKT98TWFjaC1PKSdcbiAgICBvc19yZXBsYWNlbWVudDogJ01hYyBPUyBYJ1xuICAjIExlb3BhcmRcbiAgLSByZWdleDogJyAoRGFyKSh3aW4pLyg5KS4oXFxkKykuKlxcKCg/OmkzODZ8eDg2XzY0fFBvd2VyIE1hY2ludG9zaClcXCknXG4gICAgb3NfcmVwbGFjZW1lbnQ6ICdNYWMgT1MgWCdcbiAgICBvc192MV9yZXBsYWNlbWVudDogJzEwJ1xuICAgIG9zX3YyX3JlcGxhY2VtZW50OiAnNSdcbiAgIyBTbm93IExlb3BhcmRcbiAgLSByZWdleDogJyAoRGFyKSh3aW4pLygxMCkuKFxcZCspLipcXCgoPzppMzg2fHg4Nl82NClcXCknXG4gICAgb3NfcmVwbGFjZW1lbnQ6ICdNYWMgT1MgWCdcbiAgICBvc192MV9yZXBsYWNlbWVudDogJzEwJ1xuICAgIG9zX3YyX3JlcGxhY2VtZW50OiAnNidcbiAgIyBMaW9uXG4gIC0gcmVnZXg6ICcgKERhcikod2luKS8oMTEpLihcXGQrKS4qXFwoKD86aTM4Nnx4ODZfNjQpXFwpJ1xuICAgIG9zX3JlcGxhY2VtZW50OiAnTWFjIE9TIFgnXG4gICAgb3NfdjFfcmVwbGFjZW1lbnQ6ICcxMCdcbiAgICBvc192Ml9yZXBsYWNlbWVudDogJzcnXG4gICMgTW91bnRhaW4gTGlvblxuICAtIHJlZ2V4OiAnIChEYXIpKHdpbikvKDEyKS4oXFxkKykuKlxcKCg/OmkzODZ8eDg2XzY0KVxcKSdcbiAgICBvc19yZXBsYWNlbWVudDogJ01hYyBPUyBYJ1xuICAgIG9zX3YxX3JlcGxhY2VtZW50OiAnMTAnXG4gICAgb3NfdjJfcmVwbGFjZW1lbnQ6ICc4J1xuICAjIE1hdmVyaWNrc1xuICAtIHJlZ2V4OiAnIChEYXIpKHdpbikvKDEzKS4oXFxkKykuKlxcKCg/OmkzODZ8eDg2XzY0KVxcKSdcbiAgICBvc19yZXBsYWNlbWVudDogJ01hYyBPUyBYJ1xuICAgIG9zX3YxX3JlcGxhY2VtZW50OiAnMTAnXG4gICAgb3NfdjJfcmVwbGFjZW1lbnQ6ICc5J1xuICAjIFlvc2VtaXRlIGlzIERhcndpbi8xNC54IGJ1dCBwYXRjaCB2ZXJzaW9ucyBhcmUgaW5jb25zaXN0ZW50IGluIHRoZSBEYXJ3aW4gc3RyaW5nO1xuICAjIG1vcmUgYWNjdXJhdGVseSBjb3ZlcmVkIGJ5IENGTmV0d29yayByZWdleGVzIGRvd25zdHJlYW1cblxuICAjIElFIG9uIE1hYyBkb2Vzbid0IHNwZWNpZnkgdmVyc2lvbiBudW1iZXJcbiAgLSByZWdleDogJ01hY19Qb3dlclBDJ1xuICAgIG9zX3JlcGxhY2VtZW50OiAnTWFjIE9TJ1xuXG4gICMgYnVpbGRzIGJlZm9yZSB0aWdlciBkb24ndCBzZWVtIHRvIHNwZWNpZnkgdmVyc2lvbj9cblxuICAjIGlvcyBkZXZpY2VzIHNwb29mIChtYWMgb3MgeCksIHNvIGluY2x1ZGluZyBpbnRlbC9wcGMgcHJlZml4ZXNcbiAgLSByZWdleDogJyg/OlBQQ3xJbnRlbCkgKE1hYyBPUyBYKSdcblxuICAjIyMjIyMjIyMjXG4gICMgaU9TXG4gICMgaHR0cDovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9JT1NfdmVyc2lvbl9oaXN0b3J5XG4gICMjIyMjIyMjIyNcbiAgIyBrZWVwIHRoaXMgYWJvdmUgZ2VuZXJpYyBpT1MsIHNpbmNlIEFwcGxlVFYgVUFzIGNvbnRhaW4gJ0NQVSBPUydcbiAgLSByZWdleDogJyhBcHBsZVxccz9UVikoPzovKFxcZCspXFwuKFxcZCspKT8nXG4gICAgb3NfcmVwbGFjZW1lbnQ6ICdBVFYgT1MgWCdcblxuICAtIHJlZ2V4OiAnKENQVVsgK11PU3xpUGhvbmVbICtdT1N8Q1BVWyArXWlQaG9uZXxDUFUgSVBob25lIE9TKVsgK10rKFxcZCspW19cXC5dKFxcZCspKD86W19cXC5dKFxcZCspKT8nXG4gICAgb3NfcmVwbGFjZW1lbnQ6ICdpT1MnXG5cbiAgIyByZW1haW5pbmcgY2FzZXMgYXJlIG1vc3RseSBvbmx5IG9wZXJhIHVhcywgc28gY2F0Y2ggb3BlcmEgYXMgdG8gbm90IGNhdGNoIGlwaG9uZSBzcG9vZnNcbiAgLSByZWdleDogJyhpUGhvbmV8aVBhZHxpUG9kKTsgT3BlcmEnXG4gICAgb3NfcmVwbGFjZW1lbnQ6ICdpT1MnXG5cbiAgIyBmZXcgbW9yZSBzdHJhZ2dsZXJzXG4gIC0gcmVnZXg6ICcoaVBob25lfGlQYWR8aVBvZCkuKk1hYyBPUyBYLipWZXJzaW9uLyhcXGQrKVxcLihcXGQrKSdcbiAgICBvc19yZXBsYWNlbWVudDogJ2lPUydcblxuICAjIENGTmV0d29yay9EYXJ3aW4gLSBUaGUgc3BlY2lmaWMgQ0ZOZXR3b3JrIG9yIERhcndpbiB2ZXJzaW9uIGRldGVybWluZXNcbiAgIyB3aGV0aGVyIHRoZSBvcyBtYXBzIHRvIE1hYyBPUywgb3IgaU9TLCBvciBqdXN0IERhcndpbi5cbiAgIyBTZWU6IGh0dHA6Ly91c2VyLWFnZW50cy5tZS9jZm5ldHdvcmstdmVyc2lvbi1saXN0XG4gIC0gcmVnZXg6ICcoQ0ZOZXR3b3JrKS8oNSk0OFxcLjBcXC4zLiogRGFyd2luLzExXFwuMFxcLjAnXG4gICAgb3NfcmVwbGFjZW1lbnQ6ICdpT1MnXG4gIC0gcmVnZXg6ICcoQ0ZOZXR3b3JrKS8oNSk0OFxcLigwKVxcLjQuKiBEYXJ3aW4vKDEpMVxcLjBcXC4wJ1xuICAgIG9zX3JlcGxhY2VtZW50OiAnaU9TJ1xuICAtIHJlZ2V4OiAnKENGTmV0d29yaykvKDUpNDhcXC4oMSlcXC40J1xuICAgIG9zX3JlcGxhY2VtZW50OiAnaU9TJ1xuICAtIHJlZ2V4OiAnKENGTmV0d29yaykvKDQpODVcXC4xKDMpXFwuOSdcbiAgICBvc19yZXBsYWNlbWVudDogJ2lPUydcbiAgLSByZWdleDogJyhDRk5ldHdvcmspLyg2KTA5XFwuKDEpXFwuNCdcbiAgICBvc19yZXBsYWNlbWVudDogJ2lPUydcbiAgLSByZWdleDogJyhDRk5ldHdvcmspLyg2KSgwKTknXG4gICAgb3NfcmVwbGFjZW1lbnQ6ICdpT1MnXG4gIC0gcmVnZXg6ICcoQ0ZOZXR3b3JrKS82KDcpMlxcLigxKVxcLjEzJ1xuICAgIG9zX3JlcGxhY2VtZW50OiAnaU9TJ1xuICAtIHJlZ2V4OiAnKENGTmV0d29yaykvNig3KTJcXC4oMSlcXC4oMSk0J1xuICAgIG9zX3JlcGxhY2VtZW50OiAnaU9TJ1xuICAtIHJlZ2V4OiAnKENGKShOZXR3b3JrKS82KDcpKDIpXFwuMVxcLjE1J1xuICAgIG9zX3JlcGxhY2VtZW50OiAnaU9TJ1xuICAgIG9zX3YxX3JlcGxhY2VtZW50OiAnNydcbiAgICBvc192Ml9yZXBsYWNlbWVudDogJzEnXG4gIC0gcmVnZXg6ICcoQ0ZOZXR3b3JrKS82KDcpMlxcLigwKVxcLig/OjJ8OCknXG4gICAgb3NfcmVwbGFjZW1lbnQ6ICdpT1MnXG4gIC0gcmVnZXg6ICcoQ0ZOZXR3b3JrKS83MDlcXC4xJ1xuICAgIG9zX3JlcGxhY2VtZW50OiAnaU9TJ1xuICAgIG9zX3YxX3JlcGxhY2VtZW50OiAnOCdcbiAgICBvc192Ml9yZXBsYWNlbWVudDogJzAuYjUnXG4gIC0gcmVnZXg6ICcoQ0YpKE5ldHdvcmspLzcxMVxcLihcXGQpJ1xuICAgIG9zX3JlcGxhY2VtZW50OiAnaU9TJ1xuICAgIG9zX3YxX3JlcGxhY2VtZW50OiAnOCdcbiAgLSByZWdleDogJyhDRikoTmV0d29yaykvKDcyMClcXC4oXFxkKSdcbiAgICBvc19yZXBsYWNlbWVudDogJ01hYyBPUyBYJ1xuICAgIG9zX3YxX3JlcGxhY2VtZW50OiAnMTAnXG4gICAgb3NfdjJfcmVwbGFjZW1lbnQ6ICcxMCdcbiAgLSByZWdleDogJyhDRikoTmV0d29yaykvKDc2MClcXC4oXFxkKSdcbiAgICBvc19yZXBsYWNlbWVudDogJ01hYyBPUyBYJ1xuICAgIG9zX3YxX3JlcGxhY2VtZW50OiAnMTAnXG4gICAgb3NfdjJfcmVwbGFjZW1lbnQ6ICcxMSdcbiAgLSByZWdleDogJyhDRikoTmV0d29yaykvNzU4XFwuKFxcZCknXG4gICAgb3NfcmVwbGFjZW1lbnQ6ICdpT1MnXG4gICAgb3NfdjFfcmVwbGFjZW1lbnQ6ICc5J1xuICAtIHJlZ2V4OiAnKENGKShOZXR3b3JrKS84MDhcXC4oXFxkKSdcbiAgICBvc19yZXBsYWNlbWVudDogJ2lPUydcbiAgICBvc192MV9yZXBsYWNlbWVudDogJzEwJ1xuXG4gICMjIyMjIyMjIyNcbiAgIyBDRk5ldHdvcmsgbWFjT1MgQXBwcyAobXVzdCBiZSBiZWZvcmUgQ0ZOZXR3b3JrIGlPUyBBcHBzXG4gICMgQHJlZjogaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvRGFyd2luXyhvcGVyYXRpbmdfc3lzdGVtKSNSZWxlYXNlX2hpc3RvcnlcbiAgIyMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnQ0ZOZXR3b3JrLy4qIERhcndpbi8xNlxcLlxcZCsuKlxcKHg4Nl82NFxcKSdcbiAgICBvc19yZXBsYWNlbWVudDogJ01hYyBPUyBYJ1xuICAgIG9zX3YxX3JlcGxhY2VtZW50OiAnMTAnXG4gICAgb3NfdjJfcmVwbGFjZW1lbnQ6ICcxMidcbiAgLSByZWdleDogJ0NGTmV0d29yay84LiogRGFyd2luLzE1XFwuXFxkKy4qXFwoeDg2XzY0XFwpJ1xuICAgIG9zX3JlcGxhY2VtZW50OiAnTWFjIE9TIFgnXG4gICAgb3NfdjFfcmVwbGFjZW1lbnQ6ICcxMCdcbiAgICBvc192Ml9yZXBsYWNlbWVudDogJzExJ1xuICAjIyMjIyMjIyMjXG4gICMgQ0ZOZXR3b3JrIGlPUyBBcHBzXG4gICMgQHJlZjogaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvRGFyd2luXyhvcGVyYXRpbmdfc3lzdGVtKSNSZWxlYXNlX2hpc3RvcnlcbiAgIyMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnQ0ZOZXR3b3JrLy4qIERhcndpbi8oOSlcXC5cXGQrJ1xuICAgIG9zX3JlcGxhY2VtZW50OiAnaU9TJ1xuICAgIG9zX3YxX3JlcGxhY2VtZW50OiAnMSdcbiAgLSByZWdleDogJ0NGTmV0d29yay8uKiBEYXJ3aW4vKDEwKVxcLlxcZCsnXG4gICAgb3NfcmVwbGFjZW1lbnQ6ICdpT1MnXG4gICAgb3NfdjFfcmVwbGFjZW1lbnQ6ICc0J1xuICAtIHJlZ2V4OiAnQ0ZOZXR3b3JrLy4qIERhcndpbi8oMTEpXFwuXFxkKydcbiAgICBvc19yZXBsYWNlbWVudDogJ2lPUydcbiAgICBvc192MV9yZXBsYWNlbWVudDogJzUnXG4gIC0gcmVnZXg6ICdDRk5ldHdvcmsvLiogRGFyd2luLygxMylcXC5cXGQrJ1xuICAgIG9zX3JlcGxhY2VtZW50OiAnaU9TJ1xuICAgIG9zX3YxX3JlcGxhY2VtZW50OiAnNidcbiAgLSByZWdleDogJ0NGTmV0d29yay82LiogRGFyd2luLygxNClcXC5cXGQrJ1xuICAgIG9zX3JlcGxhY2VtZW50OiAnaU9TJ1xuICAgIG9zX3YxX3JlcGxhY2VtZW50OiAnNydcbiAgLSByZWdleDogJ0NGTmV0d29yay83LiogRGFyd2luLygxNClcXC5cXGQrJ1xuICAgIG9zX3JlcGxhY2VtZW50OiAnaU9TJ1xuICAgIG9zX3YxX3JlcGxhY2VtZW50OiAnOCdcbiAgICBvc192Ml9yZXBsYWNlbWVudDogJzAnXG4gIC0gcmVnZXg6ICdDRk5ldHdvcmsvNy4qIERhcndpbi8oMTUpXFwuXFxkKydcbiAgICBvc19yZXBsYWNlbWVudDogJ2lPUydcbiAgICBvc192MV9yZXBsYWNlbWVudDogJzknXG4gICAgb3NfdjJfcmVwbGFjZW1lbnQ6ICcwJ1xuICAtIHJlZ2V4OiAnQ0ZOZXR3b3JrLzguKiBEYXJ3aW4vKDE2KVxcLlxcZCsnXG4gICAgb3NfcmVwbGFjZW1lbnQ6ICdpT1MnXG4gICAgb3NfdjFfcmVwbGFjZW1lbnQ6ICcxMCdcbiAgIyBpT1MgQXBwc1xuICAtIHJlZ2V4OiAnXFxiKGlPU1sgL118aU9TOyB8aVBob25lKD86L3wgdnxbIF9dT1NbLyxdfDsgfCBPUyA6IHxcXGQsXFxkL3xcXGQsXFxkOyApfGlQYWQvKShcXGR7MSwyfSlbX1xcLl0oXFxkezEsMn0pKD86W19cXC5dKFxcZCspKT8nXG4gICAgb3NfcmVwbGFjZW1lbnQ6ICdpT1MnXG4gIC0gcmVnZXg6ICdcXCgoaU9TKTsnXG5cbiAgIyMjIyMjIyMjI1xuICAjIEFwcGxlIFRWXG4gICMjIyMjIyMjIyNcbiAgLSByZWdleDogJyh0dk9TKS8oXFxkKykuKFxcZCspJ1xuICAgIG9zX3JlcGxhY2VtZW50OiAndHZPUydcblxuICAjIyMjIyMjIyMjXG4gICMgQ2hyb21lIE9TXG4gICMgaWYgdmVyc2lvbiAwLjAuMCwgcHJvYmFibHkgdGhpcyBzdHVmZjpcbiAgIyBodHRwOi8vY29kZS5nb29nbGUuY29tL3AvY2hyb21pdW0tb3MvaXNzdWVzL2RldGFpbD9pZD0xMTU3M1xuICAjIGh0dHA6Ly9jb2RlLmdvb2dsZS5jb20vcC9jaHJvbWl1bS1vcy9pc3N1ZXMvZGV0YWlsP2lkPTEzNzkwXG4gICMjIyMjIyMjIyNcbiAgLSByZWdleDogJyhDck9TKSBbYS16MC05X10rIChcXGQrKVxcLihcXGQrKSg/OlxcLihcXGQrKSk/J1xuICAgIG9zX3JlcGxhY2VtZW50OiAnQ2hyb21lIE9TJ1xuXG4gICMjIyMjIyMjIyNcbiAgIyBMaW51eCBkaXN0cm9zXG4gICMjIyMjIyMjIyNcbiAgLSByZWdleDogJyhbRGRdZWJpYW4pJ1xuICAgIG9zX3JlcGxhY2VtZW50OiAnRGViaWFuJ1xuICAtIHJlZ2V4OiAnKExpbnV4IE1pbnQpKD86LyhcXGQrKSk/J1xuICAtIHJlZ2V4OiAnKE1hbmRyaXZhKSg/OiBMaW51eCk/Lyg/OltcXGQuLV0rbVthLXpdezJ9KFxcZCspLihcXGQpKT8nXG5cbiAgIyMjIyMjIyMjI1xuICAjIFN5bWJpYW4gKyBTeW1iaWFuIE9TXG4gICMgaHR0cDovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9IaXN0b3J5X29mX1N5bWJpYW5cbiAgIyMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnKFN5bWJpYW5bT29dW1NzXSlbLyBdKFxcZCspXFwuKFxcZCspJ1xuICAgIG9zX3JlcGxhY2VtZW50OiAnU3ltYmlhbiBPUydcbiAgLSByZWdleDogJyhTeW1iaWFuLzMpLitOb2tpYUJyb3dzZXIvN1xcLjMnXG4gICAgb3NfcmVwbGFjZW1lbnQ6ICdTeW1iaWFuXjMgQW5uYSdcbiAgLSByZWdleDogJyhTeW1iaWFuLzMpLitOb2tpYUJyb3dzZXIvN1xcLjQnXG4gICAgb3NfcmVwbGFjZW1lbnQ6ICdTeW1iaWFuXjMgQmVsbGUnXG4gIC0gcmVnZXg6ICcoU3ltYmlhbi8zKSdcbiAgICBvc19yZXBsYWNlbWVudDogJ1N5bWJpYW5eMydcbiAgLSByZWdleDogJ1xcYihTZXJpZXMgNjB8U3ltYk9TfFM2MFZlcnNpb258UzYwVlxcZHxTNjBcXGIpJ1xuICAgIG9zX3JlcGxhY2VtZW50OiAnU3ltYmlhbiBPUydcbiAgLSByZWdleDogJyhNZWVHbyknXG4gIC0gcmVnZXg6ICdTeW1iaWFuIFtPb11bU3NdJ1xuICAgIG9zX3JlcGxhY2VtZW50OiAnU3ltYmlhbiBPUydcbiAgLSByZWdleDogJ1NlcmllczQwOydcbiAgICBvc19yZXBsYWNlbWVudDogJ05va2lhIFNlcmllcyA0MCdcbiAgLSByZWdleDogJ1NlcmllczMwUGx1czsnXG4gICAgb3NfcmVwbGFjZW1lbnQ6ICdOb2tpYSBTZXJpZXMgMzAgUGx1cydcblxuICAjIyMjIyMjIyMjXG4gICMgQmxhY2tCZXJyeSBkZXZpY2VzXG4gICMjIyMjIyMjIyNcbiAgLSByZWdleDogJyhCQjEwKTsuK1ZlcnNpb24vKFxcZCspXFwuKFxcZCspXFwuKFxcZCspJ1xuICAgIG9zX3JlcGxhY2VtZW50OiAnQmxhY2tCZXJyeSBPUydcbiAgLSByZWdleDogJyhCbGFja1tCYl1lcnJ5KVswLTlhLXpdKy8oXFxkKylcXC4oXFxkKylcXC4oXFxkKykoPzpcXC4oXFxkKykpPydcbiAgICBvc19yZXBsYWNlbWVudDogJ0JsYWNrQmVycnkgT1MnXG4gIC0gcmVnZXg6ICcoQmxhY2tbQmJdZXJyeSkuK1ZlcnNpb24vKFxcZCspXFwuKFxcZCspXFwuKFxcZCspKD86XFwuKFxcZCspKT8nXG4gICAgb3NfcmVwbGFjZW1lbnQ6ICdCbGFja0JlcnJ5IE9TJ1xuICAtIHJlZ2V4OiAnKFJJTSBUYWJsZXQgT1MpIChcXGQrKVxcLihcXGQrKVxcLihcXGQrKSdcbiAgICBvc19yZXBsYWNlbWVudDogJ0JsYWNrQmVycnkgVGFibGV0IE9TJ1xuICAtIHJlZ2V4OiAnKFBsYXlbQmJdb29rKSdcbiAgICBvc19yZXBsYWNlbWVudDogJ0JsYWNrQmVycnkgVGFibGV0IE9TJ1xuICAtIHJlZ2V4OiAnKEJsYWNrW0JiXWVycnkpJ1xuICAgIG9zX3JlcGxhY2VtZW50OiAnQmxhY2tCZXJyeSBPUydcblxuICAjIyMjIyMjIyMjXG4gICMgRmlyZWZveCBPU1xuICAjIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICdcXCgoPzpNb2JpbGV8VGFibGV0KTsuK0dlY2tvLzE4LjAgRmlyZWZveC9cXGQrXFwuXFxkKydcbiAgICBvc19yZXBsYWNlbWVudDogJ0ZpcmVmb3ggT1MnXG4gICAgb3NfdjFfcmVwbGFjZW1lbnQ6ICcxJ1xuICAgIG9zX3YyX3JlcGxhY2VtZW50OiAnMCdcbiAgICBvc192M19yZXBsYWNlbWVudDogJzEnXG5cbiAgLSByZWdleDogJ1xcKCg/Ok1vYmlsZXxUYWJsZXQpOy4rR2Vja28vMTguMSBGaXJlZm94L1xcZCtcXC5cXGQrJ1xuICAgIG9zX3JlcGxhY2VtZW50OiAnRmlyZWZveCBPUydcbiAgICBvc192MV9yZXBsYWNlbWVudDogJzEnXG4gICAgb3NfdjJfcmVwbGFjZW1lbnQ6ICcxJ1xuXG4gIC0gcmVnZXg6ICdcXCgoPzpNb2JpbGV8VGFibGV0KTsuK0dlY2tvLzI2LjAgRmlyZWZveC9cXGQrXFwuXFxkKydcbiAgICBvc19yZXBsYWNlbWVudDogJ0ZpcmVmb3ggT1MnXG4gICAgb3NfdjFfcmVwbGFjZW1lbnQ6ICcxJ1xuICAgIG9zX3YyX3JlcGxhY2VtZW50OiAnMidcblxuICAtIHJlZ2V4OiAnXFwoKD86TW9iaWxlfFRhYmxldCk7LitHZWNrby8yOC4wIEZpcmVmb3gvXFxkK1xcLlxcZCsnXG4gICAgb3NfcmVwbGFjZW1lbnQ6ICdGaXJlZm94IE9TJ1xuICAgIG9zX3YxX3JlcGxhY2VtZW50OiAnMSdcbiAgICBvc192Ml9yZXBsYWNlbWVudDogJzMnXG5cbiAgLSByZWdleDogJ1xcKCg/Ok1vYmlsZXxUYWJsZXQpOy4rR2Vja28vMzAuMCBGaXJlZm94L1xcZCtcXC5cXGQrJ1xuICAgIG9zX3JlcGxhY2VtZW50OiAnRmlyZWZveCBPUydcbiAgICBvc192MV9yZXBsYWNlbWVudDogJzEnXG4gICAgb3NfdjJfcmVwbGFjZW1lbnQ6ICc0J1xuXG4gIC0gcmVnZXg6ICdcXCgoPzpNb2JpbGV8VGFibGV0KTsuK0dlY2tvLzMyLjAgRmlyZWZveC9cXGQrXFwuXFxkKydcbiAgICBvc19yZXBsYWNlbWVudDogJ0ZpcmVmb3ggT1MnXG4gICAgb3NfdjFfcmVwbGFjZW1lbnQ6ICcyJ1xuICAgIG9zX3YyX3JlcGxhY2VtZW50OiAnMCdcblxuICAtIHJlZ2V4OiAnXFwoKD86TW9iaWxlfFRhYmxldCk7LitHZWNrby8zNC4wIEZpcmVmb3gvXFxkK1xcLlxcZCsnXG4gICAgb3NfcmVwbGFjZW1lbnQ6ICdGaXJlZm94IE9TJ1xuICAgIG9zX3YxX3JlcGxhY2VtZW50OiAnMidcbiAgICBvc192Ml9yZXBsYWNlbWVudDogJzEnXG5cbiAgIyBGaXJlZm94IE9TIEdlbmVyaWNcbiAgLSByZWdleDogJ1xcKCg/Ok1vYmlsZXxUYWJsZXQpOy4rRmlyZWZveC9cXGQrXFwuXFxkKydcbiAgICBvc19yZXBsYWNlbWVudDogJ0ZpcmVmb3ggT1MnXG5cblxuICAjIyMjIyMjIyMjXG4gICMgQlJFV1xuICAjIHllcywgQnJldyBpcyBsb3dlci1jYXNlZCBmb3IgQnJldyBNUFxuICAjIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICcoQlJFVylbIC9dKFxcZCspXFwuKFxcZCspXFwuKFxcZCspJ1xuICAtIHJlZ2V4OiAnKEJSRVcpOydcbiAgLSByZWdleDogJyhCcmV3IE1QfEJNUClbIC9dKFxcZCspXFwuKFxcZCspXFwuKFxcZCspJ1xuICAgIG9zX3JlcGxhY2VtZW50OiAnQnJldyBNUCdcbiAgLSByZWdleDogJ0JNUDsnXG4gICAgb3NfcmVwbGFjZW1lbnQ6ICdCcmV3IE1QJ1xuXG4gICMjIyMjIyMjIyNcbiAgIyBHb29nbGUgVFZcbiAgIyMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnKEdvb2dsZVRWKSg/OiAoXFxkKylcXC4oXFxkKykoPzpcXC4oXFxkKykpP3wvW1xcZGEtel0rKSdcblxuICAtIHJlZ2V4OiAnKFdlYlRWKS8oXFxkKykuKFxcZCspJ1xuXG4gICMjIyMjIyMjIyNcbiAgIyBDaHJvbWVjYXN0XG4gICMjIyMjIyMjIyNcbiAgLSByZWdleDogJyhDcktleSkoPzpbL10oXFxkKylcXC4oXFxkKykoPzpcXC4oXFxkKykpPyk/J1xuICAgIG9zX3JlcGxhY2VtZW50OiAnQ2hyb21lY2FzdCdcblxuICAjIyMjIyMjIyMjXG4gICMgTWlzYyBtb2JpbGVcbiAgIyMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnKGhwd3x3ZWIpT1MvKFxcZCspXFwuKFxcZCspKD86XFwuKFxcZCspKT8nXG4gICAgb3NfcmVwbGFjZW1lbnQ6ICd3ZWJPUydcbiAgLSByZWdleDogJyhWUkUpOydcblxuICAjIyMjIyMjIyMjXG4gICMgR2VuZXJpYyBwYXR0ZXJuc1xuICAjIHNpbmNlIHRoZSBtYWpvcml0eSBvZiBvcyBjYXNlcyBhcmUgdmVyeSBzcGVjaWZpYywgdGhlc2UgZ28gbGFzdFxuICAjIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICcoRmVkb3JhfFJlZCBIYXR8UENMaW51eE9TfFB1cHB5fFVidW50dXxLaW5kbGV8QmFkYXxMdWJ1bnR1fEJhY2tUcmFja3xTbGFja3dhcmV8KD86RnJlZXxPcGVufE5ldHxcXGIpQlNEKVsvIF0oXFxkKylcXC4oXFxkKykoPzpcXC4oXFxkKykoPzpcXC4oXFxkKykpPyk/J1xuXG4gICMgR2VudG9vIExpbnV4ICsgS2VybmVsIFZlcnNpb25cbiAgLSByZWdleDogJyhMaW51eClbIC9dKFxcZCspXFwuKFxcZCspKD86XFwuKFxcZCspKT8uKmdlbnRvbydcbiAgICBvc19yZXBsYWNlbWVudDogJ0dlbnRvbydcblxuICAjIE9wZXJhIE1pbmkgQmFkYVxuICAtIHJlZ2V4OiAnXFwoKEJhZGEpOydcblxuICAjIGp1c3Qgb3NcbiAgLSByZWdleDogJyhXaW5kb3dzfEFuZHJvaWR8V2VUYWJ8TWFlbW98V2ViMFMpJ1xuICAtIHJlZ2V4OiAnKFVidW50dXxLdWJ1bnR1fEFyY2ggTGludXh8Q2VudE9TfFNsYWNrd2FyZXxHZW50b298b3BlblNVU0V8U1VTRXxSZWQgSGF0fEZlZG9yYXxQQ0xpbnV4T1N8TWFnZWlhfCg/OkZyZWV8T3BlbnxOZXR8XFxiKUJTRCknXG4gICMgTGludXggKyBLZXJuZWwgVmVyc2lvblxuICAtIHJlZ2V4OiAnKExpbnV4KSg/OlsgL10oXFxkKylcXC4oXFxkKykoPzpcXC4oXFxkKykpPyk/J1xuICAtIHJlZ2V4OiAnU3VuT1MnXG4gICAgb3NfcmVwbGFjZW1lbnQ6ICdTb2xhcmlzJ1xuXG4gICMgUm9rdSBEaWdpdGFsLVZpZGVvLVBsYXllcnMgaHR0cHM6Ly93d3cucm9rdS5jb20vXG4gIC0gcmVnZXg6ICdeKFJva3UpL0RWUC0oXFxkKylcXC4oXFxkKyknXG5cbmRldmljZV9wYXJzZXJzOlxuXG4gICMjIyMjIyMjI1xuICAjIE1vYmlsZSBTcGlkZXJzXG4gICMgQ2F0Y2ggdGhlIG1vYmlsZSBjcmF3bGVyIGJlZm9yZSBjaGVja2luZyBmb3IgaVBob25lcyAvIEFuZHJvaWRzLlxuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJyg/Oig/OmlQaG9uZXxXaW5kb3dzIENFfFdpbmRvd3MgUGhvbmV8QW5kcm9pZCkuKig/Oig/OkJvdHxZZXRpKS1Nb2JpbGV8WVJTcGlkZXJ8QmluZ1ByZXZpZXd8Ym90cz8vXFxkfCg/OmJvdHxzcGlkZXIpXFwuaHRtbCl8QWRzQm90LUdvb2dsZS1Nb2JpbGUuKmlQaG9uZSknXG4gICAgcmVnZXhfZmxhZzogJ2knXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnU3BpZGVyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnU3BpZGVyJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnU21hcnRwaG9uZSdcbiAgLSByZWdleDogJyg/OkRvQ29Nb3xcXGJNT1RcXGJ8XFxiTEdcXGJ8Tm9raWF8U2Ftc3VuZ3xTb255RXJpY3Nzb24pLiooPzooPzpCb3R8WWV0aSktTW9iaWxlfGJvdHM/L1xcZHwoPzpib3R8Y3Jhd2xlcilcXC5odG1sfCg/Omp1bXB8Z29vZ2xlfFd1a29uZylib3R8aWNoaXJvL21vYmlsZXwvc3BpZGVyfFlhaG9vU2Vla2VyKSdcbiAgICByZWdleF9mbGFnOiAnaSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdTcGlkZXInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdTcGlkZXInXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdGZWF0dXJlIFBob25lJ1xuXG4gICMjIyMjIyMjI1xuICAjIFdlYkJyb3dzZXIgZm9yIFNtYXJ0V2F0Y2hcbiAgIyBAcmVmOiBodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9hcHBzL2RldGFpbHM/aWQ9c2UudmFnZ2FuLndlYmJyb3dzZXImaGw9ZW5cbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICdcXGJTbWFydFdhdGNoICpcXCggKihbXjtdKykgKjsgKihbXjtdKykgKjsnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEgJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyJ1xuXG4gICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcbiAgIyBBbmRyb2lkIHBhcnNlcnNcbiAgI1xuICAjIEByZWY6IGh0dHBzOi8vc3VwcG9ydC5nb29nbGUuY29tL2dvb2dsZXBsYXkvYW5zd2VyLzE3MjcxMzE/aGw9ZW5cbiAgIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xuXG4gICMgQW5kcm9pZCBBcHBsaWNhdGlvblxuICAtIHJlZ2V4OiAnQW5kcm9pZCBBcHBsaWNhdGlvblteXFwtXSsgLSAoU29ueSkgPyhFcmljc3Nvbik/ICguKykgXFx3KyAtICdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSAkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJyQxJDInXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMydcbiAgLSByZWdleDogJ0FuZHJvaWQgQXBwbGljYXRpb25bXlxcLV0rIC0gKD86SFRDfEhVQVdFSXxMR0V8TEVOT1ZPfE1FRElPTnxUQ1QpIChIVEN8SFVBV0VJfExHfExFTk9WT3xNRURJT058QUxDQVRFTClbIF9cXC1dKC4rKSBcXHcrIC0gJ1xuICAgIHJlZ2V4X2ZsYWc6ICdpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxICQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMidcbiAgLSByZWdleDogJ0FuZHJvaWQgQXBwbGljYXRpb25bXlxcLV0rIC0gKFteIF0rKSAoLispIFxcdysgLSAnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEgJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyJ1xuXG4gICMjIyMjIyMjI1xuICAjIDNRXG4gICMgQHJlZjogaHR0cDovL3d3dy4zcS1pbnQuY29tL1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihbQkxSUV1DXFxkezR9W0EtWl0rKSArQnVpbGQvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJzNRICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnM1EnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKig/OjNRXykoW147L10rKSArQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnM1EgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICczUSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIEFjZXJcbiAgIyBAcmVmOiBodHRwOi8vdXMuYWNlci5jb20vYWMvZW4vVVMvY29udGVudC9ncm91cC90YWJsZXRzXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnQW5kcm9pZCBbMzRdLio7ICooQTEwMHxBMTAxfEExMTB8QTIwMHxBMjEwfEEyMTF8QTUwMHxBNTAxfEE1MTB8QTUxMXxBNzAwKD86IExpdGV8IDNHKT98QTcwMXxCMS1BNzF8QTEtXFxkezN9fEIxLVxcZHszfXxWMzYwfFYzNzB8VzUwMHxXNTAwUHxXNTAxfFc1MDFQfFc1MTB8VzUxMXxXNzAwfFNsaWRlciBTTDEwMXxEQTIyW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0FjZXInXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKkFjZXIgSWNvbmlhIFRhYiAoW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0FjZXInXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKihaMVsxMjM1XTB8RTMyMFteL10qfFM1MDB8UzUxMHxMaXF1aWRbXjsvXSp8SWNvbmlhIEFcXGQrKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0FjZXInXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKihBY2VyIHxBQ0VSICkoW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQWNlcidcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyJ1xuXG4gICMjIyMjIyMjI1xuICAjIEFkdmVudFxuICAjIEByZWY6IGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0FkdmVudF9WZWdhXG4gICMgQG5vdGU6IFZlZ2FCZWFuIGFuZCBWZWdhQ29tYiAobmFtZXMgZGVyaXZlZCBmcm9tIGplbGx5YmVhbiwgaG9uZXljb21iKSBhcmVcbiAgIyAgIGN1c3RvbSBST00gYnVpbGRzIGZvciBWZWdhXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKEFkdmVudCApPyhWZWdhKD86QmVhbnxDb21iKT8pLiogQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0FkdmVudCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyJ1xuXG4gICMjIyMjIyMjI1xuICAjIEFpbm9sXG4gICMgQHJlZjogaHR0cDovL3d3dy5haW5vbC5jb20vcGx1Z2luLnBocD9pZGVudGlmaWVyPWFpbm9sJm1vZHVsZT1wcm9kdWN0XG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKEFpbm9sICk/KCg/Ok5PVk98W05uXW92bylbXjsvXSspIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdBaW5vbCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyJ1xuXG4gICMjIyMjIyMjI1xuICAjIEFpcmlzXG4gICMgQHJlZjogaHR0cDovL2FpcmlzLmVzL1RpZW5kYS9EZWZhdWx0LmFzcHg/aWRHPTAwMVxuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKkFJUklTWyBfXFwtXT8oW14vO1xcKV0rKSAqKD86O3xcXCl8QnVpbGQpJ1xuICAgIHJlZ2V4X2ZsYWc6ICdpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQWlyaXMnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKihPbmVQQURbXjsvXSspIEJ1aWxkJ1xuICAgIHJlZ2V4X2ZsYWc6ICdpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQWlyaXMnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBBaXJwYWRcbiAgIyBAcmVmOiA/P1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKkFpcnBhZFsgXFwtXShbXjsvXSspIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0FpcnBhZCAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0FpcnBhZCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIEFsY2F0ZWwgLSBUQ1RcbiAgIyBAcmVmOiBodHRwOi8vd3d3LmFsY2F0ZWxvbmV0b3VjaC5jb20vZ2xvYmFsLWVuL3Byb2R1Y3RzL3NtYXJ0cGhvbmVzLmh0bWxcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICoob25lID90b3VjaCkgKEVWTzd8VDEwfFQyMCkgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnQWxjYXRlbCBPbmUgVG91Y2ggJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdBbGNhdGVsJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnT25lIFRvdWNoICQyJ1xuICAtIHJlZ2V4OiAnOyAqKD86YWxjYXRlbFsgX10pPyg/Oig/Om9uZVsgX10/dG91Y2hbIF9dKXxvdFsgXFwtXSkoW147L10rKTs/IEJ1aWxkJ1xuICAgIHJlZ2V4X2ZsYWc6ICdpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0FsY2F0ZWwgT25lIFRvdWNoICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQWxjYXRlbCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJ09uZSBUb3VjaCAkMSdcbiAgLSByZWdleDogJzsgKihUQ0wpWyBfXShbXjsvXSspIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxICQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMidcbiAgIyBvcGVyYXRvciBzcGVjaWZpYyBtb2RlbHNcbiAgLSByZWdleDogJzsgKihWb2RhZm9uZSBTbWFydCBJSXxPcHRpbXVzX01hZHJpZCkgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnQWxjYXRlbCAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0FsY2F0ZWwnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKkJBU0VfTHV0ZWFfMyBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdBbGNhdGVsIE9uZSBUb3VjaCA5OTgnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdBbGNhdGVsJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnT25lIFRvdWNoIDk5OCdcbiAgLSByZWdleDogJzsgKkJBU0VfVmFyaWEgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnQWxjYXRlbCBPbmUgVG91Y2ggOTE4RCdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0FsY2F0ZWwnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdPbmUgVG91Y2ggOTE4RCdcblxuICAjIyMjIyMjIyNcbiAgIyBBbGxmaW5lXG4gICMgQHJlZjogaHR0cDovL3d3dy5teWFsbGZpbmUuY29tL1Byb2R1Y3RzLmFzcFxuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKigoPzpGSU5FfEZpbmUpXFxkW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0FsbGZpbmUnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBBbGx2aWV3XG4gICMgQHJlZjogaHR0cDovL3d3dy5hbGx2aWV3LnJvL3Byb2R1c2UvZHJvc2VyaWVzL2xpc3RhLXRhYmxldGUtcGMvXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKEFMTFZJRVdbIF9dP3xBbGx2aWV3WyBfXT8pKCg/OlNwZWVkfFNQRUVEKS4qKSBCdWlsZC8nXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0FsbHZpZXcnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMidcbiAgLSByZWdleDogJzsgKihBTExWSUVXWyBfXT98QWxsdmlld1sgX10/KT8oQVgxX1NoaW5lfEFYMl9GcmVuenkpIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdBbGx2aWV3J1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDInXG4gIC0gcmVnZXg6ICc7ICooQUxMVklFV1sgX10/fEFsbHZpZXdbIF9dPykoW147L10qKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQWxsdmlldydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyJ1xuXG4gICMjIyMjIyMjI1xuICAjIEFsbHdpbm5lclxuICAjIEByZWY6IGh0dHA6Ly93d3cuYWxsd2lubmVyLmNvbS9cbiAgIyBAbW9kZWxzOiBBMzEgKDEzLjNcIiksQTIwLEExMCxcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooQTEzLU1JRCkgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdBbGx3aW5uZXInXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKihBbGx3aW5uZXIpWyBfXFwtXT8oW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSAkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0FsbHdpbm5lcidcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIEFtYXdheVxuICAjIEByZWY6IGh0dHA6Ly93d3cuYW1hd2F5LmNuL1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihBNjUxfEE3MDFCP3xBNzAyfEE3MDN8QTcwNXxBNzA2fEE3MDd8QTcxMXxBNzEyfEE3MTN8QTcxN3xBNzIyfEE3ODV8QTgwMXxBODAyfEE4MDN8QTkwMXxBOTAyfEExMDAyfEExMDAzfEExMDA2fEExMDA3fEE5NzAxfEE5NzAzfFE3MTB8UTgwKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0FtYXdheSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIEFtb2lcbiAgIyBAcmVmOiBodHRwOi8vd3d3LmFtb2kuY29tL2VuL3ByZC9wcmRfaW5kZXguanNweFxuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKig/OkFNT0l8QW1vaSlbIF9dKFteOy9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnQW1vaSAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0Ftb2knXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJ14oPzpBTU9JfEFtb2kpWyBfXShbXjsvXSspIExpbnV4J1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0Ftb2kgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdBbW9pJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgQW9jXG4gICMgQHJlZjogaHR0cDovL2xhdGluLmFvYy5jb20vbWVkaWFfdGFibGV0XG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKE1XKD86MFs3ODldfDEwKVteOy9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdBb2MnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBBb3NvblxuICAjIEByZWY6IGh0dHA6Ly93d3cubHVja3lzdGFyLmNvbS5jbi9lbi9taWQuYXNweD9wYWdlPTFcbiAgIyBAcmVmOiBodHRwOi8vd3d3Lmx1Y2t5c3Rhci5jb20uY24vZW4vbW9iaWxldGVsLmFzcHg/cGFnZT0xXG4gICMgQG5vdGU6IGJyYW5kIG93bmVkIGJ5IGx1Y2t5c3RhclxuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihHN3xNMTAxM3xNMTAxNUd8TTExW0NHXT98TS0/MTJbQl0/fE0xNXxNMTlbR10/fE0zMFtBQ1FdP3xNMzFbR1FdfE0zMnxNMzNbR1FdfE0zNnxNMzd8TTM4fE03MDFUfE03MTB8TTcxMkJ8TTcxM3xNNzE1R3xNNzE2R3xNNzEoPzpHfEdTfFQpP3xNNzJbVF0/fE03M1tUXT98TTc1W0dUXT98TTc3R3xNNzlUfE03THxNN0xOfE04MXxNODEwfE04MVR8TTgyfE05MnxNOTJLU3xNOTJTfE03MTdHfE03MjF8TTcyMkd8TTcyM3xNNzI1R3xNNzM5fE03ODV8TTc5MXxNOTJTS3xNOTNEKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdBb3NvbiAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0Fvc29uJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICc7ICpBb3NvbiAoW147L10rKSBCdWlsZCdcbiAgICByZWdleF9mbGFnOiAnaSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdBb3NvbiAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0Fvc29uJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgQXBhbmRhXG4gICMgQHJlZjogaHR0cDovL3d3dy5hcGFuZGEuY29tLmNuL1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKltBYV1wYW5kYVsgX1xcLV0oW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdBcGFuZGEgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdBcGFuZGEnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBBcmNob3NcbiAgIyBAcmVmOiBodHRwOi8vd3d3LmFyY2hvcy5jb20vZGUvcHJvZHVjdHMvdGFibGV0cy5odG1sXG4gICMgQHJlZjogaHR0cDovL3d3dy5hcmNob3MuY29tL2RlL3Byb2R1Y3RzL3NtYXJ0cGhvbmVzL2luZGV4Lmh0bWxcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooPzpBUkNIT1N8QXJjaG9zKSA/KEdBTUVQQUQuKj8pKD86IEJ1aWxkfFs7L1xcKFxcKVxcLV0pJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0FyY2hvcyAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0FyY2hvcydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnQVJDSE9TOyBHT0dJOyAoW147XSspOydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdBcmNob3MgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdBcmNob3MnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJyg/OkFSQ0hPU3xBcmNob3MpWyBfXT8oLio/KSg/OiBCdWlsZHxbOy9cXChcXClcXC1dfCQpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0FyY2hvcyAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0FyY2hvcydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAqKEFOKD86N3w4fDl8MTB8MTMpW0EtWjAtOV17MSw0fSkgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnQXJjaG9zICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQXJjaG9zJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICc7ICooQTI4fEEzMnxBNDN8QTcwKD86QkhUfENIVHxIQnxTfFgpfEExMDEoPzpCfEN8SVQpfEE3RUJ8QTdFQi1XS3wxMDFHOXw4MEc5KSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdBcmNob3MgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdBcmNob3MnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBBLXJpdmFsXG4gICMgQHJlZjogaHR0cDovL3d3dy5hLXJpdmFsLmRlL2RlL1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihQQUQtRk1EW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0FyaXZhbCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAqKEJpb25pUSkgPyhbXjsvXSspIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxICQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQXJpdmFsJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEgJDInXG5cbiAgIyMjIyMjIyMjXG4gICMgQXJub3ZhXG4gICMgQHJlZjogaHR0cDovL2Fybm92YXRlY2guY29tL1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihBTlxcZFteOy9dK3xBUkNITVxcZCspIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0Fybm92YSAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0Fybm92YSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAqKD86QVJOT1ZBfEFybm92YSkgPyhbXjsvXSspIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0Fybm92YSAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0Fybm92YSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIEFzc2lzdGFudFxuICAjIEByZWY6IGh0dHA6Ly93d3cuYXNzaXN0YW50LnVhXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKD86QVNTSVNUQU5UICk/KEFQKS0/KFsxNzg5XVxcZHsyfVtBLVpdezAsMn18ODAxMDQpIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0Fzc2lzdGFudCAkMS0kMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0Fzc2lzdGFudCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxLSQyJ1xuXG4gICMjIyMjIyMjI1xuICAjIEFzdXNcbiAgIyBAcmVmOiBodHRwOi8vd3d3LmFzdXMuY29tL3VrL1RhYmxldHNfTW9iaWxlL1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihNRTE3XFxkW147L10qfE1FM1xcZHsyfVteOy9dK3xLMDBbQS1aXXxOZXh1cyAxMHxOZXh1cyA3KD86IDIwMTMpP3xQYWRGb25lW147L10qfFRyYW5zZm9ybWVyW147L10qfFRGXFxkezN9W147L10qfGVlZXBjKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdBc3VzICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQXN1cydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAqQVNVU1sgX10qKFteOy9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnQXN1cyAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0FzdXMnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBHYXJtaW4tQXN1c1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKkdhcm1pbi1Bc3VzIChbXjsvXSspIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0dhcm1pbi1Bc3VzICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnR2FybWluLUFzdXMnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKihHYXJtaW5mb25lKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdHYXJtaW4gJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdHYXJtaW4tQXN1cydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIEF0dGFiXG4gICMgQHJlZjogaHR0cDovL3d3dy50aGVhdHRhYi5jb20vXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAoQFRBQi1bXjsvXSspIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQXR0YWInXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBBdWRpb3NvbmljXG4gICMgQHJlZjogPz9cbiAgIyBAbm90ZTogVGFrZSBjYXJlIHdpdGggRG9jb21vIFQtMDEgVG9zaGliYVxuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihULSg/OjA3fFteMF1cXGQpW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0F1ZGlvc29uaWMnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBBeGlvb1xuICAjIEByZWY6IGh0dHA6Ly93d3cuYXhpb293b3JsZC5jb20vd3cvaW5kZXgucGhwXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKD86QXhpb29bIF9cXC1dKFteOy9dKyl8KHBpY29wYWQpWyBfXFwtXShbXjsvXSspKSBCdWlsZCdcbiAgICByZWdleF9mbGFnOiAnaSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdBeGlvbyAkMSQyICQzJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQXhpb28nXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSQyICQzJ1xuXG4gICMjIyMjIyMjI1xuICAjIEF6ZW5kXG4gICMgQHJlZjogaHR0cDovL2F6ZW5kY29ycC5jb20vaW5kZXgucGhwL3Byb2R1Y3RzL3BvcnRhYmxlLWVsZWN0cm9uaWNzXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKFYoPzoxMDB8NzAwfDgwMClbXjsvXSopIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQXplbmQnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBCYWtcbiAgIyBAcmVmOiBodHRwOi8vd3d3LmJha2ludGVybmF0aW9uYWwuY29tL3Byb2R1dG9zLnBocD9jYXQ9ODBcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooSUJBS1xcLVteOy9dKikgQnVpbGQnXG4gICAgcmVnZXhfZmxhZzogJ2knXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdCYWsnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBCZWRvdmVcbiAgIyBAcmVmOiBodHRwOi8vd3d3LmJlZG92ZS5jb20vcHJvZHVjdC5odG1sXG4gICMgQG1vZGVsczogSFk2NTAxfEhZNTAwMXxYMTJ8WDIxfEk1XG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKEhZNTAwMXxIWTY1MDF8WDEyfFgyMXxJNSkgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnQmVkb3ZlICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQmVkb3ZlJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgQmVuc3NcbiAgIyBAcmVmOiBodHRwOi8vd3d3LmJlbnNzLm5ldC9cbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooSkMtW147L10qKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdCZW5zcyAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0JlbnNzJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgQmxhY2tiZXJyeVxuICAjIEByZWY6IGh0dHA6Ly91ay5ibGFja2JlcnJ5LmNvbS9cbiAgIyBAbm90ZTogQW5kcm9pZCBBcHBzIHNlYW1zIHRvIGJlIHVzZWQgaGVyZVxuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihCQikgKFteOy9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEgJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdCbGFja2JlcnJ5J1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDInXG5cbiAgIyMjIyMjIyMjXG4gICMgQmxhY2tiaXJkXG4gICMgQHJlZjogaHR0cDovL2libGFja2JpcmQuY28ua3JcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooQmxhY2tCaXJkKVsgX10oSTguKikgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEgJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyJ1xuICAtIHJlZ2V4OiAnOyAqKEJsYWNrQmlyZClbIF9dKC4qKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSAkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJyQxJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDInXG5cbiAgIyMjIyMjIyMjXG4gICMgQmxhdXB1bmt0XG4gICMgQHJlZjogaHR0cDovL3d3dy5ibGF1cHVua3QuY29tXG4gICMjIyMjIyMjI1xuICAjIEVuZGVhdm91clxuICAtIHJlZ2V4OiAnOyAqKFswLTldK0JQW0VNXVteOy9dKnxFbmRlYXZvdXJbXjsvXSspIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0JsYXVwdW5rdCAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0JsYXVwdW5rdCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIEJsdVxuICAjIEByZWY6IGh0dHA6Ly9ibHVwcm9kdWN0cy5jb21cbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooKD86QkxVfEJsdSlbIF9cXC1dKShbXjsvXSspIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdCbHUnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMidcbiAgIyBCTU9CSUxFID0gb3BlcmF0b3IgYnJhbmRlZCBkZXZpY2VcbiAgLSByZWdleDogJzsgKig/OkJNT0JJTEUgKT8oQmx1fEJMVXxEQVNIIFteOy9dK3xWSVZPIDRcXC4zfFRBTksgNFxcLjUpIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQmx1J1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgQmx1c2Vuc1xuICAjIEByZWY6IGh0dHA6Ly93d3cuYmx1c2Vucy5jb20vZXMvP3NnPTEmc3Y9YWwmcm9jPTFcbiAgIyMjIyMjIyMjXG4gICMgdGFibGV0XG4gIC0gcmVnZXg6ICc7ICooVE9VQ0hcXGRbXjsvXSspIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQmx1c2VucydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIEJtb2JpbGVcbiAgIyBAcmVmOiBodHRwOi8vYm1vYmlsZS5ldS5jb20vP2NhdGVnb3JpYT1zbWFydHBob25lcy0yXG4gICMgQG5vdGU6IE1pZ2h0IGNvbGxpZGUgd2l0aCBNYXh4IGFzIEFYIGlzIHVzZWQgYWxzbyB0aGVyZS5cbiAgIyMjIyMjIyMjXG4gICMgc21hcnRwaG9uZVxuICAtIHJlZ2V4OiAnOyAqKEFYNVxcZCspIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQm1vYmlsZSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIGJxXG4gICMgQHJlZjogaHR0cDovL2JxcmVhZGVycy5jb21cbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooW0JiXXEpIChbXjsvXSspOz8gQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEgJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdicSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyJ1xuICAtIHJlZ2V4OiAnOyAqKE1heHdlbGwgW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ2JxJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgQnJhdW4gUGhvdG90ZWNobmlrXG4gICMgQHJlZjogaHR0cDovL3d3dy5icmF1bi1waG90b3RlY2huaWsuZGUvZW4vcHJvZHVjdHMvbGlzdC9+cGNhdC4yNTAvVGFibGV0LVBDLmh0bWxcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooKD86Qi1UYWJ8Qi1UQUIpID9cXGRbXjsvXSspIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQnJhdW4nXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBCcm9uY2hvXG4gICMgQHJlZjogaHR0cDovL3d3dy5icm9uY2hvLmNuL1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihCcm9uY2hvKSAoW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSAkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJyQxJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDInXG5cbiAgIyMjIyMjIyMjXG4gICMgQ2FwdGl2YVxuICAjIEByZWY6IGh0dHA6Ly93d3cuY2FwdGl2YS1wb3dlci5kZVxuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKkNBUFRJVkEgKFteOy9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnQ2FwdGl2YSAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0NhcHRpdmEnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBDYXNpb1xuICAjIEByZWY6IGh0dHA6Ly93d3cuY2FzaW9nem9uZS5jb20vXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKEM3NzF8Q0FMMjF8SVMxMUNBKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0Nhc2lvJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgQ2F0XG4gICMgQHJlZjogaHR0cDovL3d3dy5jYXQtc291bmQuY29tXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKD86Q2F0fENBVCkgKFteOy9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnQ2F0ICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQ2F0J1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICc7ICooPzpDYXQpKE5vdmEuKikgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnQ2F0ICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQ2F0J1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICc7ICooSU5NODAwMktQfEFETTgwMDBLUF9bQUJdKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0NhdCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJ1RhYmxldCBQSE9FTklYIDguMUowJ1xuXG4gICMjIyMjIyMjI1xuICAjIENlbGtvblxuICAjIEByZWY6IGh0dHA6Ly93d3cuY2Vsa29ubW9iaWxlcy5jb20vP19hPXByb2R1Y3RzXG4gICMgQG1vZGVsczogQTEwLCBBMTlRLCBBMTAxLCBBMTA1LCBBMTA3LCBBMTA3XFwrLCBBMTEyLCBBMTE4LCBBMTE5LCBBMTE5USwgQTE1LCBBMTksIEEyMCwgQTIwMCwgQTIyMCwgQTIyNSwgQTIyIFJhY2UsIEEyNywgQTU4LCBBNTksIEE2MCwgQTYyLCBBNjMsIEE2NCwgQTY2LCBBNjcsIEE2OSwgQTc1LCBBNzcsIEE3OSwgQThcXCssIEE4MywgQTg1LCBBODYsIEE4NywgQTg5IFVsdGltYSwgQTlcXCssIEE5MCwgQTkwMCwgQTk1LCBBOTdpLCBBOTgsIEFSIDQwLCBBUiA0NSwgQVIgNTAsIE1MNVxuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKig/OltDY11lbGtvblsgX1xcKl18Q0VMS09OWyBfXFwqXSkoW147L1xcKV0rKSA/KD86QnVpbGR8O3xcXCkpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQ2Vsa29uJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICdCdWlsZC8oPzpbQ2NdZWxrb24pK18/KFteOy9fXFwpXSspJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQ2Vsa29uJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICc7ICooQ1QpLT8oXFxkKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0NlbGtvbidcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJDInXG4gICMgc21hcnRwaG9uZXNcbiAgLSByZWdleDogJzsgKihBMTl8QTE5UXxBMTA1fEExMDdbXjsvXFwpXSopID8oPzpCdWlsZHw7fFxcKSknXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdDZWxrb24nXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBDaGFuZ0ppYVxuICAjIEByZWY6IGh0dHA6Ly93d3cuY2pzaG93cm9vbS5jb20vZXByb2R1Y3RzLmFzcHg/Y2xhc3Njb2RlPTAwNDAwMTAwMVxuICAjIEBicmllZjogQ2hpbmEgbWFudWZhY3R1cmVyIG1ha2VzIHRhYmxldHMgZm9yIGRpZmZlcmVudCBzbWFsbCBicmFuZHNcbiAgIyAgICAgICAgIChlZy4gaHR0cDovL3d3dy56ZWVwYWQubmV0L2luZGV4Lmh0bWwpXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKFRQQ1swLTldezQsNX0pIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQ2hhbmdKaWEnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBDbG91ZGZvbmVcbiAgIyBAcmVmOiBodHRwOi8vd3d3LmNsb3VkZm9uZW1vYmlsZS5jb20vXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKENsb3VkZm9uZSlbIF9dKEV4Y2l0ZSkoW14gXVteOy9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEgJDIgJDMnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdDbG91ZGZvbmUnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSAkMiAkMydcbiAgLSByZWdleDogJzsgKihFeGNpdGV8SUNFKVsgX10oXFxkK1teOy9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnQ2xvdWRmb25lICQxICQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQ2xvdWRmb25lJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnQ2xvdWRmb25lICQxICQyJ1xuICAtIHJlZ2V4OiAnOyAqKENsb3VkZm9uZXxDbG91ZFBhZClbIF9dKFteOy9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEgJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdDbG91ZGZvbmUnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSAkMidcblxuICAjIyMjIyMjIyNcbiAgIyBDbXhcbiAgIyBAcmVmOiBodHRwOi8vY214LmF0L2RlL1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKigoPzpBcXVpbGF8Q2xhbmdhfFJhcGF4KVteOy9dKykgQnVpbGQnXG4gICAgcmVnZXhfZmxhZzogJ2knXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdDbXgnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBDb2J5S3lyb3NcbiAgIyBAcmVmOiBodHRwOi8vY29ieWt5cm9zLmNvbVxuICAjIEBub3RlOiBCZSBjYXJlZnVsIHdpdGggTUlEXFxkezN9IGZyb20gTXBNYW4gb3IgTWFudGFcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooPzpDRlctfEt5cm9zICk/KE1JRFswLTldezR9KD86W0FCQ118U1J8VFYpPykoXFwoM0dcXCktNEd8IEdCIDhLfCAzR3wgOEt8IEdCKT8gKig/OkJ1aWxkfFs7XFwpXSknXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnQ29ieUt5cm9zICQxJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdDb2J5S3lyb3MnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSQyJ1xuXG4gICMjIyMjIyMjI1xuICAjIENvb2xwYWRcbiAgIyBAcmVmOiA/P1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihbXjsvXSopQ29vbHBhZFsgX10oW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQ29vbHBhZCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJDInXG5cbiAgIyMjIyMjIyMjXG4gICMgQ3ViZVxuICAjIEByZWY6IGh0dHA6Ly93d3cuY3ViZS10YWJsZXQuY29tL2J1eS1wcm9kdWN0cy5odG1sXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKENVQkVbIF9dKT8oW0tVXVswLTldKyA/R1QuKnxBNTMwMCkgQnVpbGQnXG4gICAgcmVnZXhfZmxhZzogJ2knXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0N1YmUnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMidcblxuICAjIyMjIyMjIyNcbiAgIyBDdWJvdFxuICAjIEByZWY6IGh0dHA6Ly93d3cuY3Vib3RtYWxsLmNvbS9cbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICpDVUJPVCAoW147L10rKSBCdWlsZCdcbiAgICByZWdleF9mbGFnOiAnaSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0N1Ym90J1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICc7ICooQk9CQlkpIEJ1aWxkJ1xuICAgIHJlZ2V4X2ZsYWc6ICdpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQ3Vib3QnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBEYW5ld1xuICAjIEByZWY6IGh0dHA6Ly93d3cuZGFuZXcuY29tL3Byb2R1aXRzLXRhYmxldHRlLnBocFxuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihEc2xpZGUgW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0RhbmV3J1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgRGVsbFxuICAjIEByZWY6IGh0dHA6Ly93d3cuZGVsbC5jb21cbiAgIyBAcmVmOiBodHRwOi8vd3d3LnNvZnRiYW5rLmpwL21vYmlsZS9zdXBwb3J0L3Byb2R1Y3QvMTAxZGwvXG4gICMgQHJlZjogaHR0cDovL3d3dy5zb2Z0YmFuay5qcC9tb2JpbGUvc3VwcG9ydC9wcm9kdWN0LzAwMWRsL1xuICAjIEByZWY6IGh0dHA6Ly9kZXZlbG9wZXIuZW1uZXQubmUuanAvYW5kcm9pZC5odG1sXG4gICMgQHJlZjogaHR0cDovL3d3dy5kZWxsLmNvbS9pbi9wL21vYmlsZS14Y2QyOC9wZFxuICAjIEByZWY6IGh0dHA6Ly93d3cuZGVsbC5jb20vaW4vcC9tb2JpbGUteGNkMzUvcGRcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooWENEKVsgX10/KDI4fDM1KSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdEZWxsICQxJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdEZWxsJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEkMidcbiAgLSByZWdleDogJzsgKigwMDFETCkgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnRGVsbCAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0RlbGwnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdTdHJlYWsnXG4gIC0gcmVnZXg6ICc7ICooPzpEZWxsfERFTEwpIChTdHJlYWspIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0RlbGwgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdEZWxsJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnU3RyZWFrJ1xuICAtIHJlZ2V4OiAnOyAqKDEwMURMfEdTMDF8U3RyZWFrIFByb1teOy9dKikgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnRGVsbCAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0RlbGwnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdTdHJlYWsgUHJvJ1xuICAtIHJlZ2V4OiAnOyAqKFtTc110cmVhayA/NykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnRGVsbCAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0RlbGwnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdTdHJlYWsgNydcbiAgLSByZWdleDogJzsgKihNaW5pLTNpWCkgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnRGVsbCAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0RlbGwnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKig/OkRlbGx8REVMTClbIF9dKEFlcm98VmVudWV8VGh1bmRlcnxNaW5pLip8U3RyZWFrWyBfXVBybykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnRGVsbCAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0RlbGwnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKkRlbGxbIF9dKFteOy9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnRGVsbCAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0RlbGwnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKkRlbGwgKFteOy9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnRGVsbCAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0RlbGwnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBEZW52ZXJcbiAgIyBAcmVmOiBodHRwOi8vd3d3LmRlbnZlci1lbGVjdHJvbmljcy5jb20vdGFibGV0czEvXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKFRBW0NEXS1cXGQrW147L10qKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0RlbnZlcidcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIERleFxuICAjIEByZWY6IGh0dHA6Ly9kZXgudWEvXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKGlQWzc4OV1cXGR7Mn0oPzotM0cpP3xJUDEwXFxkezJ9KD86LThHQik/KSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0RleCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIEROUyBBaXJUYWJcbiAgIyBAcmVmOiBodHRwOi8vd3d3LmRucy1zaG9wLnJ1L1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihBaXJUYWIpWyBfXFwtXShbXjsvXSspIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxICQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnRE5TJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEgJDInXG5cbiAgIyMjIyMjIyMjXG4gICMgRG9jb21vIChPcGVyYXRvciBCcmFuZGVkIERldmljZSlcbiAgIyBAcmVmOiBodHRwOi8vd3d3LmlwZW50ZWMuY29tL2RvY3VtZW50L2RvY3VtZW50LmFzcHg/cGFnZT1hbmRyb2lkLXVzZXJhZ2VudFxuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihGXFwtXFxkW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0Z1aml0c3UnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKihIVC0wM0EpIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnSFRDJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnTWFnaWMnXG4gIC0gcmVnZXg6ICc7ICooSFRcXC1cXGRbXjsvXSspIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnSFRDJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICc7ICooTFxcLVxcZFteOy9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdMRydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAqKE5cXC1cXGRbXjsvXSspIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnTmVjJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICc7ICooUFxcLVxcZFteOy9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdQYW5hc29uaWMnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKihTQ1xcLVxcZFteOy9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdTYW1zdW5nJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICc7ICooU0hcXC1cXGRbXjsvXSspIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnU2hhcnAnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKihTT1xcLVxcZFteOy9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdTb255RXJpY3Nzb24nXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKihUXFwtMFsxMl1bXjsvXSspIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnVG9zaGliYSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIERPT1ZcbiAgIyBAcmVmOiBodHRwOi8vd3d3LmRvb3YuY29tLmNuL1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihET09WKVsgX10oW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSAkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0RPT1YnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMidcblxuICAjIyMjIyMjIyNcbiAgIyBFbm90XG4gICMgQHJlZjogaHR0cDovL3d3dy5lbm90LnVhL1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihFbm90fEVOT1QpWyAtXT8oW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSAkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0Vub3QnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMidcblxuICAjIyMjIyMjIyNcbiAgIyBFdmVyY29zc1xuICAjIEByZWY6IGh0dHA6Ly9ldmVyY29zcy5jb20vYW5kcm9pZC9cbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICpbXjsvXSsgQnVpbGQvKD86Q1JPU1N8Q3Jvc3MpK1sgX1xcLV0oW15cXCldKyknXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnQ1JPU1MgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdFdmVyY29zcydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJ0Nyb3NzICQxJ1xuICAtIHJlZ2V4OiAnOyAqKENST1NTfENyb3NzKVsgX1xcLV0oW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSAkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0V2ZXJjb3NzJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnQ3Jvc3MgJDInXG5cbiAgIyMjIyMjIyMjXG4gICMgRXhwbGF5XG4gICMgQHJlZjogaHR0cDovL2V4cGxheS5ydS9cbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICpFeHBsYXlbXyBdKC4rPykoPzpbXFwpXXwgQnVpbGQpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnRXhwbGF5J1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgRmx5XG4gICMgQHJlZjogaHR0cDovL3d3dy5mbHktcGhvbmUuY29tL1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihJUS4qKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0ZseSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAqKEZseXxGTFkpWyBfXShJUVteO10rfEZbMzRdXFxkK1teO10qKTs/IEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxICQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnRmx5J1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDInXG5cbiAgIyMjIyMjIyMjXG4gICMgRnVqaXRzdVxuICAjIEByZWY6IGh0dHA6Ly93d3cuZnVqaXRzdS5jb20vZ2xvYmFsL1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihNNTMyfFE1NzJ8RkpMMjEpIEJ1aWxkLydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0Z1aml0c3UnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBHYWxhcGFkXG4gICMgQHJlZjogaHR0cDovL3d3dy5nYWxhcGFkLm5ldC9wcm9kdWN0Lmh0bWxcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooRzEpIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnR2FsYXBhZCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIEdlZWtzcGhvbmVcbiAgIyBAcmVmOiBodHRwOi8vd3d3LmdlZWtzcGhvbmUuY29tL1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihHZWVrc3Bob25lKSAoW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSAkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJyQxJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDInXG5cbiAgIyMjIyMjIyMjXG4gICMgR2ZpdmVcbiAgIyBAcmVmOiBodHRwOi8vd3d3LmdmaXZlbW9iaWxlLmNvbS9lblxuICAjIyMjIyMjIyNcbiAgIy0gcmVnZXg6ICc7ICooR1xcJz9GSVZFKSAoW147L10rKSBCdWlsZCcgIyB0aGVyZSBpcyBhIHByb2JsZW0gd2l0aCBweXRob24geWFtbCBwYXJzZXIgaGVyZVxuICAtIHJlZ2V4OiAnOyAqKEdbXkZdP0ZJVkUpIChbXjsvXSspIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxICQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnR2ZpdmUnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMidcblxuICAjIyMjIyMjIyNcbiAgIyBHaW9uZWVcbiAgIyBAcmVmOiBodHRwOi8vd3d3Lmdpb25lZS5jb20vXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKEdpb25lZSlbIF9cXC1dKFteOy9dKykoPzovW147L10rKT8gQnVpbGQnXG4gICAgcmVnZXhfZmxhZzogJ2knXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEgJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdHaW9uZWUnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMidcbiAgLSByZWdleDogJzsgKihHTlxcZCtbQS1aXT98SU5GSU5JVFlfUEFTU0lPTnxDdHJsX1YxKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdHaW9uZWUgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdHaW9uZWUnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKihFMykgQnVpbGQvSk9QNDBEJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0dpb25lZSAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0dpb25lZSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIEdvQ2xldmVyXG4gICMgQHJlZjogaHR0cDovL3d3dy5nb2NsZXZlci5jb21cbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooKD86Rk9ORXxRVUFOVFVNfElOU0lHTklBKSBcXGQrW147L10qfFBMQVlUQUIpIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0dvQ2xldmVyICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnR29DbGV2ZXInXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKkdPQ0xFVkVSIChbXjsvXSspIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0dvQ2xldmVyICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnR29DbGV2ZXInXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBHb29nbGVcbiAgIyBAcmVmOiBodHRwOi8vd3d3Lmdvb2dsZS5kZS9nbGFzcy9zdGFydC9cbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooR2xhc3MgXFxkKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdHb29nbGUnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKihQaXhlbCBcXHcrKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0dvb2dsZSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIEdpZ2FieXRlXG4gICMgQHJlZjogaHR0cDovL2dzbWFydC5naWdhYnl0ZWNtLmNvbS9lbi9cbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooR1NtYXJ0KVsgLV0oW14vXSspIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxICQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnR2lnYWJ5dGUnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSAkMidcblxuICAjIyMjIyMjIyNcbiAgIyBGcmVlc2NhbGUgZGV2ZWxvcG1lbnQgYm9hcmRzXG4gICMgQHJlZjogaHR0cDovL3d3dy5mcmVlc2NhbGUuY29tL3dlYmFwcC9zcHMvc2l0ZS9wcm9kX3N1bW1hcnkuanNwP2NvZGU9SU1YNTNRU0JcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooaW14NVsxM11fW14vXSspIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0ZyZWVzY2FsZSAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0ZyZWVzY2FsZSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIEhhaWVyXG4gICMgQHJlZjogaHR0cDovL3d3dy5oYWllci5jb20vXG4gICMgQHJlZjogaHR0cDovL3d3dy5oYWllci5jb20vZGUvcHJvZHVrdGUvdGFibGV0L1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKkhhaWVyWyBfXFwtXShbXi9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnSGFpZXIgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdIYWllcidcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAqKFBBRDEwMTYpIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0hhaXBhZCAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0hhaXBhZCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIEhhaXBhZFxuICAjIEByZWY6IGh0dHA6Ly93d3cuaGFpcGFkLm5ldC9cbiAgIyBAbW9kZWxzOiBWN1B8TTdTTTdTfE05WE05WHxNN1hNN1h8TTl8TTh8TTctTXxNMTAwMnxNN3xNNzAxXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKE03MDF8TTd8TTh8TTkpIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0hhaXBhZCAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0hhaXBhZCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIEhhbm5zcHJlZVxuICAjIEByZWY6IGh0dHA6Ly93d3cuaGFubnNwcmVlLmV1L1xuICAjIEBtb2RlbHM6IFNOMTBUMXxTTjEwVDJ8U043MFQzMUJ8U043MFQzMldcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooU05cXGQrVFteO1xcKS9dKikoPzogQnVpbGR8WztcXCldKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdIYW5uc3ByZWUgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdIYW5uc3ByZWUnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBIQ0xtZVxuICAjIEByZWY6IGh0dHA6Ly93d3cuaGNsbWV0YWJsZXQuY29tL2luZGlhL1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJ0J1aWxkL0hDTCBNRSBUYWJsZXQgKFteO1xcKV0rKVtcXCk7XSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdIQ0xtZSAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0hDTG1lJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICc7ICooW147XFwvXSspIEJ1aWxkL0hDTCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdIQ0xtZSAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0hDTG1lJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgSGVuYVxuICAjIEByZWY6IGh0dHA6Ly93d3cuaGVuYWRpZ2l0YWwuY29tL2VuL3Byb2R1Y3QvaW5kZXguYXNwP2lkPTZcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooTUlELT9cXGR7NH1DW0VNXSkgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnSGVuYSAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0hlbmEnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBIaXNlbnNlXG4gICMgQHJlZjogaHR0cDovL3d3dy5oaXNlbnNlLmNvbS9cbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooRUdcXGR7Mix9fEhTLVteOy9dK3xNSVJBW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdIaXNlbnNlICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnSGlzZW5zZSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAqKGFuZHJvbWF4W147L10rKSBCdWlsZCdcbiAgICByZWdleF9mbGFnOiAnaSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdIaXNlbnNlICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnSGlzZW5zZSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIGhpdGVjaFxuICAjIEByZWY6IGh0dHA6Ly93d3cuaGl0ZWNoLW1vYmlsZXMuY29tL1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKig/OkFNQVpFWyBfXShTXFxkKyl8KFNcXGQrKVsgX11BTUFaRSkgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnQU1BWkUgJDEkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ2hpdGVjaCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJ0FNQVpFICQxJDInXG5cbiAgIyMjIyMjIyMjXG4gICMgSFBcbiAgIyBAcmVmOiBodHRwOi8vd3d3LmhwLmNvbS9cbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooUGxheUJvb2spIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0hQICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnSFAnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKkhQIChbXi9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnSFAgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdIUCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAqKFteL10rX3RlbmRlcmxvaW4pIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0hQIFRvdWNoUGFkJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnSFAnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdUb3VjaFBhZCdcblxuICAjIyMjIyMjIyNcbiAgIyBIdWF3ZWlcbiAgIyBAcmVmOiBodHRwOi8vd3d3Lmh1YXdlaWRldmljZS5jb21cbiAgIyBAbm90ZTogTmVlZHMgdG8gYmUgYmVmb3JlIEhUQyBkdWUgdG8gRGVzaXJlIEhEIEJ1aWxkIG9uIFU4ODE1XG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKEhVQVdFSSB8SHVhd2VpLSk/KFtVWV1bXjsvXSspIEJ1aWxkLyg/Okh1YXdlaXxIVUFXRUkpKFtVWV1bXlxcKTtdKylcXCknXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0h1YXdlaSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyJ1xuICAtIHJlZ2V4OiAnOyAqKFteOy9dKykgQnVpbGRbLyBdSHVhd2VpKE1UMS1VMDZ8W0EtWl0rXFxkK1teXFwpO10rKVteXFwpO10qXFwpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnSHVhd2VpJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDInXG4gIC0gcmVnZXg6ICc7ICooUzd8TTg2MCkgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdIdWF3ZWknXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKigoPzpIVUFXRUl8SHVhd2VpKVsgXFwtXT8pKE1lZGlhUGFkKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnSHVhd2VpJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDInXG4gIC0gcmVnZXg6ICc7ICooKD86SFVBV0VJWyBfXT98SHVhd2VpWyBfXSk/QXNjZW5kWyBfXSkoW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnSHVhd2VpJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDInXG4gIC0gcmVnZXg6ICc7ICooKD86SFVBV0VJfEh1YXdlaSlbIF9cXC1dPykoKD86RzcwMC18TVQtKVteOy9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0h1YXdlaSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyJ1xuICAtIHJlZ2V4OiAnOyAqKCg/OkhVQVdFSXxIdWF3ZWkpWyBfXFwtXT8pKFteOy9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0h1YXdlaSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyJ1xuICAtIHJlZ2V4OiAnOyAqKE1lZGlhUGFkW147XSt8U3ByaW5nQm9hcmQpIEJ1aWxkL0h1YXdlaSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0h1YXdlaSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAqKFteO10rKSBCdWlsZC8oPzpIdWF3ZWl8SFVBV0VJKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0h1YXdlaSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAqKFtVdV0pKFs4OV1cXGR7M30pIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdIdWF3ZWknXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdVJDInXG4gIC0gcmVnZXg6ICc7ICooPzpJZGVvcyB8SURFT1MgKShTNykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnSHVhd2VpIElkZW9zJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdIdWF3ZWknXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdJZGVvcyQxJ1xuICAtIHJlZ2V4OiAnOyAqKD86SWRlb3MgfElERU9TICkoW147L10rXFxzKnxcXHMqKUJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0h1YXdlaSBJZGVvcyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnSHVhd2VpJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnSWRlb3MkMSdcbiAgLSByZWdleDogJzsgKihPcmFuZ2UgRGF5dG9uYXxQdWxzZXxQdWxzZSBNaW5pfFZvZGFmb25lIDg1OHxDODUwMHxDODYwMHxDODY1MHxDODY2MHxOZXh1cyA2UHxBVEgtLis/KSBCdWlsZFsvIF0nXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnSHVhd2VpICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnSHVhd2VpJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgSFRDXG4gICMgQHJlZjogaHR0cDovL3d3dy5odGMuY29tL3d3dy9wcm9kdWN0cy9cbiAgIyBAcmVmOiBodHRwOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0xpc3Rfb2ZfSFRDX3Bob25lc1xuICAjIyMjIyMjIyNcblxuICAtIHJlZ2V4OiAnOyAqSFRDWyBfXShbXjtdKyk7IFdpbmRvd3MgUGhvbmUnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnSFRDICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnSFRDJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyBBbmRyb2lkIEhUQyB3aXRoIFZlcnNpb24gTnVtYmVyIG1hdGNoZXJcbiAgIyA7IEhUQ18wUDNaMTEvMS4xMi4xNjEuMyBCdWlsZFxuICAjIDtIVENfQTMzMzUgVjIuMzguODQxLjEgQnVpbGRcbiAgLSByZWdleDogJzsgKig/OkhUQ1sgXy9dKSsoW14gXy9dKykoPzpbL1xcXFxdMVxcLjAgfCBWfC98ICspXFxkK1xcLlxcZFtcXGRcXC5dKig/OiAqQnVpbGR8XFwpKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdIVEMgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdIVEMnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKig/OkhUQ1sgXy9dKSsoW14gXy9dKykoPzpbIF8vXShbXiBfL10rKSk/KD86Wy9cXFxcXTFcXC4wIHwgVnwvfCArKVxcZCtcXC5cXGRbXFxkXFwuXSooPzogKkJ1aWxkfFxcKSknXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnSFRDICQxICQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnSFRDJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEgJDInXG4gIC0gcmVnZXg6ICc7ICooPzpIVENbIF8vXSkrKFteIF8vXSspKD86WyBfL10oW14gXy9dKykoPzpbIF8vXShbXiBfL10rKSk/KT8oPzpbL1xcXFxdMVxcLjAgfCBWfC98ICspXFxkK1xcLlxcZFtcXGRcXC5dKig/OiAqQnVpbGR8XFwpKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdIVEMgJDEgJDIgJDMnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdIVEMnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSAkMiAkMydcbiAgLSByZWdleDogJzsgKig/OkhUQ1sgXy9dKSsoW14gXy9dKykoPzpbIF8vXShbXiBfL10rKSg/OlsgXy9dKFteIF8vXSspKD86WyBfL10oW14gXy9dKykpPyk/KT8oPzpbL1xcXFxdMVxcLjAgfCBWfC98ICspXFxkK1xcLlxcZFtcXGRcXC5dKig/OiAqQnVpbGR8XFwpKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdIVEMgJDEgJDIgJDMgJDQnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdIVEMnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSAkMiAkMyAkNCdcblxuICAjIEFuZHJvaWQgSFRDIHdpdGhvdXQgVmVyc2lvbiBOdW1iZXIgbWF0Y2hlclxuICAtIHJlZ2V4OiAnOyAqKD86KD86SFRDfGh0YykoPzpfYmxvY2tlZCkqWyBfL10pKyhbXiBfLztdKykoPzogKkJ1aWxkfFs7XFwpXXwgLSApJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0hUQyAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0hUQydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAqKD86KD86SFRDfGh0YykoPzpfYmxvY2tlZCkqWyBfL10pKyhbXiBfL10rKSg/OlsgXy9dKFteIF8vO1xcKV0rKSk/KD86ICpCdWlsZHxbO1xcKV18IC0gKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdIVEMgJDEgJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdIVEMnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSAkMidcbiAgLSByZWdleDogJzsgKig/Oig/OkhUQ3xodGMpKD86X2Jsb2NrZWQpKlsgXy9dKSsoW14gXy9dKykoPzpbIF8vXShbXiBfL10rKSg/OlsgXy9dKFteIF8vO1xcKV0rKSk/KT8oPzogKkJ1aWxkfFs7XFwpXXwgLSApJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0hUQyAkMSAkMiAkMydcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0hUQydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxICQyICQzJ1xuICAtIHJlZ2V4OiAnOyAqKD86KD86SFRDfGh0YykoPzpfYmxvY2tlZCkqWyBfL10pKyhbXiBfL10rKSg/OlsgXy9dKFteIF8vXSspKD86WyBfL10oW14gXy9dKykoPzpbIF8vXShbXiAvO10rKSk/KT8pPyg/OiAqQnVpbGR8WztcXCldfCAtICknXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnSFRDICQxICQyICQzICQ0J1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnSFRDJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEgJDIgJDMgJDQnXG5cbiAgIyBIVEMgU3RyZWFtaW5nIFBsYXllclxuICAtIHJlZ2V4OiAnSFRDIFN0cmVhbWluZyBQbGF5ZXIgW15cXC9dKi9bXlxcL10qLyBodGNfKFteL10rKSAvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0hUQyAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0hUQydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAjIGdlbmVyYWwgbWF0Y2hlciBmb3IgYW55dGhpbmcgZWxzZVxuICAtIHJlZ2V4OiAnKD86WzssXSAqfF4pKD86aHRjY25fY2hzLSk/SFRDWyBfLV0/KFteO10rPykoPzogKkJ1aWxkfGNsYXl8QW5kcm9pZHwtP01vemlsbGF8IE9wZXJhfCBQcm9maWxlfCBVTlRSVVNURUR8WzsvXFwoXFwpXXwkKSdcbiAgICByZWdleF9mbGFnOiAnaSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdIVEMgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdIVEMnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgIyBBbmRyb2lkIG1hdGNoZXJzIHdpdGhvdXQgSFRDXG4gIC0gcmVnZXg6ICc7ICooQTYyNzd8QURSNjIwMHxBRFI2MzAwfEFEUjYzNTB8QURSNjQwMFtBLVpdKnxBRFI2NDI1W0EtWl0qfEFQWDUxNUNLVHxBUklBfERlc2lyZVteXyBdKnxEcmVhbXxFbmRlYXZvclV8RXJpc3xFdm98Rmx5ZXJ8SEQyfEhlcm98SEVSTzIwMHxIZXJvIENETUF8SFRMMjF8SW5jcmVkaWJsZXxJbnNwaXJlW0EtWjAtOV0qfExlZ2VuZHxMaWJlcnR5fE5leHVzID8oPzpPbmV8SEQyKXxPbmV8T25lIFMgQzJ8T25lWyBfXT8oPzpTfFZ8WFxcKz8pXFx3KnxQQzM2MTAwfFBHMDYxMDB8UEc4NjEwMHxTMzFIVHxTZW5zYXRpb258V2lsZGZpcmUpKD86IEJ1aWxkfFsvO1xcKFxcKV0pJ1xuICAgIHJlZ2V4X2ZsYWc6ICdpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0hUQyAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0hUQydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAqKEFEUjYyMDB8QURSNjQwMEx8QURSNjQyNUxWV3xBbWF6ZXxEZXNpcmVTP3xFbmRlYXZvclV8RXJpc3xFVk98RXZvXFxkW0EtWl0rfEhEMnxJbmNyZWRpYmxlUz98SW5zcGlyZVtBLVowLTldKnxJbnNwaXJlW0EtWjAtOV0qfFNlbnNhdGlvbltBLVowLTldKnxXaWxkZmlyZSlbIF8tXSguKz8pKD86Wy87XFwpXXxCdWlsZHxNSVVJfDFcXC4wKSdcbiAgICByZWdleF9mbGFnOiAnaSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdIVEMgJDEgJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdIVEMnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSAkMidcblxuICAjIyMjIyMjIyNcbiAgIyBIeXVuZGFpXG4gICMgQHJlZjogaHR0cDovL3d3dy5oeXVuZGFpdGVjaG5vbG9naWVzLmNvbVxuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKkhZVU5EQUkgKFRcXGRbXi9dKikgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnSHl1bmRhaSAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0h5dW5kYWknXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKkhZVU5EQUkgKFteOy9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnSHl1bmRhaSAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0h5dW5kYWknXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgIyBYOTAwPyBodHRwOi8vd3d3LmFtYXpvbi5jb20vSHl1bmRhaS1YOTAwLVJldGluYS1BbmRyb2lkLUJsdWV0b290aC9kcC9CMDBBTzA3SDNPXG4gIC0gcmVnZXg6ICc7ICooWDcwMHxIb2xkIFh8TUItNjkwMCkgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnSHl1bmRhaSAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0h5dW5kYWknXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBpQmFsbFxuICAjIEByZWY6IGh0dHA6Ly93d3cuaWJhbGwuY28uaW4vQ2F0ZWdvcnkvTW9iaWxlcy8yMlxuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKig/OmlCYWxsWyBfXFwtXSk/KEFuZGkpWyBfXT8oXFxkW147L10qKSBCdWlsZCdcbiAgICByZWdleF9mbGFnOiAnaSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSAkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ2lCYWxsJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEgJDInXG4gIC0gcmVnZXg6ICc7ICooSUJhbGwpKD86WyBfXShbXjsvXSspfCkgQnVpbGQnXG4gICAgcmVnZXhfZmxhZzogJ2knXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEgJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdpQmFsbCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyJ1xuXG4gICMjIyMjIyMjI1xuICAjIEljb25CSVRcbiAgIyBAcmVmOiBodHRwOi8vd3d3Lmljb25iaXQuY29tL2NhdGFsb2cvdGFibGV0cy9cbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooTlQtXFxkK1teIDsvXSp8TmV0W1R0XUFCIFteOy9dK3xNZXJjdXJ5IFtBLVpdK3xpY29uQklUKSg/OiBTL046W147L10rKT8gQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdJY29uQklUJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgSU1PXG4gICMgQHJlZjogaHR0cDovL3d3dy5wb25zZWxpbW8uY29tL1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihJTU8pWyBfXShbXjsvXSspIEJ1aWxkJ1xuICAgIHJlZ2V4X2ZsYWc6ICdpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxICQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnSU1PJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDInXG5cbiAgIyMjIyMjIyMjXG4gICMgaS1tb2JpbGVcbiAgIyBAcmVmOiBodHRwOi8vd3d3LmktbW9iaWxlcGhvbmUuY29tL1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKmktP21vYmlsZVsgX10oW14vXSspIEJ1aWxkLydcbiAgICByZWdleF9mbGFnOiAnaSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdpLW1vYmlsZSAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ2ltb2JpbGUnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKihpLSg/OnN0eWxlfG5vdGUpW14vXSopIEJ1aWxkLydcbiAgICByZWdleF9mbGFnOiAnaSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdpLW1vYmlsZSAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ2ltb2JpbGUnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBJbXByZXNzaW9uXG4gICMgQHJlZjogaHR0cDovL2ltcHJlc3Npb24udWEvcGxhbnNoZXRueWUta29tcHl1dGVyeVxuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihJbVBBRCkgPyhcXGQrKD86LikqKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSAkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0ltcHJlc3Npb24nXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSAkMidcblxuICAjIyMjIyMjIyNcbiAgIyBJbmZpbml4XG4gICMgQHJlZjogaHR0cDovL3d3dy5pbmZpbml4bW9iaWxpdHkuY29tL2luZGV4Lmh0bWxcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooSW5maW5peClbIF9dKFteOy9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEgJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdJbmZpbml4J1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDInXG5cbiAgIyMjIyMjIyMjXG4gICMgSW5mb3JtZXJcbiAgIyBAcmVmOiA/P1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihJbmZvcm1lcilbIFxcLV0oW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSAkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0luZm9ybWVyJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDInXG5cbiAgIyMjIyMjIyMjXG4gICMgSW50ZW5zb1xuICAjIEByZWY6IGh0dHA6Ly93d3cuaW50ZW5zby5kZVxuICAjIEBtb2RlbHM6IDdcIjpUQUIgNzE0LFRBQiA3MjQ7OFwiOlRBQiA4MTQsVEFCIDgyNDsxMFwiOlRBQiAxMDA0XG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKFRBQikgPyhbNzhdWzEyXTQpIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0ludGVuc28gJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdJbnRlbnNvJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEgJDInXG5cbiAgIyMjIyMjIyMjXG4gICMgSW50ZXhcbiAgIyBAcmVmOiBodHRwOi8vaW50ZXhtb2JpbGUuaW4vaW5kZXguYXNweFxuICAjIEBub3RlOiBaeW5jIGFsc28gb2ZmZXJzIGEgXCJDbG91ZCBaNVwiIGRldmljZVxuICAjIyMjIyMjIyNcbiAgIyBzbWFydHBob25lc1xuICAtIHJlZ2V4OiAnOyAqKD86SW50ZXhbIF9dKT8oQVFVQXxBcXVhKShbIF9cXC5cXC1dKShbXjsvXSspICooPzpCdWlsZHw7KSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSQyJDMnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdJbnRleCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxICQzJ1xuICAjIG1hdGNoZXMgXCJJTlRFWCBDTE9VRCBYMVwiXG4gIC0gcmVnZXg6ICc7ICooPzpJTlRFWHxJbnRleCkoPzpbXyBdKFteXFwgXzsvXSspKSg/OltfIF0oW15cXCBfOy9dKykpPyAqKD86QnVpbGR8OyknXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEgJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdJbnRleCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxICQyJ1xuICAjIHRhYmxldHNcbiAgLSByZWdleDogJzsgKihbaUldQnVkZHkpWyBfXT8oQ29ubmVjdCkoPzpffFxcP198ICk/KFteOy9dKikgKig/OkJ1aWxkfDspJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxICQyICQzJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnSW50ZXgnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdpQnVkZHkgJDIgJDMnXG4gIC0gcmVnZXg6ICc7ICooSS1CdWRkeSlbIF9dKFteOy9dKykgKig/OkJ1aWxkfDspJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxICQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnSW50ZXgnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdpQnVkZHkgJDInXG5cbiAgIyMjIyMjIyMjXG4gICMgaU9DRUFOXG4gICMgQHJlZjogaHR0cDovL3d3dy5pb2NlYW4uY2MvXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKGlPQ0VBTikgKFteL10rKSBCdWlsZCdcbiAgICByZWdleF9mbGFnOiAnaSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSAkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ2lPQ0VBTidcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyJ1xuXG4gICMjIyMjIyMjI1xuICAjIGkub25pa1xuICAjIEByZWY6IGh0dHA6Ly93d3cuaS1vbmlrLmRlL1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihUUFxcZCsoPzpcXC5cXGQrKT9cXC1cXGRbXjsvXSspIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ2lvbmlrICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnaW9uaWsnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBJUlUucnVcbiAgIyBAcmVmOiBodHRwOi8vd3d3LmlydS5ydS9jYXRhbG9nL3NvaG8vcGxhbmV0YWJsZS9cbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooTTcwMnBybykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdJcnUnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBJdmlvXG4gICMgQHJlZjogaHR0cDovL3d3dy5pdmlvLmNvbS9tb2JpbGUucGhwXG4gICMgQG1vZGVsczogREc4MCxERzIwLERFMzgsREU4OCxNRDcwXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKERFODhQbHVzfE1ENzApIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnSXZpbydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAqSVZJT1tfXFwtXShbXjsvXSspIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnSXZpbydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIEpheXRlY2hcbiAgIyBAcmVmOiBodHRwOi8vd3d3LmpheS10ZWNoLmRlL2pheXRlY2gvc2VydmxldC9mcm9udGVuZC9cbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooVFBDLVxcZCt8SkFZLVRFQ0gpIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnSmF5dGVjaCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIEppYXl1XG4gICMgQHJlZjogaHR0cDovL3d3dy5lamlheXUuY29tL2VuL1Byb2R1Y3QuaHRtbFxuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihKWS1bXjsvXSt8R1syMzRdUz8pIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnSmlheXUnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBKWERcbiAgIyBAcmVmOiBodHRwOi8vd3d3Lmp4ZC5oay9cbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooSlhEKVsgX1xcLV0oW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSAkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0pYRCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyJ1xuXG4gICMjIyMjIyMjI1xuICAjIEthcmJvbm5cbiAgIyBAcmVmOiBodHRwOi8vd3d3LmthcmJvbm5tb2JpbGVzLmNvbS9wcm9kdWN0c190YWJsZXQucGhwXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqS2FyYm9ublsgX10/KFteOy9dKykgKig/OkJ1aWxkfDspJ1xuICAgIHJlZ2V4X2ZsYWc6ICdpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnS2FyYm9ubidcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAqKFteO10rKSBCdWlsZC9LYXJib25uJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnS2FyYm9ubidcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAqKEExMXxBMzl8QTM3fEEzNHxTVDh8U1QxMHxTVDd8U21hcnQgVGFiM3xTbWFydCBUYWIyfFRpdGFuaXVtIFNcXGQpICtCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0thcmJvbm4nXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBLRERJIChPcGVyYXRvciBCcmFuZGVkIERldmljZSlcbiAgIyBAcmVmOiBodHRwOi8vd3d3LmlwZW50ZWMuY29tL2RvY3VtZW50L2RvY3VtZW50LmFzcHg/cGFnZT1hbmRyb2lkLXVzZXJhZ2VudFxuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihJUzAxfElTMDN8SVMwNXxJU1xcZHsyfVNIKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1NoYXJwJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICc7ICooSVMwNCkgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdSZWd6YSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAqKElTMDZ8SVNcXGR7Mn1QVCkgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdQYW50ZWNoJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICc7ICooSVMxMVMpIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnU29ueUVyaWNzc29uJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnWHBlcmlhIEFjcm8nXG4gIC0gcmVnZXg6ICc7ICooSVMxMUNBKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0Nhc2lvJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnR3pPbmUgJDEnXG4gIC0gcmVnZXg6ICc7ICooSVMxMUxHKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0xHJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnT3B0aW11cyBYJ1xuICAtIHJlZ2V4OiAnOyAqKElTMTFOKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ01lZGlhcydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAqKElTMTFQVCkgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdQYW50ZWNoJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnTUlSQUNIJ1xuICAtIHJlZ2V4OiAnOyAqKElTMTJGKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0Z1aml0c3UnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdBcnJvd3MgRVMnXG4gICMgQHJlZjogaHR0cHM6Ly9qYS53aWtpcGVkaWEub3JnL3dpa2kvSVMxMk1cbiAgLSByZWdleDogJzsgKihJUzEyTSkgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdNb3Rvcm9sYSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJ1hUOTA5J1xuICAtIHJlZ2V4OiAnOyAqKElTMTJTKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1NvbnlFcmljc3NvbidcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJ1hwZXJpYSBBY3JvIEhEJ1xuICAtIHJlZ2V4OiAnOyAqKElTVzExRikgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdGdWppdHN1J1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnQXJyb3d6IFonXG4gIC0gcmVnZXg6ICc7ICooSVNXMTFIVCkgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdIVEMnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdFVk8nXG4gIC0gcmVnZXg6ICc7ICooSVNXMTFLKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0t5b2NlcmEnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdESUdOTydcbiAgLSByZWdleDogJzsgKihJU1cxMU0pIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnTW90b3JvbGEnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdQaG90b24nXG4gIC0gcmVnZXg6ICc7ICooSVNXMTFTQykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdTYW1zdW5nJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnR0FMQVhZIFMgSUkgV2lNQVgnXG4gIC0gcmVnZXg6ICc7ICooSVNXMTJIVCkgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdIVEMnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdFVk8gM0QnXG4gIC0gcmVnZXg6ICc7ICooSVNXMTNIVCkgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdIVEMnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdKJ1xuICAtIHJlZ2V4OiAnOyAqKElTVz9bMC05XXsyfVtBLVpdezAsMn0pIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnS0RESSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAqKElORk9CQVIgW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0tEREknXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBLaW5nY29tXG4gICMgQHJlZjogaHR0cDovL3d3dy5lLWtpbmdjb20uY29tXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKEpPWVBBRHxKb3lwYWQpWyBfXShbXjsvXSspIEJ1aWxkLydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSAkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0tpbmdjb20nXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSAkMidcblxuICAjIyMjIyMjIyNcbiAgIyBLb2JvXG4gICMgQHJlZjogaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvS29ib19JbmMuXG4gICMgQHJlZjogaHR0cDovL3d3dy5rb2JvLmNvbS9kZXZpY2VzI3RhYmxldHNcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooVm94fFZPWHxBcmN8SzA4MCkgQnVpbGQvJ1xuICAgIHJlZ2V4X2ZsYWc6ICdpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnS29ibydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnXFxiKEtvYm8gVG91Y2gpXFxiJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnS29ibydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIEstVG91Y2hcbiAgIyBAcmVmOiA/P1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihLLVRvdWNoKVsgX10oW147L10rKSBCdWlsZCdcbiAgICByZWdleF9mbGFnOiAnaSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSAkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0t0b3VjaCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyJ1xuXG4gICMjIyMjIyMjI1xuICAjIEtUIFRlY2hcbiAgIyBAcmVmOiBodHRwOi8vd3d3Lmt0dGVjaC5jby5rclxuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKigoPzpFVnxLTSktU1xcZCtbQS1aXT8pIEJ1aWxkJ1xuICAgIHJlZ2V4X2ZsYWc6ICdpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnS1R0ZWNoJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgS3lvY2VyYVxuICAjIEByZWY6IGh0dHA6Ly93d3cuYW5kcm9pZC5jb20vZGV2aWNlcy8/Y291bnRyeT1hbGwmbT1reW9jZXJhXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKFppb3xIeWRyb3xUb3JxdWV8RXZlbnR8RVZFTlR8RWNob3xNaWxhbm98UmlzZXxVUkJBTk8gUFJPR1JFU1NPfFdYMDRLfFdYMDZLfFdYMTBLfEtZTDIxfDEwMUt8QzVbMTJdXFxkezJ9KSBCdWlsZC8nXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdLeW9jZXJhJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgTGF2YVxuICAjIEByZWY6IGh0dHA6Ly93d3cubGF2YW1vYmlsZXMuY29tL1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKig/OkxBVkFbIF9dKT9JUklTWyBfXFwtXT8oW14vO1xcKV0rKSAqKD86O3xcXCl8QnVpbGQpJ1xuICAgIHJlZ2V4X2ZsYWc6ICdpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0lyaXMgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdMYXZhJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnSXJpcyAkMSdcbiAgLSByZWdleDogJzsgKkxBVkFbIF9dKFteOy9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdMYXZhJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgTGVtb25cbiAgIyBAcmVmOiBodHRwOi8vd3d3LmxlbW9ubW9iaWxlcy5jb20vcHJvZHVjdHMucGhwP3R5cGU9MVxuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKig/OihBc3BpcmUgQTEpfCg/OkxFTU9OfExlbW9uKVsgX10oW147L10rKSlfPyBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdMZW1vbiAkMSQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnTGVtb24nXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSQyJ1xuXG4gICMjIyMjIyMjI1xuICAjIExlbmNvXG4gICMgQHJlZjogaHR0cDovL3d3dy5sZW5jby5jb20vYy90YWJsZXRzL1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihUQUItMTAxMikgQnVpbGQvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0xlbmNvICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnTGVuY28nXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgTGVuY28gKFteOy9dKykgQnVpbGQvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0xlbmNvICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnTGVuY28nXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBMZW5vdm9cbiAgIyBAcmVmOiBodHRwOi8vc3VwcG9ydC5sZW5vdm8uY29tL2VuX0dCL2Rvd25sb2Fkcy9kZWZhdWx0LnBhZ2U/I1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihBMV8wN3xBMjEwN0EtSHxTMjAwNUEtSHxTMS0zN0FIMCkgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdMZW5vdm8nXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKihJZGVhW1RwXWFiKVsgX10oW147L10rKTs/IEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0xlbm92byAkMSAkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0xlbm92bydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxICQyJ1xuICAtIHJlZ2V4OiAnOyAqKElkZWEoPzpUYWJ8cGFkKSkgPyhbXjsvXSspIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0xlbm92byAkMSAkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0xlbm92bydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxICQyJ1xuICAtIHJlZ2V4OiAnOyAqKFRoaW5rUGFkKSA/KFRhYmxldCkgQnVpbGQvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0xlbm92byAkMSAkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0xlbm92bydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxICQyJ1xuICAtIHJlZ2V4OiAnOyAqKD86TE5WLSk/KD86PT9bTGxdZW5vdm9bIF9cXC1dP3xMRU5PVk9bIF9dKSsoLis/KSg/OkJ1aWxkfFs7L1xcKV0pJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0xlbm92byAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0xlbm92bydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnWzssXSAoPzpWb2RhZm9uZSApPyhTbWFydFRhYikgPyhJSSkgPyhcXGQrKSBCdWlsZC8nXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnTGVub3ZvICQxICQyICQzJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnTGVub3ZvJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEgJDIgJDMnXG4gIC0gcmVnZXg6ICc7ICooPzpJZGVhcGFkICk/SzEgQnVpbGQvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0xlbm92byBJZGVhcGFkIEsxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnTGVub3ZvJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnSWRlYXBhZCBLMSdcbiAgLSByZWdleDogJzsgKigzR0MxMDF8M0dXMTBbMDFdfEEzOTApIEJ1aWxkLydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0xlbm92bydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnXFxiKD86TGVub3ZvfExFTk9WTykrWyBfXFwtXT8oW14sOzovIF0rKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdMZW5vdm8gJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdMZW5vdm8nXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBMZXhpYm9va1xuICAjIEByZWY6IGh0dHA6Ly93d3cubGV4aWJvb2suY29tL2ZyXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKE1GQ1xcZCspW0EtWl17Mn0oW147LC9dKiksPyBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnTGV4aWJvb2snXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSQyJ1xuXG4gICMjIyMjIyMjI1xuICAjIExHXG4gICMgQHJlZjogaHR0cDovL3d3dy5sZy5jb20vdWsvbW9iaWxlXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKEVbMzRdWzAtOV17Mn18TFNbNi04XVswLTldezJ9fFZTWzYtOV1bMC05XStbXjsvXSt8TmV4dXMgNHxOZXh1cyA1WD98R1Q1NDBmP3xPcHRpbXVzICg/OjJYfEd8NFggSEQpfE9wdGltdXNYNEhEKSAqKD86QnVpbGR8OyknXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdMRydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnWzs6XSAqKEwtXFxkK1tBLVpdfExHTFxcZCtbQS1aXT8pKD86L1ZcXGQrKT8gKig/OkJ1aWxkfFs7XFwpXSknXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdMRydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAqKExHLSkoW0EtWl17MSwyfVxcZHsyLH1bXiw7L1xcKVxcKF0qPykoPzpCdWlsZHwgVlxcZCt8Wyw7L1xcKVxcKF18JCknXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0xHJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDInXG4gIC0gcmVnZXg6ICc7ICooTEdbIFxcLV18TEcpKFteOy9dKylbOy9dPyBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnTEcnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMidcbiAgLSByZWdleDogJ14oTEcpLShbXjsvXSspLyBNb3ppbGxhLy4qOyBBbmRyb2lkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxICQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnTEcnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMidcbiAgLSByZWdleDogJyhXZWIwUyk7IExpbnV4LyhTbWFydFRWKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdMRyAkMSAkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0xHJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEgJDInXG5cbiAgIyMjIyMjIyMjXG4gICMgTWFsYXRhXG4gICMgQHJlZjogaHR0cDovL3d3dy5tYWxhdGEuY29tL2VuL3Byb2R1Y3RzLmFzcHg/Y2xhc3NpZD02ODBcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooKD86U01CfHNtYilbXjsvXSspIEJ1aWxkLydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ01hbGF0YSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAqKD86TWFsYXRhfE1BTEFUQSkgKFteOy9dKykgQnVpbGQvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnTWFsYXRhJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgTWFudGFcbiAgIyBAcmVmOiBodHRwOi8vd3d3Lm1hbnRhLmNvbS5wbC9lblxuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihNU1s0NV1bMC05XXszfXxNSUQwWzU2OF1bTlNdP3xNSURbMS05XXxNSURbNzhdMFsxLTldfE1JRDk3MFsxLTldfE1JRDEwMFsxLTldKSBCdWlsZC8nXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdNYW50YSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIE1hdGNoXG4gICMgQHJlZjogaHR0cDovL3d3dy5tYXRjaC5uZXQuY24vcHJvZHVjdHMuYXNwXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKE0xMDUyfE04MDZ8TTkwMDB8TTkxMDB8TTk3MDF8TUlEMTAwfE1JRDEyMHxNSUQxMjV8TUlEMTMwfE1JRDEzNXxNSUQxNDB8TUlENzAxfE1JRDcxMHxNSUQ3MTN8TUlENzI3fE1JRDcyOHxNSUQ3MzF8TUlENzMyfE1JRDczM3xNSUQ3MzV8TUlENzM2fE1JRDczN3xNSUQ3NjB8TUlEODAwfE1JRDgxMHxNSUQ4MjB8TUlEODMwfE1JRDgzM3xNSUQ4MzV8TUlEODYwfE1JRDkwMHxNSUQ5MzB8TUlEOTMzfE1JRDk2MHxNSUQ5ODApIEJ1aWxkLydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ01hdGNoJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgTWF4eFxuICAjIEByZWY6IGh0dHA6Ly93d3cubWF4eG1vYmlsZS5pbi9cbiAgIyBAbW9kZWxzOiBNYXh4IE1TRDctUGxheSwgTWF4eCBNWDI0NSsgVHJhbmNlLCBNYXh4IEFYOCBSYWNlLCBNYXh4IE1TRDcgM0ctIEFYNTAsIE1heHggR2VueCBEcm9pZCA3IC0gQVg0MCwgTWF4eCBBWDUgRHVvLFxuICAjICAgTWF4eCBBWDMgRHVvLCBNYXh4IEFYMywgTWF4eCBBWDggTm90ZSBJSSAoTm90ZSAyKSwgTWF4eCBBWDggTm90ZSBJLCBNYXh4IEFYOCwgTWF4eCBBWDUgUGx1cywgTWF4eCBNU0Q3IFNtYXJ0eSxcbiAgIyAgIE1heHggQVg5WiBSYWNlLFxuICAjICAgTWF4eCBNVDE1MCwgTWF4eCBNUTYwMSwgTWF4eCBNMjAyMCwgTWF4eCBTbGVlayBNWDQ2M25lbywgTWF4eCBNWDUyNSwgTWF4eCBNWDE5Mi1UdW5lLCBNYXh4IEdlbnggRHJvaWQgNyBBWDM1MyxcbiAgIyBAbm90ZTogTmVlZCBtb3JlIFVzZXItQWdlbnRzISEhXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKEdlbnhEcm9pZDd8TVNENy4qfEFYXFxkLip8VGFiIDcwMXxUYWIgNzIyKSBCdWlsZC8nXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnTWF4eCAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ01heHgnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBNZWRpYWNvbVxuICAjIEByZWY6IGh0dHA6Ly93d3cubWVkaWFjb21ldXJvcGUuaXQvXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKE0tUFBbXjsvXSt8UGhvbmVQYWQgP1xcZHsyLH1bXjsvXSspIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ01lZGlhY29tICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnTWVkaWFjb20nXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKihNLU1QW147L10rfFNtYXJ0UGFkID9cXGR7Mix9W147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdNZWRpYWNvbSAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ01lZGlhY29tJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgTWVkaW9uXG4gICMgQHJlZjogaHR0cDovL3d3dy5tZWRpb24uY29tL2VuL1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKig/Ok1EXyk/TElGRVRBQlsgX10oW147L10rKSBCdWlsZCdcbiAgICByZWdleF9mbGFnOiAnaSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdNZWRpb24gTGlmZXRhYiAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ01lZGlvbidcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJ0xpZmV0YWIgJDEnXG4gIC0gcmVnZXg6ICc7ICpNRURJT04gKFteOy9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnTWVkaW9uICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnTWVkaW9uJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgTWVpenVcbiAgIyBAcmVmOiBodHRwOi8vd3d3Lm1laXp1LmNvbVxuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihNMDMwfE0wMzF8TTAzNXxNMDQwfE0wNjV8bTkpIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ01laXp1ICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnTWVpenUnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKig/Om1laXp1X3xNRUlaVSApKC4rPykgKig/OkJ1aWxkfFs7XFwpXSknXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnTWVpenUgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdNZWl6dSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIE1pY3JvbWF4XG4gICMgQHJlZjogaHR0cDovL3d3dy5taWNyb21heGluZm8uY29tXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKD86TWljcm9tYXhbIF9dKEExMTF8QTI0MCl8KEExMTF8QTI0MCkpIEJ1aWxkJ1xuICAgIHJlZ2V4X2ZsYWc6ICdpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ01pY3JvbWF4ICQxJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdNaWNyb21heCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJDInXG4gIC0gcmVnZXg6ICc7ICpNaWNyb21heFsgX10oQVxcZHsyLDN9W147L10qKSBCdWlsZCdcbiAgICByZWdleF9mbGFnOiAnaSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdNaWNyb21heCAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ01pY3JvbWF4J1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gICMgYmUgY2FyZWZ1bGwgaGVyZSB3aXRoIEFjZXIgZS5nLiBBNTAwXG4gIC0gcmVnZXg6ICc7ICooQVxcZHsyfXxBWzEyXVxcZHsyfXxBOTBTfEExMTBRKSBCdWlsZCdcbiAgICByZWdleF9mbGFnOiAnaSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdNaWNyb21heCAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ01pY3JvbWF4J1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICc7ICpNaWNyb21heFsgX10oUFxcZHszfVteOy9dKikgQnVpbGQnXG4gICAgcmVnZXhfZmxhZzogJ2knXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnTWljcm9tYXggJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdNaWNyb21heCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAqKFBcXGR7M318UFxcZHszfVxcKEZ1bmJvb2tcXCkpIEJ1aWxkJ1xuICAgIHJlZ2V4X2ZsYWc6ICdpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ01pY3JvbWF4ICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnTWljcm9tYXgnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBNaXRvXG4gICMgQHJlZjogaHR0cDovL25ldy5taXRvbW9iaWxlLmNvbS9cbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooTUlUTylbIF9cXC1dPyhbXjsvXSspIEJ1aWxkJ1xuICAgIHJlZ2V4X2ZsYWc6ICdpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxICQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnTWl0bydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyJ1xuXG4gICMjIyMjIyMjI1xuICAjIE1vYmlzdGVsXG4gICMgQHJlZjogaHR0cDovL3d3dy5tb2Jpc3RlbC5jb20vXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKEN5bnVzKVsgX10oRjV8VFxcZHwuKz8pICooPzpCdWlsZHxbOy9cXCldKSdcbiAgICByZWdleF9mbGFnOiAnaSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSAkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ01vYmlzdGVsJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEgJDInXG5cbiAgIyMjIyMjIyMjXG4gICMgTW9kZWNvbVxuICAjIEByZWY6IGh0dHA6Ly93d3cubW9kZWNvbS5ldS90YWJsZXRzL3BvcnRhbC9cbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooTU9ERUNPTSApPyhGcmVlVGFiKSA/KFteOy9dKykgQnVpbGQnXG4gICAgcmVnZXhfZmxhZzogJ2knXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEkMiAkMydcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ01vZGVjb20nXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMiAkMydcbiAgLSByZWdleDogJzsgKihNT0RFQ09NICkoW147L10rKSBCdWlsZCdcbiAgICByZWdleF9mbGFnOiAnaSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSAkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ01vZGVjb20nXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMidcblxuICAjIyMjIyMjIyNcbiAgIyBNb3Rvcm9sYVxuICAjIEByZWY6IGh0dHA6Ly93d3cubW90b3JvbGEuY29tL3VzL3Nob3AtYWxsLW1vYmlsZS1waG9uZXMvXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKE1aXFxkezN9XFwrP3xNWlxcZHszfSA0R3xYb29tfFhPT01bXjsvXSopIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ01vdG9yb2xhICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnTW90b3JvbGEnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKihNaWxlc3RvbmUgKShYVFteOy9dKikgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnTW90b3JvbGEgJDEkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ01vdG9yb2xhJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDInXG4gIC0gcmVnZXg6ICc7ICooTW90b3JvaSA/eHxEcm9pZCBYfERST0lEWCkgQnVpbGQnXG4gICAgcmVnZXhfZmxhZzogJ2knXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnTW90b3JvbGEgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdNb3Rvcm9sYSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJ0RST0lEIFgnXG4gIC0gcmVnZXg6ICc7ICooRHJvaWRbXjsvXSp8RFJPSURbXjsvXSp8TWlsZXN0b25lW147L10qfFBob3RvbnxUcml1bXBofERldm91cnxUaXRhbml1bSkgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnTW90b3JvbGEgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdNb3Rvcm9sYSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAqKEE1NTV8QTg1WzM0XVteOy9dKnxBOTVbMzU2XXxNRVs1OF1cXGR7Mn1cXCs/fE1FNjAwfE1FNjMyfE1FNzIyfE1CXFxkezN9XFwrP3xNVDY4MHxNVDcxMHxNVDg3MHxNVDg4N3xNVDkxN3xXWDQzNXxXWDQ1M3xXWDQ0WzI1XXxYVFxcZHszLDR9W0EtWlxcK10qfENMW2lJXVF8Q0xbaUldUSBYVCkgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdNb3Rvcm9sYSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAqKE1vdG9yb2xhIE1PVC18TW90b3JvbGFbIF9cXC1dfE1PVFxcLT8pKFteOy9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ01vdG9yb2xhJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDInXG4gIC0gcmVnZXg6ICc7ICooTW90b1tfIF0/fE1PVFxcLSkoW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnTW90b3JvbGEnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMidcblxuICAjIyMjIyMjIyNcbiAgIyBNcE1hblxuICAjIEByZWY6IGh0dHA6Ly93d3cubXBtYW5ldXJvcGUuY29tXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKCg/Ok1QW0RRXUN8TVBHXFxkezEsNH18TVBcXGR7Myw0fXxNSUQoPzooPzoxMFsyMzRdfDExNHw0M3w3WzI0N118OFsyNF18NylDfDhbMDFdMSkpW147L10qKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ01wbWFuJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgTVNJXG4gICMgQHJlZjogaHR0cDovL3d3dy5tc2kuY29tL3Byb2R1Y3Qvd2luZHBhZC9cbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooPzpNU0lbIF9dKT8oUHJpbW9cXGQrfEVuam95WyBfXFwtXVteOy9dKykgQnVpbGQnXG4gICAgcmVnZXhfZmxhZzogJ2knXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdNc2knXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBNdWx0aWxhc2VyXG4gICMgaHR0cDovL3d3dy5tdWx0aWxhc2VyLmNvbS5ici9saXN0YWdlbV9wcm9kdXRvcy5waHA/Y2F0PTVcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICpNdWx0aWxhc2VyWyBfXShbXjsvXSspIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnTXVsdGlsYXNlcidcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIE15UGhvbmVcbiAgIyBAcmVmOiBodHRwOi8vbXlwaG9uZS5jb20ucGgvXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKE15KVtfXT8oUGFkKVsgX10oW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSQyICQzJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnTXlQaG9uZSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJDIgJDMnXG4gIC0gcmVnZXg6ICc7ICooTXkpXFx8PyhQaG9uZSlbIF9dKFteOy9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEkMiAkMydcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ015UGhvbmUnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMydcbiAgLSByZWdleDogJzsgKihBXFxkKylbIF9dKER1byk/IEJ1aWxkJ1xuICAgIHJlZ2V4X2ZsYWc6ICdpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxICQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnTXlQaG9uZSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxICQyJ1xuXG4gICMjIyMjIyMjI1xuICAjIE15dGFiXG4gICMgQHJlZjogaHR0cDovL3d3dy5teXRhYi5ldS9lbi9jYXRlZ29yeS9teXRhYi1wcm9kdWN0cy9cbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICoobXlUYWJbXjsvXSopIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnTXl0YWInXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBOYWJpXG4gICMgQHJlZjogaHR0cHM6Ly93d3cubmFiaXRhYmxldC5jb21cbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooTkFCSTI/LSkoW147L10rKSBCdWlsZC8nXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ05hYmknXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMidcblxuICAjIyMjIyMjIyNcbiAgIyBOZWMgTWVkaWFzXG4gICMgQHJlZjogaHR0cDovL3d3dy5uLWtlaXRhaS5jb20vXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKE4tXFxkK1tDREVdKSBCdWlsZC8nXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdOZWMnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgPyhORUMtKSguKikgQnVpbGQvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdOZWMnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMidcbiAgLSByZWdleDogJzsgKihMVC1OQTcpIEJ1aWxkLydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ05lYydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJ0xpZmV0b3VjaCBOb3RlJ1xuXG4gICMjIyMjIyMjI1xuICAjIE5leHRib29rXG4gICMgQHJlZjogaHR0cDovL25leHRib29rdXNhLmNvbVxuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihOWE1cXGQrW0EtejAtOV9dKnxOZXh0XFxkW0EtejAtOV8gXFwtXSp8TkVYVFxcZFtBLXowLTlfIFxcLV0qfE5leHRib29rIFtBLXowLTlfIF0qfERBVEFNODAzSEN8TTgwNSkoPzogQnVpbGR8W1xcKTtdKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ05leHRib29rJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgTm9raWFcbiAgIyBAcmVmOiBodHRwOi8vd3d3Lm5va2lhLmNvbVxuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihOb2tpYSkoWyBfXFwtXSopKFteOy9dKikgQnVpbGQnXG4gICAgcmVnZXhfZmxhZzogJ2knXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEkMiQzJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnTm9raWEnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMydcblxuICAjIyMjIyMjIyNcbiAgIyBOb29rXG4gICMgQHJlZjpcbiAgIyBUT0RPIG5vb2sgYnJvd3Nlci8xLjBcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooTm9vayA/fEJhcm5lcyAmIE5vYmxlIE5vb2sgfEJOICkoW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnTm9vaydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyJ1xuICAtIHJlZ2V4OiAnOyAqKE5PT0sgKT8oQk5SVjIwMHxCTlJWMjAwQXxCTlRWMjUwfEJOVFYyNTBBfEJOVFY0MDB8Qk5UVjYwMHxMb2dpY1BEIFpvb20yKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnTm9vaydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyJ1xuICAtIHJlZ2V4OiAnOyBCdWlsZC8oTm9vayknXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdOb29rJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnVGFibGV0J1xuXG4gICMjIyMjIyMjI1xuICAjIE9saXZldHRpXG4gICMgQHJlZjogaHR0cDovL3d3dy5vbGl2ZXR0aS5kZS9FTi9QYWdlL3QwMi92aWV3X2h0bWw/aWRwPTM0OFxuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihPUDExMHxPbGlQYWRbXjsvXSspIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ09saXZldHRpICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnT2xpdmV0dGknXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBPbWVnYVxuICAjIEByZWY6IGh0dHA6Ly9vbWVnYS10ZWNobm9sb2d5LmV1L2VuL3Byb2R1a3R5LzM0Ni90YWJsZXRzXG4gICMgQG5vdGU6IE1JRCB0YWJsZXRzIG1pZ2h0IGdldCBtYXRjaGVkIGJ5IENvYnlLeXJvcyBmaXJzdFxuICAjIEBtb2RlbHM6IChUMTA3fE1JRCg/OjcwMFsyLTVdfDcwMzF8NzEwOHw3MTMyfDc1MFswMl18ODAwMXw4NTAwfDkwMDF8OTcxWzEyXSlcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICpPTUVHQVsgX1xcLV0oTUlEW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdPbWVnYSAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ09tZWdhJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICdeKE1JRDc1MDB8TUlEXFxkKykgTW96aWxsYS81XFwuMCBcXChpUGFkOydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdPbWVnYSAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ09tZWdhJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgT3BlblBlYWtcbiAgIyBAcmVmOiBodHRwczovL3N1cHBvcnQuZ29vZ2xlLmNvbS9nb29nbGVwbGF5L2Fuc3dlci8xNzI3MTMxP2hsPWVuXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKCg/OkNJVVN8Y2l1cylbXjsvXSopIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ09wZW5wZWFrICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnT3BlbnBlYWsnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBPcHBvXG4gICMgQHJlZjogaHR0cDovL2VuLm9wcG8uY29tL3Byb2R1Y3RzL1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihGaW5kID8oPzo1fDdhKXxSOFswMTJdXFxkezEsMn18VDcwM1xcZHswLDF9fFU3MFxcZHsxLDJ9VD98WDkwXFxkezEsMn0pIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ09wcG8gJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdPcHBvJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICc7ICpPUFBPID8oW147L10rKSBCdWlsZC8nXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnT3BwbyAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ09wcG8nXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBPZHlzXG4gICMgQHJlZjogaHR0cDovL29keXMuZGVcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooPzpPZHlzXFwtfE9EWVNcXC18T0RZUyApKFteOy9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnT2R5cyAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ09keXMnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKihTRUxFQ1QpID8oNykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnT2R5cyAkMSAkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ09keXMnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSAkMidcbiAgLSByZWdleDogJzsgKihQRURJKV8oUExVUylfKFcpIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ09keXMgJDEgJDIgJDMnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdPZHlzJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEgJDIgJDMnXG4gICMgV2VsdGJpbGQgLSBUYWJsZXQgUEMgNCA9IENhdCBQaG9lbml4ID0gT2R5cyBUYWJsZXQgUEMgND9cbiAgLSByZWdleDogJzsgKihBRU9OfEJSQVZJT3xGVVNJT058RlVTSU9OMklOMXxHZW5pb3xFT1MxMHxJRU9TW147L10qfElST058TG9veHxMT09YfExPT1ggUGx1c3xNb3Rpb258Tk9PTnxOT09OX1BST3xORVhUfE9QT1N8UEVESVteOy9dKnxQUklNRVteOy9dKnxTVFVEWVRBQnxUQUJMT3xUYWJsZXQtUEMtNHxVTk9fWDh8WEVMSU9bXjsvXSp8WGVsaW8gP1xcZCsgP1tQcF1yb3xYRU5PMTB8WFBSRVNTIFBSTykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnT2R5cyAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ09keXMnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBPbmVQbHVzXG4gICMgQHJlZiBodHRwczovL29uZXBsdXMubmV0L1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKE9ORSBbYS16QS1aXVxcZCspIEJ1aWxkLydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdPbmVQbHVzICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnT25lUGx1cydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAoT05FUExVUyBbYS16QS1aXVxcZCspIEJ1aWxkLydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdPbmVQbHVzICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnT25lUGx1cydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIE9yaW9uXG4gICMgQHJlZjogaHR0cDovL3d3dy5vcmlvbi51YS9lbi9wcm9kdWN0cy9jb21wdXRlci1wcm9kdWN0cy90YWJsZXQtcGNzLmh0bWxcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooVFAtXFxkKykgQnVpbGQvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ09yaW9uICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnT3Jpb24nXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBQYWNrYXJkQmVsbFxuICAjIEByZWY6IGh0dHA6Ly93d3cucGFja2FyZGJlbGwuY29tL3BiL2VuL0FFL2NvbnRlbnQvcHJvZHVjdGdyb3VwL3RhYmxldHNcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooRzEwMFc/KSBCdWlsZC8nXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnUGFja2FyZEJlbGwgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdQYWNrYXJkQmVsbCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIFBhbmFzb25pY1xuICAjIEByZWY6IGh0dHA6Ly9wYW5hc29uaWMuanAvbW9iaWxlL1xuICAjIEBtb2RlbHM6IFQxMSwgVDIxLCBUMzEsIFAxMSwgUDUxLCBFbHVnYSBQb3dlciwgRWx1Z2EgREwxXG4gICMgQG1vZGVsczogKHRhYikgVG91Z2hwYWQgRlotQTEsIFRvdWdocGFkIEpULUIxXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKFBhbmFzb25pYylbXyBdKFteOy9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEgJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyJ1xuICAjIFRvdWdocGFkXG4gIC0gcmVnZXg6ICc7ICooRlotQTFCfEpULUIxKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdQYW5hc29uaWMgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdQYW5hc29uaWMnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgIyBFbHVnYSBQb3dlclxuICAtIHJlZ2V4OiAnOyAqKGRMMXxETDEpIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ1BhbmFzb25pYyAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1BhbmFzb25pYydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIFBhbnRlY2hcbiAgIyBAaHJlZjogaHR0cDovL3d3dy5wYW50ZWNoLmNvLmtyL2VuL3Byb2QvcHJvZExpc3QuZG8/Z2JyYW5kPVBBTlRFQ0hcbiAgIyBAaHJlZjogaHR0cDovL3d3dy5wYW50ZWNoLmNvLmtyL2VuL3Byb2QvcHJvZExpc3QuZG8/Z2JyYW5kPVZFR0FcbiAgIyBAbW9kZWxzOiBBRFI4OTk1LCBBRFI5MTBMLCBBRFI5MzBWVywgQzc5MCwgQ0RNODk5MiwgQ0RNODk5OSwgSVMwNiwgSVMxMVBULCBQMjAwMCwgUDIwMjAsIFAyMDMwLCBQNDEwMCwgUDUwMDAsIFA2MDEwLCBQNjAyMCwgUDYwMzAsIFA3MDAwLCBQNzA0MCwgUDgwMDAsIFA4MDEwLCBQOTAyMCwgUDkwNTAsIFA5MDYwLCBQOTA3MCwgUDkwOTAsIFBUMDAxLCBQVDAwMiwgUFQwMDMsIFRYVDgwNDAsIFRYVDgwNDUsIFZFR0EgUFRMMjFcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooU0tZWyBfXSk/KElNXFwtW0FUXVxcZHszfVteOy9dKykuKiBCdWlsZC8nXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnUGFudGVjaCAkMSQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnUGFudGVjaCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJDInXG4gIC0gcmVnZXg6ICc7ICooKD86QURSODk5NXxBRFI5MTBMfEFEUjkzMEx8QURSOTMwVld8UFRMMjF8UDgwMDApKD86IDRHKT8pIEJ1aWxkLydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1BhbnRlY2gnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKlBhbnRlY2goW147L10rKS4qIEJ1aWxkLydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdQYW50ZWNoICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnUGFudGVjaCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIFBhcGF5cmVcbiAgIyBAcmVmOiBodHRwOi8vZ3JhbW1hdGEuZXMvXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKHBhcHlyZSlbIF9cXC1dKFteOy9dKykgQnVpbGQvJ1xuICAgIHJlZ2V4X2ZsYWc6ICdpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxICQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnUGFweXJlJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDInXG5cbiAgIyMjIyMjIyMjXG4gICMgUGVhcmxcbiAgIyBAcmVmOiBodHRwOi8vd3d3LnBlYXJsLmRlL2MtMTU0MC5zaHRtbFxuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKig/OlRvdWNobGV0ICk/KFgxMFxcLlteOy9dKykgQnVpbGQvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ1BlYXJsICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnUGVhcmwnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBQaGljb21tXG4gICMgQHJlZjogaHR0cDovL3d3dy5waGljb21tLmNvbS5jbi9cbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7IFBISUNPTU0gKGk4MDApIEJ1aWxkLydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdQaGljb21tICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnUGhpY29tbSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyBQSElDT01NIChbXjsvXSspIEJ1aWxkLydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdQaGljb21tICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnUGhpY29tbSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAqKEZXU1xcZHszfVteOy9dKykgQnVpbGQvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ1BoaWNvbW0gJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdQaGljb21tJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgUGhpbGlwc1xuICAjIEByZWY6IGh0dHA6Ly93d3cuc3VwcG9ydC5waGlsaXBzLmNvbS9zdXBwb3J0L2NhdGFsb2cvcHJvZHVjdHMuanNwP19keW5jaGFyc2V0PVVURi04JmNvdW50cnk9JmNhdGVnb3J5aWQ9TU9CSUxFX1BIT05FU19TTUFSVF9TVV9DTl9DQVJFJnVzZXJMYW5ndWFnZT1lbiZuYXZDb3VudD0yJmdyb3VwSWQ9UENfUFJPRFVDVFNfQU5EX1BIT05FU19HUl9DTl9DQVJFJmNhdGFsb2dUeXBlPSZuYXZBY3Rpb249cHVzaCZ1c2VyQ291bnRyeT1jbiZ0aXRsZT1TbWFydHBob25lcyZjYXRlSWQ9TU9CSUxFX1BIT05FU19DQV9DTl9DQVJFXG4gICMgQFRPRE86IFBoaWxpcHMgVGFibGV0cyBVc2VyLUFnZW50cyBtaXNzaW5nIVxuICAjIEByZWY6IGh0dHA6Ly93d3cuc3VwcG9ydC5waGlsaXBzLmNvbS9zdXBwb3J0L2NhdGFsb2cvcHJvZHVjdHMuanNwP19keW5jaGFyc2V0PVVURi04JmNvdW50cnk9JmNhdGVnb3J5aWQ9RU5URVJUQUlOTUVOVF9UQUJMRVRTX1NVX0NOX0NBUkUmdXNlckxhbmd1YWdlPWVuJm5hdkNvdW50PTAmZ3JvdXBJZD0mY2F0YWxvZ1R5cGU9Jm5hdkFjdGlvbj1wdXNoJnVzZXJDb3VudHJ5PWNuJnRpdGxlPUVudGVydGFpbm1lbnQrVGFibGV0cyZjYXRlSWQ9VEFCTEVUU19DQV9DTl9DQVJFXG4gICMjIyMjIyMjI1xuICAjIEBub3RlOiB0aGlzIGEgYmVzdCBndWVzcyBhY2NvcmRpbmcgdG8gYXZhaWxhYmxlIHBoaWxpcHMgbW9kZWxzLiBOZWVkIG1vcmUgVXNlci1BZ2VudHNcbiAgLSByZWdleDogJzsgKihENjMzfEQ4MjJ8RDgzM3xUNTM5fFQ5Mzl8VjcyNnxXMzM1fFczMzZ8VzMzN3xXMzU2OHxXNTM2fFc1NTEwfFc2MjZ8VzYzMnxXNjM1MHxXNjM2MHxXNjUwMHxXNzMyfFc3MzZ8VzczN3xXNzM3NnxXODIwfFc4MzJ8VzgzNTV8Vzg1MDB8Vzg1MTB8VzkzMCkgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdQaGlsaXBzJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICc7ICooPzpQaGlsaXBzfFBISUxJUFMpWyBfXShbXjsvXSspIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ1BoaWxpcHMgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdQaGlsaXBzJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgUGlwb1xuICAjIEByZWY6IGh0dHA6Ly93d3cucGlwby5jbi9Fbi9cbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICdBbmRyb2lkIDRcXC4uKjsgKihNWzEyMzU2Nzg5XXxVWzEyMzY4XXxTWzEyM10pXFwgPyhwcm8pPyBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdQaXBvICQxJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdQaXBvJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEkMidcblxuICAjIyMjIyMjIyNcbiAgIyBQbG95ZXJcbiAgIyBAcmVmOiBodHRwOi8vZW4ucGxveWVyLmNuL1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihNT01PW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1Bsb3llcidcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIFBvbGFyb2lkLyBBY2hvXG4gICMgQHJlZjogaHR0cDovL3BvbGFyb2lkc3RvcmUuY29tL3N0b3JlL3N0YXJ0LmFzcD9jYXRlZ29yeV9pZD0zODImY2F0ZWdvcnlfaWQyPTAmb3JkZXI9dGl0bGUmZmlsdGVyMT0mZmlsdGVyMj0mZmlsdGVyMz0mdmlldz1hbGxcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooPzpQb2xhcm9pZFsgX10pPygoPzpNSURDXFxkezMsfXxQTUlEXFxkezIsfXxQVEFCXFxkezMsfSlbXjsvXSopKFxcL1teOy9dKik/IEJ1aWxkLydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1BvbGFyb2lkJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICc7ICooPzpQb2xhcm9pZCApKFRhYmxldCkgQnVpbGQvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnUG9sYXJvaWQnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBQb21wXG4gICMgQHJlZjogaHR0cDovL3BvbXBtb2JpbGVzaG9wLmNvbS9cbiAgIyMjIyMjIyMjXG4gICN+IFRPRE9cbiAgLSByZWdleDogJzsgKihQT01QKVsgX1xcLV0oLis/KSAqKD86QnVpbGR8WzsvXFwpXSknXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEgJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdQb21wJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDInXG5cbiAgIyMjIyMjIyMjXG4gICMgUG9zaXRpdm9cbiAgIyBAcmVmOiBodHRwOi8vd3d3LnBvc2l0aXZvaW5mb3JtYXRpY2EuY29tLmJyL3d3dy9wZXNzb2FsL3RhYmxldC15cHkvXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKFRCMDdTVEF8VEIxMFNUQXxUQjA3RlRBfFRCMTBGVEEpIEJ1aWxkLydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1Bvc2l0aXZvJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICc7ICooPzpQb3NpdGl2byApPygoPzpZUFl8WXB5KVteOy9dKykgQnVpbGQvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnUG9zaXRpdm8nXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBQT1ZcbiAgIyBAcmVmOiBodHRwOi8vd3d3LnBvaW50b2Z2aWV3LW9ubGluZS5jb20vZGVmYXVsdDIucGhwXG4gICMgQFRPRE86IFNtYXJ0cGhvbmUgTW9kZWxzIE1PQi0zNTE1LCBNT0ItNTA0NS1CIG1pc3NpbmdcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooTU9CLVteOy9dKykgQnVpbGQvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnUE9WJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICc7ICpQT1ZbIF9cXC1dKFteOy9dKykgQnVpbGQvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ1BPViAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1BPVidcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAqKCg/OlRBQi1QTEFZVEFCfFRBQi1QUk9UQUJ8UFJPVEFCfFBsYXlUYWJQcm98TW9iaWlbIF9cXC1dfFRBQi1QKVteOy9dKikgQnVpbGQvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ1BPViAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1BPVidcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIFByZXN0aWdpb1xuICAjIEByZWY6IGh0dHA6Ly93d3cucHJlc3RpZ2lvLmNvbS9jYXRhbG9ndWUvTXVsdGlQaG9uZXNcbiAgIyBAcmVmOiBodHRwOi8vd3d3LnByZXN0aWdpby5jb20vY2F0YWxvZ3VlL011bHRpUGFkc1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKig/OlByZXN0aWdpbyApPygoPzpQQVB8UE1QKVxcZFteOy9dKykgQnVpbGQvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ1ByZXN0aWdpbyAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1ByZXN0aWdpbydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIFByb3NjYW5cbiAgIyBAcmVmOiBodHRwOi8vd3d3LnByb3NjYW52aWRlby5jb20vcHJvZHVjdHMtc2VhcmNoLmFzcD9pdGVtQ2xhc3M9VEFCTEVUJml0ZW1ubWJyPVxuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihQTFRbMC05XXs0fS4qKSBCdWlsZC8nXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdQcm9zY2FuJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgUU1vYmlsZVxuICAjIEByZWY6IGh0dHA6Ly93d3cucW1vYmlsZS5jb20ucGsvXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKEEyfEE1fEE4fEE5MDApXz8oQ2xhc3NpYyk/IEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxICQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnUW1vYmlsZSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxICQyJ1xuICAtIHJlZ2V4OiAnOyAqKFFbTW1db2JpbGUpXyhbXl9dKylfKFteX10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdRbW9iaWxlICQyICQzJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnUW1vYmlsZSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyICQzJ1xuICAtIHJlZ2V4OiAnOyAqKFFcXC0/W01tXW9iaWxlKVtfIF0oQVteOy9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnUW1vYmlsZSAkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1Ftb2JpbGUnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMidcblxuICAjIyMjIyMjIyNcbiAgIyBRbW9iaWxldm5cbiAgIyBAcmVmOiBodHRwOi8vcW1vYmlsZS52bi9zYW4tcGhhbS5odG1sXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKFFcXC1TbWFydClbIF9dKFteOy9dKykgQnVpbGQvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxICQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnUW1vYmlsZXZuJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDInXG4gIC0gcmVnZXg6ICc7ICooUVxcLT9bTW1db2JpbGUpWyBfXFwtXShTW147L10rKSBCdWlsZC8nXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEgJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdRbW9iaWxldm4nXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMidcblxuICAjIyMjIyMjIyNcbiAgIyBRdWFudGFcbiAgIyBAcmVmOiA/XG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKFRBMTAxMykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdRdWFudGEnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBSQ0FcbiAgIyBAcmVmOiBodHRwOi8vcmNhbW9iaWxlcGhvbmUuY29tL1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKFJDVFxcdyspIEJ1aWxkLydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1JDQSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIFJvY2tjaGlwXG4gICMgQHJlZjogaHR0cDovL3d3dy5yb2NrLWNoaXBzLmNvbS9hL2NuL3Byb2R1Y3QvaW5kZXguaHRtbFxuICAjIEBub3RlOiBtYW51ZmFjdHVyZXIgc2VsbHMgY2hpcHNldHMgLSBJIGFzc3VtZSB0aGF0IHRoZXNlIFVBcyBhcmUgZGV2LWJvYXJkc1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihSS1xcZCspLD8gQnVpbGQvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnUm9ja2NoaXAnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJyBCdWlsZC8oUktcXGQrKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1JvY2tjaGlwJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgU2Ftc3VuZyBBbmRyb2lkIERldmljZXNcbiAgIyBAcmVmOiBodHRwOi8vd3d3LnNhbXN1bmcuY29tL3VzL21vYmlsZS9jZWxsLXBob25lcy9hbGwtcHJvZHVjdHNcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooU0FNU1VORyB8U2Ftc3VuZyApPygoPzpHYWxheHkgKD86Tm90ZSBJSXxTXFxkKXxHVC1JOTA4MnxHVC1JOTIwNXxHVC1ON1xcZHszfXxTTS1OOTAwNSlbXjsvXSopXFwvP1teOy9dKiBCdWlsZC8nXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnU2Ftc3VuZyAkMSQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnU2Ftc3VuZydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyJ1xuICAtIHJlZ2V4OiAnOyAqKEdvb2dsZSApPyhOZXh1cyBbU3NdKD86IDRHKT8pIEJ1aWxkLydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdTYW1zdW5nICQxJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdTYW1zdW5nJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDInXG4gIC0gcmVnZXg6ICc7ICooU0FNU1VORyB8U2Ftc3VuZyApKFteXFwvXSopXFwvW14gXSogQnVpbGQvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ1NhbXN1bmcgJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdTYW1zdW5nJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDInXG4gIC0gcmVnZXg6ICc7ICooR2FsYXh5KD86IEFjZXwgTmV4dXN8IFMgP0lJK3xOZXh1cyBTfCB3aXRoIE1DUiAxLjJ8IE1pbmkgUGx1cyA0Ryk/KSBCdWlsZC8nXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnU2Ftc3VuZyAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1NhbXN1bmcnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKihTQU1TVU5HWyBfXFwtXSAqKSsoW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdTYW1zdW5nICQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnU2Ftc3VuZydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyJ1xuICAtIHJlZ2V4OiAnOyAqKFNBTVNVTkctKT8oR1RcXC1bQklOUFNdXFxkezR9W15cXC9dKikoXFwvW14gXSopIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ1NhbXN1bmcgJDEkMiQzJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnU2Ftc3VuZydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyJ1xuICAtIHJlZ2V4OiAnKD86OyAqfF4pKCg/OkdUXFwtW0JJaU5QU11cXGR7NH18STlcXGR7Mn0wW0EtWmEtelxcK10/XFxiKVteOy9cXCldKj8pKD86QnVpbGR8TGludXh8TUlVSXxbOy9cXCldKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdTYW1zdW5nICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnU2Ftc3VuZydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAoU0FNU1VORy0pKFtBLVphLXowLTlcXC1dKykuKiBCdWlsZC8nXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnU2Ftc3VuZyAkMSQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnU2Ftc3VuZydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyJ1xuICAtIHJlZ2V4OiAnOyAqKCg/OlNDSHxTR0h8U0hWfFNIV3xTUEh8U0N8U00pXFwtW0EtWmEtejAtOSBdKykoLz9bXiBdKik/IEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ1NhbXN1bmcgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdTYW1zdW5nJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICcgKCg/OlNDSClcXC1bQS1aYS16MC05IF0rKSgvP1teIF0qKT8gQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnU2Ftc3VuZyAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1NhbXN1bmcnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKihCZWhvbGQgPyg/OjJ8SUkpfFlQXFwtR1teOy9dK3xFSy1HQzEwMHxTQ0wyMXxJOTMwMCkgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnU2Ftc3VuZyAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1NhbXN1bmcnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBTaGFycFxuICAjIEByZWY6IGh0dHA6Ly93d3cuc2hhcnAtcGhvbmUuY29tL2VuL2luZGV4Lmh0bWxcbiAgIyBAcmVmOiBodHRwOi8vd3d3LmFuZHJvaWQuY29tL2RldmljZXMvP2NvdW50cnk9YWxsJm09c2hhcnBcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooU0hcXC0/XFxkXFxkW147L10rfFNCTVxcZFteOy9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdTaGFycCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAqKFNIQVJQWyAtXSkoW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnU2hhcnAnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMidcblxuICAjIyMjIyMjIyNcbiAgIyBTaW12YWxsZXlcbiAgIyBAcmVmOiBodHRwOi8vd3d3LnNpbXZhbGxleS1tb2JpbGUuZGUvXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKFNQWFtfXFwtXVxcZFteOy9dKikgQnVpbGQvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnU2ltdmFsbGV5J1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICc7ICooU1g3XFwtUEVBUkxcXC5HbWJIKSBCdWlsZC8nXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdTaW12YWxsZXknXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKihTUFtUXT9cXC1cXGR7Mn1bXjsvXSopIEJ1aWxkLydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1NpbXZhbGxleSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIFNLIFRlbGVzeXNcbiAgIyBAcmVmOiBodHRwOi8vd3d3LnNrLXcuY29tL3Bob25lL3Bob25lX2xpc3QuanNwXG4gICMgQHJlZjogaHR0cDovL3d3dy5hbmRyb2lkLmNvbS9kZXZpY2VzLz9jb3VudHJ5PWFsbCZtPXNrLXRlbGVzeXNcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooU0tcXC0uKikgQnVpbGQvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnU0t0ZWxlc3lzJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgU2t5dGV4XG4gICMgQHJlZjogaHR0cDovL3NreXRleC5jb20vYW5kcm9pZFxuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKig/OlNLWVRFWHxTWCktKFteOy9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdTa3l0ZXgnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKihJTUFHSU5FIFteOy9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdTa3l0ZXgnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBTbWFydFFcbiAgIyBAcmVmOiBodHRwOi8vZW4uc21hcnRkZXZpY2VzLmNvbS5jbi9Qcm9kdWN0cy9cbiAgIyBAbW9kZWxzOiBaOCwgWDcsIFU3SCwgVTcsIFQzMCwgVDIwLCBUZW4zLCBWNS1JSSwgVDctM0csIFNtYXJ0UTUsIEs3LCBTNywgUTgsIFQxOSwgVGVuMiwgVGVuLCBSMTAsIFQ3LCBSNywgVjUsIFY3LCBTbWFydFE3XG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKFNtYXJ0USkgPyhbXjsvXSspIEJ1aWxkLydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSAkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJyQxJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDInXG5cbiAgIyMjIyMjIyMjXG4gICMgU21hcnRiaXR0XG4gICMgQHJlZjogaHR0cDovL3d3dy5zbWFydGJpdHQuY29tL1xuICAjIEBtaXNzaW5nOiBTQlQgVXNlcmFnZW50c1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihXRjdDfFdGMTBDfFNCVFteOy9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdTbWFydGJpdHQnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBTb2Z0YmFuayAoT3BlcmF0b3IgQnJhbmRlZCBEZXZpY2VzKVxuICAjIEByZWY6IGh0dHA6Ly93d3cuaXBlbnRlYy5jb20vZG9jdW1lbnQvZG9jdW1lbnQuYXNweD9wYWdlPWFuZHJvaWQtdXNlcmFnZW50XG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKFNCTSg/OjAwM1NIfDAwNVNIfDAwNlNIfDAwN1NIfDEwMlNIKSkgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdTaGFycCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAqKDAwM1B8MTAxUHwxMDFQMTFDfDEwMlApIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnUGFuYXNvbmljJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICc7ICooMDBcXGRaKSBCdWlsZC8nXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdaVEUnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgSFRDKFgwNkhUKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0hUQydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAqKDAwMUhUfFgwNkhUKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0hUQydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAqKDIwMU0pIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnTW90b3JvbGEnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdYVDkwMidcblxuICAjIyMjIyMjIyNcbiAgIyBUcmVrc3RvclxuICAjIEByZWY6IGh0dHA6Ly93d3cudHJla3N0b3IuY28udWsvc3VyZnRhYnMtZW4uaHRtbFxuICAjIEBub3RlOiBNdXN0IGNvbWUgYmVmb3JlIFNvbnlFcmljc3NvblxuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihTVFxcZHs0fS4qKUJ1aWxkL1NUJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ1RyZWtzdG9yICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnVHJla3N0b3InXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKihTVFxcZHs0fS4qKSBCdWlsZC8nXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnVHJla3N0b3IgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdUcmVrc3RvcidcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIFNvbnlFcmljc3NvblxuICAjIEBub3RlOiBNdXN0IGNvbWUgYmVmb3JlIG5va2lhIHNpbmNlIHRoZXkgYWxzbyB1c2Ugc3ltYmlhblxuICAjIEByZWY6IGh0dHA6Ly93d3cuYW5kcm9pZC5jb20vZGV2aWNlcy8/Y291bnRyeT1hbGwmbT1zb255LWVyaWNzc29uc1xuICAjIEBUT0RPOiB0eXBlIVxuICAjIyMjIyMjIyNcbiAgIyBhbmRyb2lkIG1hdGNoZXJzXG4gIC0gcmVnZXg6ICc7ICooU29ueSA/RXJpY3Nzb24gPykoW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnU29ueUVyaWNzc29uJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDInXG4gIC0gcmVnZXg6ICc7ICooKD86U0t8U1R8RXxYfExUfE1LfE1UfFdUKVxcZHsyfVthLXowLTldKig/Oi1vKT98UjgwMGl8VTIwaSkgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdTb255RXJpY3Nzb24nXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgIyBUT0RPIFhcXGQrIGlzIHdyb25nXG4gIC0gcmVnZXg6ICc7ICooWHBlcmlhICg/OkE4fEFyY3xBY3JvfEFjdGl2ZXxMaXZlIHdpdGggV2Fsa21hbnxNaW5pfE5lb3xQbGF5fFByb3xSYXl8WFxcZCspW147L10qKSBCdWlsZCdcbiAgICByZWdleF9mbGFnOiAnaSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1NvbnlFcmljc3NvbidcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIFNvbnlcbiAgIyBAcmVmOiBodHRwOi8vd3d3LnNvbnltb2JpbGUuY28uanAvaW5kZXguaHRtbFxuICAjIEByZWY6IGh0dHA6Ly93d3cuc29ueW1vYmlsZS5jb20vZ2xvYmFsLWVuL3Byb2R1Y3RzL3Bob25lcy9cbiAgIyBAcmVmOiBodHRwOi8vd3d3LnNvbnkuanAvdGFibGV0L1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgU29ueSAoVGFibGV0W147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdTb255ICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnU29ueSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyBTb255IChbXjsvXSspIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ1NvbnkgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdTb255J1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICc7ICooU29ueSkoW0EtWmEtejAtOVxcLV0rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSAkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJyQxJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDInXG4gIC0gcmVnZXg6ICc7ICooWHBlcmlhIFteOy9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdTb255J1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICc7ICooQyg/OjFbMC05XXwyWzAtOV18NTN8NTV8NlswLTldKVswLTldezJ9fERbMjVdXFxkezN9fEQ2WzU2XVxcZHsyfSkgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdTb255J1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICc7ICooU0dQXFxkezN9fFNHUFRcXGR7Mn0pIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnU29ueSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAqKE5XLVoxMDAwU2VyaWVzKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1NvbnknXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyMjXG4gICMgU29ueSBQbGF5U3RhdGlvblxuICAjIEByZWY6IGh0dHA6Ly9wbGF5c3RhdGlvbi5jb21cbiAgIyBUaGUgVml0YSBzcG9vZnMgdGhlIEtpbmRsZVxuICAjIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICdQTEFZU1RBVElPTiAzJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ1BsYXlTdGF0aW9uIDMnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdTb255J1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnUGxheVN0YXRpb24gMydcbiAgLSByZWdleDogJyhQbGF5U3RhdGlvbiAoPzpQb3J0YWJsZXxWaXRhfFxcZCspKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1NvbnknXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBTcGljZVxuICAjIEByZWY6IGh0dHA6Ly93d3cuc3BpY2Vtb2JpbGVwaG9uZXMuY28uaW4vXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKCg/OkNTTF9TcGljZXxTcGljZXxTUElDRXxDU0wpWyBfXFwtXT8pPyhbTW1dW0lpXSkoWyBfXFwtXSk/KFxcZHszfVteOy9dKikgQnVpbGQvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJDIkMyQ0J1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnU3BpY2UnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdNaSQ0J1xuXG4gICMjIyMjIyMjI1xuICAjIFNwcmludCAoT3BlcmF0b3IgQnJhbmRlZCBEZXZpY2VzKVxuICAjIEByZWY6XG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKFNwcmludCApKC4rPykgKig/OkJ1aWxkfFs7L10pJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdTcHJpbnQnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMidcbiAgLSByZWdleDogJ1xcYihTcHJpbnQpWzogXShbXjssLyBdKyknXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1NwcmludCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyJ1xuXG4gICMjIyMjIyMjI1xuICAjIFRhZ2lcbiAgIyBAcmVmOiA/P1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihUQUdJWyBdPykoTUlEKSA/KFteOy9dKykgQnVpbGQvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJDIkMydcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1RhZ2knXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMiQzJ1xuXG4gICMjIyMjIyMjI1xuICAjIFRlY21vYmlsZVxuICAjIEByZWY6IGh0dHA6Ly93d3cudGVjbW9iaWxlLmNvbS9cbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooT3lzdGVyNTAwfE9wYWwgODAwKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdUZWNtb2JpbGUgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdUZWNtb2JpbGUnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBUZWNub1xuICAjIEByZWY6IHd3dy50ZWNuby1tb2JpbGUuY29tL+KAjlxuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihURUNOT1sgX10pKFteOy9dKykgQnVpbGQvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdUZWNubydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyJ1xuXG4gICMjIyMjIyMjI1xuICAjIFRlbGVjaGlwcywgVGVjaHZpc2lvbiBldmFsdWF0aW9uIGJvYXJkc1xuICAjIEByZWY6XG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqQW5kcm9pZCBmb3IgKFRlbGVjaGlwc3xUZWNodmlzaW9uKSAoW14gXSspICdcbiAgICByZWdleF9mbGFnOiAnaSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSAkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJyQxJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDInXG5cbiAgIyMjIyMjIyMjXG4gICMgVGVsc3RyYVxuICAjIEByZWY6IGh0dHA6Ly93d3cudGVsc3RyYS5jb20uYXUvaG9tZS1waG9uZS90aHViLTIvXG4gICMgQHJlZjogaHR0cHM6Ly9zdXBwb3J0Lmdvb2dsZS5jb20vZ29vZ2xlcGxheS9hbnN3ZXIvMTcyNzEzMT9obD1lblxuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihULUh1YjIpIEJ1aWxkLydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1RlbHN0cmEnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBUZXJyYVxuICAjIEByZWY6IGh0dHA6Ly93d3cud29ydG1hbm4uZGUvXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKFBBRCkgPygxMDBbMTJdKSBCdWlsZC8nXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnVGVycmEgJDEkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1RlcnJhJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEkMidcblxuICAjIyMjIyMjIyNcbiAgIyBUZXhldFxuICAjIEByZWY6IGh0dHA6Ly93d3cudGV4ZXQucnUvdGFibGV0L1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihUW0JNXS1cXGR7M31bXjsvXSspIEJ1aWxkLydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1RleGV0J1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgVGhhbGlhXG4gICMgQHJlZjogaHR0cDovL3d3dy50aGFsaWEuZGUvc2hvcC90b2xpbm8tc2hpbmUtZXJlYWRlci9zaG93L1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKih0b2xpbm8gW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1RoYWxpYSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAqQnVpbGQvLiogKFRPTElOT19CUk9XU0VSKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1RoYWxpYSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJ1RvbGlubyBTaGluZSdcblxuICAjIyMjIyMjIyNcbiAgIyBUaGxcbiAgIyBAcmVmOiBodHRwOi8vZW4udGhsLmNvbS5jbi9Nb2JpbGVcbiAgIyBAcmVmOiBodHRwOi8vdGhsbW9iaWxlc3RvcmUuY29tXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKD86Q0pbIC1dKT8oVGhMfFRITClbIC1dKFteOy9dKykgQnVpbGQvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxICQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnVGhsJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDInXG4gIC0gcmVnZXg6ICc7ICooVDEwMHxUMjAwfFQ1fFcxMDB8VzIwMHxXOHMpIEJ1aWxkLydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1RobCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIFQtTW9iaWxlIChPcGVyYXRvciBCcmFuZGVkIERldmljZXMpXG4gICMjIyMjIyMjI1xuICAjIEByZWY6IGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0hUQ19IZXJvXG4gIC0gcmVnZXg6ICc7ICooVC1Nb2JpbGVbIF9dRzJbIF9dVG91Y2gpIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnSFRDJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnSGVybydcbiAgIyBAcmVmOiBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9IVENfRGVzaXJlX1pcbiAgLSByZWdleDogJzsgKihULU1vYmlsZVsgX11HMikgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdIVEMnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdEZXNpcmUgWidcbiAgLSByZWdleDogJzsgKihULU1vYmlsZSBteVRvdWNoIFEpIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnSHVhd2VpJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnVTg3MzAnXG4gIC0gcmVnZXg6ICc7ICooVC1Nb2JpbGUgbXlUb3VjaCkgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdIdWF3ZWknXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdVODY4MCdcbiAgLSByZWdleDogJzsgKihULU1vYmlsZV9Fc3ByZXNzbykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdIVEMnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdFc3ByZXNzbydcbiAgLSByZWdleDogJzsgKihULU1vYmlsZSBHMSkgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdIVEMnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdEcmVhbSdcbiAgLSByZWdleDogJ1xcYihULU1vYmlsZSA/KT8obXlUb3VjaClbIF9dPyhbMzRdRylbIF9dPyhbXlxcL10qKSAoPzpNb3ppbGxhfEJ1aWxkKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSQyICQzICQ0J1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnSFRDJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDIgJDMgJDQnXG4gIC0gcmVnZXg6ICdcXGIoVC1Nb2JpbGUpXyhbXl9dKylfKC4qKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSAkMiAkMydcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1Rtb2JpbGUnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMiAkMydcbiAgLSByZWdleDogJ1xcYihULU1vYmlsZSlbXyBdPyguKj8pQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEgJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdUbW9iaWxlJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDInXG5cbiAgIyMjIyMjIyMjXG4gICMgVG9tdGVjXG4gICMgQHJlZjogaHR0cDovL3d3dy50b20tdGVjLmV1L3BhZ2VzL3RhYmxldHMucGhwXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnIChBVFBbMC05XXs0fSkgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdUb210ZWMnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBUb29reVxuICAjIEByZWY6IGh0dHA6Ly93d3cudG9va3ltb2JpbGUuY29tL1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJyAqKFRPT0tZKVsgX1xcLV0oW147L10rKSA/KD86QnVpbGR8OyknXG4gICAgcmVnZXhfZmxhZzogJ2knXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEgJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdUb29reSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyJ1xuXG4gICMjIyMjIyMjI1xuICAjIFRvc2hpYmFcbiAgIyBAcmVmOiBodHRwOi8vd3d3LnRvc2hpYmEuY28uanAvXG4gICMgQG1pc3Npbmc6IExUMTcwLCBUaHJpdmUgNywgVE9TSElCQSBTVEIxMFxuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJ1xcYihUT1NISUJBX0FDX0FORF9BWnxUT1NISUJBX0ZPTElPX0FORF9BfEZPTElPX0FORF9BKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1Rvc2hpYmEnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdGb2xpbyAxMDAnXG4gIC0gcmVnZXg6ICc7ICooW0ZmXW9saW8gPzEwMCkgQnVpbGQvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnVG9zaGliYSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJ0ZvbGlvIDEwMCdcbiAgLSByZWdleDogJzsgKihBVFswLTldezIsM30oPzpcXC1BfExFXFwtQXxQRVxcLUF8U0V8YSk/fEFUNy1BfEFUMVMwfEhpa2FyaS1pRnJhbWUvV0RQRi1bXjsvXSt8VEhSaVZFfFRocml2ZSkgQnVpbGQvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ1Rvc2hpYmEgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdUb3NoaWJhJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgVG91Y2htYXRlXG4gICMgQHJlZjogaHR0cDovL3RvdWNobWF0ZXBjLmNvbS9uZXcvXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKFRNLU1JRFxcZCtbXjsvXSt8VE9VQ0hNQVRFfE1JRC03NTApIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnVG91Y2htYXRlJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gICMgQHRvZG86IG5lZWRzIHZlcmlmaWNhdGlvbiB1c2VyLWFnZW50cyBtaXNzaW5nXG4gIC0gcmVnZXg6ICc7ICooVE0tU01cXGQrW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1RvdWNobWF0ZSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIFRyZXFcbiAgIyBAcmVmOiBodHRwOi8vd3d3LnRyZXEuY28uaWQvcHJvZHVjdFxuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihBMTAgW0JiXWFzaWMyPykgQnVpbGQvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnVHJlcSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnOyAqKFRSRVFbIF9cXC1dKShbXjsvXSspIEJ1aWxkJ1xuICAgIHJlZ2V4X2ZsYWc6ICdpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdUcmVxJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDInXG5cbiAgIyMjIyMjIyMjXG4gICMgVW1lb3hcbiAgIyBAcmVmOiBodHRwOi8vdW1lb3guY29tL1xuICAjIEBtb2RlbHM6IEE5MzZ8QTYwM3xYLTV8WC0zXG4gICMjIyMjIyMjI1xuICAjIEB0b2RvOiBndWVzc2VkIG1hcmtlcnNcbiAgLSByZWdleDogJzsgKihYLT81fFgtPzMpIEJ1aWxkLydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1VtZW94J1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gICMgQHRvZG86IGd1ZXNzZWQgbWFya2Vyc1xuICAtIHJlZ2V4OiAnOyAqKEE1MDJcXCs/fEE5MzZ8QTYwM3xYMXxYMikgQnVpbGQvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnVW1lb3gnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBWZXJzdXNcbiAgIyBAcmVmOiBodHRwOi8vdmVyc3VzdWsuY29tL3N1cHBvcnQuaHRtbFxuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJyhUT1VDSCg/OlRBQnxQQUQpLis/KSBCdWlsZC8nXG4gICAgcmVnZXhfZmxhZzogJ2knXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnVmVyc3VzICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnVmVyc3VzJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgVmVydHVcbiAgIyBAcmVmOiBodHRwOi8vd3d3LnZlcnR1LmNvbS9cbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICcoVkVSVFUpIChbXjsvXSspIEJ1aWxkLydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSAkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1ZlcnR1J1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDInXG5cbiAgIyMjIyMjIyMjXG4gICMgVmlkZW9jb25cbiAgIyBAcmVmOiBodHRwOi8vd3d3LnZpZGVvY29ubW9iaWxlcy5jb21cbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooVmlkZW9jb24pWyBfXFwtXShbXjsvXSspICooPzpCdWlsZHw7KSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSAkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1ZpZGVvY29uJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDInXG4gIC0gcmVnZXg6ICcgKFZUXFxkezJ9W0EtWmEtel0qKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1ZpZGVvY29uJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgVmlld3NvbmljXG4gICMgQHJlZjogaHR0cDovL3ZpZXdzb25pYy5jb21cbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooKD86Vmlld1BhZHxWaWV3UGhvbmV8VlNEKVteOy9dKykgQnVpbGQvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnVmlld3NvbmljJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICc7ICooVmlld1NvbmljLSkoW147L10rKSBCdWlsZC8nXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1ZpZXdzb25pYydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyJ1xuICAtIHJlZ2V4OiAnOyAqKEdUYWJsZXQuKikgQnVpbGQvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnVmlld3NvbmljJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgdml2b1xuICAjIEByZWY6IGh0dHA6Ly92aXZvLmNuL1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihbVnZdaXZvKVsgX10oW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSAkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ3Zpdm8nXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMidcblxuICAjIyMjIyMjIyNcbiAgIyBWb2RhZm9uZSAoT3BlcmF0b3IgQnJhbmRlZCBEZXZpY2VzKVxuICAjIEByZWY6ID8/XG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnKFZvZGFmb25lKSAoLiopIEJ1aWxkLydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSAkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJyQxJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDInXG5cbiAgIyMjIyMjIyMjXG4gICMgV2FsdG9uXG4gICMgQHJlZjogaHR0cDovL3d3dy53YWx0b25iZC5jb20vXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKD86V2FsdG9uWyBfXFwtXSk/KFByaW1vWyBfXFwtXVteOy9dKykgQnVpbGQnXG4gICAgcmVnZXhfZmxhZzogJ2knXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnV2FsdG9uICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnV2FsdG9uJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgV2lrb1xuICAjIEByZWY6IGh0dHA6Ly9mci53aWtvbW9iaWxlLmNvbS9jb2xsZWN0aW9uLnBocD9zPVNtYXJ0cGhvbmVzXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKD86V0lLT1sgXFwtXSk/KENJTktcXCs/fEJBUlJZfEJMT09NfERBUktGVUxMfERBUktNT09OfERBUktOSUdIVHxEQVJLU0lERXxGSVpafEhJR0hXQVl8SUdHWXxPWlpZfFJBSU5CT1d8U1RBSVJXQVl8U1VCTElNfFdBWHxDSU5LIFteOy9dKykgQnVpbGQvJ1xuICAgIHJlZ2V4X2ZsYWc6ICdpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ1dpa28gJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdXaWtvJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgV2VsbGNvTVxuICAjIEByZWY6ID8/XG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqV2VsbGNvTS0oW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdXZWxsY29tICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnV2VsbGNvbSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjIyNcbiAgIyBXZVRhYlxuICAjIEByZWY6IGh0dHA6Ly93ZXRhYi5tb2JpL1xuICAjIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICcoPzooV2VUYWIpLUJyb3dzZXJ8OyAod2V0YWIpIEJ1aWxkKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1dlVGFiJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnV2VUYWInXG5cbiAgIyMjIyMjIyMjXG4gICMgV29sZmdhbmdcbiAgIyBAcmVmOiBodHRwOi8vd29sZmdhbmdtb2JpbGUuY29tL1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihBVC1BU1teOy9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnV29sZmdhbmcgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdXb2xmZ2FuZydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIFdveHRlclxuICAjIEByZWY6IGh0dHA6Ly93d3cud294dGVyLmVzL2VzLWVzL2NhdGVnb3JpZXMvaW5kZXhcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooPzpXb3h0ZXJ8V3h0KSAoW147L10rKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdXb3h0ZXIgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdXb3h0ZXInXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBZYXJ2aWsgWmFuaWFcbiAgIyBAcmVmOiBodHRwOi8veWFydmlrLmNvbVxuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKig/OlhlbnRhIHxMdW5hICk/KFRBQlsyMzRdWzAtOV17Mn18VEFCMFs3OF0tXFxkezN9fFRBQjA/OS1cXGR7M318VEFCMVswM10tXFxkezN9fFNNUFxcZHsyfS1cXGR7M30pIEJ1aWxkLydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdZYXJ2aWsgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdZYXJ2aWsnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBZaWZhbmdcbiAgIyBAbm90ZTogTmVlZHMgdG8gYmUgYXQgdGhlIHZlcnkgbGFzdCBhcyBtYW51ZmFjdHVyZXIgYnVpbGRzIGZvciBvdGhlciBicmFuZHMuXG4gICMgQHJlZjogaHR0cDovL3d3dy55aWZhbmdkaWdpdGFsLmNvbS9cbiAgIyBAbW9kZWxzOiBNMTAxMCwgTTEwMTEsIE0xMDA3LCBNMTAwOCwgTTEwMDUsIE04OTksIE04OTlMUCwgTTkwOSwgTTgwMDAsXG4gICMgICBNODAwMSwgTTgwMDIsIE04MDAzLCBNODQ5LCBNODE1LCBNODE2LCBNODE5LCBNODA1LCBNODc4LCBNNzgwTFBXLFxuICAjICAgTTc3OCwgTTcwMDAsIE03MDAwQUQsIE03MDAwTkJELCBNNzAwMSwgTTcwMDIsIE03MDAyS0JELCBNNzc3LCBNNzY3LFxuICAjICAgTTc4OSwgTTc5OSwgTTc2OSwgTTc1NywgTTc1NSwgTTc1MywgTTc1MiwgTTczOSwgTTcyOSwgTTcyMywgTTcxMiwgTTcyN1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihbQS1aXXsyLDR9KShNXFxkezMsfVtBLVpdezJ9KShbXjtcXClcXC9dKikoPzogQnVpbGR8WztcXCldKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdZaWZhbmcgJDEkMiQzJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnWWlmYW5nJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDInXG5cbiAgIyMjIyMjIyMjXG4gICMgWGlhb01pXG4gICMgQHJlZjogaHR0cDovL3d3dy54aWFvbWkuY29tL2V2ZW50L2J1eXBob25lXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqKChNSXxITXxNSS1PTkV8UmVkbWkpWyAtXShOT1RFIHxOb3RlICk/W147L10qKSAoQnVpbGR8TUlVSSkvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ1hpYW9NaSAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1hpYW9NaSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIFhvbG9cbiAgIyBAcmVmOiBodHRwOi8vd3d3LnhvbG8uaW4vXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnOyAqWE9MT1sgX10oW147L10qdGFiLiopIEJ1aWxkJ1xuICAgIHJlZ2V4X2ZsYWc6ICdpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ1hvbG8gJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdYb2xvJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICc7ICpYT0xPWyBfXShbXjsvXSspIEJ1aWxkJ1xuICAgIHJlZ2V4X2ZsYWc6ICdpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ1hvbG8gJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdYb2xvJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICc7ICoocVxcZDB7MiwzfVthLXpdPykgQnVpbGQnXG4gICAgcmVnZXhfZmxhZzogJ2knXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnWG9sbyAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1hvbG8nXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBYb3JvXG4gICMgQHJlZjogaHR0cDovL3d3dy54b3JvLmRlL3Byb2R1a3RlL1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihQQUQgP1s3OV1cXGQrW147L10qfFRlbGVQQURcXGQrW147L10pIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ1hvcm8gJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdYb3JvJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgWm9wb1xuICAjIEByZWY6IGh0dHA6Ly93d3cuem9wb21vYmlsZXMuY29tL3Byb2R1Y3RzLmh0bWxcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooPzooPzpaT1BPfFpvcG8pWyBfXShbXjsvXSspfChaUCA/KD86XFxkezJ9W147L10rfEMyKSl8KENbMjM3OV0pKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSQyJDMnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdab3BvJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEkMiQzJ1xuXG4gICMjIyMjIyMjI1xuICAjIFppaUxhYnNcbiAgIyBAcmVmOiBodHRwOi8vd3d3LnppaWxhYnMuY29tL3Byb2R1Y3RzL3BsYXRmb3Jtcy9hbmRyb2lkcmVmZXJlbmNldGFibGV0cy5waHBcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ICooWmlpTEFCUykgKFppaVteOy9dKikgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEgJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdaaWlMYWJzJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDInXG4gIC0gcmVnZXg6ICc7ICooWmlpKV8oW147L10qKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSAkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1ppaUxhYnMnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMidcblxuICAjIyMjIyMjIyNcbiAgIyBaVEVcbiAgIyBAcmVmOiBodHRwOi8vd3d3Lnp0ZWRldmljZXMuY29tL1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgKihBUklaT05BfCg/OkFUTEFTfEF0bGFzKSBXfEQ5MzB8R3JhbmQgKD86W1NYXVteO10qfEVyYXxNZW1vW147XSopfEpPRXwoPzpLaXN8S0lTKVxcYlteO10qfExpYnJhfExpZ2h0IFteO10qfE44WzA1Nl1bMDFdfE44NTBMfE44MDAwfE45WzE1XVxcZHsyfXxOOTgxMHxOWDUwMXxPcHRpa3woPzpWaXAgKVJhY2VyW147XSp8UmFjZXJJSXxSQUNFUklJfFNhbiBGcmFuY2lzY29bXjtdKnxWOVtBQ118VjU1fFY4ODF8Wls2NzldWzAtOV17Mn1bQS16XT8pIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnWlRFJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICc7ICooW0EtWl1cXGQrKV9VU0FfW147XSogQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdaVEUnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKihTbWFydFRhYlxcZCspW147XSogQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdaVEUnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKig/OkJsYWRlfEJMQURFfFpURS1CTEFERSkoW147L10qKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdaVEUgQmxhZGUkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1pURSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJ0JsYWRlJDEnXG4gIC0gcmVnZXg6ICc7ICooPzpTa2F0ZXxTS0FURXxaVEUtU0tBVEUpKFteOy9dKikgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnWlRFIFNrYXRlJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdaVEUnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdTa2F0ZSQxJ1xuICAtIHJlZ2V4OiAnOyAqKE9yYW5nZSB8T3B0aW11cyApKE1vbnRlIENhcmxvfFNhbiBGcmFuY2lzY28pIEJ1aWxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdaVEUnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSQyJ1xuICAtIHJlZ2V4OiAnOyAqKD86WlhZLVpURV98WlRFXFwtVSB8WlRFW1xcLSBfXXxaVEUtQ1tfIF0pKFteOy9dKykgQnVpbGQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnWlRFICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnWlRFJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gICMgb3BlcmF0b3Igc3BlY2lmaWNcbiAgLSByZWdleDogJzsgKEJBU0UpIChsdXRlYXxMdXRlYSAyfFRhYlteO10qKSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSAkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1pURSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxICQyJ1xuICAtIHJlZ2V4OiAnOyAoQXZlYSBpblRvdWNoIDJ8c29mdCBzdG9uZXx0bW4gc21hcnQgYTd8TW92aXN0YXJbIF9dTGluaykgQnVpbGQnXG4gICAgcmVnZXhfZmxhZzogJ2knXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdaVEUnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKih2cDlwbHVzKVxcKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1pURSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjIyNcbiAgIyBaeW5jXG4gICMgQHJlZjogaHR0cDovL3d3dy56eW5jLmluL2luZGV4LnBocC9vdXItcHJvZHVjdHMvdGFibGV0LXBoYWJsZXRzXG4gICMjIyMjIyMjIyNcbiAgLSByZWdleDogJzsgPyhDbG91ZFsgX11aNXx6MTAwMHxaOTkgMkd8ejk5fHo5MzB8ejk5OXx6OTkwfHo5MDl8WjkxOXx6OTAwKSBCdWlsZC8nXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdaeW5jJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjI1xuICAjIEtpbmRsZVxuICAjIEBub3RlOiBOZWVkcyB0byBiZSBhZnRlciBTb255IFBsYXlzdGF0aW9uIFZpdGEgYXMgdGhpcyBVQSBjb250YWlucyBTaWxrLzMuMlxuICAjIEByZWY6IGh0dHBzOi8vZGV2ZWxvcGVyLmFtYXpvbi5jb20vc2RrL2ZpcmUvc3BlY2lmaWNhdGlvbnMuaHRtbFxuICAjIEByZWY6IGh0dHA6Ly9hbWF6b25zaWxrLndvcmRwcmVzcy5jb20vdXNlZnVsLWJpdHMvc2lsay11c2VyLWFnZW50L1xuICAjIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICc7ID8oS0ZPVHxLaW5kbGUgRmlyZSkgQnVpbGRcXGInXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnS2luZGxlIEZpcmUnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdBbWF6b24nXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdLaW5kbGUgRmlyZSdcbiAgLSByZWdleDogJzsgPyhLRk9URXxBbWF6b24gS2luZGxlIEZpcmUyKSBCdWlsZFxcYidcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdLaW5kbGUgRmlyZSAyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQW1hem9uJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnS2luZGxlIEZpcmUgMidcbiAgLSByZWdleDogJzsgPyhLRlRUKSBCdWlsZFxcYidcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdLaW5kbGUgRmlyZSBIRCdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0FtYXpvbidcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJ0tpbmRsZSBGaXJlIEhEIDdcIidcbiAgLSByZWdleDogJzsgPyhLRkpXSSkgQnVpbGRcXGInXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnS2luZGxlIEZpcmUgSEQgOC45XCIgV2lGaSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0FtYXpvbidcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJ0tpbmRsZSBGaXJlIEhEIDguOVwiIFdpRmknXG4gIC0gcmVnZXg6ICc7ID8oS0ZKV0EpIEJ1aWxkXFxiJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0tpbmRsZSBGaXJlIEhEIDguOVwiIDRHJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQW1hem9uJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnS2luZGxlIEZpcmUgSEQgOC45XCIgNEcnXG4gIC0gcmVnZXg6ICc7ID8oS0ZTT1dJKSBCdWlsZFxcYidcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdLaW5kbGUgRmlyZSBIRCA3XCIgV2lGaSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0FtYXpvbidcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJ0tpbmRsZSBGaXJlIEhEIDdcIiBXaUZpJ1xuICAtIHJlZ2V4OiAnOyA/KEtGVEhXSSkgQnVpbGRcXGInXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnS2luZGxlIEZpcmUgSERYIDdcIiBXaUZpJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQW1hem9uJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnS2luZGxlIEZpcmUgSERYIDdcIiBXaUZpJ1xuICAtIHJlZ2V4OiAnOyA/KEtGVEhXQSkgQnVpbGRcXGInXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnS2luZGxlIEZpcmUgSERYIDdcIiA0RydcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0FtYXpvbidcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJ0tpbmRsZSBGaXJlIEhEWCA3XCIgNEcnXG4gIC0gcmVnZXg6ICc7ID8oS0ZBUFdJKSBCdWlsZFxcYidcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdLaW5kbGUgRmlyZSBIRFggOC45XCIgV2lGaSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0FtYXpvbidcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJ0tpbmRsZSBGaXJlIEhEWCA4LjlcIiBXaUZpJ1xuICAtIHJlZ2V4OiAnOyA/KEtGQVBXQSkgQnVpbGRcXGInXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnS2luZGxlIEZpcmUgSERYIDguOVwiIDRHJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQW1hem9uJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnS2luZGxlIEZpcmUgSERYIDguOVwiIDRHJ1xuICAtIHJlZ2V4OiAnOyA/QW1hem9uIChbXjsvXSspIEJ1aWxkXFxiJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQW1hem9uJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICc7ID8oS2luZGxlKSBCdWlsZFxcYidcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdLaW5kbGUnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdBbWF6b24nXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdLaW5kbGUnXG4gIC0gcmVnZXg6ICc7ID8oU2lsaykvKFxcZCspXFwuKFxcZCspKD86XFwuKFswLTlcXC1dKykpPyBCdWlsZFxcYidcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdLaW5kbGUgRmlyZSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0FtYXpvbidcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJ0tpbmRsZSBGaXJlJDInXG4gIC0gcmVnZXg6ICcgKEtpbmRsZSkvKFxcZCtcXC5cXGQrKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdLaW5kbGUnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdBbWF6b24nXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSAkMidcbiAgLSByZWdleDogJyAoU2lsa3xLaW5kbGUpLyhcXGQrKVxcLidcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdLaW5kbGUnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdBbWF6b24nXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdLaW5kbGUnXG5cbiAgIyMjIyMjIyMjXG4gICMgRGV2aWNlcyBmcm9tIGNoaW5lc2UgbWFudWZhY3R1cmVyKHMpXG4gICMgQG5vdGU6IGlkZW50aWZpZWQgYnkgeC13YXAtcHJvZmlsZSBodHRwOi8vMjE4LjI0OS40Ny45NC9YaWFuZ2hlLy4qXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnKHNwcmQpXFwtKFteL10rKS8nXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEgJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyJ1xuICAjIEByZWY6IGh0dHA6Ly9lc2hpbmVjaGluYS5lbi5hbGliYWJhLmNvbS9cbiAgLSByZWdleDogJzsgKihIXFxkezJ9MDBcXCs/KSBCdWlsZCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0hlcm8nXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJzsgKihpcGhvbmV8aVBob25lNSkgQnVpbGQvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ1hpYW5naGUgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdYaWFuZ2hlJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICc7ICooZVxcZHs0fVthLXpdP18/dlxcZCt8djg5X1teOy9dKylbXjsvXSsgQnVpbGQvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ1hpYW5naGUgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdYaWFuZ2hlJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgQ2VsbHVsYXJcbiAgIyBAcmVmOlxuICAjIEBub3RlOiBPcGVyYXRvciBicmFuZGVkIGRldmljZXNcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICdcXGJVU0NDW19cXC1dPyhbXiA7L1xcKV0rKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0NlbGx1bGFyJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xuICAjIFdpbmRvd3MgUGhvbmUgUGFyc2Vyc1xuICAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXG5cbiAgIyMjIyMjIyMjXG4gICMgQWxjYXRlbCBXaW5kb3dzIFBob25lc1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJ1dpbmRvd3MgUGhvbmUgW147XSs7IC4qP0lFTW9iaWxlL1teO1xcKV0rWztcXCldID8oPzpBUk07ID9Ub3VjaDsgP3xUb3VjaDsgPyk/KD86QUxDQVRFTClbXjtdKjsgKihbXjssXFwpXSspJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0FsY2F0ZWwgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdBbGNhdGVsJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgQXN1cyBXaW5kb3dzIFBob25lc1xuICAjIyMjIyMjIyNcbiAgI34gLSByZWdleDogJ1dpbmRvd3MgUGhvbmUgW147XSs7IC4qP0lFTW9iaWxlL1teO1xcKV0rWztcXCldID8oPzpBUk07ID9Ub3VjaDsgP3xUb3VjaDsgP3xXcHNMb25kb25UZXN0OyA/KT8oPzpBU1VTfEFzdXMpW147XSo7ICooW147LFxcKV0rKSdcbiAgLSByZWdleDogJ1dpbmRvd3MgUGhvbmUgW147XSs7IC4qP0lFTW9iaWxlL1teO1xcKV0rWztcXCldID8oPzpBUk07ID9Ub3VjaDsgP3xUb3VjaDsgP3xXcHNMb25kb25UZXN0OyA/KT8oPzpBU1VTfEFzdXMpW147XSo7ICooW147LFxcKV0rKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdBc3VzICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQXN1cydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIERlbGwgV2luZG93cyBQaG9uZXNcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICdXaW5kb3dzIFBob25lIFteO10rOyAuKj9JRU1vYmlsZS9bXjtcXCldK1s7XFwpXSA/KD86QVJNOyA/VG91Y2g7ID98VG91Y2g7ID8pPyg/OkRFTEx8RGVsbClbXjtdKjsgKihbXjssXFwpXSspJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0RlbGwgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdEZWxsJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgSFRDIFdpbmRvd3MgUGhvbmVzXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnV2luZG93cyBQaG9uZSBbXjtdKzsgLio/SUVNb2JpbGUvW147XFwpXStbO1xcKV0gPyg/OkFSTTsgP1RvdWNoOyA/fFRvdWNoOyA/fFdwc0xvbmRvblRlc3Q7ID8pPyg/OkhUQ3xIdGN8SFRDX2Jsb2NrZWRbXjtdKilbXjtdKjsgKig/OkhUQyk/KFteOyxcXCldKyknXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnSFRDICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnSFRDJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgSHVhd2VpIFdpbmRvd3MgUGhvbmVzXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnV2luZG93cyBQaG9uZSBbXjtdKzsgLio/SUVNb2JpbGUvW147XFwpXStbO1xcKV0gPyg/OkFSTTsgP1RvdWNoOyA/fFRvdWNoOyA/KT8oPzpIVUFXRUkpW147XSo7ICooPzpIVUFXRUkgKT8oW147LFxcKV0rKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdIdWF3ZWkgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdIdWF3ZWknXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBMRyBXaW5kb3dzIFBob25lc1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJ1dpbmRvd3MgUGhvbmUgW147XSs7IC4qP0lFTW9iaWxlL1teO1xcKV0rWztcXCldID8oPzpBUk07ID9Ub3VjaDsgP3xUb3VjaDsgPyk/KD86TEd8TGcpW147XSo7ICooPzpMR1sgXFwtXSk/KFteOyxcXCldKyknXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnTEcgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdMRydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIE5va2EgV2luZG93cyBQaG9uZXNcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICdXaW5kb3dzIFBob25lIFteO10rOyAuKj9JRU1vYmlsZS9bXjtcXCldK1s7XFwpXSA/KD86QVJNOyA/VG91Y2g7ID98VG91Y2g7ID8pPyg/Ok5PS0lBfE5va2lhKVteO10qOyAqKD86Tk9LSUEgP3xOb2tpYSA/fExVTUlBID98W0xsXXVtaWEgPykqKFxcZHszLH1bXjtcXCldKiknXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnTHVtaWEgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdOb2tpYSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJ0x1bWlhICQxJ1xuICAtIHJlZ2V4OiAnV2luZG93cyBQaG9uZSBbXjtdKzsgLio/SUVNb2JpbGUvW147XFwpXStbO1xcKV0gPyg/OkFSTTsgP1RvdWNoOyA/fFRvdWNoOyA/KT8oPzpOT0tJQXxOb2tpYSlbXjtdKjsgKihSTS1cXGR7Myx9KSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdOb2tpYSAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ05va2lhJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICcoPzpXaW5kb3dzIFBob25lIFteO10rOyAuKj9JRU1vYmlsZS9bXjtcXCldK1s7XFwpXXxXUERlc2t0b3A7KSA/KD86QVJNOyA/VG91Y2g7ID98VG91Y2g7ID8pPyg/Ok5PS0lBfE5va2lhKVteO10qOyAqKD86Tk9LSUEgP3xOb2tpYSA/fExVTUlBID98W0xsXXVtaWEgPykqKFteO1xcKV0rKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdOb2tpYSAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ05va2lhJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgTWljcm9zb2Z0IFdpbmRvd3MgUGhvbmVzXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnV2luZG93cyBQaG9uZSBbXjtdKzsgLio/SUVNb2JpbGUvW147XFwpXStbO1xcKV0gPyg/OkFSTTsgP1RvdWNoOyA/fFRvdWNoOyA/KT8oPzpNaWNyb3NvZnQoPzogQ29ycG9yYXRpb24pPylbXjtdKjsgKihbXjssXFwpXSspJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ01pY3Jvc29mdCAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ01pY3Jvc29mdCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIFNhbXN1bmcgV2luZG93cyBQaG9uZXNcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICdXaW5kb3dzIFBob25lIFteO10rOyAuKj9JRU1vYmlsZS9bXjtcXCldK1s7XFwpXSA/KD86QVJNOyA/VG91Y2g7ID98VG91Y2g7ID98V3BzTG9uZG9uVGVzdDsgPyk/KD86U0FNU1VORylbXjtdKjsgKig/OlNBTVNVTkcgKT8oW147LFxcLlxcKV0rKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdTYW1zdW5nICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnU2Ftc3VuZydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjI1xuICAjIFRvc2hpYmEgV2luZG93cyBQaG9uZXNcbiAgIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICdXaW5kb3dzIFBob25lIFteO10rOyAuKj9JRU1vYmlsZS9bXjtcXCldK1s7XFwpXSA/KD86QVJNOyA/VG91Y2g7ID98VG91Y2g7ID98V3BzTG9uZG9uVGVzdDsgPyk/KD86VE9TSElCQXxGdWppdHN1VG9zaGliYU1vYmlsZUNvbW11bilbXjtdKjsgKihbXjssXFwpXSspJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ1Rvc2hpYmEgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdUb3NoaWJhJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjXG4gICMgR2VuZXJpYyBXaW5kb3dzIFBob25lc1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJ1dpbmRvd3MgUGhvbmUgW147XSs7IC4qP0lFTW9iaWxlL1teO1xcKV0rWztcXCldID8oPzpBUk07ID9Ub3VjaDsgP3xUb3VjaDsgP3xXcHNMb25kb25UZXN0OyA/KT8oW147XSspOyAqKFteOyxcXCldKyknXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEgJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyJ1xuXG4gICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcbiAgIyBPdGhlciBEZXZpY2VzIFBhcnNlclxuICAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXG5cbiAgIyMjIyMjIyMjXG4gICMgU2Ftc3VuZyBCYWRhIFBob25lc1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJyg/Ol58OyApU0FNU1VOR1xcLShbQS1aYS16MC05XFwtXSspLiogQmFkYS8nXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnU2Ftc3VuZyAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1NhbXN1bmcnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyNcbiAgIyBGaXJlZm94IE9TXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnXFwoTW9iaWxlOyBBTENBVEVMID8oT25lfE9ORSkgPyhUb3VjaHxUT1VDSCkgPyhbXjsvXSspKD86L1teO10rKT87IHJ2OlteXFwpXStcXCkgR2Vja28vW15cXC9dKyBGaXJlZm94LydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdBbGNhdGVsICQxICQyICQzJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQWxjYXRlbCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJ09uZSBUb3VjaCAkMydcbiAgLSByZWdleDogJ1xcKE1vYmlsZTsgKD86WlRFKFteO10rKXwoT3BlbkMpKTsgcnY6W15cXCldK1xcKSBHZWNrby9bXlxcL10rIEZpcmVmb3gvJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ1pURSAkMSQyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnWlRFJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEkMidcblxuICAjIyMjIyMjIyMjXG4gICMgTk9LSUFcbiAgIyBAbm90ZTogTm9raWFOOC0wMCBjb21lcyBiZWZvcmUgaXBob25lLiBTb21ldGltZXMgc3Bvb2ZzIGlwaG9uZVxuICAjIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICdOb2tpYShOWzAtOV0rKShbQS16X1xcLV1bQS16MC05X1xcLV0qKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdOb2tpYSAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ05va2lhJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEkMidcbiAgLSByZWdleDogJyg/Ok5PS0lBfE5va2lhKSg/OlxcLXwgKikoPzooW0EtWmEtejAtOV0rKVxcLVswLTlhLWZdezMyfXwoW0EtWmEtejAtOVxcLV0rKSg/OlVDQnJvd3Nlcil8KFtBLVphLXowLTlcXC1dKykpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ05va2lhICQxJDIkMydcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ05va2lhJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEkMiQzJ1xuICAtIHJlZ2V4OiAnTHVtaWEgKFtBLVphLXowLTlcXC1dKyknXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnTHVtaWEgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdOb2tpYSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJ0x1bWlhICQxJ1xuICAjIFVDV0VCIEJyb3dzZXIgb24gU3ltYmlhblxuICAtIHJlZ2V4OiAnXFwoU3ltYmlhbjsgVTsgUzYwIFY1OyBbQS16XXsyfVxcLVtBLXpdezJ9OyAoU29ueUVyaWNzc29ufFNhbXN1bmd8Tm9raWF8TEcpKFteOy9dKylcXCknXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEgJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyJ1xuICAjIE5va2lhIFN5bWJpYW5cbiAgLSByZWdleDogJ1xcKFN5bWJpYW4oPzovMyk/OyBVOyAoW147XSspOydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdOb2tpYSAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ05va2lhJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjI1xuICAjIEJsYWNrQmVycnlcbiAgIyBAcmVmOiBodHRwOi8vd3d3LnVzZXJhZ2VudHN0cmluZy5jb20vcGFnZXMvQmxhY2tCZXJyeS9cbiAgIyMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnQkIxMDsgKFtBLVphLXowLTlcXC0gXSspXFwpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0JsYWNrQmVycnkgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdCbGFja0JlcnJ5J1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICdQbGF5W0JiXW9vay4rUklNIFRhYmxldCBPUydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdCbGFja0JlcnJ5IFBsYXlib29rJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQmxhY2tCZXJyeSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJ1BsYXlib29rJ1xuICAtIHJlZ2V4OiAnQmxhY2tbQmJdZXJyeSAoWzAtOV0rKTsnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnQmxhY2tCZXJyeSAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0JsYWNrQmVycnknXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJ0JsYWNrW0JiXWVycnkoWzAtOV0rKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdCbGFja0JlcnJ5ICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQmxhY2tCZXJyeSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnQmxhY2tbQmJdZXJyeTsnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnQmxhY2tCZXJyeSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0JsYWNrQmVycnknXG5cbiAgIyMjIyMjIyMjI1xuICAjIFBBTE0gLyBIUFxuICAjIEBub3RlOiBzb21lIHBhbG0gZGV2aWNlcyBtdXN0IGNvbWUgYmVmb3JlIGlwaG9uZS4gc29tZXRpbWVzIHNwb29mcyBpcGhvbmUgaW4gdWFcbiAgIyMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnKFByZXxQaXhpKS9cXGQrXFwuXFxkKydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdQYWxtICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnUGFsbSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnUGFsbShbMC05XSspJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ1BhbG0gJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdQYWxtJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICdUcmVvKFtBLVphLXowLTldKyknXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnUGFsbSBUcmVvICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnUGFsbSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJ1RyZW8gJDEnXG4gIC0gcmVnZXg6ICd3ZWJPUy4qKFAxNjBVKD86TkEpPykvKFxcZCspLihcXGQrKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdIUCBWZWVyJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnSFAnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdWZWVyJ1xuICAtIHJlZ2V4OiAnKFRvdWNoW1BwXWFkKS9cXGQrXFwuXFxkKydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdIUCBUb3VjaFBhZCdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0hQJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnVG91Y2hQYWQnXG4gIC0gcmVnZXg6ICdIUGlQQVEoW0EtWmEtejAtOV0rKS9cXGQrLlxcZCsnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnSFAgaVBBUSAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0hQJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnaVBBUSAkMSdcbiAgLSByZWdleDogJ1BEQTsgKFBhbG1PUykvc29ueS9tb2RlbCAoW2Etel0rKS9SZXZpc2lvbidcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1NvbnknXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSAkMidcblxuICAjIyMjIyMjIyMjXG4gICMgQXBwbGVUVlxuICAjIE5vIGJ1aWx0IGluIGJyb3dzZXIgdGhhdCBJIGNhbiB0ZWxsXG4gICMgU3RhY2sgT3ZlcmZsb3cgaW5kaWNhdGVkIGlUdW5lcy1BcHBsZVRWLzQuMSBhcyBhIGtub3duIFVBIGZvciBhcHAgYXZhaWxhYmxlIGFuZCBJJ20gc2VlaW5nIGl0IGluIGxpdmUgdHJhZmZpY1xuICAjIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICcoQXBwbGVcXHM/VFYpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0FwcGxlVFYnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdBcHBsZSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJ0FwcGxlVFYnXG5cbiAgIyMjIyMjIyMjXG4gICMgVGVzbGEgTW9kZWwgU1xuICAjIyMjIyMjIyNcbiAgLSByZWdleDogJyhRdENhckJyb3dzZXIpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ1Rlc2xhIE1vZGVsIFMnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdUZXNsYSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJ01vZGVsIFMnXG5cbiAgIyMjIyMjIyMjI1xuICAjIGlTVFVGRlxuICAjIEBub3RlOiBjb21wbGV0ZSBidXQgcHJvYmFibHkgY2F0Y2hlcyBzcG9vZnNcbiAgIyAgIGlwYWQgYW5kIGlwb2QgbXVzdCBiZSBwYXJzZWQgYmVmb3JlIGlwaG9uZVxuICAjICAgY2Fubm90IGRldGVybWluZSBzcGVjaWZpYyBkZXZpY2UgdHlwZSBmcm9tIHVhIHN0cmluZy4gKDNnLCAzZ3MsIDQsIGV0YylcbiAgIyMjIyMjIyMjI1xuICAjIEBub3RlOiBvbiBzb21lIHVhIHRoZSBkZXZpY2UgY2FuIGJlIGlkZW50aWZpZWQgZS5nLiBpUGhvbmU1LDFcbiAgLSByZWdleDogJyhpUGhvbmV8aVBhZHxpUG9kKShcXGQrLFxcZCspJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQXBwbGUnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSQyJ1xuICAjIEBub3RlOiBpUGFkIG5lZWRzIHRvIGJlIGJlZm9yZSBpUGhvbmVcbiAgLSByZWdleDogJyhpUGFkKSg/Ojt8IFNpbXVsYXRvcjspJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQXBwbGUnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJyhpUG9kKSg/Ojt8IHRvdWNoO3wgU2ltdWxhdG9yOyknXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdBcHBsZSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnKGlQaG9uZSkoPzo7fCBTaW11bGF0b3I7KSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0FwcGxlJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gICMgQG5vdGU6IGRlc2t0b3AgYXBwbGljYXRpb25zIHNob3cgZGV2aWNlIGluZm9cbiAgLSByZWdleDogJ0NGTmV0d29yay8uKiBEYXJ3aW4vXFxkLipcXCgoKD86TWFjfGlNYWN8UG93ZXJNYWN8UG93ZXJCb29rKVteXFxkXSopKFxcZCspKD86LHwlMkMpKFxcZCspJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJDIsJDMnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdBcHBsZSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJDIsJDMnXG4gICMgQG5vdGU6IG5ld2VyIGRlc2t0b3AgYXBwbGljYXRpb25zIGRvbid0IHNob3cgZGV2aWNlIGluZm9cbiAgIyBUaGlzIGlzIGhlcmUgc28gYXMgdG8gbm90IGhhdmUgdGhlbSByZWNvcmRlZCBhcyBpT1MtRGV2aWNlXG4gIC0gcmVnZXg6ICdDRk5ldHdvcmsvLiogRGFyd2luL1xcZCtcXC5cXGQrXFwuXFxkKyBcXCh4ODZfNjRcXCknXG4gICMgQG5vdGU6IGlPUyBhcHBsaWNhdGlvbnMgZG8gbm90IHNob3cgZGV2aWNlIGluZm9cbiAgLSByZWdleDogJ0NGTmV0d29yay8uKiBEYXJ3aW4vXFxkJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ2lPUy1EZXZpY2UnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdBcHBsZSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJ2lPUy1EZXZpY2UnXG5cbiAgIyMjIyMjIyMjI1xuICAjIEFjZXJcbiAgIyMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnYWNlcl8oW0EtWmEtejAtOV0rKV8nXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnQWNlciAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0FjZXInXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyMjXG4gICMgQWxjYXRlbFxuICAjIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICcoPzpBTENBVEVMfEFsY2F0ZWwpLShbQS1aYS16MC05XFwtXSspJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0FsY2F0ZWwgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdBbGNhdGVsJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjI1xuICAjIEFtb2lcbiAgIyMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnKD86QW1vaXxBTU9JKVxcLShbQS1aYS16MC05XSspJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0Ftb2kgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdBbW9pJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjI1xuICAjIEFzdXNcbiAgIyMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnKD86OyB8XFwvfF4pKCg/OlRyYW5zZm9ybWVyICg/OlBhZHxQcmltZSkgfFRyYW5zZm9ybWVyIHxQYWRGb25lWyBfXT8pW0EtWmEtejAtOV0qKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdBc3VzICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQXN1cydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnKD86YXN1cy4qP0FTVVN8QXN1c3xBU1VTfGFzdXMpW1xcLSA7XSooKD86VHJhbnNmb3JtZXIgKD86UGFkfFByaW1lKSB8VHJhbnNmb3JtZXIgfFBhZGZvbmUgfE5leHVzWyBfXSk/W0EtWmEtejAtOV0rKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdBc3VzICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQXN1cydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG5cbiAgIyMjIyMjIyMjI1xuICAjIEJpcmRcbiAgIyMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnXFxiQklSRFsgXFwtXFwuXShbQS1aYS16MC05XSspJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0JpcmQgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdCaXJkJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjI1xuICAjIERlbGxcbiAgIyMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnXFxiRGVsbCAoW0EtWmEtejAtOV0rKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdEZWxsICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnRGVsbCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjIyNcbiAgIyBEb0NvTW9cbiAgIyMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnRG9Db01vLzJcXC4wIChbQS1aYS16MC05XSspJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0RvQ29NbyAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0RvQ29NbydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnKFtBLVphLXowLTldKylfVztGT01BJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0RvQ29NbyAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0RvQ29NbydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnKFtBLVphLXowLTldKyk7Rk9NQSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdEb0NvTW8gJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdEb0NvTW8nXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyMjXG4gICMgaHRjXG4gICMjIyMjIyMjIyNcbiAgLSByZWdleDogJ1xcYig/OkhUQy98SFRDL1thLXowLTldKy8pP0hUQ1sgX1xcLTtdPyAqKC4qPykoPzotP01vemlsbGF8ZmluZ2VyUHJpbnR8WzsvXFwoXFwpXXwkKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdIVEMgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdIVEMnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyMjXG4gICMgSHVhd2VpXG4gICMjIyMjIyMjIyNcbiAgLSByZWdleDogJ0h1YXdlaShbQS1aYS16MC05XSspJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0h1YXdlaSAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0h1YXdlaSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnSFVBV0VJLShbQS1aYS16MC05XSspJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0h1YXdlaSAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0h1YXdlaSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAndm9kYWZvbmUoW0EtWmEtejAtOV0rKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdIdWF3ZWkgVm9kYWZvbmUgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdIdWF3ZWknXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdWb2RhZm9uZSAkMSdcblxuICAjIyMjIyMjIyMjXG4gICMgaS1tYXRlXG4gICMjIyMjIyMjIyNcbiAgLSByZWdleDogJ2lcXC1tYXRlIChbQS1aYS16MC05XSspJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ2ktbWF0ZSAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ2ktbWF0ZSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjIyNcbiAgIyBreW9jZXJhXG4gICMjIyMjIyMjIyNcbiAgLSByZWdleDogJ0t5b2NlcmFcXC0oW0EtWmEtejAtOV0rKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdLeW9jZXJhICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnS3lvY2VyYSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnS1dDXFwtKFtBLVphLXowLTldKyknXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnS3lvY2VyYSAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0t5b2NlcmEnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyMjXG4gICMgbGVub3ZvXG4gICMjIyMjIyMjIyNcbiAgLSByZWdleDogJ0xlbm92b1tfXFwtXShbQS1aYS16MC05XSspJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0xlbm92byAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0xlbm92bydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjIyNcbiAgIyBIYmJUViAoRXVyb3BlYW4gYW5kIEF1c3RyYWxpYW4gc3RhbmRhcmQpXG4gICMgd3JpdHRlbiBiZWZvcmUgdGhlIExHIHJlZ2V4ZXMsIGFzIExHIGlzIG1ha2luZyBIYmJUViB0b29cbiAgIyMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnKEhiYlRWKS9bMC05XStcXC5bMC05XStcXC5bMC05XSsgXFwoW147XSo7ICooTEcpRSAqOyAqKFteO10qKSAqO1teO10qO1teO10qO1xcKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJyQyJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDMnXG4gIC0gcmVnZXg6ICcoSGJiVFYpLzFcXC4xXFwuMS4qQ0UtSFRNTC8xXFwuXFxkOyhWZW5kb3IvKSooVEhPTVteO10qPylbO1xcc10oPzouKlNXLVZlcnNpb24vLiopKihMRlteO10rKTs/J1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnVGhvbXNvbidcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQ0J1xuICAtIHJlZ2V4OiAnKEhiYlRWKSg/Oi8xXFwuMVxcLjEpPyg/OiA/XFwoOzs7OztcXCkpPzsgKkNFLUhUTUwoPzovMVxcLlxcZCk/OyAqKFteIF0rKSAoW147XSspOydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJyQyJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDMnXG4gIC0gcmVnZXg6ICcoSGJiVFYpLzFcXC4xXFwuMSBcXCg7Ozs7O1xcKSBNYXBsZV8yMDExJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnU2Ftc3VuZydcbiAgLSByZWdleDogJyhIYmJUVikvWzAtOV0rXFwuWzAtOV0rXFwuWzAtOV0rIFxcKFteO10qOyAqKD86Q1VTOihbXjtdKil8KFteO10rKSkgKjsgKihbXjtdKikgKjsuKjsnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICckMiQzJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDQnXG4gIC0gcmVnZXg6ICcoSGJiVFYpL1swLTldK1xcLlswLTldK1xcLlswLTldKydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyMjXG4gICMgTEdFIE5ldENhc3QgVFZcbiAgIyMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnTEdFOyAoPzpNZWRpYVxcLyk/KFteO10qKTtbXjtdKjtbXjtdKjs/XFwpOyBcIj9MRyBOZXRDYXN0KFxcLlRWfFxcLk1lZGlhfCktXFxkKydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdOZXRDYXN0JDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdMRydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjIyNcbiAgIyBJbmV0dHZCcm93c2VyXG4gICMjIyMjIyMjIyNcbiAgLSByZWdleDogJ0luZXR0dkJyb3dzZXIvWzAtOV0rXFwuWzAtOUEtWl0rIFxcKFteO10qOyhTb255KShbXjtdKik7W147XSo7W15cXCldKlxcKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdJbmV0dHYnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyJ1xuICAtIHJlZ2V4OiAnSW5ldHR2QnJvd3Nlci9bMC05XStcXC5bMC05QS1aXSsgXFwoW147XSo7KFteO10qKTtbXjtdKjtbXlxcKV0qXFwpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0luZXR0didcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0dlbmVyaWNfSW5ldHR2J1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICcoPzpJbmV0dHZCcm93c2VyfFRTQk5ldFRWfE5FVFRWfEhCQlRWKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdJbmV0dHYnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdHZW5lcmljX0luZXR0didcblxuICAjIyMjIyMjIyMjXG4gICMgbGdcbiAgIyMjIyMjIyMjI1xuICAjIExHIFN5bWJpYW4gUGhvbmVzXG4gIC0gcmVnZXg6ICdTZXJpZXM2MC9cXGRcXC5cXGQgKExHKVtcXC1dPyhbQS1aYS16MC05IFxcLV0rKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSAkMidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJyQxJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDInXG4gICMgb3RoZXIgTEcgcGhvbmVzXG4gIC0gcmVnZXg6ICdcXGIoPzpMR0VbIFxcLV1MR1xcLSg/OkFYKT98TEdFIHxMR0U/LUxHfExHRT9bIFxcLV18TEdbIC9cXC1dfGxnW1xcLV0pKFtBLVphLXowLTldKylcXGInXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnTEcgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdMRydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnKD86XkxHW1xcLV0/fF5MR0VbXFwtL10/KShbQS1aYS16XStbMC05XStbQS1aYS16XSopJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0xHICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnTEcnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJ15MRyhbMC05XStbQS1aYS16XSopJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0xHICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnTEcnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyMjXG4gICMgbWljcm9zb2Z0XG4gICMjIyMjIyMjIyNcbiAgLSByZWdleDogJyhLSU5cXC5bXiBdKykgKFxcZCspXFwuKFxcZCspJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ01pY3Jvc29mdCAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ01pY3Jvc29mdCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnKD86TVNJRXxYQk1DKS4qXFxiKFhib3gpXFxiJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnTWljcm9zb2Z0J1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICc7IEFSTTsgVHJpZGVudC82XFwuMDsgVG91Y2hbXFwpO10nXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnTWljcm9zb2Z0IFN1cmZhY2UgUlQnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdNaWNyb3NvZnQnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdTdXJmYWNlIFJUJ1xuXG4gICMjIyMjIyMjIyNcbiAgIyBtb3Rvcm9sYVxuICAjIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICdNb3Rvcm9sYVxcLShbQS1aYS16MC05XSspJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ01vdG9yb2xhICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnTW90b3JvbGEnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJ01PVE9cXC0oW0EtWmEtejAtOV0rKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdNb3Rvcm9sYSAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ01vdG9yb2xhJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICdNT1RcXC0oW0EtejAtOV1bQS16MC05XFwtXSopJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ01vdG9yb2xhICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnTW90b3JvbGEnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyMjXG4gICMgbmludGVuZG9cbiAgIyMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnTmludGVuZG8gV2lpVSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdOaW50ZW5kbyBXaWkgVSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ05pbnRlbmRvJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnV2lpIFUnXG4gIC0gcmVnZXg6ICdOaW50ZW5kbyAoRFN8M0RTfERTaXxXaWkpOydcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdOaW50ZW5kbyAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ05pbnRlbmRvJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjI1xuICAjIHBhbnRlY2hcbiAgIyMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnKD86UGFudGVjaHxQQU5URUNIKVsgXy1dPyhbQS1aYS16MC05XFwtXSspJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ1BhbnRlY2ggJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdQYW50ZWNoJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjI1xuICAjIHBoaWxpcHNcbiAgIyMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnUGhpbGlwcyhbQS1aYS16MC05XSspJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ1BoaWxpcHMgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdQaGlsaXBzJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG4gIC0gcmVnZXg6ICdQaGlsaXBzIChbQS1aYS16MC05XSspJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ1BoaWxpcHMgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdQaGlsaXBzJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjI1xuICAjIFNhbXN1bmdcbiAgIyMjIyMjIyMjI1xuICAjIFNhbXN1bmcgU21hcnQtVFZcbiAgLSByZWdleDogJyhTTUFSVC1UVik7IC4qIFRpemVuICdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdTYW1zdW5nICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnU2Ftc3VuZydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAjIFNhbXN1bmcgU3ltYmlhbiBEZXZpY2VzXG4gIC0gcmVnZXg6ICdTeW1iaWFuT1MvOVxcLlxcZC4qIFNhbXN1bmdbL1xcLV0oW0EtWmEtejAtOSBcXC1dKyknXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnU2Ftc3VuZyAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1NhbXN1bmcnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJyhTYW1zdW5nKShTR0gpKGlbMC05XSspJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJyQxICQyJDMnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyLSQzJ1xuICAtIHJlZ2V4OiAnU0FNU1VORy1BTkRST0lELU1NUy8oW147L10rKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1NhbXN1bmcnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgIyBPdGhlciBTYW1zdW5nXG4gICMtIHJlZ2V4OiAnU0FNU1VORyg/OjsgfC0pKFtBLVphLXowLTlcXC1dKyknXG4gIC0gcmVnZXg6ICdTQU1TVU5HKD86OyB8WyAtL10pKFtBLVphLXowLTlcXC1dKyknXG4gICAgcmVnZXhfZmxhZzogJ2knXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnU2Ftc3VuZyAkMSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1NhbXN1bmcnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyMjXG4gICMgU2VnYVxuICAjIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICcoRHJlYW1jYXN0KSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdTZWdhICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnU2VnYSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjIyNcbiAgIyBTaWVtZW5zIG1vYmlsZVxuICAjIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICdeU0lFLShbQS1aYS16MC05XSspJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ1NpZW1lbnMgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdTaWVtZW5zJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjI1xuICAjIFNvZnRiYW5rXG4gICMjIyMjIyMjIyNcbiAgLSByZWdleDogJ1NvZnRiYW5rL1sxMl1cXC4wLyhbQS1aYS16MC05XSspJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ1NvZnRiYW5rICQxJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnU29mdGJhbmsnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyMjXG4gICMgU29ueUVyaWNzc29uXG4gICMjIyMjIyMjIyNcbiAgLSByZWdleDogJ1NvbnlFcmljc3NvbiA/KFtBLVphLXowLTlcXC1dKyknXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnRXJpY3Nzb24gJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdTb255RXJpY3Nzb24nXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyMjXG4gICMgU29ueVxuICAjIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICdBbmRyb2lkIFteO10rOyAoW14gXSspIChTb255KS8nXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDIgJDEnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICckMidcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnKFNvbnkpKD86QkRQXFwvfFxcLyk/KFteIC87XFwpXSspWyAvO1xcKV0nXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnJDEgJDInXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICckMSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQyJ1xuXG4gICMjIyMjIyMjI1xuICAjIFB1ZmZpbiBCcm93c2VyIERldmljZSBkZXRlY3RcbiAgIyBBPUFuZHJvaWQsIEk9aU9TLCBQPVBob25lLCBUPVRhYmxldFxuICAjIEFUPUFuZHJvaWQrVGFibGV0XG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnUHVmZmluL1tcXGRcXC5dK0lUJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ2lQYWQnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdBcHBsZSdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJ2lQYWQnXG4gIC0gcmVnZXg6ICdQdWZmaW4vW1xcZFxcLl0rSVAnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnaVBob25lJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnQXBwbGUnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdpUGhvbmUnXG4gIC0gcmVnZXg6ICdQdWZmaW4vW1xcZFxcLl0rQVQnXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnR2VuZXJpYyBUYWJsZXQnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdHZW5lcmljJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnVGFibGV0J1xuICAtIHJlZ2V4OiAnUHVmZmluL1tcXGRcXC5dK0FQJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0dlbmVyaWMgU21hcnRwaG9uZSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0dlbmVyaWMnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdTbWFydHBob25lJ1xuXG4gICMjIyMjIyMjI1xuICAjIEFuZHJvaWQgR2VuZXJhbCBEZXZpY2UgTWF0Y2hpbmcgKGZhciBmcm9tIHBlcmZlY3QpXG4gICMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnQW5kcm9pZFtcXC0gXVtcXGRdK1xcLltcXGRdKzsgW0EtWmEtel17Mn1cXC1bQS1aYS16XXswLDJ9OyBXT1dNb2JpbGUgKC4rKSBCdWlsZFsvIF0nXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdHZW5lcmljX0FuZHJvaWQnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcbiAgLSByZWdleDogJ0FuZHJvaWRbXFwtIF1bXFxkXStcXC5bXFxkXStcXC11cGRhdGUxOyBbQS1aYS16XXsyfVxcLVtBLVphLXpdezAsMn0gKjsgKiguKz8pIEJ1aWxkWy8gXSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0dlbmVyaWNfQW5kcm9pZCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnQW5kcm9pZFtcXC0gXVtcXGRdKyg/OlxcLltcXGRdKyl7MSwyfTsgKltBLVphLXpdezJ9W19cXC1dW0EtWmEtel17MCwyfVxcLT8gKjsgKiguKz8pIEJ1aWxkWy8gXSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0dlbmVyaWNfQW5kcm9pZCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnQW5kcm9pZFtcXC0gXVtcXGRdKyg/OlxcLltcXGRdKyl7MSwyfTsgKltBLVphLXpdezAsMn1cXC0gKjsgKiguKz8pIEJ1aWxkWy8gXSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0dlbmVyaWNfQW5kcm9pZCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAjIE5vIGJ1aWxkIGluZm8gYXQgYWxsIC0gXCJCdWlsZFwiIGZvbGxvd3MgbG9jYWxlIGltbWVkaWF0ZWx5XG4gIC0gcmVnZXg6ICdBbmRyb2lkW1xcLSBdW1xcZF0rKD86XFwuW1xcZF0rKXsxLDJ9OyAqW2Etel17MCwyfVtfXFwtXT9bQS1aYS16XXswLDJ9Oz8gQnVpbGRbLyBdJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0dlbmVyaWMgU21hcnRwaG9uZSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0dlbmVyaWMnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdTbWFydHBob25lJ1xuICAtIHJlZ2V4OiAnQW5kcm9pZFtcXC0gXVtcXGRdKyg/OlxcLltcXGRdKyl7MSwyfTsgKlxcLT9bQS1aYS16XXsyfTsgKiguKz8pIEJ1aWxkWy8gXSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0dlbmVyaWNfQW5kcm9pZCdcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAtIHJlZ2V4OiAnQW5kcm9pZFtcXC0gXVtcXGRdKyg/OlxcLltcXGRdKyl7MSwyfSg/OjsuKik/OyAqKC4rPykgQnVpbGRbLyBdJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnR2VuZXJpY19BbmRyb2lkJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnJDEnXG5cbiAgIyMjIyMjIyMjI1xuICAjIEdvb2dsZSBUVlxuICAjIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICcoR29vZ2xlVFYpJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnR2VuZXJpY19JbmV0dHYnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICckMSdcblxuICAjIyMjIyMjIyMjXG4gICMgV2ViVFZcbiAgIyMjIyMjIyMjI1xuICAtIHJlZ2V4OiAnKFdlYlRWKS9cXGQrLlxcZCsnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdHZW5lcmljX0luZXR0didcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuICAjIFJva3UgRGlnaXRhbC1WaWRlby1QbGF5ZXJzIGh0dHBzOi8vd3d3LnJva3UuY29tL1xuICAtIHJlZ2V4OiAnXihSb2t1KS9EVlAtXFxkK1xcLlxcZCsnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdHZW5lcmljX0luZXR0didcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJyQxJ1xuXG4gICMjIyMjIyMjIyNcbiAgIyBHZW5lcmljIFRhYmxldFxuICAjIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICcoQW5kcm9pZCAzXFwuXFxkfE9wZXJhIFRhYmxldHxUYWJsZXQ7IC4rRmlyZWZveC98QW5kcm9pZC4qKD86VGFifFBhZCkpJ1xuICAgIHJlZ2V4X2ZsYWc6ICdpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0dlbmVyaWMgVGFibGV0J1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnR2VuZXJpYydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJ1RhYmxldCdcblxuICAjIyMjIyMjIyMjXG4gICMgR2VuZXJpYyBTbWFydCBQaG9uZVxuICAjIyMjIyMjIyMjXG4gIC0gcmVnZXg6ICcoU3ltYmlhbnxcXGJTNjAoVmVyc2lvbnxWXFxkKXxcXGJTNjBcXGJ8XFwoKFNlcmllcyA2MHxXaW5kb3dzIE1vYmlsZXxQYWxtIE9TfEJhZGEpOyBPcGVyYSBNaW5pfFdpbmRvd3MgQ0V8T3BlcmEgTW9iaXxCUkVXfEJyZXd8TW9iaWxlOyAuK0ZpcmVmb3gvfGlQaG9uZSBPU3xBbmRyb2lkfE1vYmlsZVNhZmFyaXxXaW5kb3dzICpQaG9uZXxcXCh3ZWJPUy98UGFsbU9TKSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdHZW5lcmljIFNtYXJ0cGhvbmUnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdHZW5lcmljJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnU21hcnRwaG9uZSdcbiAgLSByZWdleDogJyhoaXB0b3B8YXZhbnRnb3xwbHVja2VyfHhpaW5vfGJsYXplcnxlbGFpbmUpJ1xuICAgIHJlZ2V4X2ZsYWc6ICdpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0dlbmVyaWMgU21hcnRwaG9uZSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0dlbmVyaWMnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdTbWFydHBob25lJ1xuXG4gICMjIyMjIyMjIyNcbiAgIyBTcGlkZXJzICh0aGlzIGlzIGhhY2suLi4pXG4gICMjIyMjIyMjIyNcbiAgLSByZWdleDogJyhib3R8emFvfGJvcmd8REJvdHxvZWdwfHNpbGt8WGVudXx6ZWFsfF5OSU5HfENDQm90fGNyYXdsfGh0ZGlnfGx5Y29zfHNsdXJwfHRlb21hfHZvaWxhfHlhaG9vfFNvZ291fENpQnJhfE51dGNofF5KYXZhL3xeSk5MUC98RGF1bW9hfEdlbmllb3xpY2hpcm98bGFyYmlufHBvbXBvc3xTY3JhcHl8c25hcHB5fHNwZWVkeXxzcGlkZXJ8bXNuYm90fG1zcmJvdHx2b3J0ZXh8XnZvcnRleHxjcmF3bGVyfGZhdmljb258aW5kZXhlcnxSaWRkbGVyfHNjb290ZXJ8c2NyYXBlcnxzY3J1YmJ5fFdoYXRXZWJ8V2luSFRUUHxiaW5nYm90fEJpbmdQcmV2aWV3fG9wZW5ib3R8Z2lnYWJvdHxmdXJsYm90fHBvbHlib3R8c2Vla2JvdHxedm95YWdlcnxhcmNoaXZlcnxJY2FydXM2anxtb2dpbW9naXxOZXR2aWJlc3xibGl0emJvdHxhbHRhdmlzdGF8Y2hhcmxvdHRlfGZpbmRsaW5rc3xSZXRyZWl2ZXJ8VExTUHJvYmVyfFdvcmRQcmVzc3xTZXpuYW1Cb3R8UHJvb1hpQm90fHdzclxcLWFnZW50fFNxdXJsIEphdmF8RXRhb1NwaWRlcnxQYXBlckxpQm90fFNwdXRuaWtCb3R8QTZcXC1JbmRleGVyfG5ldHJlc2VhcmNofHNlYXJjaHNpZ2h0fGJhaWR1c3BpZGVyfFlpc291U3BpZGVyfElDQ1xcLUNyYXdsZXJ8aHR0cCUyMGNsaWVudHxQeXRob24tdXJsbGlifGRhdGFwYXJrc2VhcmNofGNvbnZlcmFjcmF3bGVyfFNjcmVhbWluZyBGcm9nfEFwcEVuZ2luZS1Hb29nbGV8WWFob29DYWNoZVN5c3RlbXxmYXN0XFwtd2ViY3Jhd2xlcnxTb2dvdSBQaWMgU3BpZGVyfHNlbWFudGljZGlzY292ZXJ5fElubm92YXppb24gQ3Jhd2xlcnxmYWNlYm9va2V4dGVybmFsaGl0fEdvb2dsZS4qL1xcKy93ZWIvc25pcHBldHxHb29nbGUtSFRUUC1KYXZhLUNsaWVudHxCbG9nQnJpZGdlfElsVHJvdmF0b3JlLVNldGFjY2lvfEludGVybmV0QXJjaGl2ZXxHb21lekFnZW50fFdlYlRodW1ibmFpbHxoZXJpdHJpeHxOZXdzR2F0b3J8UGFnZVBlZWtlcnxSZWFwZXJ8Wm9vU2hvdHxob2xtZXN8TkwtQ3Jhd2xlcnxQaW5nZG9tfFdoYXRzQXBwfG1hc3NjYW4pJ1xuICAgIHJlZ2V4X2ZsYWc6ICdpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ1NwaWRlcidcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ1NwaWRlcidcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJ0Rlc2t0b3AnXG5cbiAgIyMjIyMjIyMjI1xuICAjIEdlbmVyaWMgRmVhdHVyZSBQaG9uZVxuICAjIHRha2UgY2FyZSB0byBkbyBjYXNlIGluc2Vuc2l0aXZlIG1hdGNoaW5nXG4gICMjIyMjIyMjIyNcbiAgLSByZWdleDogJ14oMTIwN3wzZ3NvfDR0aHB8NTAxaXw1MDJpfDUwM2l8NTA0aXw1MDVpfDUwNml8NjMxMHw2NTkwfDc3MHN8ODAyc3xhIHdhfGFjZXJ8YWNzXFwtfGFpcm58YWxhdnxhc3VzfGF0dHd8YXVcXC1tfGF1ciB8YXVzIHxhYmFjfGFjb298YWlrb3xhbGNvfGFsY2F8YW1vaXxhbmV4fGFubnl8YW55d3xhcHR1fGFyY2h8YXJnb3xibW9iaWxlfGJlbGx8YmlyZHxid1xcLW58YndcXC11fGJlY2t8YmVucXxiaWxifGJsYWN8YzU1L3xjZG1cXC18Y2h0bXxjYXBpfGNvbXB8Y29uZHxkYWxsfGRidGV8ZGNcXC1zfGRpY2F8ZHNcXC1kfGRzMTJ8ZGFpdHxkZXZpfGRtb2J8ZG9jb3xkb3BvfGRvcmFkb3xlbCg/OjM4fDM5fDQ4fDQ5fDUwfDU1fDU4fDY4KXxlbFszNDU2XVxcZHsyfWR1YWx8ZXJrMHxlc2w4fGV4MzAwfGV6NDB8ZXo2MHxlejcwfGV6b3N8ZXp6ZXxlbGFpfGVtdWx8ZXJpY3xlendhfGZha2V8Zmx5XFwtfGZseV98Z1xcLW1vfGcxIHV8ZzU2MHxnZlxcLTV8Z3J1bnxnZW5lfGdvLnd8Z29vZHxncmFkfGhjaXR8aGRcXC1tfGhkXFwtcHxoZFxcLXR8aGVpXFwtfGhwIGl8aHBpcHxoc1xcLWN8aHRjIHxodGNcXC18aHRjYXxodGNnKSdcbiAgICByZWdleF9mbGFnOiAnaSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdHZW5lcmljIEZlYXR1cmUgUGhvbmUnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdHZW5lcmljJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnRmVhdHVyZSBQaG9uZSdcbiAgLSByZWdleDogJ14oaHRjcHxodGNzfGh0Y3R8aHRjX3xoYWllfGhpdGF8aHVhd3xodXRjfGlcXC0yMHxpXFwtZ298aVxcLW1hfGlcXC1tb2JpbGV8aTIzMHxpYWN8aWFjXFwtfGlhYy98aWcwMXxpbTFrfGlubm98aXJpc3xqYXRhfGtkZGl8a2d0fGtndC98a3B0IHxrd2NcXC18a2xvbnxsZXhpfGxnIGd8bGdcXC1hfGxnXFwtYnxsZ1xcLWN8bGdcXC1kfGxnXFwtZnxsZ1xcLWd8bGdcXC1rfGxnXFwtbHxsZ1xcLW18bGdcXC1vfGxnXFwtcHxsZ1xcLXN8bGdcXC10fGxnXFwtdXxsZ1xcLXd8bGcva3xsZy9sfGxnL3V8bGc1MHxsZzU0fGxnZVxcLXxsZ2UvfGxlbm98bTFcXC13fG0zZ2F8bTUwL3xtYXVpfG1jMDF8bWMyMXxtY2NhfG1lZGl8bWVyaXxtaW84fG1pb2F8bW8wMXxtbzAyfG1vZGV8bW9kb3xtb3QgfG1vdFxcLXxtdDUwfG10cDF8bXR2IHxtYXRlfG1heG98bWVyY3xtaXRzfG1vYml8bW90dnxtb3p6fG4xMDB8bjEwMXxuMTAyfG4yMDJ8bjIwM3xuMzAwfG4zMDJ8bjUwMHxuNTAyfG41MDV8bjcwMHxuNzAxfG43MTB8bmVjXFwtfG5lbVxcLXxuZXdnfG5lb24pJ1xuICAgIHJlZ2V4X2ZsYWc6ICdpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0dlbmVyaWMgRmVhdHVyZSBQaG9uZSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0dlbmVyaWMnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdGZWF0dXJlIFBob25lJ1xuICAtIHJlZ2V4OiAnXihuZXRmfG5va2l8bnpwaHxvMiB4fG8yXFwteHxvcHd2fG93ZzF8b3B0aXxvcmFufG90XFwtc3xwODAwfHBhbmR8cGdcXC0xfHBnXFwtMnxwZ1xcLTN8cGdcXC02fHBnXFwtOHxwZ1xcLWN8cGcxM3xwaGlsfHBuXFwtMnxwdFxcLWd8cGFsbXxwYW5hfHBpcmV8cG9ja3xwb3NlfHBzaW98cWFcXC1hfHFjXFwtMnxxY1xcLTN8cWNcXC01fHFjXFwtN3xxYzA3fHFjMTJ8cWMyMXxxYzMyfHFjNjB8cWNpXFwtfHF3YXB8cXRla3xyMzgwfHI2MDB8cmFrc3xyaW05fHJvdmV8czU1L3xzYWdlfHNhbXN8c2MwMXxzY2hcXC18c2NwXFwtfHNkay98c2U0N3xzZWNcXC18c2VjMHxzZWMxfHNlbWN8c2doXFwtfHNoYXJ8c2llXFwtfHNrXFwtMHxzbDQ1fHNsaWR8c21iM3xzbXQ1fHNwMDF8c3BoXFwtfHNwdiB8c3B2XFwtfHN5MDF8c2FtbXxzYW55fHNhdmF8c2Nvb3xzZW5kfHNpZW18c21hcnxzbWl0fHNvZnR8c29ueXx0XFwtbW98dDIxOHx0MjUwfHQ2MDB8dDYxMHx0NjE4fHRjbFxcLXx0ZGdcXC18dGVsbXx0aW1cXC18dHM3MHx0c21cXC18dHNtM3x0c201fHR4XFwtOXx0YWd0KSdcbiAgICByZWdleF9mbGFnOiAnaSdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdHZW5lcmljIEZlYXR1cmUgUGhvbmUnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdHZW5lcmljJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnRmVhdHVyZSBQaG9uZSdcbiAgLSByZWdleDogJ14odGFsa3x0ZWxpfHRvcGx8dG9zaHx1cC5ifHVwZzF8dXRzdHx2NDAwfHY3NTB8dmVyaXx2a1xcLXZ8dms0MHx2azUwfHZrNTJ8dms1M3x2bTQwfHZ4OTh8dmlyZ3x2ZXJ0dXx2aXRlfHZvZGF8dnVsY3x3M2MgfHczY1xcLXx3YXBqfHdhcHB8d2FwdXx3YXBtfHdpZyB8d2FwaXx3YXByfHdhcHZ8d2FweXx3YXBhfHdhcHN8d2FwdHx3aW5jfHdpbnd8d29udXx4NzAwfHhkYTJ8eGRhZ3x5YXNcXC18eW91cnx6dGVcXC18emV0b3xhc3RlfGF1ZGl8YXZhbnxibGF6fGJyZXd8YnJ2d3xidW1ifGNjd2F8Y2VsbHxjbGRjfGNtZFxcLXxkYW5nfGVtbDJ8ZmV0Y3xoaXB0fGh0dHB8aWJyb3xpZGVhfGlrb218aXBhcXxqYnJvfGplbXV8amlnc3xrZWppfGt5b2N8a3lva3xsaWJ3fG1cXC1jcnxtaWRwfG1tZWZ8bW90b3xtd2JwfG15d2F8bmV3dHxub2s2fG8yaW18cGFudHxwZHhnfHBsYXl8cGx1Y3xwb3J0fHByb3h8cm96b3xzYW1hfHNlcml8c21hbHxzeW1ifHRyZW98dXBzaXx2eDUyfHZ4NTN8dng2MHx2eDYxfHZ4NzB8dng4MHx2eDgxfHZ4ODN8dng4NXx3YXBcXC18d2ViY3x3aGl0fHdtbGJ8eGRhXFwtfHhkYV8pJ1xuICAgIHJlZ2V4X2ZsYWc6ICdpJ1xuICAgIGRldmljZV9yZXBsYWNlbWVudDogJ0dlbmVyaWMgRmVhdHVyZSBQaG9uZSdcbiAgICBicmFuZF9yZXBsYWNlbWVudDogJ0dlbmVyaWMnXG4gICAgbW9kZWxfcmVwbGFjZW1lbnQ6ICdGZWF0dXJlIFBob25lJ1xuICAtIHJlZ2V4OiAnXihJY2UpJCdcbiAgICBkZXZpY2VfcmVwbGFjZW1lbnQ6ICdHZW5lcmljIEZlYXR1cmUgUGhvbmUnXG4gICAgYnJhbmRfcmVwbGFjZW1lbnQ6ICdHZW5lcmljJ1xuICAgIG1vZGVsX3JlcGxhY2VtZW50OiAnRmVhdHVyZSBQaG9uZSdcbiAgLSByZWdleDogJyh3YXBbXFwtXFwgXWJyb3dzZXJ8bWF1aXxuZXRmcm9udHxvYmlnb3x0ZWxlY2F8dXBcXC5icm93c2VyfG1pZHB8T3BlcmEgTWluaSknXG4gICAgcmVnZXhfZmxhZzogJ2knXG4gICAgZGV2aWNlX3JlcGxhY2VtZW50OiAnR2VuZXJpYyBGZWF0dXJlIFBob25lJ1xuICAgIGJyYW5kX3JlcGxhY2VtZW50OiAnR2VuZXJpYydcbiAgICBtb2RlbF9yZXBsYWNlbWVudDogJ0ZlYXR1cmUgUGhvbmUnXG5gXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvanMvcmVnZXhlcy5qcyIsInZhciBSZXN1bHRzID0gcmVxdWlyZSgnLi9yZXN1bHRzJykuUmVzdWx0cyxcbiAgICBtYWtlUGFyc2VyID0gcmVxdWlyZSgnLi9tYWtlUGFyc2VyJyksXG4gICAgdWEgPSByZXF1aXJlKCcuL3VhJyksXG4gICAgb3MgPSByZXF1aXJlKCcuL29zJyksXG4gICAgZGV2aWNlID0gcmVxdWlyZSgnLi9kZXZpY2UnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihyZWdleGVzKSB7XG5cdHZhciBwYXJzZVVBID0gbWFrZVBhcnNlcihyZWdleGVzLnVzZXJfYWdlbnRfcGFyc2VycywgdWEubWFrZVBhcnNlciwgdWEubWFrZURlZmF1bHQpO1xuXHR2YXIgcGFyc2VPUyA9IG1ha2VQYXJzZXIocmVnZXhlcy5vc19wYXJzZXJzLCBvcy5tYWtlUGFyc2VyLCBvcy5tYWtlRGVmYXVsdCk7XG5cdHZhciBwYXJzZURldmljZSA9IG1ha2VQYXJzZXIocmVnZXhlcy5kZXZpY2VfcGFyc2VycywgZGV2aWNlLm1ha2VQYXJzZXIsIGRldmljZS5tYWtlRGVmYXVsdCk7XG5cdFxuXHRmdW5jdGlvbiBwYXJzZShzdHIpIHtcblx0ICB2YXIgdWEgPSBwYXJzZVVBKHN0ciksXG5cdCAgICAgIG9zID0gcGFyc2VPUyhzdHIpLFxuXHQgICAgICBkZXZpY2UgPSBwYXJzZURldmljZShzdHIpO1xuXHQgIHJldHVybiBuZXcgUmVzdWx0cyhzdHIsIHVhLCBvcywgZGV2aWNlKTtcblx0fVxuXHRcblx0cmV0dXJuIHtcblx0XHRwYXJzZTogcGFyc2UsXG5cdFx0cGFyc2VVQTogcGFyc2VVQSxcblx0XHRwYXJzZU9TOiBwYXJzZU9TLFxuXHRcdHBhcnNlRGV2aWNlOiBwYXJzZURldmljZVxuXHR9O1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi91YXAtcmVmLWltcGwvbGliL3BhcnNlci5qc1xuLy8gbW9kdWxlIGlkID0gMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIvKlxuWUFNTCBwYXJzZXIgZm9yIEphdmFzY3JpcHRcbkF1dGhvcjogRGlvZ28gQ29zdGFcblxuVGhpcyBwcm9ncmFtIGlzIHJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZSBhcyBmb2xsb3dzOlxuXG5Db3B5cmlnaHQgKGMpIDIwMTEgRGlvZ28gQ29zdGEgKGNvc3RhLmg0ZXZyQGdtYWlsLmNvbSlcblxuUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcbiBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4gdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG5cblRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG5cblRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1JcbiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbiBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbiBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbiBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXG4gVEhFIFNPRlRXQVJFLlxuKi9cblxuLyoqXG4gKiBAbmFtZSBZQU1MXG4gKiBAbmFtZXNwYWNlXG4qL1xuXG52YXIgWUFNTCA9IFxuKGZ1bmN0aW9uKCkge1xuICAgIHZhciBlcnJvcnMgPSBbXSxcbiAgICAgICAgcmVmZXJlbmNlX2Jsb2NrcyA9IFtdLFxuICAgICAgICBwcm9jZXNzaW5nX3RpbWUgPSAwLFxuICAgICAgICByZWdleCA9XG4gICAgICAgIHtcbiAgICAgICAgICAgIFwicmVnTGV2ZWxcIiA6IG5ldyBSZWdFeHAoXCJeKFtcXFxcc1xcXFwtXSspXCIpLFxuICAgICAgICAgICAgXCJpbnZhbGlkTGluZVwiIDogbmV3IFJlZ0V4cChcIl5cXFxcLVxcXFwtXFxcXC18XlxcXFwuXFxcXC5cXFxcLnxeXFxcXHMqIy4qfF5cXFxccyokXCIpLFxuICAgICAgICAgICAgXCJkYXNoZXNTdHJpbmdcIiA6IG5ldyBSZWdFeHAoXCJeXFxcXHMqXFxcXFxcXCIoW15cXFxcXFxcIl0qKVxcXFxcXFwiXFxcXHMqJFwiKSxcbiAgICAgICAgICAgIFwicXVvdGVzU3RyaW5nXCIgOiBuZXcgUmVnRXhwKFwiXlxcXFxzKlxcXFxcXCcoW15cXFxcXFwnXSopXFxcXFxcJ1xcXFxzKiRcIiksXG4gICAgICAgICAgICBcImZsb2F0XCIgOiBuZXcgUmVnRXhwKFwiXlsrLV0/WzAtOV0rXFxcXC5bMC05XSsoZVsrLV0/WzAtOV0rKFxcXFwuWzAtOV0rKT8pPyRcIiksXG4gICAgICAgICAgICBcImludGVnZXJcIiA6IG5ldyBSZWdFeHAoXCJeWystXT9bMC05XSskXCIpLFxuICAgICAgICAgICAgXCJhcnJheVwiIDogbmV3IFJlZ0V4cChcIlxcXFxbXFxcXHMqKC4qKVxcXFxzKlxcXFxdXCIpLFxuICAgICAgICAgICAgXCJtYXBcIiA6IG5ldyBSZWdFeHAoXCJcXFxce1xcXFxzKiguKilcXFxccypcXFxcfVwiKSxcbiAgICAgICAgICAgIFwia2V5X3ZhbHVlXCIgOiBuZXcgUmVnRXhwKFwiKFthLXowLTlfLV1bIGEtejAtOV8tXSopOiggLispXCIsIFwiaVwiKSxcbiAgICAgICAgICAgIFwic2luZ2xlX2tleV92YWx1ZVwiIDogbmV3IFJlZ0V4cChcIl4oW2EtejAtOV8tXVsgYS16MC05Xy1dKik6KCAuKz8pJFwiLCBcImlcIiksXG4gICAgICAgICAgICBcImtleVwiIDogbmV3IFJlZ0V4cChcIihbYS16MC05Xy1dWyBhLXowLTlfLV0qKTooIC4rKT9cIiwgXCJpXCIpLFxuICAgICAgICAgICAgXCJpdGVtXCIgOiBuZXcgUmVnRXhwKFwiXi1cXFxccytcIiksXG4gICAgICAgICAgICBcInRyaW1cIiA6IG5ldyBSZWdFeHAoXCJeXFxcXHMrfFxcXFxzKyRcIiksXG4gICAgICAgICAgICBcImNvbW1lbnRcIiA6IG5ldyBSZWdFeHAoXCIoW15cXFxcXFwnXFxcXFxcXCIjXSsoW1xcXFxcXCdcXFxcXFxcIl1bXlxcXFxcXCdcXFxcXFxcIl0qW1xcXFxcXCdcXFxcXFxcIl0pKikqKCMuKik/XCIpXG4gICAgICAgIH07XG4gXG4gICAgIC8qKlxuICAgICAgKiBAY2xhc3MgQSBibG9jayBvZiBsaW5lcyBvZiBhIGdpdmVuIGxldmVsLlxuICAgICAgKiBAcGFyYW0ge2ludH0gbHZsIFRoZSBibG9jaydzIGxldmVsLlxuICAgICAgKiBAcHJpdmF0ZVxuICAgICAgKi9cbiAgICBmdW5jdGlvbiBCbG9jayhsdmwpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC8qIFRoZSBibG9jaydzIHBhcmVudCAqL1xuICAgICAgICAgICAgcGFyZW50OiBudWxsLFxuICAgICAgICAgICAgLyogTnVtYmVyIG9mIGNoaWxkcmVuICovXG4gICAgICAgICAgICBsZW5ndGg6IDAsXG4gICAgICAgICAgICAvKiBCbG9jaydzIGxldmVsICovXG4gICAgICAgICAgICBsZXZlbDogbHZsLFxuICAgICAgICAgICAgLyogTGluZXMgb2YgY29kZSB0byBwcm9jZXNzICovXG4gICAgICAgICAgICBsaW5lczogW10sXG4gICAgICAgICAgICAvKiBCbG9ja3Mgd2l0aCBncmVhdGVyIGxldmVsICovXG4gICAgICAgICAgICBjaGlsZHJlbiA6IFtdLFxuICAgICAgICAgICAgLyogQWRkIGEgYmxvY2sgdG8gdGhlIGNoaWxkcmVuIGNvbGxlY3Rpb24gKi9cbiAgICAgICAgICAgIGFkZENoaWxkIDogZnVuY3Rpb24ob2JqKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jaGlsZHJlbi5wdXNoKG9iaik7XG4gICAgICAgICAgICAgICAgb2JqLnBhcmVudCA9IHRoaXM7XG4gICAgICAgICAgICAgICAgKyt0aGlzLmxlbmd0aDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBwYXJzZXIoc3RyKSB7XG4gICAgICAgIHZhciByZWdMZXZlbCA9IHJlZ2V4W1wicmVnTGV2ZWxcIl07XG4gICAgICAgIHZhciBpbnZhbGlkTGluZSA9IHJlZ2V4W1wiaW52YWxpZExpbmVcIl07XG4gICAgICAgIHZhciBsaW5lcyA9IHN0ci5zcGxpdChcIlxcblwiKTtcbiAgICAgICAgdmFyIG07XG4gICAgICAgIHZhciBsZXZlbCA9IDAsIGN1ckxldmVsID0gMDtcbiAgICAgICAgXG4gICAgICAgIHZhciBibG9ja3MgPSBbXTtcbiAgICAgICAgXG4gICAgICAgIHZhciByZXN1bHQgPSBuZXcgQmxvY2soLTEpO1xuICAgICAgICB2YXIgY3VycmVudEJsb2NrID0gbmV3IEJsb2NrKDApO1xuICAgICAgICByZXN1bHQuYWRkQ2hpbGQoY3VycmVudEJsb2NrKTtcbiAgICAgICAgdmFyIGxldmVscyA9IFtdO1xuICAgICAgICB2YXIgbGluZSA9IFwiXCI7XG4gICAgICAgIFxuICAgICAgICBibG9ja3MucHVzaChjdXJyZW50QmxvY2spO1xuICAgICAgICBsZXZlbHMucHVzaChsZXZlbCk7XG4gICAgICAgIFxuICAgICAgICBmb3IodmFyIGkgPSAwLCBsZW4gPSBsaW5lcy5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICAgICAgICAgICAgbGluZSA9IGxpbmVzW2ldO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZihsaW5lLm1hdGNoKGludmFsaWRMaW5lKSkge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgIGlmKG0gPSByZWdMZXZlbC5leGVjKGxpbmUpKSB7XG4gICAgICAgICAgICAgICAgbGV2ZWwgPSBtWzFdLmxlbmd0aDtcbiAgICAgICAgICAgIH0gZWxzZVxuICAgICAgICAgICAgICAgIGxldmVsID0gMDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYobGV2ZWwgPiBjdXJMZXZlbCkge1xuICAgICAgICAgICAgICAgIHZhciBvbGRCbG9jayA9IGN1cnJlbnRCbG9jaztcbiAgICAgICAgICAgICAgICBjdXJyZW50QmxvY2sgPSBuZXcgQmxvY2sobGV2ZWwpO1xuICAgICAgICAgICAgICAgIG9sZEJsb2NrLmFkZENoaWxkKGN1cnJlbnRCbG9jayk7XG4gICAgICAgICAgICAgICAgYmxvY2tzLnB1c2goY3VycmVudEJsb2NrKTtcbiAgICAgICAgICAgICAgICBsZXZlbHMucHVzaChsZXZlbCk7XG4gICAgICAgICAgICB9IGVsc2UgaWYobGV2ZWwgPCBjdXJMZXZlbCkgeyAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICB2YXIgYWRkZWQgPSBmYWxzZTtcblxuICAgICAgICAgICAgICAgIHZhciBrID0gbGV2ZWxzLmxlbmd0aCAtIDE7XG4gICAgICAgICAgICAgICAgZm9yKDsgayA+PSAwOyAtLWspIHtcbiAgICAgICAgICAgICAgICAgICAgaWYobGV2ZWxzW2tdID09IGxldmVsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50QmxvY2sgPSBuZXcgQmxvY2sobGV2ZWwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYmxvY2tzLnB1c2goY3VycmVudEJsb2NrKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldmVscy5wdXNoKGxldmVsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKGJsb2Nrc1trXS5wYXJlbnQhPSBudWxsKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJsb2Nrc1trXS5wYXJlbnQuYWRkQ2hpbGQoY3VycmVudEJsb2NrKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFkZGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGlmKCFhZGRlZCkge1xuICAgICAgICAgICAgICAgICAgICBlcnJvcnMucHVzaChcIkVycm9yOiBJbnZhbGlkIGluZGVudGF0aW9uIGF0IGxpbmUgXCIgKyBpICsgXCI6IFwiICsgbGluZSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGN1cnJlbnRCbG9jay5saW5lcy5wdXNoKGxpbmUucmVwbGFjZShyZWdleFtcInRyaW1cIl0sIFwiXCIpKTtcbiAgICAgICAgICAgIGN1ckxldmVsID0gbGV2ZWw7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIFxuICAgIGZ1bmN0aW9uIHByb2Nlc3NWYWx1ZSh2YWwpIHtcbiAgICAgICAgdmFsID0gdmFsLnJlcGxhY2UocmVnZXhbXCJ0cmltXCJdLCBcIlwiKTtcbiAgICAgICAgdmFyIG0gPSBudWxsO1xuXG4gICAgICAgIGlmKHZhbCA9PSAndHJ1ZScpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9IGVsc2UgaWYodmFsID09ICdmYWxzZScpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfSBlbHNlIGlmKHZhbCA9PSAnLk5hTicpIHtcbiAgICAgICAgICAgIHJldHVybiBOdW1iZXIuTmFOO1xuICAgICAgICB9IGVsc2UgaWYodmFsID09ICdudWxsJykge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH0gZWxzZSBpZih2YWwgPT0gJy5pbmYnKSB7XG4gICAgICAgICAgICByZXR1cm4gTnVtYmVyLlBPU0lUSVZFX0lORklOSVRZO1xuICAgICAgICB9IGVsc2UgaWYodmFsID09ICctLmluZicpIHtcbiAgICAgICAgICAgIHJldHVybiBOdW1iZXIuTkVHQVRJVkVfSU5GSU5JVFk7XG4gICAgICAgIH0gZWxzZSBpZihtID0gdmFsLm1hdGNoKHJlZ2V4W1wiZGFzaGVzU3RyaW5nXCJdKSkge1xuICAgICAgICAgICAgcmV0dXJuIG1bMV07XG4gICAgICAgIH0gZWxzZSBpZihtID0gdmFsLm1hdGNoKHJlZ2V4W1wicXVvdGVzU3RyaW5nXCJdKSkge1xuICAgICAgICAgICAgcmV0dXJuIG1bMV07XG4gICAgICAgIH0gZWxzZSBpZihtID0gdmFsLm1hdGNoKHJlZ2V4W1wiZmxvYXRcIl0pKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyc2VGbG9hdChtWzBdKTtcbiAgICAgICAgfSBlbHNlIGlmKG0gPSB2YWwubWF0Y2gocmVnZXhbXCJpbnRlZ2VyXCJdKSkge1xuICAgICAgICAgICAgcmV0dXJuIHBhcnNlSW50KG1bMF0pO1xuICAgICAgICB9IGVsc2UgaWYoICFpc05hTihtID0gRGF0ZS5wYXJzZSh2YWwpKSkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBEYXRlKG0pO1xuICAgICAgICB9IGVsc2UgaWYobSA9IHZhbC5tYXRjaChyZWdleFtcInNpbmdsZV9rZXlfdmFsdWVcIl0pKSB7XG4gICAgICAgICAgICB2YXIgcmVzID0ge307XG4gICAgICAgICAgICByZXNbbVsxXV0gPSBwcm9jZXNzVmFsdWUobVsyXSk7XG4gICAgICAgICAgICByZXR1cm4gcmVzO1xuICAgICAgICB9IGVsc2UgaWYobSA9IHZhbC5tYXRjaChyZWdleFtcImFycmF5XCJdKSl7XG4gICAgICAgICAgICB2YXIgY291bnQgPSAwLCBjID0gJyAnO1xuICAgICAgICAgICAgdmFyIHJlcyA9IFtdO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgICAgICAgdmFyIHN0ciA9IGZhbHNlO1xuICAgICAgICAgICAgZm9yKHZhciBqID0gMCwgbGVuSiA9IG1bMV0ubGVuZ3RoOyBqIDwgbGVuSjsgKytqKSB7XG4gICAgICAgICAgICAgICAgYyA9IG1bMV1bal07XG4gICAgICAgICAgICAgICAgaWYoYyA9PSAnXFwnJyB8fCBjID09ICdcIicpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYoc3RyID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RyID0gYztcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQgKz0gYztcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYoKGMgPT0gJ1xcJycgJiYgc3RyID09ICdcXCcnKSB8fCAoYyA9PSAnXCInICYmIHN0ciA9PSAnXCInKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RyID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50ICs9IGM7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZihzdHIgPT09IGZhbHNlICYmIChjID09ICdbJyB8fCBjID09ICd7JykpIHtcbiAgICAgICAgICAgICAgICAgICAgKytjb3VudDtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYoc3RyID09PSBmYWxzZSAmJiAoYyA9PSAnXScgfHwgYyA9PSAnfScpKSB7XG4gICAgICAgICAgICAgICAgICAgIC0tY291bnQ7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmKHN0ciA9PT0gZmFsc2UgJiYgY291bnQgPT0gMCAmJiBjID09ICcsJykge1xuICAgICAgICAgICAgICAgICAgICByZXMucHVzaChwcm9jZXNzVmFsdWUoY29udGVudCkpO1xuICAgICAgICAgICAgICAgICAgICBjb250ZW50ID0gXCJcIjtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGNvbnRlbnQgKz0gYztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYoY29udGVudC5sZW5ndGggPiAwKVxuICAgICAgICAgICAgICAgIHJlcy5wdXNoKHByb2Nlc3NWYWx1ZShjb250ZW50KSk7XG4gICAgICAgICAgICByZXR1cm4gcmVzO1xuICAgICAgICB9IGVsc2UgaWYobSA9IHZhbC5tYXRjaChyZWdleFtcIm1hcFwiXSkpe1xuICAgICAgICAgICAgdmFyIGNvdW50ID0gMCwgYyA9ICcgJztcbiAgICAgICAgICAgIHZhciByZXMgPSBbXTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgICAgICAgIHZhciBzdHIgPSBmYWxzZTtcbiAgICAgICAgICAgIGZvcih2YXIgaiA9IDAsIGxlbkogPSBtWzFdLmxlbmd0aDsgaiA8IGxlbko7ICsraikge1xuICAgICAgICAgICAgICAgIGMgPSBtWzFdW2pdO1xuICAgICAgICAgICAgICAgIGlmKGMgPT0gJ1xcJycgfHwgYyA9PSAnXCInKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmKHN0ciA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0ciA9IGM7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50ICs9IGM7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmKChjID09ICdcXCcnICYmIHN0ciA9PSAnXFwnJykgfHwgKGMgPT0gJ1wiJyAmJiBzdHIgPT0gJ1wiJykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0ciA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudCArPSBjO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYoc3RyID09PSBmYWxzZSAmJiAoYyA9PSAnWycgfHwgYyA9PSAneycpKSB7XG4gICAgICAgICAgICAgICAgICAgICsrY291bnQ7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmKHN0ciA9PT0gZmFsc2UgJiYgKGMgPT0gJ10nIHx8IGMgPT0gJ30nKSkge1xuICAgICAgICAgICAgICAgICAgICAtLWNvdW50O1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZihzdHIgPT09IGZhbHNlICYmIGNvdW50ID09IDAgJiYgYyA9PSAnLCcpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzLnB1c2goY29udGVudCk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgY29udGVudCArPSBjO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZihjb250ZW50Lmxlbmd0aCA+IDApXG4gICAgICAgICAgICAgICAgcmVzLnB1c2goY29udGVudCk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICB2YXIgbmV3UmVzID0ge307XG4gICAgICAgICAgICBmb3IodmFyIGogPSAwLCBsZW5KID0gcmVzLmxlbmd0aDsgaiA8IGxlbko7ICsraikge1xuICAgICAgICAgICAgICAgIGlmKG0gPSByZXNbal0ubWF0Y2gocmVnZXhbXCJrZXlfdmFsdWVcIl0pKSB7XG4gICAgICAgICAgICAgICAgICAgIG5ld1Jlc1ttWzFdXSA9IHByb2Nlc3NWYWx1ZShtWzJdKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHJldHVybiBuZXdSZXM7XG4gICAgICAgIH0gZWxzZSBcbiAgICAgICAgICAgIHJldHVybiB2YWw7XG4gICAgfVxuICAgIFxuICAgIGZ1bmN0aW9uIHByb2Nlc3NGb2xkZWRCbG9jayhibG9jaykge1xuICAgICAgICB2YXIgbGluZXMgPSBibG9jay5saW5lcztcbiAgICAgICAgdmFyIGNoaWxkcmVuID0gYmxvY2suY2hpbGRyZW47XG4gICAgICAgIHZhciBzdHIgPSBsaW5lcy5qb2luKFwiIFwiKTtcbiAgICAgICAgdmFyIGNodW5rcyA9IFtzdHJdO1xuICAgICAgICBmb3IodmFyIGkgPSAwLCBsZW4gPSBjaGlsZHJlbi5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICAgICAgICAgICAgY2h1bmtzLnB1c2gocHJvY2Vzc0ZvbGRlZEJsb2NrKGNoaWxkcmVuW2ldKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNodW5rcy5qb2luKFwiXFxuXCIpO1xuICAgIH1cbiAgICBcbiAgICBmdW5jdGlvbiBwcm9jZXNzTGl0ZXJhbEJsb2NrKGJsb2NrKSB7XG4gICAgICAgIHZhciBsaW5lcyA9IGJsb2NrLmxpbmVzO1xuICAgICAgICB2YXIgY2hpbGRyZW4gPSBibG9jay5jaGlsZHJlbjtcbiAgICAgICAgdmFyIHN0ciA9IGxpbmVzLmpvaW4oXCJcXG5cIik7XG4gICAgICAgIGZvcih2YXIgaSA9IDAsIGxlbiA9IGNoaWxkcmVuLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gICAgICAgICAgICBzdHIgKz0gcHJvY2Vzc0xpdGVyYWxCbG9jayhjaGlsZHJlbltpXSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHN0cjtcbiAgICB9XG4gICAgXG4gICAgZnVuY3Rpb24gcHJvY2Vzc0Jsb2NrKGJsb2Nrcykge1xuICAgICAgICB2YXIgbSA9IG51bGw7XG4gICAgICAgIHZhciByZXMgPSB7fTtcbiAgICAgICAgdmFyIGxpbmVzID0gbnVsbDtcbiAgICAgICAgdmFyIGNoaWxkcmVuID0gbnVsbDtcbiAgICAgICAgdmFyIGN1cnJlbnRPYmogPSBudWxsO1xuICAgICAgICBcbiAgICAgICAgdmFyIGxldmVsID0gLTE7XG4gICAgICAgIFxuICAgICAgICB2YXIgcHJvY2Vzc2VkQmxvY2tzID0gW107XG4gICAgICAgIFxuICAgICAgICB2YXIgaXNNYXAgPSB0cnVlO1xuICAgICAgICBcbiAgICAgICAgZm9yKHZhciBqID0gMCwgbGVuSiA9IGJsb2Nrcy5sZW5ndGg7IGogPCBsZW5KOyArK2opIHtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYobGV2ZWwgIT0gLTEgJiYgbGV2ZWwgIT0gYmxvY2tzW2pdLmxldmVsKVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICBcbiAgICAgICAgICAgIHByb2Nlc3NlZEJsb2Nrcy5wdXNoKGopO1xuICAgICAgICBcbiAgICAgICAgICAgIGxldmVsID0gYmxvY2tzW2pdLmxldmVsO1xuICAgICAgICAgICAgbGluZXMgPSBibG9ja3Nbal0ubGluZXM7XG4gICAgICAgICAgICBjaGlsZHJlbiA9IGJsb2Nrc1tqXS5jaGlsZHJlbjtcbiAgICAgICAgICAgIGN1cnJlbnRPYmogPSBudWxsO1xuICAgICAgICBcbiAgICAgICAgICAgIGZvcih2YXIgaSA9IDAsIGxlbiA9IGxpbmVzLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gICAgICAgICAgICAgICAgdmFyIGxpbmUgPSBsaW5lc1tpXTtcblxuICAgICAgICAgICAgICAgIGlmKG0gPSBsaW5lLm1hdGNoKHJlZ2V4W1wia2V5XCJdKSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIga2V5ID0gbVsxXTtcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIGlmKGtleVswXSA9PSAnLScpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGtleSA9IGtleS5yZXBsYWNlKHJlZ2V4W1wiaXRlbVwiXSwgXCJcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNNYXApIHsgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNNYXAgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mKHJlcy5sZW5ndGgpID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcyA9IFtdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZihjdXJyZW50T2JqICE9IG51bGwpIHJlcy5wdXNoKGN1cnJlbnRPYmopO1xuICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudE9iaiA9IHt9O1xuICAgICAgICAgICAgICAgICAgICAgICAgaXNNYXAgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBpZih0eXBlb2YgbVsyXSAhPSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdmFsdWUgPSBtWzJdLnJlcGxhY2UocmVnZXhbXCJ0cmltXCJdLCBcIlwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKHZhbHVlWzBdID09ICcmJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBuYiA9IHByb2Nlc3NCbG9jayhjaGlsZHJlbik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYoY3VycmVudE9iaiAhPSBudWxsKSBjdXJyZW50T2JqW2tleV0gPSBuYjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHJlc1trZXldID0gbmI7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmZXJlbmNlX2Jsb2Nrc1t2YWx1ZS5zdWJzdHIoMSldID0gbmI7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYodmFsdWVbMF0gPT0gJ3wnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYoY3VycmVudE9iaiAhPSBudWxsKSBjdXJyZW50T2JqW2tleV0gPSBwcm9jZXNzTGl0ZXJhbEJsb2NrKGNoaWxkcmVuLnNoaWZ0KCkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgcmVzW2tleV0gPSBwcm9jZXNzTGl0ZXJhbEJsb2NrKGNoaWxkcmVuLnNoaWZ0KCkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmKHZhbHVlWzBdID09ICcqJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB2ID0gdmFsdWUuc3Vic3RyKDEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBubyA9IHt9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKHR5cGVvZiByZWZlcmVuY2VfYmxvY2tzW3ZdID09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3JzLnB1c2goXCJSZWZlcmVuY2UgJ1wiICsgdiArIFwiJyBub3QgZm91bmQhXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcih2YXIgayBpbiByZWZlcmVuY2VfYmxvY2tzW3ZdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBub1trXSA9IHJlZmVyZW5jZV9ibG9ja3Nbdl1ba107XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKGN1cnJlbnRPYmogIT0gbnVsbCkgY3VycmVudE9ialtrZXldID0gbm87XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgcmVzW2tleV0gPSBubztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYodmFsdWVbMF0gPT0gJz4nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYoY3VycmVudE9iaiAhPSBudWxsKSBjdXJyZW50T2JqW2tleV0gPSBwcm9jZXNzRm9sZGVkQmxvY2soY2hpbGRyZW4uc2hpZnQoKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSByZXNba2V5XSA9IHByb2Nlc3NGb2xkZWRCbG9jayhjaGlsZHJlbi5zaGlmdCgpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYoY3VycmVudE9iaiAhPSBudWxsKSBjdXJyZW50T2JqW2tleV0gPSBwcm9jZXNzVmFsdWUodmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgcmVzW2tleV0gPSBwcm9jZXNzVmFsdWUodmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYoY3VycmVudE9iaiAhPSBudWxsKSBjdXJyZW50T2JqW2tleV0gPSBwcm9jZXNzQmxvY2soY2hpbGRyZW4pO1xuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSByZXNba2V5XSA9IHByb2Nlc3NCbG9jayhjaGlsZHJlbik7ICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYobGluZS5tYXRjaCgvXi1cXHMqJC8pKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpc01hcCkgeyBcbiAgICAgICAgICAgICAgICAgICAgICAgIGlzTWFwID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mKHJlcy5sZW5ndGgpID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzID0gW107XG4gICAgICAgICAgICAgICAgICAgICAgICB9IFxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmKGN1cnJlbnRPYmogIT0gbnVsbCkgcmVzLnB1c2goY3VycmVudE9iaik7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRPYmogPSB7fTtcbiAgICAgICAgICAgICAgICAgICAgaXNNYXAgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYobSA9IGxpbmUubWF0Y2goL14tXFxzKiguKikvKSkge1xuICAgICAgICAgICAgICAgICAgICBpZihjdXJyZW50T2JqICE9IG51bGwpIFxuICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudE9iai5wdXNoKHByb2Nlc3NWYWx1ZShtWzFdKSk7XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzTWFwKSB7IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzTWFwID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZihyZXMubGVuZ3RoKSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXMgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IFxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzLnB1c2gocHJvY2Vzc1ZhbHVlKG1bMV0pKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmKGN1cnJlbnRPYmogIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGlmIChpc01hcCkgeyBcbiAgICAgICAgICAgICAgICAgICAgaXNNYXAgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZihyZXMubGVuZ3RoKSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzID0gW107XG4gICAgICAgICAgICAgICAgICAgIH0gXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJlcy5wdXNoKGN1cnJlbnRPYmopO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBmb3IodmFyIGogPSBwcm9jZXNzZWRCbG9ja3MubGVuZ3RoIC0gMTsgaiA+PSAwOyAtLWopIHtcbiAgICAgICAgICAgIGJsb2Nrcy5zcGxpY2UuY2FsbChibG9ja3MsIHByb2Nlc3NlZEJsb2Nrc1tqXSwgMSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcmVzO1xuICAgIH1cbiAgICAgICAgXG4gICAgZnVuY3Rpb24gc2VtYW50aWNBbmFseXNpcyhibG9ja3MpIHtcbiAgICAgICAgdmFyIHJlcyA9IHByb2Nlc3NCbG9jayhibG9ja3MuY2hpbGRyZW4pO1xuICAgICAgICByZXR1cm4gcmVzO1xuICAgIH1cbiAgICBcbiAgICBmdW5jdGlvbiBwcmVQcm9jZXNzKHNyYykge1xuICAgICAgICB2YXIgbTtcbiAgICAgICAgdmFyIGxpbmVzID0gc3JjLnNwbGl0KFwiXFxuXCIpO1xuICAgICAgICBcbiAgICAgICAgdmFyIHIgPSByZWdleFtcImNvbW1lbnRcIl07XG4gICAgICAgIFxuICAgICAgICBmb3IodmFyIGkgaW4gbGluZXMpIHtcbiAgICAgICAgICAgIGlmKG0gPSAodHlwZW9mIGxpbmVzW2ldID09PSAnc3RyaW5nJyAmJiBsaW5lc1tpXS5tYXRjaChyKSkpIHtcbi8qICAgICAgICAgICAgICAgIHZhciBjbXQgPSBcIlwiO1xuICAgICAgICAgICAgICAgIGlmKHR5cGVvZiBtWzNdICE9IFwidW5kZWZpbmVkXCIpXG4gICAgICAgICAgICAgICAgICAgIGxpbmVzW2ldID0gbVsxXTtcbiAgICAgICAgICAgICAgICBlbHNlIGlmKHR5cGVvZiBtWzNdICE9IFwidW5kZWZpbmVkXCIpXG4gICAgICAgICAgICAgICAgICAgIGxpbmVzW2ldID0gbVszXTsgXG4gICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICAgICBsaW5lc1tpXSA9IFwiXCI7XG4gICAgICAgICAgICAgICAgICAgICovXG4gICAgICAgICAgICAgICAgaWYodHlwZW9mIG1bM10gIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgbGluZXNbaV0gPSBtWzBdLnN1YnN0cigwLCBtWzBdLmxlbmd0aCAtIG1bM10ubGVuZ3RoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHJldHVybiBsaW5lcy5qb2luKFwiXFxuXCIpO1xuICAgIH1cbiAgICBcbiAgICBmdW5jdGlvbiBldmFsKHN0cikge1xuICAgICAgICBlcnJvcnMgPSBbXTtcbiAgICAgICAgcmVmZXJlbmNlX2Jsb2NrcyA9IFtdO1xuICAgICAgICBwcm9jZXNzaW5nX3RpbWUgPSAobmV3IERhdGUoKSkuZ2V0VGltZSgpO1xuICAgICAgICB2YXIgcHJlID0gcHJlUHJvY2VzcyhzdHIpXG4gICAgICAgIHZhciBkb2MgPSBwYXJzZXIocHJlKTtcbiAgICAgICAgdmFyIHJlcyA9IHNlbWFudGljQW5hbHlzaXMoZG9jKTtcbiAgICAgICAgcHJvY2Vzc2luZ190aW1lID0gKG5ldyBEYXRlKCkpLmdldFRpbWUoKSAtIHByb2Nlc3NpbmdfdGltZTtcbiAgICAgICAgXG4gICAgICAgIHJldHVybiByZXM7XG4gICAgfVxuICAgICAgICBcbiAgICByZXR1cm4geyAgICAgICAgXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBQYXJzZSBhIFlBTUwgZmlsZSBmcm9tIGEgc3RyaW5nLlxuICAgICAgICAgKiBAcGFyYW0ge1N0cmluZ30gc3RyIFN0cmluZyB3aXRoIHRoZSBZQU1MIGZpbGUgY29udGVudHMuXG4gICAgICAgICAqIEBmdW5jdGlvblxuICAgICAgICAgKi9cbiAgICAgICAgZXZhbCA6IGV2YWwsXG4gICAgICAgIFxuICAgICAgICAvKipcbiAgICAgICAgICogR2V0IGVycm9ycyBmb3VuZCB3aGVuIHBhcnNpbmcgdGhlIGxhc3QgZmlsZS5cbiAgICAgICAgICogQGZ1bmN0aW9uXG4gICAgICAgICAqIEByZXR1cm5zIEVycm9ycyBmb3VuZCB3aGVuIHBhcnNpbmcgdGhlIGxhc3QgZmlsZS5cbiAgICAgICAgICovXG4gICAgICAgIGdldEVycm9ycyA6IGZ1bmN0aW9uKCkgeyByZXR1cm4gZXJyb3JzOyB9LFxuICAgICAgICBcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEdldCB0aGUgdGltZSBpdCB0b29rIHRvIHBhcnNlIHRoZSBsYXN0IGZpbGUuXG4gICAgICAgICAqIEBmdW5jdGlvblxuICAgICAgICAgKiBAcmV0dXJucyBUaW1lIGluIG1pbGxpc2Vjb25kcy5cbiAgICAgICAgICovXG4gICAgICAgIGdldFByb2Nlc3NpbmdUaW1lIDogZnVuY3Rpb24oKSB7IHJldHVybiBwcm9jZXNzaW5nX3RpbWU7IH1cbiAgICB9XG59KSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFlBTUw7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3lhbWxwYXJzZXIveWFtbHBhcnNlci5qc1xuLy8gbW9kdWxlIGlkID0gMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCJpbXBvcnQgc2V0dXBQYXJzZXIgZnJvbSAndWFwLXJlZi1pbXBsJ1xuaW1wb3J0IHJlZ2V4ZXNTdHIgZnJvbSAnLi9yZWdleGVzJ1xuaW1wb3J0IHlhbWwgZnJvbSAneWFtbHBhcnNlcidcblxuY29uc3QgcmVnZXhlcyA9IHlhbWwuZXZhbChyZWdleGVzU3RyKVxuY29uc3QgcGFyc2VyID0gc2V0dXBQYXJzZXIocmVnZXhlcylcblxuaWYgKGRvY3VtZW50LnJlYWR5U3RhdGUgPT0gJ2xvYWRpbmcnKSB7XG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBzdGFydClcbn0gZWxzZSB7XG4gIHN0YXJ0KClcbn1cblxuZnVuY3Rpb24gc3RhcnQoKSB7XG4gIGNvbnN0IHVhUmF3TGlzdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd1c2VyLWFnZW50cy1yYXcnKVxuICBjb25zdCB1YUNvbnZlcnRlZExpc3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndXNlci1hZ2VudHMtY29udmVydGVkJylcbiAgY29uc3QgY29udmVydEJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb252ZXJ0JylcblxuICBjb252ZXJ0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgY29udmVydClcblxuICBmdW5jdGlvbiBjb252ZXJ0KCkge1xuICAgIGxldCB1YUNvbnZlcnRlZFN0ciA9ICcnXG4gICAgY29uc3QgdWFTdHJzID0gdWFSYXdMaXN0LnZhbHVlLnRyaW0oKS5zcGxpdCgnXFxuJylcbiAgICBmb3IgKGNvbnN0IHVhU3RyIG9mIHVhU3Rycykge1xuICAgICAgY29uc3QgYWdlbnQgPSBwYXJzZXIucGFyc2UodWFTdHIpXG4gICAgICB1YUNvbnZlcnRlZFN0ciArPSBgJHthZ2VudC51YS5mYW1pbHl9ICR7YWdlbnQudWEubWFqb3J9XFxuYFxuICAgIH1cbiAgICB1YUNvbnZlcnRlZExpc3QudmFsdWUgPSB1YUNvbnZlcnRlZFN0clxuICB9XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvanMvYXBwLmpzIiwidmFyIHJlcGxhY2VNYXRjaGVzID0gcmVxdWlyZSgnLi9yZXBsYWNlTWF0Y2hlcycpO1xuXG5leHBvcnRzLm1ha2VEZWZhdWx0ID0gZnVuY3Rpb24gbWFrZURlZmF1bHQoc3RyKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdXNlckFnZW50OiBzdHIsXG4gICAgICAgIGZhbWlseTogXCJPdGhlclwiLFxuICAgICAgICBicmFuZDogbnVsbCxcbiAgICAgICAgbW9kZWw6IG51bGxcbiAgICB9O1xufTtcblxuZXhwb3J0cy5tYWtlUGFyc2VyID0gZnVuY3Rpb24gbWFrZVBhcnNlcihvYmopIHtcbiAgdmFyIHJlZ2V4cCA9IG5ldyBSZWdFeHAob2JqLnJlZ2V4LCBvYmoucmVnZXhfZmxhZyB8fCAnJyksXG4gICAgICBkZXZpY2VSZXAgPSBvYmouZGV2aWNlX3JlcGxhY2VtZW50LFxuICAgICAgYnJhbmRSZXAgID0gb2JqLmJyYW5kX3JlcGxhY2VtZW50LFxuICAgICAgbW9kZWxSZXAgID0gb2JqLm1vZGVsX3JlcGxhY2VtZW50O1xuXG4gIGZ1bmN0aW9uIHBhcnNlcihzdHIpIHtcbiAgICB2YXIgbSA9IHN0ci5tYXRjaChyZWdleHApO1xuICAgIGlmICghbSkgeyByZXR1cm4gbnVsbDsgfVxuICAgIFxuICAgIHJldHVybiB7XG4gICAgICAgIHVzZXJBZ2VudDogc3RyLFxuICAgICAgICBmYW1pbHk6IChkZXZpY2VSZXAgPyByZXBsYWNlTWF0Y2hlcyhkZXZpY2VSZXAsIG0pIDogbVsxXSkgfHwgJ090aGVyJyxcbiAgICAgICAgYnJhbmQ6ICAoYnJhbmRSZXAgID8gcmVwbGFjZU1hdGNoZXMoYnJhbmRSZXAsIG0pICA6IG51bGwpIHx8IG51bGwsXG4gICAgICAgIG1vZGVsOiAgKG1vZGVsUmVwICA/IHJlcGxhY2VNYXRjaGVzKG1vZGVsUmVwLCBtKSAgOiBtWzFdKSB8fCBudWxsICAgICAgICAgICAgXG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBwYXJzZXI7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3VhcC1yZWYtaW1wbC9saWIvZGV2aWNlLmpzXG4vLyBtb2R1bGUgaWQgPSA0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gbWFrZVBhcnNlcihyZWdleGVzLCBwYXJzZXJNYWtlciwgZGVmYXVsdE9iak1ha2VyKSB7XG4gIHZhciBwYXJzZXJzID0gcmVnZXhlcy5tYXAocGFyc2VyTWFrZXIpO1xuXG4gIGZ1bmN0aW9uIHBhcnNlcihzdHIpIHtcbiAgICAgIHZhciBvYmo7XG4gICAgICBcbiAgICAgIGlmICh0eXBlb2Ygc3RyID09PSAnc3RyaW5nJykge1xuICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW5ndGggPSBwYXJzZXJzLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgIG9iaiA9IHBhcnNlcnNbaV0oc3RyKTtcbiAgICAgICAgICAgICAgaWYgKG9iaikgeyByZXR1cm4gb2JqOyB9XG4gICAgICAgICAgfVxuICAgICAgfVxuICAgICAgXG4gICAgICByZXR1cm4gZGVmYXVsdE9iak1ha2VyKCk7XG4gIH1cblxuICByZXR1cm4gcGFyc2VyO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi91YXAtcmVmLWltcGwvbGliL21ha2VQYXJzZXIuanNcbi8vIG1vZHVsZSBpZCA9IDVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiZXhwb3J0cy5tYWtlRGVmYXVsdCA9IGZ1bmN0aW9uIG1ha2VEZWZhdWx0KHN0cikge1xuICAgIHJldHVybiB7XG4gICAgICAgIHVzZXJBZ2VudDogc3RyLFxuICAgICAgICBmYW1pbHk6IFwiT3RoZXJcIixcbiAgICAgICAgbWFqb3I6IG51bGwsXG4gICAgICAgIG1pbm9yOiBudWxsLFxuICAgICAgICBwYXRjaDogbnVsbCxcbiAgICAgICAgcGF0Y2hNaW5vcjogbnVsbFxuICAgIH07XG59O1xuXG5leHBvcnRzLm1ha2VQYXJzZXIgPSBmdW5jdGlvbiBtYWtlUGFyc2VyKG9iaikge1xuICB2YXIgcmVnZXhwID0gbmV3IFJlZ0V4cChvYmoucmVnZXgpLFxuICAgICAgZmFtUmVwID0gb2JqLm9zX3JlcGxhY2VtZW50LFxuICAgICAgbWFqb3JSZXAgPSBvYmoub3NfdjFfcmVwbGFjZW1lbnQsXG4gICAgICBtaW5vclJlcCA9IG9iai5vc192Ml9yZXBsYWNlbWVudCxcbiAgICAgIHBhdGNoUmVwID0gb2JqLm9zX3YzX3JlcGxhY2VtZW50LFxuICAgICAgcGF0Y2hNaW5vclJlcCA9IG9iai5vc192NF9yZXBsYWNlbWVudDtcbiAgXG4gIGZ1bmN0aW9uIHBhcnNlcihzdHIpIHtcbiAgICB2YXIgbSA9IHN0ci5tYXRjaChyZWdleHApO1xuICAgIGlmICghbSkgeyByZXR1cm4gbnVsbDsgfVxuICAgIFxuICAgIHJldHVybiB7XG4gICAgICAgIHVzZXJBZ2VudDogc3RyLFxuICAgICAgICBmYW1pbHk6IGZhbVJlcCA/IGZhbVJlcC5yZXBsYWNlKCckMScsIG1bMV0pIDogbVsxXSxcbiAgICAgICAgbWFqb3I6IG1ham9yUmVwIHx8IG1bMl0gfHwgbnVsbCxcbiAgICAgICAgbWlub3I6IG1pbm9yUmVwIHx8IG1bM10gfHwgbnVsbCxcbiAgICAgICAgcGF0Y2g6IHBhdGNoUmVwIHx8IG1bNF0gfHwgbnVsbCxcbiAgICAgICAgcGF0Y2hNaW5vcjogcGF0Y2hNaW5vclJlcCB8fCBtWzVdIHx8IG51bGxcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIHBhcnNlcjtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vdWFwLXJlZi1pbXBsL2xpYi9vcy5qc1xuLy8gbW9kdWxlIGlkID0gNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHJlcGxhY2VNYXRjaGVzKHN0ciwgbSkge1xuICByZXR1cm4gc3RyLnJlcGxhY2UoL1xcJChcXGQpL2csIGZ1bmN0aW9uKHRtcCwgaSkge1xuICAgIHJldHVybiBtW2ldIHx8ICcnO1xuICB9KS50cmltKCk7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3VhcC1yZWYtaW1wbC9saWIvcmVwbGFjZU1hdGNoZXMuanNcbi8vIG1vZHVsZSBpZCA9IDdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiZXhwb3J0cy5SZXN1bHRzID0gUmVzdWx0cztcbmZ1bmN0aW9uIFJlc3VsdHModWFfc3RyLCB1YSwgb3MsIGRldmljZSkge1xuICB0aGlzLnVzZXJBZ2VudCA9IHVhX3N0cjtcbiAgdGhpcy51YSA9IHVhO1xuICB0aGlzLm9zID0gb3M7XG4gIHRoaXMuZGV2aWNlID0gZGV2aWNlO1xuICBkZWxldGUgdWEudXNlckFnZW50O1xuICBkZWxldGUgb3MudXNlckFnZW50O1xuICBkZWxldGUgZGV2aWNlLnVzZXJBZ2VudDtcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi91YXAtcmVmLWltcGwvbGliL3Jlc3VsdHMuanNcbi8vIG1vZHVsZSBpZCA9IDhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiZXhwb3J0cy5tYWtlRGVmYXVsdCA9IGZ1bmN0aW9uIG1ha2VEZWZhdWx0KHN0cikge1xuICAgIHJldHVybiB7XG4gICAgICAgIHVzZXJBZ2VudDogc3RyLFxuICAgICAgICBmYW1pbHk6IFwiT3RoZXJcIixcbiAgICAgICAgbWFqb3I6IG51bGwsXG4gICAgICAgIG1pbm9yOiBudWxsLFxuICAgICAgICBwYXRjaDogbnVsbFxuICAgIH07XG59O1xuXG5leHBvcnRzLm1ha2VQYXJzZXIgPSBmdW5jdGlvbiBtYWtlUGFyc2VyKG9iaikge1xuICB2YXIgcmVnZXhwID0gbmV3IFJlZ0V4cChvYmoucmVnZXgpLFxuICAgICAgZmFtUmVwID0gb2JqLmZhbWlseV9yZXBsYWNlbWVudCxcbiAgICAgIG1ham9yUmVwID0gb2JqLnYxX3JlcGxhY2VtZW50LFxuICAgICAgbWlub3JSZXAgPSBvYmoudjJfcmVwbGFjZW1lbnQsXG4gICAgICBwYXRjaFJlcCA9IG9iai52M19yZXBsYWNlbWVudDtcblxuICBmdW5jdGlvbiBwYXJzZXIoc3RyKSB7XG4gICAgdmFyIG0gPSBzdHIubWF0Y2gocmVnZXhwKTtcbiAgICBpZiAoIW0pIHsgcmV0dXJuIG51bGw7IH1cbiAgICBcbiAgICByZXR1cm4ge1xuICAgICAgICB1c2VyQWdlbnQ6IHN0cixcbiAgICAgICAgZmFtaWx5OiBmYW1SZXAgPyBmYW1SZXAucmVwbGFjZSgnJDEnLCBtWzFdKSA6IG1bMV0sXG4gICAgICAgIG1ham9yOiBtYWpvclJlcCB8fCBtWzJdIHx8IG51bGwsXG4gICAgICAgIG1pbm9yOiBtaW5vclJlcCB8fCBtWzNdIHx8IG51bGwsXG4gICAgICAgIHBhdGNoOiBwYXRjaFJlcCB8fCBtWzRdIHx8IG51bGxcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIHBhcnNlcjtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vdWFwLXJlZi1pbXBsL2xpYi91YS5qc1xuLy8gbW9kdWxlIGlkID0gOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9