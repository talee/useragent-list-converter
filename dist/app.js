/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 3);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _templateObject = _taggedTemplateLiteral(["\nuser_agent_parsers:\n  #### SPECIAL CASES TOP ####\n\n  # @note: iOS / OSX Applications\n  - regex: '(CFNetwork)(?:/(d+).(d+).?(d+)?)?'\n    family_replacement: 'CFNetwork'\n\n  # Pingdom\n  - regex: '(Pingdom.com_bot_version_)(d+).(d+)'\n    family_replacement: 'PingdomBot'\n    # 'Mozilla/5.0 (Unknown; Linux x86_64) AppleWebKit/534.34 (KHTML, like Gecko) PingdomTMS/0.8.5 Safari/534.34'\n  - regex: '(PingdomTMS)/(d+).(d+).(d+)'\n    family_replacement: 'PingdomBot'\n\n  # Facebook\n  - regex: '(facebookexternalhit)/(d+).(d+)'\n    family_replacement: 'FacebookBot'\n\n  # Google Plus\n  - regex: 'Google.*/+/web/snippet'\n    family_replacement: 'GooglePlusBot'\n\n  # Gmail\n  - regex: 'via ggpht.com GoogleImageProxy'\n    family_replacement: 'GmailImageProxy'\n\n  # Twitter\n  - regex: '(Twitterbot)/(d+).(d+)'\n    family_replacement: 'TwitterBot'\n\n  # Bots Pattern '/name-0.0'\n  - regex: '/((?:Ant-)?Nutch|[A-z]+[Bb]ot|[A-z]+[Ss]pider|Axtaris|fetchurl|Isara|ShopSalad|Tailsweep)[ -](d+)(?:.(d+)(?:.(d+))?)?'\n  # Bots Pattern 'name/0.0'\n  - regex: '\b(008|Altresium|Argus|BaiduMobaider|BoardReader|DNSGroup|DataparkSearch|EDI|Goodzer|Grub|INGRID|Infohelfer|LinkedInBot|LOOQ|Nutch|PathDefender|Peew|PostPost|Steeler|Twitterbot|VSE|WebCrunch|WebZIP|Y!J-BR[A-Z]|YahooSeeker|envolk|sproose|wminer)/(d+)(?:.(d+)(?:.(d+))?)?'\n\n  # MSIECrawler\n  - regex: '(MSIE) (d+).(d+)([a-z]d?)?;.* MSIECrawler'\n    family_replacement: 'MSIECrawler'\n\n  # Downloader ...\n  - regex: '(Google-HTTP-Java-Client|Apache-HttpClient|http%20client|Python-urllib|HttpMonitor|TLSProber|WinHTTP|JNLP|okhttp)(?:[ /](d+)(?:.(d+)(?:.(d+))?)?)?'\n\n  # Bots\n  - regex: '(1470.net crawler|50.nu|8bo Crawler Bot|Aboundex|Accoona-[A-z]+-Agent|AdsBot-Google(?:-[a-z]+)?|altavista|AppEngine-Google|archive.*?.org_bot|archiver|Ask Jeeves|[Bb]ai[Dd]u[Ss]pider(?:-[A-Za-z]+)*|bingbot|BingPreview|blitzbot|BlogBridge|BoardReader(?: [A-Za-z]+)*|boitho.com-dc|BotSeer|\bw*faviconw*\b|\bYeti(?:-[a-z]+)?|Catchpoint bot|[Cc]harlotte|Checklinks|clumboot|Comodo HTTP(S) Crawler|Comodo-Webinspector-Crawler|ConveraCrawler|CRAWL-E|CrawlConvera|Daumoa(?:-feedfetcher)?|Feed Seeker Bot|findlinks|Flamingo_SearchEngine|FollowSite Bot|furlbot|Genieo|gigabot|GomezAgent|gonzo1|(?:[a-zA-Z]+-)?Googlebot(?:-[a-zA-Z]+)?|Google SketchUp|grub-client|gsa-crawler|heritrix|HiddenMarket|holmes|HooWWWer|htdig|ia_archiver|ICC-Crawler|Icarus6j|ichiro(?:/mobile)?|IconSurf|IlTrovatore(?:-Setaccio)?|InfuzApp|Innovazion Crawler|InternetArchive|IP2[a-z]+Bot|jbot\b|KaloogaBot|Kraken|Kurzor|larbin|LEIA|LesnikBot|Linguee Bot|LinkAider|LinkedInBot|Lite Bot|Llaut|lycos|Mail.RU_Bot|masscan|masidani_bot|Mediapartners-Google|Microsoft .*? Bot|mogimogi|mozDex|MJ12bot|msnbot(?:-media *)?|msrbot|netresearch|Netvibes|NewsGator[^/]*|^NING|Nutch[^/]*|Nymesis|ObjectsSearch|Orbiter|OOZBOT|PagePeeker|PagesInventory|PaxleFramework|Peeplo Screenshot Bot|PlantyNet_WebRobot|Pompos|Read%20Later|Reaper|RedCarpet|Retreiver|Riddler|Rival IQ|scooter|Scrapy|Scrubby|searchsight|seekbot|semanticdiscovery|Simpy|SimplePie|SEOstats|SimpleRSS|SiteCon|Slackbot-LinkExpanding|Slack-ImgProxy|Slurp|snappy|Speedy Spider|Squrl Java|TheUsefulbot|ThumbShotsBot|Thumbshots.ru|TwitterBot|WhatsApp|URL2PNG|Vagabondo|VoilaBot|^vortex|Votay bot|^voyager|WASALive.Bot|Web-sniffer|WebThumb|WeSEE:[A-z]+|WhatWeb|WIRE|WordPress|Wotbox|www.almaden.ibm.com|Xenu(?:.s)? Link Sleuth|Xerka [A-z]+Bot|yacy(?:bot)?|Yahoo[a-z]*Seeker|Yahoo! Slurp|Yandexw+|YodaoBot(?:-[A-z]+)?|YottaaMonitor|Yowedo|^Zao|^Zao-Crawler|ZeBot_www.ze.bz|ZooShot|ZyBorg)(?:[ /]v?(d+)(?:.(d+)(?:.(d+))?)?)?'\n\n  # Bots General matcher 'name/0.0'\n  - regex: '(?:/[A-Za-z0-9.]+)? *([A-Za-z0-9 -_![]:]*(?:[Aa]rchiver|[Ii]ndexer|[Ss]craper|[Bb]ot|[Ss]pider|[Cc]rawl[a-z]*))/(d+)(?:.(d+)(?:.(d+))?)?'\n  # Bots General matcher 'name 0.0'\n  - regex: '(?:/[A-Za-z0-9.]+)? *([A-Za-z0-9 _![]:]*(?:[Aa]rchiver|[Ii]ndexer|[Ss]craper|[Bb]ot|[Ss]pider|[Cc]rawl[a-z]*)) (d+)(?:.(d+)(?:.(d+))?)?'\n  # Bots containing spider|scrape|bot(but not CUBOT)|Crawl\n  - regex: '((?:[A-z0-9]+|[A-z-]+ ?)?(?: the )?(?:[Ss][Pp][Ii][Dd][Ee][Rr]|[Ss]crape|[A-Za-z0-9-]*(?:[^C][^Uu])[Bb]ot|[Cc][Rr][Aa][Ww][Ll])[A-z0-9]*)(?:(?:[ /]| v)(d+)(?:.(d+)(?:.(d+))?)?)?'\n\n  # HbbTV standard defines what features the browser should understand.\n  # but it's like targeting \"HTML5 browsers\", effective browser support depends on the model\n  # See os_parsers if you want to target a specific TV\n  - regex: '(HbbTV)/(d+).(d+).(d+) ('\n\n  # must go before Firefox to catch Chimera/SeaMonkey/Camino\n  - regex: '(Chimera|SeaMonkey|Camino)/(d+).(d+).?([ab]?d+[a-z]*)?'\n\n  # Social Networks\n  # Facebook\n  - regex: '[FB.*;(FBAV)/(d+)(?:.(d+)(?:.(d)+)?)?'\n    family_replacement: 'Facebook'\n  # Pinterest\n  - regex: '[(Pinterest)/[^]]+]'\n  - regex: '(Pinterest)(?: for Android(?: Tablet)?)?/(d+)(?:.(d+)(?:.(d)+)?)?'\n\n  # Pale Moon\n  - regex: '(PaleMoon)/(d+).(d+).?(d+)?'\n    family_replacement: 'Pale Moon'\n\n  # Firefox\n  - regex: '(Fennec)/(d+).(d+).?([ab]?d+[a-z]*)'\n    family_replacement: 'Firefox Mobile'\n  - regex: '(Fennec)/(d+).(d+)(pre)'\n    family_replacement: 'Firefox Mobile'\n  - regex: '(Fennec)/(d+).(d+)'\n    family_replacement: 'Firefox Mobile'\n  - regex: '(?:Mobile|Tablet);.*(Firefox)/(d+).(d+)'\n    family_replacement: 'Firefox Mobile'\n  - regex: '(Namoroka|Shiretoko|Minefield)/(d+).(d+).(d+(?:pre)?)'\n    family_replacement: 'Firefox ($1)'\n  - regex: '(Firefox)/(d+).(d+)(ad+[a-z]*)'\n    family_replacement: 'Firefox Alpha'\n  - regex: '(Firefox)/(d+).(d+)(bd+[a-z]*)'\n    family_replacement: 'Firefox Beta'\n  - regex: '(Firefox)-(?:d+.d+)?/(d+).(d+)(ad+[a-z]*)'\n    family_replacement: 'Firefox Alpha'\n  - regex: '(Firefox)-(?:d+.d+)?/(d+).(d+)(bd+[a-z]*)'\n    family_replacement: 'Firefox Beta'\n  - regex: '(Namoroka|Shiretoko|Minefield)/(d+).(d+)([ab]d+[a-z]*)?'\n    family_replacement: 'Firefox ($1)'\n  - regex: '(Firefox).*Tablet browser (d+).(d+).(d+)'\n    family_replacement: 'MicroB'\n  - regex: '(MozillaDeveloperPreview)/(d+).(d+)([ab]d+[a-z]*)?'\n  - regex: '(FxiOS)/(d+).(d+)(.(d+))?(.(d+))?'\n    family_replacement: 'Firefox iOS'\n\n  # e.g.: Flock/2.0b2\n  - regex: '(Flock)/(d+).(d+)(bd+?)'\n\n  # RockMelt\n  - regex: '(RockMelt)/(d+).(d+).(d+)'\n\n  # e.g.: Fennec/0.9pre\n  - regex: '(Navigator)/(d+).(d+).(d+)'\n    family_replacement: 'Netscape'\n\n  - regex: '(Navigator)/(d+).(d+)([ab]d+)'\n    family_replacement: 'Netscape'\n\n  - regex: '(Netscape6)/(d+).(d+).?([ab]?d+)?'\n    family_replacement: 'Netscape'\n\n  - regex: '(MyIBrow)/(d+).(d+)'\n    family_replacement: 'My Internet Browser'\n\n  # UC Browser\n  # we need check it before opera. In other case case UC Browser detected look like Opera Mini\n  - regex: '(UC? ?Browser|UCWEB|U3)[ /]?(d+).(d+).(d+)'\n    family_replacement: 'UC Browser'\n\n  # Opera will stop at 9.80 and hide the real version in the Version string.\n  # see: http://dev.opera.com/articles/view/opera-ua-string-changes/\n  - regex: '(Opera Tablet).*Version/(d+).(d+)(?:.(d+))?'\n  - regex: '(Opera Mini)(?:/att)?/?(d+)?(?:.(d+))?(?:.(d+))?'\n  - regex: '(Opera)/.+Opera Mobi.+Version/(d+).(d+)'\n    family_replacement: 'Opera Mobile'\n  - regex: '(Opera)/(d+).(d+).+Opera Mobi'\n    family_replacement: 'Opera Mobile'\n  - regex: 'Opera Mobi.+(Opera)(?:/|s+)(d+).(d+)'\n    family_replacement: 'Opera Mobile'\n  - regex: 'Opera Mobi'\n    family_replacement: 'Opera Mobile'\n  - regex: '(Opera)/9.80.*Version/(d+).(d+)(?:.(d+))?'\n\n  # Opera 14 for Android uses a WebKit render engine.\n  - regex: '(?:Mobile Safari).*(OPR)/(d+).(d+).(d+)'\n    family_replacement: 'Opera Mobile'\n\n  # Opera >=15 for Desktop is similar to Chrome but includes an \"OPR\" Version string.\n  - regex: '(?:Chrome).*(OPR)/(d+).(d+).(d+)'\n    family_replacement: 'Opera'\n\n  # Opera Coast\n  - regex: '(Coast)/(d+).(d+).(d+)'\n    family_replacement: 'Opera Coast'\n\n  # Opera Mini for iOS (from version 8.0.0)\n  - regex: '(OPiOS)/(d+).(d+).(d+)'\n    family_replacement: 'Opera Mini'\n\n  # Opera Neon\n  - regex: 'Chrome/.+( MMS)/(d+).(d+).(d+)'\n    family_replacement: 'Opera Neon'\n\n  # Palm WebOS looks a lot like Safari.\n  - regex: '(hpw|web)OS/(d+).(d+)(?:.(d+))?'\n    family_replacement: 'webOS Browser'\n\n  # LuaKit has no version info.\n  # http://luakit.org/projects/luakit/\n  - regex: '(luakit)'\n    family_replacement: 'LuaKit'\n\n  # Snowshoe\n  - regex: '(Snowshoe)/(d+).(d+).(d+)'\n\n  # Lightning (for Thunderbird)\n  # http://www.mozilla.org/projects/calendar/lightning/\n  - regex: 'Gecko/d+ (Lightning)/(d+).(d+).?((?:[ab]?d+[a-z]*)|(?:d*))'\n\n  # Swiftfox\n  - regex: '(Firefox)/(d+).(d+).(d+(?:pre)?) (Swiftfox)'\n    family_replacement: 'Swiftfox'\n  - regex: '(Firefox)/(d+).(d+)([ab]d+[a-z]*)? (Swiftfox)'\n    family_replacement: 'Swiftfox'\n\n  # Rekonq\n  - regex: '(rekonq)/(d+).(d+).?(d+)? Safari'\n    family_replacement: 'Rekonq'\n  - regex: 'rekonq'\n    family_replacement: 'Rekonq'\n\n  # Conkeror lowercase/uppercase\n  # http://conkeror.org/\n  - regex: '(conkeror|Conkeror)/(d+).(d+).?(d+)?'\n    family_replacement: 'Conkeror'\n\n  # catches lower case konqueror\n  - regex: '(konqueror)/(d+).(d+).(d+)'\n    family_replacement: 'Konqueror'\n\n  - regex: '(WeTab)-Browser'\n\n  - regex: '(Comodo_Dragon)/(d+).(d+).(d+)'\n    family_replacement: 'Comodo Dragon'\n\n  - regex: '(Symphony) (d+).(d+)'\n\n  - regex: 'PLAYSTATION 3.+WebKit'\n    family_replacement: 'NetFront NX'\n  - regex: 'PLAYSTATION 3'\n    family_replacement: 'NetFront'\n  - regex: '(PlayStation Portable)'\n    family_replacement: 'NetFront'\n  - regex: '(PlayStation Vita)'\n    family_replacement: 'NetFront NX'\n\n  - regex: 'AppleWebKit.+ (NX)/(d+).(d+).(d+)'\n    family_replacement: 'NetFront NX'\n  - regex: '(Nintendo 3DS)'\n    family_replacement: 'NetFront NX'\n\n  # Amazon Silk, should go before Safari and Chrome Mobile\n  - regex: '(Silk)/(d+).(d+)(?:.([0-9-]+))?'\n    family_replacement: 'Amazon Silk'\n\n  # @ref: http://www.puffinbrowser.com\n  - regex: '(Puffin)/(d+).(d+)(?:.(d+))?'\n\n  # Edge Mobile\n  - regex: 'Windows Phone .*(Edge)/(d+).(d+)'\n    family_replacement: 'Edge Mobile'\n\n  # Samsung Internet (based on Chrome, but lacking some features)\n  - regex: '(SamsungBrowser)/(d+).(d+)'\n    family_replacement: 'Samsung Internet'\n\n  # Baidu Browsers (desktop spoofs chrome & IE, explorer is mobile)\n  - regex: '(baidubrowser)[/s](d+)(?:.(d+)(?:.(d+))?)?'\n    family_replacement: 'Baidu Browser'\n  - regex: '(FlyFlow)/(d+).(d+)'\n    family_replacement: 'Baidu Explorer'\n\n  # Chrome Mobile\n  - regex: '(CrMo)/(d+).(d+).(d+).(d+)'\n    family_replacement: 'Chrome Mobile'\n  - regex: '(CriOS)/(d+).(d+).(d+).(d+)'\n    family_replacement: 'Chrome Mobile iOS'\n  - regex: '(Chrome)/(d+).(d+).(d+).(d+) Mobile(?:[ /]|$)'\n    family_replacement: 'Chrome Mobile'\n  - regex: ' Mobile .*(Chrome)/(d+).(d+).(d+).(d+)'\n    family_replacement: 'Chrome Mobile'\n\n  # Chrome Frame must come before MSIE.\n  - regex: '(chromeframe)/(d+).(d+).(d+)'\n    family_replacement: 'Chrome Frame'\n\n  # Tizen Browser (second case included in browser/major.minor regex)\n  - regex: '(SLP Browser)/(d+).(d+)'\n    family_replacement: 'Tizen Browser'\n\n  # Sogou Explorer 2.X\n  - regex: '(SE 2.X) MetaSr (d+).(d+)'\n    family_replacement: 'Sogou Explorer'\n\n  # QQ Browsers\n  - regex: '(MQQBrowser/Mini)(?:(d+)(?:.(d+)(?:.(d+))?)?)?'\n    family_replacement: 'QQ Browser Mini'\n  - regex: '(MQQBrowser)(?:/(d+)(?:.(d+)(?:.(d+))?)?)?'\n    family_replacement: 'QQ Browser Mobile'\n  - regex: '(QQBrowser)(?:/(d+)(?:.(d+).(d+)(?:.(d+))?)?)?'\n    family_replacement: 'QQ Browser'\n\n  # Rackspace Monitoring\n  - regex: '(Rackspace Monitoring)/(d+).(d+)'\n    family_replacement: 'RackspaceBot'\n\n  # PyAMF\n  - regex: '(PyAMF)/(d+).(d+).(d+)'\n\n  # Yandex Browser\n  - regex: '(YaBrowser)/(d+).(d+).(d+)'\n    family_replacement: 'Yandex Browser'\n\n  # Mail.ru Amigo/Internet Browser (Chromium-based)\n  - regex: '(Chrome)/(d+).(d+).(d+).* MRCHROME'\n    family_replacement: 'Mail.ru Chromium Browser'\n\n  # AOL Browser (IE-based)\n  - regex: '(AOL) (d+).(d+); AOLBuild (d+)'\n\n  # MxBrowser is Maxthon\n  - regex: '(MxBrowser)/(d+).(d+)(?:.(d+))?'\n    family_replacement: 'Maxthon'\n\n  #### END SPECIAL CASES TOP ####\n\n  #### MAIN CASES - this catches > 50% of all browsers ####\n\n  # Browser/major_version.minor_version.beta_version\n  - regex: '\b(MobileIron|Crosswalk|FireWeb|Jasmine|ANTGalio|Midori|Fresco|Lobo|PaleMoon|Maxthon|Lynx|OmniWeb|Dillo|Camino|Demeter|Fluid|Fennec|Epiphany|Shiira|Sunrise|Spotify|Flock|Netscape|Lunascape|WebPilot|NetFront|Netfront|Konqueror|SeaMonkey|Kazehakase|Vienna|Iceape|Iceweasel|IceWeasel|Iron|K-Meleon|Sleipnir|Galeon|GranParadiso|Opera Mini|iCab|NetNewsWire|ThunderBrowse|Iris|UP.Browser|Bunjalloo|Google Earth|Raven for Mac|Openwave|MacOutlook|Electron)/(d+).(d+).(d+)'\n\n  # Outlook 2007\n  - regex: 'Microsoft Office Outlook 12.d+.d+|MSOffice 12'\n    family_replacement: 'Outlook'\n    v1_replacement: '2007'\n\n  # Outlook 2010\n  - regex: 'Microsoft Outlook 14.d+.d+|MSOffice 14'\n    family_replacement: 'Outlook'\n    v1_replacement: '2010'\n\n  # Outlook 2013\n  - regex: 'Microsoft Outlook 15.d+.d+'\n    family_replacement: 'Outlook'\n    v1_replacement: '2013'\n\n  # Outlook 2016\n  - regex: 'Microsoft Outlook (?:Mail )?16.d+.d+'\n    family_replacement: 'Outlook'\n    v1_replacement: '2016'\n\n  # Windows Live Mail\n  - regex: 'Outlook-Express/7.0.*'\n    family_replacement: 'Windows Live Mail'\n\n  # Apple Air Mail\n  - regex: '(Airmail) (d+).(d+)(?:.(d+))?'\n\n  # Thunderbird\n  - regex: '(Thunderbird)/(d+).(d+)(?:.(d+(?:pre)?))?'\n    family_replacement: 'Thunderbird'\n\n  # Postbox\n  - regex: '(Postbox)/(d+).(d+).(d+)'\n    family_replacement: 'Postbox'\n\n  # Barca\n  - regex: '(Barca(?:Pro)?)/(d+).(d+)(?:.(d+))?'\n    family_replacement: 'Barca'\n\n  # Lotus Notes\n  - regex: '(Lotus-Notes)/(d+).(d+)(?:.(d+))?'\n    family_replacement: 'Lotus Notes'\n\n  # Vivaldi uses \"Vivaldi\"\n  - regex: '(Vivaldi)/(d+).(d+).(d+)'\n\n  # Edge/major_version.minor_version\n  - regex: '(Edge)/(d+).(d+)'\n\n  # Brave Browser https://brave.com/\n  - regex: '(brave)/(d+).(d+).(d+) Chrome'\n    family_replacement: 'Brave'\n\n  # Iron Browser ~since version 50\n  - regex: '(Chrome)/(d+).(d+).(d+)[d.]* Iron[^/]'\n    family_replacement: 'Iron'\n\n  # Dolphin Browser\n  # @ref: http://www.dolphin.com\n  - regex: '\b(Dolphin)(?: |HDCN/|/INT-)(d+).(d+).?(d+)?'\n\n  # Headless Chrome\n  # https://chromium.googlesource.com/chromium/src/+/lkgr/headless/README.md\n  # Currently only available on Linux\n  - regex: 'HeadlessChrome'\n    family_replacement: 'HeadlessChrome'\n\n  # Browser/major_version.minor_version\n  - regex: '(bingbot|Bolt|AdobeAIR|Jasmine|IceCat|Skyfire|Midori|Maxthon|Lynx|Arora|IBrowse|Dillo|Camino|Shiira|Fennec|Phoenix|Flock|Netscape|Lunascape|Epiphany|WebPilot|Opera Mini|Opera|NetFront|Netfront|Konqueror|Googlebot|SeaMonkey|Kazehakase|Vienna|Iceape|Iceweasel|IceWeasel|Iron|K-Meleon|Sleipnir|Galeon|GranParadiso|iCab|iTunes|MacAppStore|NetNewsWire|Space Bison|Stainless|Orca|Dolfin|BOLT|Minimo|Tizen Browser|Polaris|Abrowser|Planetweb|ICE Browser|mDolphin|qutebrowser|Otter|QupZilla|MailBar|kmail2|YahooMobileMail|ExchangeWebServices|ExchangeServicesClient|Dragon|Outlook-iOS-Android)/(d+).(d+)(?:.(d+))?'\n\n  # Chrome/Chromium/major_version.minor_version\n  - regex: '(Chromium|Chrome)/(d+).(d+)(?:.(d+))?'\n\n  ##########\n  # IE Mobile needs to happen before Android to catch cases such as:\n  # Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 920)...\n  # Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 920; ANZ821)...\n  # Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 920; Orange)...\n  # Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 920; Vodafone)...\n  ##########\n\n  # IE Mobile\n  - regex: '(IEMobile)[ /](d+).(d+)'\n    family_replacement: 'IE Mobile'\n\n  # Baca Berita App News Reader\n  - regex: '(BacaBerita App)/(d+).(d+).(d+)'\n\n  # Browser major_version.minor_version.beta_version (space instead of slash)\n  - regex: '(iRider|Crazy Browser|SkipStone|iCab|Lunascape|Sleipnir|Maemo Browser) (d+).(d+).(d+)'\n  # Browser major_version.minor_version (space instead of slash)\n  - regex: '(iCab|Lunascape|Opera|Android|Jasmine|Polaris|Microsoft SkyDriveSync|The Bat!) (d+).(d+).?(d+)?'\n\n  # Kindle WebKit\n  - regex: '(Kindle)/(d+).(d+)'\n\n  # weird android UAs\n  - regex: '(Android) Donut'\n    v1_replacement: '1'\n    v2_replacement: '2'\n\n  - regex: '(Android) Eclair'\n    v1_replacement: '2'\n    v2_replacement: '1'\n\n  - regex: '(Android) Froyo'\n    v1_replacement: '2'\n    v2_replacement: '2'\n\n  - regex: '(Android) Gingerbread'\n    v1_replacement: '2'\n    v2_replacement: '3'\n\n  - regex: '(Android) Honeycomb'\n    v1_replacement: '3'\n\n  # desktop mode\n  # http://www.anandtech.com/show/3982/windows-phone-7-review\n  - regex: '(MSIE) (d+).(d+).*XBLWP7'\n    family_replacement: 'IE Large Screen'\n\n  # Slack desktop client (needs to be before Apple Mail as it gets wrongly detected on Mac OS otherwise)\n  - regex: '(Slack_SSB)/(d+).(d+).(d+)'\n    family_replacement: 'Slack Desktop Client'\n\n  #### END MAIN CASES ####\n\n  #### SPECIAL CASES ####\n  - regex: '(Obigo)InternetBrowser'\n  - regex: '(Obigo)-Browser'\n  - regex: '(Obigo|OBIGO)[^d]*(d+)(?:.(d+))?'\n    family_replacement: 'Obigo'\n\n  - regex: '(MAXTHON|Maxthon) (d+).(d+)'\n    family_replacement: 'Maxthon'\n  - regex: '(Maxthon|MyIE2|Uzbl|Shiira)'\n    v1_replacement: '0'\n\n  - regex: '(BrowseX) ((d+).(d+).(d+)'\n\n  - regex: '(NCSA_Mosaic)/(d+).(d+)'\n    family_replacement: 'NCSA Mosaic'\n\n  # Polaris/d.d is above\n  - regex: '(POLARIS)/(d+).(d+)'\n    family_replacement: 'Polaris'\n  - regex: '(Embider)/(d+).(d+)'\n    family_replacement: 'Polaris'\n\n  - regex: '(BonEcho)/(d+).(d+).?([ab]?d+)?'\n    family_replacement: 'Bon Echo'\n\n  # @note: iOS / OSX Applications\n  - regex: '(iPod|iPhone|iPad).+Version/(d+).(d+)(?:.(d+))?.*[ +]Safari'\n    family_replacement: 'Mobile Safari'\n  - regex: '(iPod|iPhone|iPad).+Version/(d+).(d+)(?:.(d+))?'\n    family_replacement: 'Mobile Safari UI/WKWebView'\n  - regex: '(iPod|iPod touch|iPhone|iPad);.*CPU.*OS[ +](d+)_(d+)(?:_(d+))?.*Mobile.*[ +]Safari'\n    family_replacement: 'Mobile Safari'\n  - regex: '(iPod|iPod touch|iPhone|iPad);.*CPU.*OS[ +](d+)_(d+)(?:_(d+))?.*Mobile'\n    family_replacement: 'Mobile Safari UI/WKWebView'\n  - regex: '(iPod|iPhone|iPad).* Safari'\n    family_replacement: 'Mobile Safari'\n  - regex: '(iPod|iPhone|iPad)'\n    family_replacement: 'Mobile Safari UI/WKWebView'\n\n  - regex: '(AvantGo) (d+).(d+)'\n\n  - regex: '(OneBrowser)/(d+).(d+)'\n    family_replacement: 'ONE Browser'\n\n  - regex: '(Avant)'\n    v1_replacement: '1'\n\n  # This is the Tesla Model S (see similar entry in device parsers)\n  - regex: '(QtCarBrowser)'\n    v1_replacement: '1'\n\n  - regex: '^(iBrowser/Mini)(d+).(d+)'\n    family_replacement: 'iBrowser Mini'\n  - regex: '^(iBrowser|iRAPP)/(d+).(d+)'\n\n  # nokia browsers\n  # based on: http://www.developer.nokia.com/Community/Wiki/User-Agent_headers_for_Nokia_devices\n  - regex: '^(Nokia)'\n    family_replacement: 'Nokia Services (WAP) Browser'\n  - regex: '(NokiaBrowser)/(d+).(d+).(d+).(d+)'\n    family_replacement: 'Nokia Browser'\n  - regex: '(NokiaBrowser)/(d+).(d+).(d+)'\n    family_replacement: 'Nokia Browser'\n  - regex: '(NokiaBrowser)/(d+).(d+)'\n    family_replacement: 'Nokia Browser'\n  - regex: '(BrowserNG)/(d+).(d+).(d+)'\n    family_replacement: 'Nokia Browser'\n  - regex: '(Series60)/5.0'\n    family_replacement: 'Nokia Browser'\n    v1_replacement: '7'\n    v2_replacement: '0'\n  - regex: '(Series60)/(d+).(d+)'\n    family_replacement: 'Nokia OSS Browser'\n  - regex: '(S40OviBrowser)/(d+).(d+).(d+).(d+)'\n    family_replacement: 'Ovi Browser'\n  - regex: '(Nokia)[EN]?(d+)'\n\n  # BlackBerry devices\n  - regex: '(PlayBook).+RIM Tablet OS (d+).(d+).(d+)'\n    family_replacement: 'BlackBerry WebKit'\n  - regex: '(Black[bB]erry|BB10).+Version/(d+).(d+).(d+)'\n    family_replacement: 'BlackBerry WebKit'\n  - regex: '(Black[bB]erry)s?(d+)'\n    family_replacement: 'BlackBerry'\n\n  - regex: '(OmniWeb)/v(d+).(d+)'\n\n  - regex: '(Blazer)/(d+).(d+)'\n    family_replacement: 'Palm Blazer'\n\n  - regex: '(Pre)/(d+).(d+)'\n    family_replacement: 'Palm Pre'\n\n  # fork of Links\n  - regex: '(ELinks)/(d+).(d+)'\n  - regex: '(ELinks) ((d+).(d+)'\n  - regex: '(Links) ((d+).(d+)'\n\n  - regex: '(QtWeb) Internet Browser/(d+).(d+)'\n\n  #- regex: '(iPad;.+(Version)/(d+).(d+)(?:.(d+))?.*Safari/'\n  #  family_replacement: 'iPad'\n\n  # Phantomjs, should go before Safari\n  - regex: '(PhantomJS)/(d+).(d+).(d+)'\n\n  # WebKit Nightly\n  - regex: '(AppleWebKit)/(d+).?(d+)?+ .* Safari'\n    family_replacement: 'WebKit Nightly'\n\n  # Safari\n  - regex: '(Version)/(d+).(d+)(?:.(d+))?.*Safari/'\n    family_replacement: 'Safari'\n  # Safari didn't provide \"Version/d.d.d\" prior to 3.0\n  - regex: '(Safari)/d+'\n\n  - regex: '(OLPC)/Update(d+).(d+)'\n\n  - regex: '(OLPC)/Update().(d+)'\n    v1_replacement: '0'\n\n  - regex: '(SEMC-Browser)/(d+).(d+)'\n\n  - regex: '(Teleca)'\n    family_replacement: 'Teleca Browser'\n\n  - regex: '(Phantom)/V(d+).(d+)'\n    family_replacement: 'Phantom Browser'\n\n  - regex: 'Trident(.*)rv.(d+).(d+)'\n    family_replacement: 'IE'\n\n  # Espial\n  - regex: '(Espial)/(d+)(?:.(d+))?(?:.(d+))?'\n\n # Apple Mail\n\n  # apple mail - not directly detectable, have it after Safari stuff\n  - regex: '(AppleWebKit)/(d+).(d+).(d+)'\n    family_replacement: 'Apple Mail'\n\n  # AFTER THE EDGE CASES ABOVE!\n  # AFTER IE11\n  # BEFORE all other IE\n  - regex: '(Firefox)/(d+).(d+).(d+)'\n  - regex: '(Firefox)/(d+).(d+)(pre|[ab]d+[a-z]*)?'\n\n  - regex: '([MS]?IE) (d+).(d+)'\n    family_replacement: 'IE'\n\n  - regex: '(python-requests)/(d+).(d+)'\n    family_replacement: 'Python Requests'\n\n  # headless user-agents\n  - regex: '\b(Windows-Update-Agent|Microsoft-CryptoAPI|SophosUpdateManager|SophosAgent|Debian APT-HTTP|Ubuntu APT-HTTP|libcurl-agent|libwww-perl|urlgrabber|curl|Wget|OpenBSD ftp|jupdate)(?:[ /](d+)(?:.(d+)(?:.(d+))?)?)?'\n\n  - regex: '(Java)[/ ]{0,1}d+.(d+).(d+)[_-]*([a-zA-Z0-9]+)*'\n\n  # Roku Digital-Video-Players https://www.roku.com/\n  - regex: '^(Roku)/DVP-(d+).(d+)'\n\n  # Kurio App News Reader https://kurio.co.id/\n  - regex: '(Kurio)/(d+).(d+).(d+)'\n    family_replacement: 'Kurio App'\n\n\nos_parsers:\n  ##########\n  # HbbTV vendors\n  ##########\n\n  # starts with the easy one : Panasonic seems consistent across years, hope it will continue\n  #HbbTV/1.1.1 (;Panasonic;VIERA 2011;f.532;0071-0802 2000-0000;)\n  #HbbTV/1.1.1 (;Panasonic;VIERA 2012;1.261;0071-3103 2000-0000;)\n  #HbbTV/1.2.1 (;Panasonic;VIERA 2013;3.672;4101-0003 0002-0000;)\n  #- regex: 'HbbTV/d+.d+.d+ (;(Panasonic);VIERA ([0-9]{4});'\n\n  # Sony is consistent too but do not place year like the other\n  # Opera/9.80 (Linux armv7l; HbbTV/1.1.1 (; Sony; KDL32W650A; PKG3.211EUA; 2013;); ) Presto/2.12.362 Version/12.11\n  # Opera/9.80 (Linux mips; U;  HbbTV/1.1.1 (; Sony; KDL40HX751; PKG1.902EUA; 2012;);; en) Presto/2.10.250 Version/11.60\n  # Opera/9.80 (Linux mips; U;  HbbTV/1.1.1 (; Sony; KDL22EX320; PKG4.017EUA; 2011;);; en) Presto/2.7.61 Version/11.00\n  #- regex: 'HbbTV/d+.d+.d+ (; (Sony);.*;.*; ([0-9]{4});)'\n\n\n  # LG is consistent too, but we need to add manually the year model\n  #Mozilla/5.0 (Unknown; Linux armv7l) AppleWebKit/537.1+ (KHTML, like Gecko) Safari/537.1+ HbbTV/1.1.1 ( ;LGE ;NetCast 4.0 ;03.20.30 ;1.0M ;)\n  #Mozilla/5.0 (DirectFB; Linux armv7l) AppleWebKit/534.26+ (KHTML, like Gecko) Version/5.0 Safari/534.26+ HbbTV/1.1.1 ( ;LGE ;NetCast 3.0 ;1.0 ;1.0M ;)\n  - regex: 'HbbTV/d+.d+.d+ ( ;(LG)E ;NetCast 4.0'\n    os_v1_replacement: '2013'\n  - regex: 'HbbTV/d+.d+.d+ ( ;(LG)E ;NetCast 3.0'\n    os_v1_replacement: '2012'\n\n  # Samsung is on its way of normalizing their user-agent\n  # HbbTV/1.1.1 (;Samsung;SmartTV2013;T-FXPDEUC-1102.2;;) WebKit\n  # HbbTV/1.1.1 (;Samsung;SmartTV2013;T-MST12DEUC-1102.1;;) WebKit\n  # HbbTV/1.1.1 (;Samsung;SmartTV2012;;;) WebKit\n  # HbbTV/1.1.1 (;;;;;) Maple_2011\n  - regex: 'HbbTV/1.1.1 (;;;;;) Maple_2011'\n    os_replacement: 'Samsung'\n    os_v1_replacement: '2011'\n  # manage the two models of 2013\n  - regex: 'HbbTV/d+.d+.d+ (;(Samsung);SmartTV([0-9]{4});.*FXPDEUC'\n    os_v2_replacement: 'UE40F7000'\n  - regex: 'HbbTV/d+.d+.d+ (;(Samsung);SmartTV([0-9]{4});.*MST12DEUC'\n    os_v2_replacement: 'UE32F4500'\n  # generic Samsung (works starting in 2012)\n  #- regex: 'HbbTV/d+.d+.d+ (;(Samsung);SmartTV([0-9]{4});'\n\n  # Philips : not found any other way than a manual mapping\n  # Opera/9.80 (Linux mips; U; HbbTV/1.1.1 (; Philips; ; ; ; ) CE-HTML/1.0 NETTV/4.1.3 PHILIPSTV/1.1.1; en) Presto/2.10.250 Version/11.60\n  # Opera/9.80 (Linux mips ; U; HbbTV/1.1.1 (; Philips; ; ; ; ) CE-HTML/1.0 NETTV/3.2.1; en) Presto/2.6.33 Version/10.70\n  - regex: 'HbbTV/1.1.1 (; (Philips);.*NETTV/4'\n    os_v1_replacement: '2013'\n  - regex: 'HbbTV/1.1.1 (; (Philips);.*NETTV/3'\n    os_v1_replacement: '2012'\n  - regex: 'HbbTV/1.1.1 (; (Philips);.*NETTV/2'\n    os_v1_replacement: '2011'\n\n  # the HbbTV emulator developers use HbbTV/1.1.1 (;;;;;) firetv-firefox-plugin 1.1.20\n  - regex: 'HbbTV/d+.d+.d+.*(firetv)-firefox-plugin (d+).(d+).(d+)'\n    os_replacement: 'FireHbbTV'\n\n  # generic HbbTV, hoping to catch manufacturer name (always after 2nd comma) and the first string that looks like a 2011-2019 year\n  - regex: 'HbbTV/d+.d+.d+ (.*; ?([a-zA-Z]+) ?;.*(201[1-9]).*)'\n\n  ##########\n  # @note: Windows Phone needs to come before Windows NT 6.1 *and* before Android to catch cases such as:\n  # Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 920)...\n  # Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 920; ANZ821)...\n  # Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 920; Orange)...\n  # Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 920; Vodafone)...\n  ##########\n\n  - regex: '(Windows Phone) (?:OS[ /])?(d+).(d+)'\n\n  # Again a MS-special one: iPhone.*Outlook-iOS-Android/x.x is erroneously detected as Android\n  - regex: '(CPU[ +]OS|iPhone[ +]OS|CPU[ +]iPhone)[ +]+(d+)[_.](d+)(?:[_.](d+))?.*Outlook-iOS-Android'\n    os_replacement: 'iOS'\n\n  ##########\n  # Android\n  # can actually detect rooted android os. do we care?\n  ##########\n  - regex: '(Android)[ -/](d+).(d+)(?:[.-]([a-z0-9]+))?'\n\n  - regex: '(Android) Donut'\n    os_v1_replacement: '1'\n    os_v2_replacement: '2'\n\n  - regex: '(Android) Eclair'\n    os_v1_replacement: '2'\n    os_v2_replacement: '1'\n\n  - regex: '(Android) Froyo'\n    os_v1_replacement: '2'\n    os_v2_replacement: '2'\n\n  - regex: '(Android) Gingerbread'\n    os_v1_replacement: '2'\n    os_v2_replacement: '3'\n\n  - regex: '(Android) Honeycomb'\n    os_v1_replacement: '3'\n\n  # UCWEB\n  - regex: '^UCWEB.*; (Adr) (d+).(d+)(?:[.-]([a-z0-9]+))?;'\n    os_replacement: 'Android'\n  - regex: '^UCWEB.*; (iPad|iPh|iPd) OS (d+)_(d+)(?:_(d+))?;'\n    os_replacement: 'iOS'\n  - regex: '^UCWEB.*; (wds) (d+).(d+)(?:.(d+))?;'\n    os_replacement: 'Windows Phone'\n  # JUC\n  - regex: '^(JUC).*; ?U; ?(?:Android)?(d+).(d+)(?:[.-]([a-z0-9]+))?'\n    os_replacement: 'Android'\n\n  ##########\n  # Kindle Android\n  ##########\n  - regex: '(Silk-Accelerated=[a-z]{4,5})'\n    os_replacement: 'Android'\n\n  ##########\n  # Windows\n  # http://en.wikipedia.org/wiki/Windows_NT#Releases\n  # possibility of false positive when different marketing names share same NT kernel\n  # e.g. windows server 2003 and windows xp\n  # lots of ua strings have Windows NT 4.1 !?!?!?!? !?!? !? !????!?! !!! ??? !?!?! ?\n  # (very) roughly ordered in terms of frequency of occurence of regex (win xp currently most frequent, etc)\n  ##########\n\n  # ie mobile desktop mode\n  # spoofs nt 6.1. must come before windows 7\n  - regex: '(XBLWP7)'\n    os_replacement: 'Windows Phone'\n\n  # @note: This needs to come before Windows NT 6.1\n  - regex: '(Windows ?Mobile)'\n    os_replacement: 'Windows Mobile'\n\n  - regex: '(Windows (?:NT 5.2|NT 5.1))'\n    os_replacement: 'Windows XP'\n\n  - regex: '(Windows NT 6.1)'\n    os_replacement: 'Windows 7'\n\n  - regex: '(Windows NT 6.0)'\n    os_replacement: 'Windows Vista'\n\n  - regex: '(Win 9x 4.90)'\n    os_replacement: 'Windows ME'\n\n  - regex: '(Windows 98|Windows XP|Windows ME|Windows 95|Windows CE|Windows 7|Windows NT 4.0|Windows Vista|Windows 2000|Windows 3.1)'\n\n  - regex: '(Windows NT 6.2; ARM;)'\n    os_replacement: 'Windows RT'\n  - regex: '(Windows NT 6.2)'\n    os_replacement: 'Windows 8'\n\n  - regex: '(Windows NT 6.3; ARM;)'\n    os_replacement: 'Windows RT 8.1'\n  - regex: '(Windows NT 6.3)'\n    os_replacement: 'Windows 8.1'\n\n  - regex: '(Windows NT 6.4)'\n    os_replacement: 'Windows 10'\n  - regex: '(Windows NT 10.0)'\n    os_replacement: 'Windows 10'\n\n  - regex: '(Windows NT 5.0)'\n    os_replacement: 'Windows 2000'\n\n  - regex: '(WinNT4.0)'\n    os_replacement: 'Windows NT 4.0'\n\n  - regex: '(Windows ?CE)'\n    os_replacement: 'Windows CE'\n\n  - regex: 'Win ?(95|98|3.1|NT|ME|2000)'\n    os_replacement: 'Windows $1'\n\n  - regex: 'Win16'\n    os_replacement: 'Windows 3.1'\n\n  - regex: 'Win32'\n    os_replacement: 'Windows 95'\n\n  ##########\n  # Tizen OS from Samsung\n  # spoofs Android so pushing it above\n  ##########\n  - regex: '(Tizen)[/ ](d+).(d+)'\n\n  ##########\n  # Mac OS\n  # @ref: http://en.wikipedia.org/wiki/Mac_OS_X#Versions\n  # @ref: http://www.puredarwin.org/curious/versions\n  ##########\n  - regex: '((?:Mac[ +]?|; )OS[ +]X)[s+/](?:(d+)[_.](d+)(?:[_.](d+))?|Mach-O)'\n    os_replacement: 'Mac OS X'\n  # Leopard\n  - regex: ' (Dar)(win)/(9).(d+).*((?:i386|x86_64|Power Macintosh))'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '5'\n  # Snow Leopard\n  - regex: ' (Dar)(win)/(10).(d+).*((?:i386|x86_64))'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '6'\n  # Lion\n  - regex: ' (Dar)(win)/(11).(d+).*((?:i386|x86_64))'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '7'\n  # Mountain Lion\n  - regex: ' (Dar)(win)/(12).(d+).*((?:i386|x86_64))'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '8'\n  # Mavericks\n  - regex: ' (Dar)(win)/(13).(d+).*((?:i386|x86_64))'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '9'\n  # Yosemite is Darwin/14.x but patch versions are inconsistent in the Darwin string;\n  # more accurately covered by CFNetwork regexes downstream\n\n  # IE on Mac doesn't specify version number\n  - regex: 'Mac_PowerPC'\n    os_replacement: 'Mac OS'\n\n  # builds before tiger don't seem to specify version?\n\n  # ios devices spoof (mac os x), so including intel/ppc prefixes\n  - regex: '(?:PPC|Intel) (Mac OS X)'\n\n  ##########\n  # iOS\n  # http://en.wikipedia.org/wiki/IOS_version_history\n  ##########\n  # keep this above generic iOS, since AppleTV UAs contain 'CPU OS'\n  - regex: '(Apples?TV)(?:/(d+).(d+))?'\n    os_replacement: 'ATV OS X'\n\n  - regex: '(CPU[ +]OS|iPhone[ +]OS|CPU[ +]iPhone|CPU IPhone OS)[ +]+(d+)[_.](d+)(?:[_.](d+))?'\n    os_replacement: 'iOS'\n\n  # remaining cases are mostly only opera uas, so catch opera as to not catch iphone spoofs\n  - regex: '(iPhone|iPad|iPod); Opera'\n    os_replacement: 'iOS'\n\n  # few more stragglers\n  - regex: '(iPhone|iPad|iPod).*Mac OS X.*Version/(d+).(d+)'\n    os_replacement: 'iOS'\n\n  # CFNetwork/Darwin - The specific CFNetwork or Darwin version determines\n  # whether the os maps to Mac OS, or iOS, or just Darwin.\n  # See: http://user-agents.me/cfnetwork-version-list\n  - regex: '(CFNetwork)/(5)48.0.3.* Darwin/11.0.0'\n    os_replacement: 'iOS'\n  - regex: '(CFNetwork)/(5)48.(0).4.* Darwin/(1)1.0.0'\n    os_replacement: 'iOS'\n  - regex: '(CFNetwork)/(5)48.(1).4'\n    os_replacement: 'iOS'\n  - regex: '(CFNetwork)/(4)85.1(3).9'\n    os_replacement: 'iOS'\n  - regex: '(CFNetwork)/(6)09.(1).4'\n    os_replacement: 'iOS'\n  - regex: '(CFNetwork)/(6)(0)9'\n    os_replacement: 'iOS'\n  - regex: '(CFNetwork)/6(7)2.(1).13'\n    os_replacement: 'iOS'\n  - regex: '(CFNetwork)/6(7)2.(1).(1)4'\n    os_replacement: 'iOS'\n  - regex: '(CF)(Network)/6(7)(2).1.15'\n    os_replacement: 'iOS'\n    os_v1_replacement: '7'\n    os_v2_replacement: '1'\n  - regex: '(CFNetwork)/6(7)2.(0).(?:2|8)'\n    os_replacement: 'iOS'\n  - regex: '(CFNetwork)/709.1'\n    os_replacement: 'iOS'\n    os_v1_replacement: '8'\n    os_v2_replacement: '0.b5'\n  - regex: '(CF)(Network)/711.(d)'\n    os_replacement: 'iOS'\n    os_v1_replacement: '8'\n  - regex: '(CF)(Network)/(720).(d)'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '10'\n  - regex: '(CF)(Network)/(760).(d)'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '11'\n  - regex: '(CF)(Network)/758.(d)'\n    os_replacement: 'iOS'\n    os_v1_replacement: '9'\n  - regex: '(CF)(Network)/808.(d)'\n    os_replacement: 'iOS'\n    os_v1_replacement: '10'\n\n  ##########\n  # CFNetwork macOS Apps (must be before CFNetwork iOS Apps\n  # @ref: https://en.wikipedia.org/wiki/Darwin_(operating_system)#Release_history\n  ##########\n  - regex: 'CFNetwork/.* Darwin/16.d+.*(x86_64)'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '12'\n  - regex: 'CFNetwork/8.* Darwin/15.d+.*(x86_64)'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '11'\n  ##########\n  # CFNetwork iOS Apps\n  # @ref: https://en.wikipedia.org/wiki/Darwin_(operating_system)#Release_history\n  ##########\n  - regex: 'CFNetwork/.* Darwin/(9).d+'\n    os_replacement: 'iOS'\n    os_v1_replacement: '1'\n  - regex: 'CFNetwork/.* Darwin/(10).d+'\n    os_replacement: 'iOS'\n    os_v1_replacement: '4'\n  - regex: 'CFNetwork/.* Darwin/(11).d+'\n    os_replacement: 'iOS'\n    os_v1_replacement: '5'\n  - regex: 'CFNetwork/.* Darwin/(13).d+'\n    os_replacement: 'iOS'\n    os_v1_replacement: '6'\n  - regex: 'CFNetwork/6.* Darwin/(14).d+'\n    os_replacement: 'iOS'\n    os_v1_replacement: '7'\n  - regex: 'CFNetwork/7.* Darwin/(14).d+'\n    os_replacement: 'iOS'\n    os_v1_replacement: '8'\n    os_v2_replacement: '0'\n  - regex: 'CFNetwork/7.* Darwin/(15).d+'\n    os_replacement: 'iOS'\n    os_v1_replacement: '9'\n    os_v2_replacement: '0'\n  - regex: 'CFNetwork/8.* Darwin/(16).d+'\n    os_replacement: 'iOS'\n    os_v1_replacement: '10'\n  # iOS Apps\n  - regex: '\b(iOS[ /]|iOS; |iPhone(?:/| v|[ _]OS[/,]|; | OS : |d,d/|d,d; )|iPad/)(d{1,2})[_.](d{1,2})(?:[_.](d+))?'\n    os_replacement: 'iOS'\n  - regex: '((iOS);'\n\n  ##########\n  # Apple TV\n  ##########\n  - regex: '(tvOS)/(d+).(d+)'\n    os_replacement: 'tvOS'\n\n  ##########\n  # Chrome OS\n  # if version 0.0.0, probably this stuff:\n  # http://code.google.com/p/chromium-os/issues/detail?id=11573\n  # http://code.google.com/p/chromium-os/issues/detail?id=13790\n  ##########\n  - regex: '(CrOS) [a-z0-9_]+ (d+).(d+)(?:.(d+))?'\n    os_replacement: 'Chrome OS'\n\n  ##########\n  # Linux distros\n  ##########\n  - regex: '([Dd]ebian)'\n    os_replacement: 'Debian'\n  - regex: '(Linux Mint)(?:/(d+))?'\n  - regex: '(Mandriva)(?: Linux)?/(?:[d.-]+m[a-z]{2}(d+).(d))?'\n\n  ##########\n  # Symbian + Symbian OS\n  # http://en.wikipedia.org/wiki/History_of_Symbian\n  ##########\n  - regex: '(Symbian[Oo][Ss])[/ ](d+).(d+)'\n    os_replacement: 'Symbian OS'\n  - regex: '(Symbian/3).+NokiaBrowser/7.3'\n    os_replacement: 'Symbian^3 Anna'\n  - regex: '(Symbian/3).+NokiaBrowser/7.4'\n    os_replacement: 'Symbian^3 Belle'\n  - regex: '(Symbian/3)'\n    os_replacement: 'Symbian^3'\n  - regex: '\b(Series 60|SymbOS|S60Version|S60Vd|S60\b)'\n    os_replacement: 'Symbian OS'\n  - regex: '(MeeGo)'\n  - regex: 'Symbian [Oo][Ss]'\n    os_replacement: 'Symbian OS'\n  - regex: 'Series40;'\n    os_replacement: 'Nokia Series 40'\n  - regex: 'Series30Plus;'\n    os_replacement: 'Nokia Series 30 Plus'\n\n  ##########\n  # BlackBerry devices\n  ##########\n  - regex: '(BB10);.+Version/(d+).(d+).(d+)'\n    os_replacement: 'BlackBerry OS'\n  - regex: '(Black[Bb]erry)[0-9a-z]+/(d+).(d+).(d+)(?:.(d+))?'\n    os_replacement: 'BlackBerry OS'\n  - regex: '(Black[Bb]erry).+Version/(d+).(d+).(d+)(?:.(d+))?'\n    os_replacement: 'BlackBerry OS'\n  - regex: '(RIM Tablet OS) (d+).(d+).(d+)'\n    os_replacement: 'BlackBerry Tablet OS'\n  - regex: '(Play[Bb]ook)'\n    os_replacement: 'BlackBerry Tablet OS'\n  - regex: '(Black[Bb]erry)'\n    os_replacement: 'BlackBerry OS'\n\n  ##########\n  # Firefox OS\n  ##########\n  - regex: '((?:Mobile|Tablet);.+Gecko/18.0 Firefox/d+.d+'\n    os_replacement: 'Firefox OS'\n    os_v1_replacement: '1'\n    os_v2_replacement: '0'\n    os_v3_replacement: '1'\n\n  - regex: '((?:Mobile|Tablet);.+Gecko/18.1 Firefox/d+.d+'\n    os_replacement: 'Firefox OS'\n    os_v1_replacement: '1'\n    os_v2_replacement: '1'\n\n  - regex: '((?:Mobile|Tablet);.+Gecko/26.0 Firefox/d+.d+'\n    os_replacement: 'Firefox OS'\n    os_v1_replacement: '1'\n    os_v2_replacement: '2'\n\n  - regex: '((?:Mobile|Tablet);.+Gecko/28.0 Firefox/d+.d+'\n    os_replacement: 'Firefox OS'\n    os_v1_replacement: '1'\n    os_v2_replacement: '3'\n\n  - regex: '((?:Mobile|Tablet);.+Gecko/30.0 Firefox/d+.d+'\n    os_replacement: 'Firefox OS'\n    os_v1_replacement: '1'\n    os_v2_replacement: '4'\n\n  - regex: '((?:Mobile|Tablet);.+Gecko/32.0 Firefox/d+.d+'\n    os_replacement: 'Firefox OS'\n    os_v1_replacement: '2'\n    os_v2_replacement: '0'\n\n  - regex: '((?:Mobile|Tablet);.+Gecko/34.0 Firefox/d+.d+'\n    os_replacement: 'Firefox OS'\n    os_v1_replacement: '2'\n    os_v2_replacement: '1'\n\n  # Firefox OS Generic\n  - regex: '((?:Mobile|Tablet);.+Firefox/d+.d+'\n    os_replacement: 'Firefox OS'\n\n\n  ##########\n  # BREW\n  # yes, Brew is lower-cased for Brew MP\n  ##########\n  - regex: '(BREW)[ /](d+).(d+).(d+)'\n  - regex: '(BREW);'\n  - regex: '(Brew MP|BMP)[ /](d+).(d+).(d+)'\n    os_replacement: 'Brew MP'\n  - regex: 'BMP;'\n    os_replacement: 'Brew MP'\n\n  ##########\n  # Google TV\n  ##########\n  - regex: '(GoogleTV)(?: (d+).(d+)(?:.(d+))?|/[da-z]+)'\n\n  - regex: '(WebTV)/(d+).(d+)'\n\n  ##########\n  # Chromecast\n  ##########\n  - regex: '(CrKey)(?:[/](d+).(d+)(?:.(d+))?)?'\n    os_replacement: 'Chromecast'\n\n  ##########\n  # Misc mobile\n  ##########\n  - regex: '(hpw|web)OS/(d+).(d+)(?:.(d+))?'\n    os_replacement: 'webOS'\n  - regex: '(VRE);'\n\n  ##########\n  # Generic patterns\n  # since the majority of os cases are very specific, these go last\n  ##########\n  - regex: '(Fedora|Red Hat|PCLinuxOS|Puppy|Ubuntu|Kindle|Bada|Lubuntu|BackTrack|Slackware|(?:Free|Open|Net|\b)BSD)[/ ](d+).(d+)(?:.(d+)(?:.(d+))?)?'\n\n  # Gentoo Linux + Kernel Version\n  - regex: '(Linux)[ /](d+).(d+)(?:.(d+))?.*gentoo'\n    os_replacement: 'Gentoo'\n\n  # Opera Mini Bada\n  - regex: '((Bada);'\n\n  # just os\n  - regex: '(Windows|Android|WeTab|Maemo|Web0S)'\n  - regex: '(Ubuntu|Kubuntu|Arch Linux|CentOS|Slackware|Gentoo|openSUSE|SUSE|Red Hat|Fedora|PCLinuxOS|Mageia|(?:Free|Open|Net|\b)BSD)'\n  # Linux + Kernel Version\n  - regex: '(Linux)(?:[ /](d+).(d+)(?:.(d+))?)?'\n  - regex: 'SunOS'\n    os_replacement: 'Solaris'\n\n  # Roku Digital-Video-Players https://www.roku.com/\n  - regex: '^(Roku)/DVP-(d+).(d+)'\n\ndevice_parsers:\n\n  #########\n  # Mobile Spiders\n  # Catch the mobile crawler before checking for iPhones / Androids.\n  #########\n  - regex: '(?:(?:iPhone|Windows CE|Windows Phone|Android).*(?:(?:Bot|Yeti)-Mobile|YRSpider|BingPreview|bots?/d|(?:bot|spider).html)|AdsBot-Google-Mobile.*iPhone)'\n    regex_flag: 'i'\n    device_replacement: 'Spider'\n    brand_replacement: 'Spider'\n    model_replacement: 'Smartphone'\n  - regex: '(?:DoCoMo|\bMOT\b|\bLG\b|Nokia|Samsung|SonyEricsson).*(?:(?:Bot|Yeti)-Mobile|bots?/d|(?:bot|crawler).html|(?:jump|google|Wukong)bot|ichiro/mobile|/spider|YahooSeeker)'\n    regex_flag: 'i'\n    device_replacement: 'Spider'\n    brand_replacement: 'Spider'\n    model_replacement: 'Feature Phone'\n\n  #########\n  # WebBrowser for SmartWatch\n  # @ref: https://play.google.com/store/apps/details?id=se.vaggan.webbrowser&hl=en\n  #########\n  - regex: '\bSmartWatch *( *([^;]+) *; *([^;]+) *;'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  ######################################################################\n  # Android parsers\n  #\n  # @ref: https://support.google.com/googleplay/answer/1727131?hl=en\n  ######################################################################\n\n  # Android Application\n  - regex: 'Android Application[^-]+ - (Sony) ?(Ericsson)? (.+) w+ - '\n    device_replacement: '$1 $2'\n    brand_replacement: '$1$2'\n    model_replacement: '$3'\n  - regex: 'Android Application[^-]+ - (?:HTC|HUAWEI|LGE|LENOVO|MEDION|TCT) (HTC|HUAWEI|LG|LENOVO|MEDION|ALCATEL)[ _-](.+) w+ - '\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  - regex: 'Android Application[^-]+ - ([^ ]+) (.+) w+ - '\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  #########\n  # 3Q\n  # @ref: http://www.3q-int.com/\n  #########\n  - regex: '; *([BLRQ]Cd{4}[A-Z]+) +Build/'\n    device_replacement: '3Q $1'\n    brand_replacement: '3Q'\n    model_replacement: '$1'\n  - regex: '; *(?:3Q_)([^;/]+) +Build'\n    device_replacement: '3Q $1'\n    brand_replacement: '3Q'\n    model_replacement: '$1'\n\n  #########\n  # Acer\n  # @ref: http://us.acer.com/ac/en/US/content/group/tablets\n  #########\n  - regex: 'Android [34].*; *(A100|A101|A110|A200|A210|A211|A500|A501|A510|A511|A700(?: Lite| 3G)?|A701|B1-A71|A1-d{3}|B1-d{3}|V360|V370|W500|W500P|W501|W501P|W510|W511|W700|Slider SL101|DA22[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Acer'\n    model_replacement: '$1'\n  - regex: '; *Acer Iconia Tab ([^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Acer'\n    model_replacement: '$1'\n  - regex: '; *(Z1[1235]0|E320[^/]*|S500|S510|Liquid[^;/]*|Iconia Ad+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Acer'\n    model_replacement: '$1'\n  - regex: '; *(Acer |ACER )([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Acer'\n    model_replacement: '$2'\n\n  #########\n  # Advent\n  # @ref: https://en.wikipedia.org/wiki/Advent_Vega\n  # @note: VegaBean and VegaComb (names derived from jellybean, honeycomb) are\n  #   custom ROM builds for Vega\n  #########\n  - regex: '; *(Advent )?(Vega(?:Bean|Comb)?).* Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Advent'\n    model_replacement: '$2'\n\n  #########\n  # Ainol\n  # @ref: http://www.ainol.com/plugin.php?identifier=ainol&module=product\n  #########\n  - regex: '; *(Ainol )?((?:NOVO|[Nn]ovo)[^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Ainol'\n    model_replacement: '$2'\n\n  #########\n  # Airis\n  # @ref: http://airis.es/Tienda/Default.aspx?idG=001\n  #########\n  - regex: '; *AIRIS[ _-]?([^/;)]+) *(?:;|)|Build)'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Airis'\n    model_replacement: '$1'\n  - regex: '; *(OnePAD[^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Airis'\n    model_replacement: '$1'\n\n  #########\n  # Airpad\n  # @ref: ??\n  #########\n  - regex: '; *Airpad[ -]([^;/]+) Build'\n    device_replacement: 'Airpad $1'\n    brand_replacement: 'Airpad'\n    model_replacement: '$1'\n\n  #########\n  # Alcatel - TCT\n  # @ref: http://www.alcatelonetouch.com/global-en/products/smartphones.html\n  #########\n  - regex: '; *(one ?touch) (EVO7|T10|T20) Build'\n    device_replacement: 'Alcatel One Touch $2'\n    brand_replacement: 'Alcatel'\n    model_replacement: 'One Touch $2'\n  - regex: '; *(?:alcatel[ _])?(?:(?:one[ _]?touch[ _])|ot[ -])([^;/]+);? Build'\n    regex_flag: 'i'\n    device_replacement: 'Alcatel One Touch $1'\n    brand_replacement: 'Alcatel'\n    model_replacement: 'One Touch $1'\n  - regex: '; *(TCL)[ _]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  # operator specific models\n  - regex: '; *(Vodafone Smart II|Optimus_Madrid) Build'\n    device_replacement: 'Alcatel $1'\n    brand_replacement: 'Alcatel'\n    model_replacement: '$1'\n  - regex: '; *BASE_Lutea_3 Build'\n    device_replacement: 'Alcatel One Touch 998'\n    brand_replacement: 'Alcatel'\n    model_replacement: 'One Touch 998'\n  - regex: '; *BASE_Varia Build'\n    device_replacement: 'Alcatel One Touch 918D'\n    brand_replacement: 'Alcatel'\n    model_replacement: 'One Touch 918D'\n\n  #########\n  # Allfine\n  # @ref: http://www.myallfine.com/Products.asp\n  #########\n  - regex: '; *((?:FINE|Fine)d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Allfine'\n    model_replacement: '$1'\n\n  #########\n  # Allview\n  # @ref: http://www.allview.ro/produse/droseries/lista-tablete-pc/\n  #########\n  - regex: '; *(ALLVIEW[ _]?|Allview[ _]?)((?:Speed|SPEED).*) Build/'\n    device_replacement: '$1$2'\n    brand_replacement: 'Allview'\n    model_replacement: '$2'\n  - regex: '; *(ALLVIEW[ _]?|Allview[ _]?)?(AX1_Shine|AX2_Frenzy) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Allview'\n    model_replacement: '$2'\n  - regex: '; *(ALLVIEW[ _]?|Allview[ _]?)([^;/]*) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Allview'\n    model_replacement: '$2'\n\n  #########\n  # Allwinner\n  # @ref: http://www.allwinner.com/\n  # @models: A31 (13.3\"),A20,A10,\n  #########\n  - regex: '; *(A13-MID) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Allwinner'\n    model_replacement: '$1'\n  - regex: '; *(Allwinner)[ _-]?([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Allwinner'\n    model_replacement: '$1'\n\n  #########\n  # Amaway\n  # @ref: http://www.amaway.cn/\n  #########\n  - regex: '; *(A651|A701B?|A702|A703|A705|A706|A707|A711|A712|A713|A717|A722|A785|A801|A802|A803|A901|A902|A1002|A1003|A1006|A1007|A9701|A9703|Q710|Q80) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Amaway'\n    model_replacement: '$1'\n\n  #########\n  # Amoi\n  # @ref: http://www.amoi.com/en/prd/prd_index.jspx\n  #########\n  - regex: '; *(?:AMOI|Amoi)[ _]([^;/]+) Build'\n    device_replacement: 'Amoi $1'\n    brand_replacement: 'Amoi'\n    model_replacement: '$1'\n  - regex: '^(?:AMOI|Amoi)[ _]([^;/]+) Linux'\n    device_replacement: 'Amoi $1'\n    brand_replacement: 'Amoi'\n    model_replacement: '$1'\n\n  #########\n  # Aoc\n  # @ref: http://latin.aoc.com/media_tablet\n  #########\n  - regex: '; *(MW(?:0[789]|10)[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Aoc'\n    model_replacement: '$1'\n\n  #########\n  # Aoson\n  # @ref: http://www.luckystar.com.cn/en/mid.aspx?page=1\n  # @ref: http://www.luckystar.com.cn/en/mobiletel.aspx?page=1\n  # @note: brand owned by luckystar\n  #########\n  - regex: '; *(G7|M1013|M1015G|M11[CG]?|M-?12[B]?|M15|M19[G]?|M30[ACQ]?|M31[GQ]|M32|M33[GQ]|M36|M37|M38|M701T|M710|M712B|M713|M715G|M716G|M71(?:G|GS|T)?|M72[T]?|M73[T]?|M75[GT]?|M77G|M79T|M7L|M7LN|M81|M810|M81T|M82|M92|M92KS|M92S|M717G|M721|M722G|M723|M725G|M739|M785|M791|M92SK|M93D) Build'\n    device_replacement: 'Aoson $1'\n    brand_replacement: 'Aoson'\n    model_replacement: '$1'\n  - regex: '; *Aoson ([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: 'Aoson $1'\n    brand_replacement: 'Aoson'\n    model_replacement: '$1'\n\n  #########\n  # Apanda\n  # @ref: http://www.apanda.com.cn/\n  #########\n  - regex: '; *[Aa]panda[ _-]([^;/]+) Build'\n    device_replacement: 'Apanda $1'\n    brand_replacement: 'Apanda'\n    model_replacement: '$1'\n\n  #########\n  # Archos\n  # @ref: http://www.archos.com/de/products/tablets.html\n  # @ref: http://www.archos.com/de/products/smartphones/index.html\n  #########\n  - regex: '; *(?:ARCHOS|Archos) ?(GAMEPAD.*?)(?: Build|[;/()-])'\n    device_replacement: 'Archos $1'\n    brand_replacement: 'Archos'\n    model_replacement: '$1'\n  - regex: 'ARCHOS; GOGI; ([^;]+);'\n    device_replacement: 'Archos $1'\n    brand_replacement: 'Archos'\n    model_replacement: '$1'\n  - regex: '(?:ARCHOS|Archos)[ _]?(.*?)(?: Build|[;/()-]|$)'\n    device_replacement: 'Archos $1'\n    brand_replacement: 'Archos'\n    model_replacement: '$1'\n  - regex: '; *(AN(?:7|8|9|10|13)[A-Z0-9]{1,4}) Build'\n    device_replacement: 'Archos $1'\n    brand_replacement: 'Archos'\n    model_replacement: '$1'\n  - regex: '; *(A28|A32|A43|A70(?:BHT|CHT|HB|S|X)|A101(?:B|C|IT)|A7EB|A7EB-WK|101G9|80G9) Build'\n    device_replacement: 'Archos $1'\n    brand_replacement: 'Archos'\n    model_replacement: '$1'\n\n  #########\n  # A-rival\n  # @ref: http://www.a-rival.de/de/\n  #########\n  - regex: '; *(PAD-FMD[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Arival'\n    model_replacement: '$1'\n  - regex: '; *(BioniQ) ?([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Arival'\n    model_replacement: '$1 $2'\n\n  #########\n  # Arnova\n  # @ref: http://arnovatech.com/\n  #########\n  - regex: '; *(ANd[^;/]+|ARCHMd+) Build'\n    device_replacement: 'Arnova $1'\n    brand_replacement: 'Arnova'\n    model_replacement: '$1'\n  - regex: '; *(?:ARNOVA|Arnova) ?([^;/]+) Build'\n    device_replacement: 'Arnova $1'\n    brand_replacement: 'Arnova'\n    model_replacement: '$1'\n\n  #########\n  # Assistant\n  # @ref: http://www.assistant.ua\n  #########\n  - regex: '; *(?:ASSISTANT )?(AP)-?([1789]d{2}[A-Z]{0,2}|80104) Build'\n    device_replacement: 'Assistant $1-$2'\n    brand_replacement: 'Assistant'\n    model_replacement: '$1-$2'\n\n  #########\n  # Asus\n  # @ref: http://www.asus.com/uk/Tablets_Mobile/\n  #########\n  - regex: '; *(ME17d[^;/]*|ME3d{2}[^;/]+|K00[A-Z]|Nexus 10|Nexus 7(?: 2013)?|PadFone[^;/]*|Transformer[^;/]*|TFd{3}[^;/]*|eeepc) Build'\n    device_replacement: 'Asus $1'\n    brand_replacement: 'Asus'\n    model_replacement: '$1'\n  - regex: '; *ASUS[ _]*([^;/]+) Build'\n    device_replacement: 'Asus $1'\n    brand_replacement: 'Asus'\n    model_replacement: '$1'\n\n  #########\n  # Garmin-Asus\n  #########\n  - regex: '; *Garmin-Asus ([^;/]+) Build'\n    device_replacement: 'Garmin-Asus $1'\n    brand_replacement: 'Garmin-Asus'\n    model_replacement: '$1'\n  - regex: '; *(Garminfone) Build'\n    device_replacement: 'Garmin $1'\n    brand_replacement: 'Garmin-Asus'\n    model_replacement: '$1'\n\n  #########\n  # Attab\n  # @ref: http://www.theattab.com/\n  #########\n  - regex: '; (@TAB-[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Attab'\n    model_replacement: '$1'\n\n  #########\n  # Audiosonic\n  # @ref: ??\n  # @note: Take care with Docomo T-01 Toshiba\n  #########\n  - regex: '; *(T-(?:07|[^0]d)[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Audiosonic'\n    model_replacement: '$1'\n\n  #########\n  # Axioo\n  # @ref: http://www.axiooworld.com/ww/index.php\n  #########\n  - regex: '; *(?:Axioo[ _-]([^;/]+)|(picopad)[ _-]([^;/]+)) Build'\n    regex_flag: 'i'\n    device_replacement: 'Axioo $1$2 $3'\n    brand_replacement: 'Axioo'\n    model_replacement: '$1$2 $3'\n\n  #########\n  # Azend\n  # @ref: http://azendcorp.com/index.php/products/portable-electronics\n  #########\n  - regex: '; *(V(?:100|700|800)[^;/]*) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Azend'\n    model_replacement: '$1'\n\n  #########\n  # Bak\n  # @ref: http://www.bakinternational.com/produtos.php?cat=80\n  #########\n  - regex: '; *(IBAK-[^;/]*) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Bak'\n    model_replacement: '$1'\n\n  #########\n  # Bedove\n  # @ref: http://www.bedove.com/product.html\n  # @models: HY6501|HY5001|X12|X21|I5\n  #########\n  - regex: '; *(HY5001|HY6501|X12|X21|I5) Build'\n    device_replacement: 'Bedove $1'\n    brand_replacement: 'Bedove'\n    model_replacement: '$1'\n\n  #########\n  # Benss\n  # @ref: http://www.benss.net/\n  #########\n  - regex: '; *(JC-[^;/]*) Build'\n    device_replacement: 'Benss $1'\n    brand_replacement: 'Benss'\n    model_replacement: '$1'\n\n  #########\n  # Blackberry\n  # @ref: http://uk.blackberry.com/\n  # @note: Android Apps seams to be used here\n  #########\n  - regex: '; *(BB) ([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Blackberry'\n    model_replacement: '$2'\n\n  #########\n  # Blackbird\n  # @ref: http://iblackbird.co.kr\n  #########\n  - regex: '; *(BlackBird)[ _](I8.*) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  - regex: '; *(BlackBird)[ _](.*) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  #########\n  # Blaupunkt\n  # @ref: http://www.blaupunkt.com\n  #########\n  # Endeavour\n  - regex: '; *([0-9]+BP[EM][^;/]*|Endeavour[^;/]+) Build'\n    device_replacement: 'Blaupunkt $1'\n    brand_replacement: 'Blaupunkt'\n    model_replacement: '$1'\n\n  #########\n  # Blu\n  # @ref: http://bluproducts.com\n  #########\n  - regex: '; *((?:BLU|Blu)[ _-])([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Blu'\n    model_replacement: '$2'\n  # BMOBILE = operator branded device\n  - regex: '; *(?:BMOBILE )?(Blu|BLU|DASH [^;/]+|VIVO 4.3|TANK 4.5) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Blu'\n    model_replacement: '$1'\n\n  #########\n  # Blusens\n  # @ref: http://www.blusens.com/es/?sg=1&sv=al&roc=1\n  #########\n  # tablet\n  - regex: '; *(TOUCHd[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Blusens'\n    model_replacement: '$1'\n\n  #########\n  # Bmobile\n  # @ref: http://bmobile.eu.com/?categoria=smartphones-2\n  # @note: Might collide with Maxx as AX is used also there.\n  #########\n  # smartphone\n  - regex: '; *(AX5d+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Bmobile'\n    model_replacement: '$1'\n\n  #########\n  # bq\n  # @ref: http://bqreaders.com\n  #########\n  - regex: '; *([Bb]q) ([^;/]+);? Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'bq'\n    model_replacement: '$2'\n  - regex: '; *(Maxwell [^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'bq'\n    model_replacement: '$1'\n\n  #########\n  # Braun Phototechnik\n  # @ref: http://www.braun-phototechnik.de/en/products/list/~pcat.250/Tablet-PC.html\n  #########\n  - regex: '; *((?:B-Tab|B-TAB) ?d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Braun'\n    model_replacement: '$1'\n\n  #########\n  # Broncho\n  # @ref: http://www.broncho.cn/\n  #########\n  - regex: '; *(Broncho) ([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  #########\n  # Captiva\n  # @ref: http://www.captiva-power.de\n  #########\n  - regex: '; *CAPTIVA ([^;/]+) Build'\n    device_replacement: 'Captiva $1'\n    brand_replacement: 'Captiva'\n    model_replacement: '$1'\n\n  #########\n  # Casio\n  # @ref: http://www.casiogzone.com/\n  #########\n  - regex: '; *(C771|CAL21|IS11CA) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Casio'\n    model_replacement: '$1'\n\n  #########\n  # Cat\n  # @ref: http://www.cat-sound.com\n  #########\n  - regex: '; *(?:Cat|CAT) ([^;/]+) Build'\n    device_replacement: 'Cat $1'\n    brand_replacement: 'Cat'\n    model_replacement: '$1'\n  - regex: '; *(?:Cat)(Nova.*) Build'\n    device_replacement: 'Cat $1'\n    brand_replacement: 'Cat'\n    model_replacement: '$1'\n  - regex: '; *(INM8002KP|ADM8000KP_[AB]) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Cat'\n    model_replacement: 'Tablet PHOENIX 8.1J0'\n\n  #########\n  # Celkon\n  # @ref: http://www.celkonmobiles.com/?_a=products\n  # @models: A10, A19Q, A101, A105, A107, A107+, A112, A118, A119, A119Q, A15, A19, A20, A200, A220, A225, A22 Race, A27, A58, A59, A60, A62, A63, A64, A66, A67, A69, A75, A77, A79, A8+, A83, A85, A86, A87, A89 Ultima, A9+, A90, A900, A95, A97i, A98, AR 40, AR 45, AR 50, ML5\n  #########\n  - regex: '; *(?:[Cc]elkon[ _*]|CELKON[ _*])([^;/)]+) ?(?:Build|;|))'\n    device_replacement: '$1'\n    brand_replacement: 'Celkon'\n    model_replacement: '$1'\n  - regex: 'Build/(?:[Cc]elkon)+_?([^;/_)]+)'\n    device_replacement: '$1'\n    brand_replacement: 'Celkon'\n    model_replacement: '$1'\n  - regex: '; *(CT)-?(d+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Celkon'\n    model_replacement: '$1$2'\n  # smartphones\n  - regex: '; *(A19|A19Q|A105|A107[^;/)]*) ?(?:Build|;|))'\n    device_replacement: '$1'\n    brand_replacement: 'Celkon'\n    model_replacement: '$1'\n\n  #########\n  # ChangJia\n  # @ref: http://www.cjshowroom.com/eproducts.aspx?classcode=004001001\n  # @brief: China manufacturer makes tablets for different small brands\n  #         (eg. http://www.zeepad.net/index.html)\n  #########\n  - regex: '; *(TPC[0-9]{4,5}) Build'\n    device_replacement: '$1'\n    brand_replacement: 'ChangJia'\n    model_replacement: '$1'\n\n  #########\n  # Cloudfone\n  # @ref: http://www.cloudfonemobile.com/\n  #########\n  - regex: '; *(Cloudfone)[ _](Excite)([^ ][^;/]+) Build'\n    device_replacement: '$1 $2 $3'\n    brand_replacement: 'Cloudfone'\n    model_replacement: '$1 $2 $3'\n  - regex: '; *(Excite|ICE)[ _](d+[^;/]+) Build'\n    device_replacement: 'Cloudfone $1 $2'\n    brand_replacement: 'Cloudfone'\n    model_replacement: 'Cloudfone $1 $2'\n  - regex: '; *(Cloudfone|CloudPad)[ _]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Cloudfone'\n    model_replacement: '$1 $2'\n\n  #########\n  # Cmx\n  # @ref: http://cmx.at/de/\n  #########\n  - regex: '; *((?:Aquila|Clanga|Rapax)[^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Cmx'\n    model_replacement: '$1'\n\n  #########\n  # CobyKyros\n  # @ref: http://cobykyros.com\n  # @note: Be careful with MIDd{3} from MpMan or Manta\n  #########\n  - regex: '; *(?:CFW-|Kyros )?(MID[0-9]{4}(?:[ABC]|SR|TV)?)((3G)-4G| GB 8K| 3G| 8K| GB)? *(?:Build|[;)])'\n    device_replacement: 'CobyKyros $1$2'\n    brand_replacement: 'CobyKyros'\n    model_replacement: '$1$2'\n\n  #########\n  # Coolpad\n  # @ref: ??\n  #########\n  - regex: '; *([^;/]*)Coolpad[ _]([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Coolpad'\n    model_replacement: '$1$2'\n\n  #########\n  # Cube\n  # @ref: http://www.cube-tablet.com/buy-products.html\n  #########\n  - regex: '; *(CUBE[ _])?([KU][0-9]+ ?GT.*|A5300) Build'\n    regex_flag: 'i'\n    device_replacement: '$1$2'\n    brand_replacement: 'Cube'\n    model_replacement: '$2'\n\n  #########\n  # Cubot\n  # @ref: http://www.cubotmall.com/\n  #########\n  - regex: '; *CUBOT ([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Cubot'\n    model_replacement: '$1'\n  - regex: '; *(BOBBY) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Cubot'\n    model_replacement: '$1'\n\n  #########\n  # Danew\n  # @ref: http://www.danew.com/produits-tablette.php\n  #########\n  - regex: '; *(Dslide [^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Danew'\n    model_replacement: '$1'\n\n  #########\n  # Dell\n  # @ref: http://www.dell.com\n  # @ref: http://www.softbank.jp/mobile/support/product/101dl/\n  # @ref: http://www.softbank.jp/mobile/support/product/001dl/\n  # @ref: http://developer.emnet.ne.jp/android.html\n  # @ref: http://www.dell.com/in/p/mobile-xcd28/pd\n  # @ref: http://www.dell.com/in/p/mobile-xcd35/pd\n  #########\n  - regex: '; *(XCD)[ _]?(28|35) Build'\n    device_replacement: 'Dell $1$2'\n    brand_replacement: 'Dell'\n    model_replacement: '$1$2'\n  - regex: '; *(001DL) Build'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: 'Streak'\n  - regex: '; *(?:Dell|DELL) (Streak) Build'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: 'Streak'\n  - regex: '; *(101DL|GS01|Streak Pro[^;/]*) Build'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: 'Streak Pro'\n  - regex: '; *([Ss]treak ?7) Build'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: 'Streak 7'\n  - regex: '; *(Mini-3iX) Build'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: '$1'\n  - regex: '; *(?:Dell|DELL)[ _](Aero|Venue|Thunder|Mini.*|Streak[ _]Pro) Build'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: '$1'\n  - regex: '; *Dell[ _]([^;/]+) Build'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: '$1'\n  - regex: '; *Dell ([^;/]+) Build'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: '$1'\n\n  #########\n  # Denver\n  # @ref: http://www.denver-electronics.com/tablets1/\n  #########\n  - regex: '; *(TA[CD]-d+[^;/]*) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Denver'\n    model_replacement: '$1'\n\n  #########\n  # Dex\n  # @ref: http://dex.ua/\n  #########\n  - regex: '; *(iP[789]d{2}(?:-3G)?|IP10d{2}(?:-8GB)?) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Dex'\n    model_replacement: '$1'\n\n  #########\n  # DNS AirTab\n  # @ref: http://www.dns-shop.ru/\n  #########\n  - regex: '; *(AirTab)[ _-]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'DNS'\n    model_replacement: '$1 $2'\n\n  #########\n  # Docomo (Operator Branded Device)\n  # @ref: http://www.ipentec.com/document/document.aspx?page=android-useragent\n  #########\n  - regex: '; *(F-d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Fujitsu'\n    model_replacement: '$1'\n  - regex: '; *(HT-03A) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: 'Magic'\n  - regex: '; *(HT-d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n  - regex: '; *(L-d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'LG'\n    model_replacement: '$1'\n  - regex: '; *(N-d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Nec'\n    model_replacement: '$1'\n  - regex: '; *(P-d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Panasonic'\n    model_replacement: '$1'\n  - regex: '; *(SC-d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n  - regex: '; *(SH-d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Sharp'\n    model_replacement: '$1'\n  - regex: '; *(SO-d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'SonyEricsson'\n    model_replacement: '$1'\n  - regex: '; *(T-0[12][^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Toshiba'\n    model_replacement: '$1'\n\n  #########\n  # DOOV\n  # @ref: http://www.doov.com.cn/\n  #########\n  - regex: '; *(DOOV)[ _]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'DOOV'\n    model_replacement: '$2'\n\n  #########\n  # Enot\n  # @ref: http://www.enot.ua/\n  #########\n  - regex: '; *(Enot|ENOT)[ -]?([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Enot'\n    model_replacement: '$2'\n\n  #########\n  # Evercoss\n  # @ref: http://evercoss.com/android/\n  #########\n  - regex: '; *[^;/]+ Build/(?:CROSS|Cross)+[ _-]([^)]+)'\n    device_replacement: 'CROSS $1'\n    brand_replacement: 'Evercoss'\n    model_replacement: 'Cross $1'\n  - regex: '; *(CROSS|Cross)[ _-]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Evercoss'\n    model_replacement: 'Cross $2'\n\n  #########\n  # Explay\n  # @ref: http://explay.ru/\n  #########\n  - regex: '; *Explay[_ ](.+?)(?:[)]| Build)'\n    device_replacement: '$1'\n    brand_replacement: 'Explay'\n    model_replacement: '$1'\n\n  #########\n  # Fly\n  # @ref: http://www.fly-phone.com/\n  #########\n  - regex: '; *(IQ.*) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Fly'\n    model_replacement: '$1'\n  - regex: '; *(Fly|FLY)[ _](IQ[^;]+|F[34]d+[^;]*);? Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Fly'\n    model_replacement: '$2'\n\n  #########\n  # Fujitsu\n  # @ref: http://www.fujitsu.com/global/\n  #########\n  - regex: '; *(M532|Q572|FJL21) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Fujitsu'\n    model_replacement: '$1'\n\n  #########\n  # Galapad\n  # @ref: http://www.galapad.net/product.html\n  #########\n  - regex: '; *(G1) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Galapad'\n    model_replacement: '$1'\n\n  #########\n  # Geeksphone\n  # @ref: http://www.geeksphone.com/\n  #########\n  - regex: '; *(Geeksphone) ([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  #########\n  # Gfive\n  # @ref: http://www.gfivemobile.com/en\n  #########\n  #- regex: '; *(G'?FIVE) ([^;/]+) Build' # there is a problem with python yaml parser here\n  - regex: '; *(G[^F]?FIVE) ([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Gfive'\n    model_replacement: '$2'\n\n  #########\n  # Gionee\n  # @ref: http://www.gionee.com/\n  #########\n  - regex: '; *(Gionee)[ _-]([^;/]+)(?:/[^;/]+)? Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Gionee'\n    model_replacement: '$2'\n  - regex: '; *(GNd+[A-Z]?|INFINITY_PASSION|Ctrl_V1) Build'\n    device_replacement: 'Gionee $1'\n    brand_replacement: 'Gionee'\n    model_replacement: '$1'\n  - regex: '; *(E3) Build/JOP40D'\n    device_replacement: 'Gionee $1'\n    brand_replacement: 'Gionee'\n    model_replacement: '$1'\n\n  #########\n  # GoClever\n  # @ref: http://www.goclever.com\n  #########\n  - regex: '; *((?:FONE|QUANTUM|INSIGNIA) d+[^;/]*|PLAYTAB) Build'\n    device_replacement: 'GoClever $1'\n    brand_replacement: 'GoClever'\n    model_replacement: '$1'\n  - regex: '; *GOCLEVER ([^;/]+) Build'\n    device_replacement: 'GoClever $1'\n    brand_replacement: 'GoClever'\n    model_replacement: '$1'\n\n  #########\n  # Google\n  # @ref: http://www.google.de/glass/start/\n  #########\n  - regex: '; *(Glass d+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Google'\n    model_replacement: '$1'\n  - regex: '; *(Pixel w+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Google'\n    model_replacement: '$1'\n\n  #########\n  # Gigabyte\n  # @ref: http://gsmart.gigabytecm.com/en/\n  #########\n  - regex: '; *(GSmart)[ -]([^/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Gigabyte'\n    model_replacement: '$1 $2'\n\n  #########\n  # Freescale development boards\n  # @ref: http://www.freescale.com/webapp/sps/site/prod_summary.jsp?code=IMX53QSB\n  #########\n  - regex: '; *(imx5[13]_[^/]+) Build'\n    device_replacement: 'Freescale $1'\n    brand_replacement: 'Freescale'\n    model_replacement: '$1'\n\n  #########\n  # Haier\n  # @ref: http://www.haier.com/\n  # @ref: http://www.haier.com/de/produkte/tablet/\n  #########\n  - regex: '; *Haier[ _-]([^/]+) Build'\n    device_replacement: 'Haier $1'\n    brand_replacement: 'Haier'\n    model_replacement: '$1'\n  - regex: '; *(PAD1016) Build'\n    device_replacement: 'Haipad $1'\n    brand_replacement: 'Haipad'\n    model_replacement: '$1'\n\n  #########\n  # Haipad\n  # @ref: http://www.haipad.net/\n  # @models: V7P|M7SM7S|M9XM9X|M7XM7X|M9|M8|M7-M|M1002|M7|M701\n  #########\n  - regex: '; *(M701|M7|M8|M9) Build'\n    device_replacement: 'Haipad $1'\n    brand_replacement: 'Haipad'\n    model_replacement: '$1'\n\n  #########\n  # Hannspree\n  # @ref: http://www.hannspree.eu/\n  # @models: SN10T1|SN10T2|SN70T31B|SN70T32W\n  #########\n  - regex: '; *(SNd+T[^;)/]*)(?: Build|[;)])'\n    device_replacement: 'Hannspree $1'\n    brand_replacement: 'Hannspree'\n    model_replacement: '$1'\n\n  #########\n  # HCLme\n  # @ref: http://www.hclmetablet.com/india/\n  #########\n  - regex: 'Build/HCL ME Tablet ([^;)]+)[);]'\n    device_replacement: 'HCLme $1'\n    brand_replacement: 'HCLme'\n    model_replacement: '$1'\n  - regex: '; *([^;/]+) Build/HCL'\n    device_replacement: 'HCLme $1'\n    brand_replacement: 'HCLme'\n    model_replacement: '$1'\n\n  #########\n  # Hena\n  # @ref: http://www.henadigital.com/en/product/index.asp?id=6\n  #########\n  - regex: '; *(MID-?d{4}C[EM]) Build'\n    device_replacement: 'Hena $1'\n    brand_replacement: 'Hena'\n    model_replacement: '$1'\n\n  #########\n  # Hisense\n  # @ref: http://www.hisense.com/\n  #########\n  - regex: '; *(EGd{2,}|HS-[^;/]+|MIRA[^;/]+) Build'\n    device_replacement: 'Hisense $1'\n    brand_replacement: 'Hisense'\n    model_replacement: '$1'\n  - regex: '; *(andromax[^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: 'Hisense $1'\n    brand_replacement: 'Hisense'\n    model_replacement: '$1'\n\n  #########\n  # hitech\n  # @ref: http://www.hitech-mobiles.com/\n  #########\n  - regex: '; *(?:AMAZE[ _](Sd+)|(Sd+)[ _]AMAZE) Build'\n    device_replacement: 'AMAZE $1$2'\n    brand_replacement: 'hitech'\n    model_replacement: 'AMAZE $1$2'\n\n  #########\n  # HP\n  # @ref: http://www.hp.com/\n  #########\n  - regex: '; *(PlayBook) Build'\n    device_replacement: 'HP $1'\n    brand_replacement: 'HP'\n    model_replacement: '$1'\n  - regex: '; *HP ([^/]+) Build'\n    device_replacement: 'HP $1'\n    brand_replacement: 'HP'\n    model_replacement: '$1'\n  - regex: '; *([^/]+_tenderloin) Build'\n    device_replacement: 'HP TouchPad'\n    brand_replacement: 'HP'\n    model_replacement: 'TouchPad'\n\n  #########\n  # Huawei\n  # @ref: http://www.huaweidevice.com\n  # @note: Needs to be before HTC due to Desire HD Build on U8815\n  #########\n  - regex: '; *(HUAWEI |Huawei-)?([UY][^;/]+) Build/(?:Huawei|HUAWEI)([UY][^);]+))'\n    device_replacement: '$1$2'\n    brand_replacement: 'Huawei'\n    model_replacement: '$2'\n  - regex: '; *([^;/]+) Build[/ ]Huawei(MT1-U06|[A-Z]+d+[^);]+)[^);]*)'\n    device_replacement: '$1'\n    brand_replacement: 'Huawei'\n    model_replacement: '$2'\n  - regex: '; *(S7|M860) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Huawei'\n    model_replacement: '$1'\n  - regex: '; *((?:HUAWEI|Huawei)[ -]?)(MediaPad) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Huawei'\n    model_replacement: '$2'\n  - regex: '; *((?:HUAWEI[ _]?|Huawei[ _])?Ascend[ _])([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Huawei'\n    model_replacement: '$2'\n  - regex: '; *((?:HUAWEI|Huawei)[ _-]?)((?:G700-|MT-)[^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Huawei'\n    model_replacement: '$2'\n  - regex: '; *((?:HUAWEI|Huawei)[ _-]?)([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Huawei'\n    model_replacement: '$2'\n  - regex: '; *(MediaPad[^;]+|SpringBoard) Build/Huawei'\n    device_replacement: '$1'\n    brand_replacement: 'Huawei'\n    model_replacement: '$1'\n  - regex: '; *([^;]+) Build/(?:Huawei|HUAWEI)'\n    device_replacement: '$1'\n    brand_replacement: 'Huawei'\n    model_replacement: '$1'\n  - regex: '; *([Uu])([89]d{3}) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Huawei'\n    model_replacement: 'U$2'\n  - regex: '; *(?:Ideos |IDEOS )(S7) Build'\n    device_replacement: 'Huawei Ideos$1'\n    brand_replacement: 'Huawei'\n    model_replacement: 'Ideos$1'\n  - regex: '; *(?:Ideos |IDEOS )([^;/]+s*|s*)Build'\n    device_replacement: 'Huawei Ideos$1'\n    brand_replacement: 'Huawei'\n    model_replacement: 'Ideos$1'\n  - regex: '; *(Orange Daytona|Pulse|Pulse Mini|Vodafone 858|C8500|C8600|C8650|C8660|Nexus 6P|ATH-.+?) Build[/ ]'\n    device_replacement: 'Huawei $1'\n    brand_replacement: 'Huawei'\n    model_replacement: '$1'\n\n  #########\n  # HTC\n  # @ref: http://www.htc.com/www/products/\n  # @ref: http://en.wikipedia.org/wiki/List_of_HTC_phones\n  #########\n\n  - regex: '; *HTC[ _]([^;]+); Windows Phone'\n    device_replacement: 'HTC $1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n\n  # Android HTC with Version Number matcher\n  # ; HTC_0P3Z11/1.12.161.3 Build\n  # ;HTC_A3335 V2.38.841.1 Build\n  - regex: '; *(?:HTC[ _/])+([^ _/]+)(?:[/\\]1.0 | V|/| +)d+.d[d.]*(?: *Build|))'\n    device_replacement: 'HTC $1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n  - regex: '; *(?:HTC[ _/])+([^ _/]+)(?:[ _/]([^ _/]+))?(?:[/\\]1.0 | V|/| +)d+.d[d.]*(?: *Build|))'\n    device_replacement: 'HTC $1 $2'\n    brand_replacement: 'HTC'\n    model_replacement: '$1 $2'\n  - regex: '; *(?:HTC[ _/])+([^ _/]+)(?:[ _/]([^ _/]+)(?:[ _/]([^ _/]+))?)?(?:[/\\]1.0 | V|/| +)d+.d[d.]*(?: *Build|))'\n    device_replacement: 'HTC $1 $2 $3'\n    brand_replacement: 'HTC'\n    model_replacement: '$1 $2 $3'\n  - regex: '; *(?:HTC[ _/])+([^ _/]+)(?:[ _/]([^ _/]+)(?:[ _/]([^ _/]+)(?:[ _/]([^ _/]+))?)?)?(?:[/\\]1.0 | V|/| +)d+.d[d.]*(?: *Build|))'\n    device_replacement: 'HTC $1 $2 $3 $4'\n    brand_replacement: 'HTC'\n    model_replacement: '$1 $2 $3 $4'\n\n  # Android HTC without Version Number matcher\n  - regex: '; *(?:(?:HTC|htc)(?:_blocked)*[ _/])+([^ _/;]+)(?: *Build|[;)]| - )'\n    device_replacement: 'HTC $1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n  - regex: '; *(?:(?:HTC|htc)(?:_blocked)*[ _/])+([^ _/]+)(?:[ _/]([^ _/;)]+))?(?: *Build|[;)]| - )'\n    device_replacement: 'HTC $1 $2'\n    brand_replacement: 'HTC'\n    model_replacement: '$1 $2'\n  - regex: '; *(?:(?:HTC|htc)(?:_blocked)*[ _/])+([^ _/]+)(?:[ _/]([^ _/]+)(?:[ _/]([^ _/;)]+))?)?(?: *Build|[;)]| - )'\n    device_replacement: 'HTC $1 $2 $3'\n    brand_replacement: 'HTC'\n    model_replacement: '$1 $2 $3'\n  - regex: '; *(?:(?:HTC|htc)(?:_blocked)*[ _/])+([^ _/]+)(?:[ _/]([^ _/]+)(?:[ _/]([^ _/]+)(?:[ _/]([^ /;]+))?)?)?(?: *Build|[;)]| - )'\n    device_replacement: 'HTC $1 $2 $3 $4'\n    brand_replacement: 'HTC'\n    model_replacement: '$1 $2 $3 $4'\n\n  # HTC Streaming Player\n  - regex: 'HTC Streaming Player [^/]*/[^/]*/ htc_([^/]+) /'\n    device_replacement: 'HTC $1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n  # general matcher for anything else\n  - regex: '(?:[;,] *|^)(?:htccn_chs-)?HTC[ _-]?([^;]+?)(?: *Build|clay|Android|-?Mozilla| Opera| Profile| UNTRUSTED|[;/()]|$)'\n    regex_flag: 'i'\n    device_replacement: 'HTC $1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n  # Android matchers without HTC\n  - regex: '; *(A6277|ADR6200|ADR6300|ADR6350|ADR6400[A-Z]*|ADR6425[A-Z]*|APX515CKT|ARIA|Desire[^_ ]*|Dream|EndeavorU|Eris|Evo|Flyer|HD2|Hero|HERO200|Hero CDMA|HTL21|Incredible|Inspire[A-Z0-9]*|Legend|Liberty|Nexus ?(?:One|HD2)|One|One S C2|One[ _]?(?:S|V|X+?)w*|PC36100|PG06100|PG86100|S31HT|Sensation|Wildfire)(?: Build|[/;()])'\n    regex_flag: 'i'\n    device_replacement: 'HTC $1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n  - regex: '; *(ADR6200|ADR6400L|ADR6425LVW|Amaze|DesireS?|EndeavorU|Eris|EVO|Evod[A-Z]+|HD2|IncredibleS?|Inspire[A-Z0-9]*|Inspire[A-Z0-9]*|Sensation[A-Z0-9]*|Wildfire)[ _-](.+?)(?:[/;)]|Build|MIUI|1.0)'\n    regex_flag: 'i'\n    device_replacement: 'HTC $1 $2'\n    brand_replacement: 'HTC'\n    model_replacement: '$1 $2'\n\n  #########\n  # Hyundai\n  # @ref: http://www.hyundaitechnologies.com\n  #########\n  - regex: '; *HYUNDAI (Td[^/]*) Build'\n    device_replacement: 'Hyundai $1'\n    brand_replacement: 'Hyundai'\n    model_replacement: '$1'\n  - regex: '; *HYUNDAI ([^;/]+) Build'\n    device_replacement: 'Hyundai $1'\n    brand_replacement: 'Hyundai'\n    model_replacement: '$1'\n  # X900? http://www.amazon.com/Hyundai-X900-Retina-Android-Bluetooth/dp/B00AO07H3O\n  - regex: '; *(X700|Hold X|MB-6900) Build'\n    device_replacement: 'Hyundai $1'\n    brand_replacement: 'Hyundai'\n    model_replacement: '$1'\n\n  #########\n  # iBall\n  # @ref: http://www.iball.co.in/Category/Mobiles/22\n  #########\n  - regex: '; *(?:iBall[ _-])?(Andi)[ _]?(d[^;/]*) Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'iBall'\n    model_replacement: '$1 $2'\n  - regex: '; *(IBall)(?:[ _]([^;/]+)|) Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'iBall'\n    model_replacement: '$2'\n\n  #########\n  # IconBIT\n  # @ref: http://www.iconbit.com/catalog/tablets/\n  #########\n  - regex: '; *(NT-d+[^ ;/]*|Net[Tt]AB [^;/]+|Mercury [A-Z]+|iconBIT)(?: S/N:[^;/]+)? Build'\n    device_replacement: '$1'\n    brand_replacement: 'IconBIT'\n    model_replacement: '$1'\n\n  #########\n  # IMO\n  # @ref: http://www.ponselimo.com/\n  #########\n  - regex: '; *(IMO)[ _]([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'IMO'\n    model_replacement: '$2'\n\n  #########\n  # i-mobile\n  # @ref: http://www.i-mobilephone.com/\n  #########\n  - regex: '; *i-?mobile[ _]([^/]+) Build/'\n    regex_flag: 'i'\n    device_replacement: 'i-mobile $1'\n    brand_replacement: 'imobile'\n    model_replacement: '$1'\n  - regex: '; *(i-(?:style|note)[^/]*) Build/'\n    regex_flag: 'i'\n    device_replacement: 'i-mobile $1'\n    brand_replacement: 'imobile'\n    model_replacement: '$1'\n\n  #########\n  # Impression\n  # @ref: http://impression.ua/planshetnye-kompyutery\n  #########\n  - regex: '; *(ImPAD) ?(d+(?:.)*) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Impression'\n    model_replacement: '$1 $2'\n\n  #########\n  # Infinix\n  # @ref: http://www.infinixmobility.com/index.html\n  #########\n  - regex: '; *(Infinix)[ _]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Infinix'\n    model_replacement: '$2'\n\n  #########\n  # Informer\n  # @ref: ??\n  #########\n  - regex: '; *(Informer)[ -]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Informer'\n    model_replacement: '$2'\n\n  #########\n  # Intenso\n  # @ref: http://www.intenso.de\n  # @models: 7\":TAB 714,TAB 724;8\":TAB 814,TAB 824;10\":TAB 1004\n  #########\n  - regex: '; *(TAB) ?([78][12]4) Build'\n    device_replacement: 'Intenso $1'\n    brand_replacement: 'Intenso'\n    model_replacement: '$1 $2'\n\n  #########\n  # Intex\n  # @ref: http://intexmobile.in/index.aspx\n  # @note: Zync also offers a \"Cloud Z5\" device\n  #########\n  # smartphones\n  - regex: '; *(?:Intex[ _])?(AQUA|Aqua)([ _.-])([^;/]+) *(?:Build|;)'\n    device_replacement: '$1$2$3'\n    brand_replacement: 'Intex'\n    model_replacement: '$1 $3'\n  # matches \"INTEX CLOUD X1\"\n  - regex: '; *(?:INTEX|Intex)(?:[_ ]([^ _;/]+))(?:[_ ]([^ _;/]+))? *(?:Build|;)'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Intex'\n    model_replacement: '$1 $2'\n  # tablets\n  - regex: '; *([iI]Buddy)[ _]?(Connect)(?:_|?_| )?([^;/]*) *(?:Build|;)'\n    device_replacement: '$1 $2 $3'\n    brand_replacement: 'Intex'\n    model_replacement: 'iBuddy $2 $3'\n  - regex: '; *(I-Buddy)[ _]([^;/]+) *(?:Build|;)'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Intex'\n    model_replacement: 'iBuddy $2'\n\n  #########\n  # iOCEAN\n  # @ref: http://www.iocean.cc/\n  #########\n  - regex: '; *(iOCEAN) ([^/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'iOCEAN'\n    model_replacement: '$2'\n\n  #########\n  # i.onik\n  # @ref: http://www.i-onik.de/\n  #########\n  - regex: '; *(TPd+(?:.d+)?-d[^;/]+) Build'\n    device_replacement: 'ionik $1'\n    brand_replacement: 'ionik'\n    model_replacement: '$1'\n\n  #########\n  # IRU.ru\n  # @ref: http://www.iru.ru/catalog/soho/planetable/\n  #########\n  - regex: '; *(M702pro) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Iru'\n    model_replacement: '$1'\n\n  #########\n  # Ivio\n  # @ref: http://www.ivio.com/mobile.php\n  # @models: DG80,DG20,DE38,DE88,MD70\n  #########\n  - regex: '; *(DE88Plus|MD70) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Ivio'\n    model_replacement: '$1'\n  - regex: '; *IVIO[_-]([^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Ivio'\n    model_replacement: '$1'\n\n  #########\n  # Jaytech\n  # @ref: http://www.jay-tech.de/jaytech/servlet/frontend/\n  #########\n  - regex: '; *(TPC-d+|JAY-TECH) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Jaytech'\n    model_replacement: '$1'\n\n  #########\n  # Jiayu\n  # @ref: http://www.ejiayu.com/en/Product.html\n  #########\n  - regex: '; *(JY-[^;/]+|G[234]S?) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Jiayu'\n    model_replacement: '$1'\n\n  #########\n  # JXD\n  # @ref: http://www.jxd.hk/\n  #########\n  - regex: '; *(JXD)[ _-]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'JXD'\n    model_replacement: '$2'\n\n  #########\n  # Karbonn\n  # @ref: http://www.karbonnmobiles.com/products_tablet.php\n  #########\n  - regex: '; *Karbonn[ _]?([^;/]+) *(?:Build|;)'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Karbonn'\n    model_replacement: '$1'\n  - regex: '; *([^;]+) Build/Karbonn'\n    device_replacement: '$1'\n    brand_replacement: 'Karbonn'\n    model_replacement: '$1'\n  - regex: '; *(A11|A39|A37|A34|ST8|ST10|ST7|Smart Tab3|Smart Tab2|Titanium Sd) +Build'\n    device_replacement: '$1'\n    brand_replacement: 'Karbonn'\n    model_replacement: '$1'\n\n  #########\n  # KDDI (Operator Branded Device)\n  # @ref: http://www.ipentec.com/document/document.aspx?page=android-useragent\n  #########\n  - regex: '; *(IS01|IS03|IS05|ISd{2}SH) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Sharp'\n    model_replacement: '$1'\n  - regex: '; *(IS04) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Regza'\n    model_replacement: '$1'\n  - regex: '; *(IS06|ISd{2}PT) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Pantech'\n    model_replacement: '$1'\n  - regex: '; *(IS11S) Build'\n    device_replacement: '$1'\n    brand_replacement: 'SonyEricsson'\n    model_replacement: 'Xperia Acro'\n  - regex: '; *(IS11CA) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Casio'\n    model_replacement: 'GzOne $1'\n  - regex: '; *(IS11LG) Build'\n    device_replacement: '$1'\n    brand_replacement: 'LG'\n    model_replacement: 'Optimus X'\n  - regex: '; *(IS11N) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Medias'\n    model_replacement: '$1'\n  - regex: '; *(IS11PT) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Pantech'\n    model_replacement: 'MIRACH'\n  - regex: '; *(IS12F) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Fujitsu'\n    model_replacement: 'Arrows ES'\n  # @ref: https://ja.wikipedia.org/wiki/IS12M\n  - regex: '; *(IS12M) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Motorola'\n    model_replacement: 'XT909'\n  - regex: '; *(IS12S) Build'\n    device_replacement: '$1'\n    brand_replacement: 'SonyEricsson'\n    model_replacement: 'Xperia Acro HD'\n  - regex: '; *(ISW11F) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Fujitsu'\n    model_replacement: 'Arrowz Z'\n  - regex: '; *(ISW11HT) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: 'EVO'\n  - regex: '; *(ISW11K) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Kyocera'\n    model_replacement: 'DIGNO'\n  - regex: '; *(ISW11M) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Motorola'\n    model_replacement: 'Photon'\n  - regex: '; *(ISW11SC) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Samsung'\n    model_replacement: 'GALAXY S II WiMAX'\n  - regex: '; *(ISW12HT) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: 'EVO 3D'\n  - regex: '; *(ISW13HT) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: 'J'\n  - regex: '; *(ISW?[0-9]{2}[A-Z]{0,2}) Build'\n    device_replacement: '$1'\n    brand_replacement: 'KDDI'\n    model_replacement: '$1'\n  - regex: '; *(INFOBAR [^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'KDDI'\n    model_replacement: '$1'\n\n  #########\n  # Kingcom\n  # @ref: http://www.e-kingcom.com\n  #########\n  - regex: '; *(JOYPAD|Joypad)[ _]([^;/]+) Build/'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Kingcom'\n    model_replacement: '$1 $2'\n\n  #########\n  # Kobo\n  # @ref: https://en.wikipedia.org/wiki/Kobo_Inc.\n  # @ref: http://www.kobo.com/devices#tablets\n  #########\n  - regex: '; *(Vox|VOX|Arc|K080) Build/'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Kobo'\n    model_replacement: '$1'\n  - regex: '\b(Kobo Touch)\b'\n    device_replacement: '$1'\n    brand_replacement: 'Kobo'\n    model_replacement: '$1'\n\n  #########\n  # K-Touch\n  # @ref: ??\n  #########\n  - regex: '; *(K-Touch)[ _]([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Ktouch'\n    model_replacement: '$2'\n\n  #########\n  # KT Tech\n  # @ref: http://www.kttech.co.kr\n  #########\n  - regex: '; *((?:EV|KM)-Sd+[A-Z]?) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'KTtech'\n    model_replacement: '$1'\n\n  #########\n  # Kyocera\n  # @ref: http://www.android.com/devices/?country=all&m=kyocera\n  #########\n  - regex: '; *(Zio|Hydro|Torque|Event|EVENT|Echo|Milano|Rise|URBANO PROGRESSO|WX04K|WX06K|WX10K|KYL21|101K|C5[12]d{2}) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Kyocera'\n    model_replacement: '$1'\n\n  #########\n  # Lava\n  # @ref: http://www.lavamobiles.com/\n  #########\n  - regex: '; *(?:LAVA[ _])?IRIS[ _-]?([^/;)]+) *(?:;|)|Build)'\n    regex_flag: 'i'\n    device_replacement: 'Iris $1'\n    brand_replacement: 'Lava'\n    model_replacement: 'Iris $1'\n  - regex: '; *LAVA[ _]([^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Lava'\n    model_replacement: '$1'\n\n  #########\n  # Lemon\n  # @ref: http://www.lemonmobiles.com/products.php?type=1\n  #########\n  - regex: '; *(?:(Aspire A1)|(?:LEMON|Lemon)[ _]([^;/]+))_? Build'\n    device_replacement: 'Lemon $1$2'\n    brand_replacement: 'Lemon'\n    model_replacement: '$1$2'\n\n  #########\n  # Lenco\n  # @ref: http://www.lenco.com/c/tablets/\n  #########\n  - regex: '; *(TAB-1012) Build/'\n    device_replacement: 'Lenco $1'\n    brand_replacement: 'Lenco'\n    model_replacement: '$1'\n  - regex: '; Lenco ([^;/]+) Build/'\n    device_replacement: 'Lenco $1'\n    brand_replacement: 'Lenco'\n    model_replacement: '$1'\n\n  #########\n  # Lenovo\n  # @ref: http://support.lenovo.com/en_GB/downloads/default.page?#\n  #########\n  - regex: '; *(A1_07|A2107A-H|S2005A-H|S1-37AH0) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1'\n  - regex: '; *(Idea[Tp]ab)[ _]([^;/]+);? Build'\n    device_replacement: 'Lenovo $1 $2'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1 $2'\n  - regex: '; *(Idea(?:Tab|pad)) ?([^;/]+) Build'\n    device_replacement: 'Lenovo $1 $2'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1 $2'\n  - regex: '; *(ThinkPad) ?(Tablet) Build/'\n    device_replacement: 'Lenovo $1 $2'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1 $2'\n  - regex: '; *(?:LNV-)?(?:=?[Ll]enovo[ _-]?|LENOVO[ _])+(.+?)(?:Build|[;/)])'\n    device_replacement: 'Lenovo $1'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1'\n  - regex: '[;,] (?:Vodafone )?(SmartTab) ?(II) ?(d+) Build/'\n    device_replacement: 'Lenovo $1 $2 $3'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1 $2 $3'\n  - regex: '; *(?:Ideapad )?K1 Build/'\n    device_replacement: 'Lenovo Ideapad K1'\n    brand_replacement: 'Lenovo'\n    model_replacement: 'Ideapad K1'\n  - regex: '; *(3GC101|3GW10[01]|A390) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1'\n  - regex: '\b(?:Lenovo|LENOVO)+[ _-]?([^,;:/ ]+)'\n    device_replacement: 'Lenovo $1'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1'\n\n  #########\n  # Lexibook\n  # @ref: http://www.lexibook.com/fr\n  #########\n  - regex: '; *(MFCd+)[A-Z]{2}([^;,/]*),? Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Lexibook'\n    model_replacement: '$1$2'\n\n  #########\n  # LG\n  # @ref: http://www.lg.com/uk/mobile\n  #########\n  - regex: '; *(E[34][0-9]{2}|LS[6-8][0-9]{2}|VS[6-9][0-9]+[^;/]+|Nexus 4|Nexus 5X?|GT540f?|Optimus (?:2X|G|4X HD)|OptimusX4HD) *(?:Build|;)'\n    device_replacement: '$1'\n    brand_replacement: 'LG'\n    model_replacement: '$1'\n  - regex: '[;:] *(L-d+[A-Z]|LGLd+[A-Z]?)(?:/Vd+)? *(?:Build|[;)])'\n    device_replacement: '$1'\n    brand_replacement: 'LG'\n    model_replacement: '$1'\n  - regex: '; *(LG-)([A-Z]{1,2}d{2,}[^,;/)(]*?)(?:Build| Vd+|[,;/)(]|$)'\n    device_replacement: '$1$2'\n    brand_replacement: 'LG'\n    model_replacement: '$2'\n  - regex: '; *(LG[ -]|LG)([^;/]+)[;/]? Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'LG'\n    model_replacement: '$2'\n  - regex: '^(LG)-([^;/]+)/ Mozilla/.*; Android'\n    device_replacement: '$1 $2'\n    brand_replacement: 'LG'\n    model_replacement: '$2'\n  - regex: '(Web0S); Linux/(SmartTV)'\n    device_replacement: 'LG $1 $2'\n    brand_replacement: 'LG'\n    model_replacement: '$1 $2'\n\n  #########\n  # Malata\n  # @ref: http://www.malata.com/en/products.aspx?classid=680\n  #########\n  - regex: '; *((?:SMB|smb)[^;/]+) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Malata'\n    model_replacement: '$1'\n  - regex: '; *(?:Malata|MALATA) ([^;/]+) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Malata'\n    model_replacement: '$1'\n\n  #########\n  # Manta\n  # @ref: http://www.manta.com.pl/en\n  #########\n  - regex: '; *(MS[45][0-9]{3}|MID0[568][NS]?|MID[1-9]|MID[78]0[1-9]|MID970[1-9]|MID100[1-9]) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Manta'\n    model_replacement: '$1'\n\n  #########\n  # Match\n  # @ref: http://www.match.net.cn/products.asp\n  #########\n  - regex: '; *(M1052|M806|M9000|M9100|M9701|MID100|MID120|MID125|MID130|MID135|MID140|MID701|MID710|MID713|MID727|MID728|MID731|MID732|MID733|MID735|MID736|MID737|MID760|MID800|MID810|MID820|MID830|MID833|MID835|MID860|MID900|MID930|MID933|MID960|MID980) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Match'\n    model_replacement: '$1'\n\n  #########\n  # Maxx\n  # @ref: http://www.maxxmobile.in/\n  # @models: Maxx MSD7-Play, Maxx MX245+ Trance, Maxx AX8 Race, Maxx MSD7 3G- AX50, Maxx Genx Droid 7 - AX40, Maxx AX5 Duo,\n  #   Maxx AX3 Duo, Maxx AX3, Maxx AX8 Note II (Note 2), Maxx AX8 Note I, Maxx AX8, Maxx AX5 Plus, Maxx MSD7 Smarty,\n  #   Maxx AX9Z Race,\n  #   Maxx MT150, Maxx MQ601, Maxx M2020, Maxx Sleek MX463neo, Maxx MX525, Maxx MX192-Tune, Maxx Genx Droid 7 AX353,\n  # @note: Need more User-Agents!!!\n  #########\n  - regex: '; *(GenxDroid7|MSD7.*|AXd.*|Tab 701|Tab 722) Build/'\n    device_replacement: 'Maxx $1'\n    brand_replacement: 'Maxx'\n    model_replacement: '$1'\n\n  #########\n  # Mediacom\n  # @ref: http://www.mediacomeurope.it/\n  #########\n  - regex: '; *(M-PP[^;/]+|PhonePad ?d{2,}[^;/]+) Build'\n    device_replacement: 'Mediacom $1'\n    brand_replacement: 'Mediacom'\n    model_replacement: '$1'\n  - regex: '; *(M-MP[^;/]+|SmartPad ?d{2,}[^;/]+) Build'\n    device_replacement: 'Mediacom $1'\n    brand_replacement: 'Mediacom'\n    model_replacement: '$1'\n\n  #########\n  # Medion\n  # @ref: http://www.medion.com/en/\n  #########\n  - regex: '; *(?:MD_)?LIFETAB[ _]([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: 'Medion Lifetab $1'\n    brand_replacement: 'Medion'\n    model_replacement: 'Lifetab $1'\n  - regex: '; *MEDION ([^;/]+) Build'\n    device_replacement: 'Medion $1'\n    brand_replacement: 'Medion'\n    model_replacement: '$1'\n\n  #########\n  # Meizu\n  # @ref: http://www.meizu.com\n  #########\n  - regex: '; *(M030|M031|M035|M040|M065|m9) Build'\n    device_replacement: 'Meizu $1'\n    brand_replacement: 'Meizu'\n    model_replacement: '$1'\n  - regex: '; *(?:meizu_|MEIZU )(.+?) *(?:Build|[;)])'\n    device_replacement: 'Meizu $1'\n    brand_replacement: 'Meizu'\n    model_replacement: '$1'\n\n  #########\n  # Micromax\n  # @ref: http://www.micromaxinfo.com\n  #########\n  - regex: '; *(?:Micromax[ _](A111|A240)|(A111|A240)) Build'\n    regex_flag: 'i'\n    device_replacement: 'Micromax $1$2'\n    brand_replacement: 'Micromax'\n    model_replacement: '$1$2'\n  - regex: '; *Micromax[ _](Ad{2,3}[^;/]*) Build'\n    regex_flag: 'i'\n    device_replacement: 'Micromax $1'\n    brand_replacement: 'Micromax'\n    model_replacement: '$1'\n  # be carefull here with Acer e.g. A500\n  - regex: '; *(Ad{2}|A[12]d{2}|A90S|A110Q) Build'\n    regex_flag: 'i'\n    device_replacement: 'Micromax $1'\n    brand_replacement: 'Micromax'\n    model_replacement: '$1'\n  - regex: '; *Micromax[ _](Pd{3}[^;/]*) Build'\n    regex_flag: 'i'\n    device_replacement: 'Micromax $1'\n    brand_replacement: 'Micromax'\n    model_replacement: '$1'\n  - regex: '; *(Pd{3}|Pd{3}(Funbook)) Build'\n    regex_flag: 'i'\n    device_replacement: 'Micromax $1'\n    brand_replacement: 'Micromax'\n    model_replacement: '$1'\n\n  #########\n  # Mito\n  # @ref: http://new.mitomobile.com/\n  #########\n  - regex: '; *(MITO)[ _-]?([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Mito'\n    model_replacement: '$2'\n\n  #########\n  # Mobistel\n  # @ref: http://www.mobistel.com/\n  #########\n  - regex: '; *(Cynus)[ _](F5|Td|.+?) *(?:Build|[;/)])'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Mobistel'\n    model_replacement: '$1 $2'\n\n  #########\n  # Modecom\n  # @ref: http://www.modecom.eu/tablets/portal/\n  #########\n  - regex: '; *(MODECOM )?(FreeTab) ?([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1$2 $3'\n    brand_replacement: 'Modecom'\n    model_replacement: '$2 $3'\n  - regex: '; *(MODECOM )([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Modecom'\n    model_replacement: '$2'\n\n  #########\n  # Motorola\n  # @ref: http://www.motorola.com/us/shop-all-mobile-phones/\n  #########\n  - regex: '; *(MZd{3}+?|MZd{3} 4G|Xoom|XOOM[^;/]*) Build'\n    device_replacement: 'Motorola $1'\n    brand_replacement: 'Motorola'\n    model_replacement: '$1'\n  - regex: '; *(Milestone )(XT[^;/]*) Build'\n    device_replacement: 'Motorola $1$2'\n    brand_replacement: 'Motorola'\n    model_replacement: '$2'\n  - regex: '; *(Motoroi ?x|Droid X|DROIDX) Build'\n    regex_flag: 'i'\n    device_replacement: 'Motorola $1'\n    brand_replacement: 'Motorola'\n    model_replacement: 'DROID X'\n  - regex: '; *(Droid[^;/]*|DROID[^;/]*|Milestone[^;/]*|Photon|Triumph|Devour|Titanium) Build'\n    device_replacement: 'Motorola $1'\n    brand_replacement: 'Motorola'\n    model_replacement: '$1'\n  - regex: '; *(A555|A85[34][^;/]*|A95[356]|ME[58]d{2}+?|ME600|ME632|ME722|MBd{3}+?|MT680|MT710|MT870|MT887|MT917|WX435|WX453|WX44[25]|XTd{3,4}[A-Z+]*|CL[iI]Q|CL[iI]Q XT) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Motorola'\n    model_replacement: '$1'\n  - regex: '; *(Motorola MOT-|Motorola[ _-]|MOT-?)([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Motorola'\n    model_replacement: '$2'\n  - regex: '; *(Moto[_ ]?|MOT-)([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Motorola'\n    model_replacement: '$2'\n\n  #########\n  # MpMan\n  # @ref: http://www.mpmaneurope.com\n  #########\n  - regex: '; *((?:MP[DQ]C|MPGd{1,4}|MPd{3,4}|MID(?:(?:10[234]|114|43|7[247]|8[24]|7)C|8[01]1))[^;/]*) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Mpman'\n    model_replacement: '$1'\n\n  #########\n  # MSI\n  # @ref: http://www.msi.com/product/windpad/\n  #########\n  - regex: '; *(?:MSI[ _])?(Primod+|Enjoy[ _-][^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Msi'\n    model_replacement: '$1'\n\n  #########\n  # Multilaser\n  # http://www.multilaser.com.br/listagem_produtos.php?cat=5\n  #########\n  - regex: '; *Multilaser[ _]([^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Multilaser'\n    model_replacement: '$1'\n\n  #########\n  # MyPhone\n  # @ref: http://myphone.com.ph/\n  #########\n  - regex: '; *(My)[_]?(Pad)[ _]([^;/]+) Build'\n    device_replacement: '$1$2 $3'\n    brand_replacement: 'MyPhone'\n    model_replacement: '$1$2 $3'\n  - regex: '; *(My)|?(Phone)[ _]([^;/]+) Build'\n    device_replacement: '$1$2 $3'\n    brand_replacement: 'MyPhone'\n    model_replacement: '$3'\n  - regex: '; *(Ad+)[ _](Duo)? Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'MyPhone'\n    model_replacement: '$1 $2'\n\n  #########\n  # Mytab\n  # @ref: http://www.mytab.eu/en/category/mytab-products/\n  #########\n  - regex: '; *(myTab[^;/]*) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Mytab'\n    model_replacement: '$1'\n\n  #########\n  # Nabi\n  # @ref: https://www.nabitablet.com\n  #########\n  - regex: '; *(NABI2?-)([^;/]+) Build/'\n    device_replacement: '$1$2'\n    brand_replacement: 'Nabi'\n    model_replacement: '$2'\n\n  #########\n  # Nec Medias\n  # @ref: http://www.n-keitai.com/\n  #########\n  - regex: '; *(N-d+[CDE]) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Nec'\n    model_replacement: '$1'\n  - regex: '; ?(NEC-)(.*) Build/'\n    device_replacement: '$1$2'\n    brand_replacement: 'Nec'\n    model_replacement: '$2'\n  - regex: '; *(LT-NA7) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Nec'\n    model_replacement: 'Lifetouch Note'\n\n  #########\n  # Nextbook\n  # @ref: http://nextbookusa.com\n  #########\n  - regex: '; *(NXMd+[A-z0-9_]*|Nextd[A-z0-9_ -]*|NEXTd[A-z0-9_ -]*|Nextbook [A-z0-9_ ]*|DATAM803HC|M805)(?: Build|[);])'\n    device_replacement: '$1'\n    brand_replacement: 'Nextbook'\n    model_replacement: '$1'\n\n  #########\n  # Nokia\n  # @ref: http://www.nokia.com\n  #########\n  - regex: '; *(Nokia)([ _-]*)([^;/]*) Build'\n    regex_flag: 'i'\n    device_replacement: '$1$2$3'\n    brand_replacement: 'Nokia'\n    model_replacement: '$3'\n\n  #########\n  # Nook\n  # @ref:\n  # TODO nook browser/1.0\n  #########\n  - regex: '; *(Nook ?|Barnes & Noble Nook |BN )([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Nook'\n    model_replacement: '$2'\n  - regex: '; *(NOOK )?(BNRV200|BNRV200A|BNTV250|BNTV250A|BNTV400|BNTV600|LogicPD Zoom2) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Nook'\n    model_replacement: '$2'\n  - regex: '; Build/(Nook)'\n    device_replacement: '$1'\n    brand_replacement: 'Nook'\n    model_replacement: 'Tablet'\n\n  #########\n  # Olivetti\n  # @ref: http://www.olivetti.de/EN/Page/t02/view_html?idp=348\n  #########\n  - regex: '; *(OP110|OliPad[^;/]+) Build'\n    device_replacement: 'Olivetti $1'\n    brand_replacement: 'Olivetti'\n    model_replacement: '$1'\n\n  #########\n  # Omega\n  # @ref: http://omega-technology.eu/en/produkty/346/tablets\n  # @note: MID tablets might get matched by CobyKyros first\n  # @models: (T107|MID(?:700[2-5]|7031|7108|7132|750[02]|8001|8500|9001|971[12])\n  #########\n  - regex: '; *OMEGA[ _-](MID[^;/]+) Build'\n    device_replacement: 'Omega $1'\n    brand_replacement: 'Omega'\n    model_replacement: '$1'\n  - regex: '^(MID7500|MIDd+) Mozilla/5.0 (iPad;'\n    device_replacement: 'Omega $1'\n    brand_replacement: 'Omega'\n    model_replacement: '$1'\n\n  #########\n  # OpenPeak\n  # @ref: https://support.google.com/googleplay/answer/1727131?hl=en\n  #########\n  - regex: '; *((?:CIUS|cius)[^;/]*) Build'\n    device_replacement: 'Openpeak $1'\n    brand_replacement: 'Openpeak'\n    model_replacement: '$1'\n\n  #########\n  # Oppo\n  # @ref: http://en.oppo.com/products/\n  #########\n  - regex: '; *(Find ?(?:5|7a)|R8[012]d{1,2}|T703d{0,1}|U70d{1,2}T?|X90d{1,2}) Build'\n    device_replacement: 'Oppo $1'\n    brand_replacement: 'Oppo'\n    model_replacement: '$1'\n  - regex: '; *OPPO ?([^;/]+) Build/'\n    device_replacement: 'Oppo $1'\n    brand_replacement: 'Oppo'\n    model_replacement: '$1'\n\n  #########\n  # Odys\n  # @ref: http://odys.de\n  #########\n  - regex: '; *(?:Odys-|ODYS-|ODYS )([^;/]+) Build'\n    device_replacement: 'Odys $1'\n    brand_replacement: 'Odys'\n    model_replacement: '$1'\n  - regex: '; *(SELECT) ?(7) Build'\n    device_replacement: 'Odys $1 $2'\n    brand_replacement: 'Odys'\n    model_replacement: '$1 $2'\n  - regex: '; *(PEDI)_(PLUS)_(W) Build'\n    device_replacement: 'Odys $1 $2 $3'\n    brand_replacement: 'Odys'\n    model_replacement: '$1 $2 $3'\n  # Weltbild - Tablet PC 4 = Cat Phoenix = Odys Tablet PC 4?\n  - regex: '; *(AEON|BRAVIO|FUSION|FUSION2IN1|Genio|EOS10|IEOS[^;/]*|IRON|Loox|LOOX|LOOX Plus|Motion|NOON|NOON_PRO|NEXT|OPOS|PEDI[^;/]*|PRIME[^;/]*|STUDYTAB|TABLO|Tablet-PC-4|UNO_X8|XELIO[^;/]*|Xelio ?d+ ?[Pp]ro|XENO10|XPRESS PRO) Build'\n    device_replacement: 'Odys $1'\n    brand_replacement: 'Odys'\n    model_replacement: '$1'\n\n  #########\n  # OnePlus\n  # @ref https://oneplus.net/\n  #########\n  - regex: '; (ONE [a-zA-Z]d+) Build/'\n    device_replacement: 'OnePlus $1'\n    brand_replacement: 'OnePlus'\n    model_replacement: '$1'\n  - regex: '; (ONEPLUS [a-zA-Z]d+) Build/'\n    device_replacement: 'OnePlus $1'\n    brand_replacement: 'OnePlus'\n    model_replacement: '$1'\n\n  #########\n  # Orion\n  # @ref: http://www.orion.ua/en/products/computer-products/tablet-pcs.html\n  #########\n  - regex: '; *(TP-d+) Build/'\n    device_replacement: 'Orion $1'\n    brand_replacement: 'Orion'\n    model_replacement: '$1'\n\n  #########\n  # PackardBell\n  # @ref: http://www.packardbell.com/pb/en/AE/content/productgroup/tablets\n  #########\n  - regex: '; *(G100W?) Build/'\n    device_replacement: 'PackardBell $1'\n    brand_replacement: 'PackardBell'\n    model_replacement: '$1'\n\n  #########\n  # Panasonic\n  # @ref: http://panasonic.jp/mobile/\n  # @models: T11, T21, T31, P11, P51, Eluga Power, Eluga DL1\n  # @models: (tab) Toughpad FZ-A1, Toughpad JT-B1\n  #########\n  - regex: '; *(Panasonic)[_ ]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  # Toughpad\n  - regex: '; *(FZ-A1B|JT-B1) Build'\n    device_replacement: 'Panasonic $1'\n    brand_replacement: 'Panasonic'\n    model_replacement: '$1'\n  # Eluga Power\n  - regex: '; *(dL1|DL1) Build'\n    device_replacement: 'Panasonic $1'\n    brand_replacement: 'Panasonic'\n    model_replacement: '$1'\n\n  #########\n  # Pantech\n  # @href: http://www.pantech.co.kr/en/prod/prodList.do?gbrand=PANTECH\n  # @href: http://www.pantech.co.kr/en/prod/prodList.do?gbrand=VEGA\n  # @models: ADR8995, ADR910L, ADR930VW, C790, CDM8992, CDM8999, IS06, IS11PT, P2000, P2020, P2030, P4100, P5000, P6010, P6020, P6030, P7000, P7040, P8000, P8010, P9020, P9050, P9060, P9070, P9090, PT001, PT002, PT003, TXT8040, TXT8045, VEGA PTL21\n  #########\n  - regex: '; *(SKY[ _])?(IM-[AT]d{3}[^;/]+).* Build/'\n    device_replacement: 'Pantech $1$2'\n    brand_replacement: 'Pantech'\n    model_replacement: '$1$2'\n  - regex: '; *((?:ADR8995|ADR910L|ADR930L|ADR930VW|PTL21|P8000)(?: 4G)?) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Pantech'\n    model_replacement: '$1'\n  - regex: '; *Pantech([^;/]+).* Build/'\n    device_replacement: 'Pantech $1'\n    brand_replacement: 'Pantech'\n    model_replacement: '$1'\n\n  #########\n  # Papayre\n  # @ref: http://grammata.es/\n  #########\n  - regex: '; *(papyre)[ _-]([^;/]+) Build/'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Papyre'\n    model_replacement: '$2'\n\n  #########\n  # Pearl\n  # @ref: http://www.pearl.de/c-1540.shtml\n  #########\n  - regex: '; *(?:Touchlet )?(X10.[^;/]+) Build/'\n    device_replacement: 'Pearl $1'\n    brand_replacement: 'Pearl'\n    model_replacement: '$1'\n\n  #########\n  # Phicomm\n  # @ref: http://www.phicomm.com.cn/\n  #########\n  - regex: '; PHICOMM (i800) Build/'\n    device_replacement: 'Phicomm $1'\n    brand_replacement: 'Phicomm'\n    model_replacement: '$1'\n  - regex: '; PHICOMM ([^;/]+) Build/'\n    device_replacement: 'Phicomm $1'\n    brand_replacement: 'Phicomm'\n    model_replacement: '$1'\n  - regex: '; *(FWSd{3}[^;/]+) Build/'\n    device_replacement: 'Phicomm $1'\n    brand_replacement: 'Phicomm'\n    model_replacement: '$1'\n\n  #########\n  # Philips\n  # @ref: http://www.support.philips.com/support/catalog/products.jsp?_dyncharset=UTF-8&country=&categoryid=MOBILE_PHONES_SMART_SU_CN_CARE&userLanguage=en&navCount=2&groupId=PC_PRODUCTS_AND_PHONES_GR_CN_CARE&catalogType=&navAction=push&userCountry=cn&title=Smartphones&cateId=MOBILE_PHONES_CA_CN_CARE\n  # @TODO: Philips Tablets User-Agents missing!\n  # @ref: http://www.support.philips.com/support/catalog/products.jsp?_dyncharset=UTF-8&country=&categoryid=ENTERTAINMENT_TABLETS_SU_CN_CARE&userLanguage=en&navCount=0&groupId=&catalogType=&navAction=push&userCountry=cn&title=Entertainment+Tablets&cateId=TABLETS_CA_CN_CARE\n  #########\n  # @note: this a best guess according to available philips models. Need more User-Agents\n  - regex: '; *(D633|D822|D833|T539|T939|V726|W335|W336|W337|W3568|W536|W5510|W626|W632|W6350|W6360|W6500|W732|W736|W737|W7376|W820|W832|W8355|W8500|W8510|W930) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Philips'\n    model_replacement: '$1'\n  - regex: '; *(?:Philips|PHILIPS)[ _]([^;/]+) Build'\n    device_replacement: 'Philips $1'\n    brand_replacement: 'Philips'\n    model_replacement: '$1'\n\n  #########\n  # Pipo\n  # @ref: http://www.pipo.cn/En/\n  #########\n  - regex: 'Android 4..*; *(M[12356789]|U[12368]|S[123]) ?(pro)? Build'\n    device_replacement: 'Pipo $1$2'\n    brand_replacement: 'Pipo'\n    model_replacement: '$1$2'\n\n  #########\n  # Ployer\n  # @ref: http://en.ployer.cn/\n  #########\n  - regex: '; *(MOMO[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Ployer'\n    model_replacement: '$1'\n\n  #########\n  # Polaroid/ Acho\n  # @ref: http://polaroidstore.com/store/start.asp?category_id=382&category_id2=0&order=title&filter1=&filter2=&filter3=&view=all\n  #########\n  - regex: '; *(?:Polaroid[ _])?((?:MIDCd{3,}|PMIDd{2,}|PTABd{3,})[^;/]*)(/[^;/]*)? Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Polaroid'\n    model_replacement: '$1'\n  - regex: '; *(?:Polaroid )(Tablet) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Polaroid'\n    model_replacement: '$1'\n\n  #########\n  # Pomp\n  # @ref: http://pompmobileshop.com/\n  #########\n  #~ TODO\n  - regex: '; *(POMP)[ _-](.+?) *(?:Build|[;/)])'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Pomp'\n    model_replacement: '$2'\n\n  #########\n  # Positivo\n  # @ref: http://www.positivoinformatica.com.br/www/pessoal/tablet-ypy/\n  #########\n  - regex: '; *(TB07STA|TB10STA|TB07FTA|TB10FTA) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Positivo'\n    model_replacement: '$1'\n  - regex: '; *(?:Positivo )?((?:YPY|Ypy)[^;/]+) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Positivo'\n    model_replacement: '$1'\n\n  #########\n  # POV\n  # @ref: http://www.pointofview-online.com/default2.php\n  # @TODO: Smartphone Models MOB-3515, MOB-5045-B missing\n  #########\n  - regex: '; *(MOB-[^;/]+) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'POV'\n    model_replacement: '$1'\n  - regex: '; *POV[ _-]([^;/]+) Build/'\n    device_replacement: 'POV $1'\n    brand_replacement: 'POV'\n    model_replacement: '$1'\n  - regex: '; *((?:TAB-PLAYTAB|TAB-PROTAB|PROTAB|PlayTabPro|Mobii[ _-]|TAB-P)[^;/]*) Build/'\n    device_replacement: 'POV $1'\n    brand_replacement: 'POV'\n    model_replacement: '$1'\n\n  #########\n  # Prestigio\n  # @ref: http://www.prestigio.com/catalogue/MultiPhones\n  # @ref: http://www.prestigio.com/catalogue/MultiPads\n  #########\n  - regex: '; *(?:Prestigio )?((?:PAP|PMP)d[^;/]+) Build/'\n    device_replacement: 'Prestigio $1'\n    brand_replacement: 'Prestigio'\n    model_replacement: '$1'\n\n  #########\n  # Proscan\n  # @ref: http://www.proscanvideo.com/products-search.asp?itemClass=TABLET&itemnmbr=\n  #########\n  - regex: '; *(PLT[0-9]{4}.*) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Proscan'\n    model_replacement: '$1'\n\n  #########\n  # QMobile\n  # @ref: http://www.qmobile.com.pk/\n  #########\n  - regex: '; *(A2|A5|A8|A900)_?(Classic)? Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Qmobile'\n    model_replacement: '$1 $2'\n  - regex: '; *(Q[Mm]obile)_([^_]+)_([^_]+) Build'\n    device_replacement: 'Qmobile $2 $3'\n    brand_replacement: 'Qmobile'\n    model_replacement: '$2 $3'\n  - regex: '; *(Q-?[Mm]obile)[_ ](A[^;/]+) Build'\n    device_replacement: 'Qmobile $2'\n    brand_replacement: 'Qmobile'\n    model_replacement: '$2'\n\n  #########\n  # Qmobilevn\n  # @ref: http://qmobile.vn/san-pham.html\n  #########\n  - regex: '; *(Q-Smart)[ _]([^;/]+) Build/'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Qmobilevn'\n    model_replacement: '$2'\n  - regex: '; *(Q-?[Mm]obile)[ _-](S[^;/]+) Build/'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Qmobilevn'\n    model_replacement: '$2'\n\n  #########\n  # Quanta\n  # @ref: ?\n  #########\n  - regex: '; *(TA1013) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Quanta'\n    model_replacement: '$1'\n\n  #########\n  # RCA\n  # @ref: http://rcamobilephone.com/\n  #########\n  - regex: '; (RCTw+) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'RCA'\n    model_replacement: '$1'\n\n  #########\n  # Rockchip\n  # @ref: http://www.rock-chips.com/a/cn/product/index.html\n  # @note: manufacturer sells chipsets - I assume that these UAs are dev-boards\n  #########\n  - regex: '; *(RKd+),? Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Rockchip'\n    model_replacement: '$1'\n  - regex: ' Build/(RKd+)'\n    device_replacement: '$1'\n    brand_replacement: 'Rockchip'\n    model_replacement: '$1'\n\n  #########\n  # Samsung Android Devices\n  # @ref: http://www.samsung.com/us/mobile/cell-phones/all-products\n  #########\n  - regex: '; *(SAMSUNG |Samsung )?((?:Galaxy (?:Note II|Sd)|GT-I9082|GT-I9205|GT-N7d{3}|SM-N9005)[^;/]*)/?[^;/]* Build/'\n    device_replacement: 'Samsung $1$2'\n    brand_replacement: 'Samsung'\n    model_replacement: '$2'\n  - regex: '; *(Google )?(Nexus [Ss](?: 4G)?) Build/'\n    device_replacement: 'Samsung $1$2'\n    brand_replacement: 'Samsung'\n    model_replacement: '$2'\n  - regex: '; *(SAMSUNG |Samsung )([^/]*)/[^ ]* Build/'\n    device_replacement: 'Samsung $2'\n    brand_replacement: 'Samsung'\n    model_replacement: '$2'\n  - regex: '; *(Galaxy(?: Ace| Nexus| S ?II+|Nexus S| with MCR 1.2| Mini Plus 4G)?) Build/'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n  - regex: '; *(SAMSUNG[ _-] *)+([^;/]+) Build'\n    device_replacement: 'Samsung $2'\n    brand_replacement: 'Samsung'\n    model_replacement: '$2'\n  - regex: '; *(SAMSUNG-)?(GT-[BINPS]d{4}[^/]*)(/[^ ]*) Build'\n    device_replacement: 'Samsung $1$2$3'\n    brand_replacement: 'Samsung'\n    model_replacement: '$2'\n  - regex: '(?:; *|^)((?:GT-[BIiNPS]d{4}|I9d{2}0[A-Za-z+]?\b)[^;/)]*?)(?:Build|Linux|MIUI|[;/)])'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n  - regex: '; (SAMSUNG-)([A-Za-z0-9-]+).* Build/'\n    device_replacement: 'Samsung $1$2'\n    brand_replacement: 'Samsung'\n    model_replacement: '$2'\n  - regex: '; *((?:SCH|SGH|SHV|SHW|SPH|SC|SM)-[A-Za-z0-9 ]+)(/?[^ ]*)? Build'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n  - regex: ' ((?:SCH)-[A-Za-z0-9 ]+)(/?[^ ]*)? Build'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n  - regex: '; *(Behold ?(?:2|II)|YP-G[^;/]+|EK-GC100|SCL21|I9300) Build'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n\n  #########\n  # Sharp\n  # @ref: http://www.sharp-phone.com/en/index.html\n  # @ref: http://www.android.com/devices/?country=all&m=sharp\n  #########\n  - regex: '; *(SH-?dd[^;/]+|SBMd[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Sharp'\n    model_replacement: '$1'\n  - regex: '; *(SHARP[ -])([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Sharp'\n    model_replacement: '$2'\n\n  #########\n  # Simvalley\n  # @ref: http://www.simvalley-mobile.de/\n  #########\n  - regex: '; *(SPX[_-]d[^;/]*) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Simvalley'\n    model_replacement: '$1'\n  - regex: '; *(SX7-PEARL.GmbH) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Simvalley'\n    model_replacement: '$1'\n  - regex: '; *(SP[T]?-d{2}[^;/]*) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Simvalley'\n    model_replacement: '$1'\n\n  #########\n  # SK Telesys\n  # @ref: http://www.sk-w.com/phone/phone_list.jsp\n  # @ref: http://www.android.com/devices/?country=all&m=sk-telesys\n  #########\n  - regex: '; *(SK-.*) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'SKtelesys'\n    model_replacement: '$1'\n\n  #########\n  # Skytex\n  # @ref: http://skytex.com/android\n  #########\n  - regex: '; *(?:SKYTEX|SX)-([^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Skytex'\n    model_replacement: '$1'\n  - regex: '; *(IMAGINE [^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Skytex'\n    model_replacement: '$1'\n\n  #########\n  # SmartQ\n  # @ref: http://en.smartdevices.com.cn/Products/\n  # @models: Z8, X7, U7H, U7, T30, T20, Ten3, V5-II, T7-3G, SmartQ5, K7, S7, Q8, T19, Ten2, Ten, R10, T7, R7, V5, V7, SmartQ7\n  #########\n  - regex: '; *(SmartQ) ?([^;/]+) Build/'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  #########\n  # Smartbitt\n  # @ref: http://www.smartbitt.com/\n  # @missing: SBT Useragents\n  #########\n  - regex: '; *(WF7C|WF10C|SBT[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Smartbitt'\n    model_replacement: '$1'\n\n  #########\n  # Softbank (Operator Branded Devices)\n  # @ref: http://www.ipentec.com/document/document.aspx?page=android-useragent\n  #########\n  - regex: '; *(SBM(?:003SH|005SH|006SH|007SH|102SH)) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Sharp'\n    model_replacement: '$1'\n  - regex: '; *(003P|101P|101P11C|102P) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Panasonic'\n    model_replacement: '$1'\n  - regex: '; *(00dZ) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1'\n  - regex: '; HTC(X06HT) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n  - regex: '; *(001HT|X06HT) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n  - regex: '; *(201M) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Motorola'\n    model_replacement: 'XT902'\n\n  #########\n  # Trekstor\n  # @ref: http://www.trekstor.co.uk/surftabs-en.html\n  # @note: Must come before SonyEricsson\n  #########\n  - regex: '; *(STd{4}.*)Build/ST'\n    device_replacement: 'Trekstor $1'\n    brand_replacement: 'Trekstor'\n    model_replacement: '$1'\n  - regex: '; *(STd{4}.*) Build/'\n    device_replacement: 'Trekstor $1'\n    brand_replacement: 'Trekstor'\n    model_replacement: '$1'\n\n  #########\n  # SonyEricsson\n  # @note: Must come before nokia since they also use symbian\n  # @ref: http://www.android.com/devices/?country=all&m=sony-ericssons\n  # @TODO: type!\n  #########\n  # android matchers\n  - regex: '; *(Sony ?Ericsson ?)([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'SonyEricsson'\n    model_replacement: '$2'\n  - regex: '; *((?:SK|ST|E|X|LT|MK|MT|WT)d{2}[a-z0-9]*(?:-o)?|R800i|U20i) Build'\n    device_replacement: '$1'\n    brand_replacement: 'SonyEricsson'\n    model_replacement: '$1'\n  # TODO Xd+ is wrong\n  - regex: '; *(Xperia (?:A8|Arc|Acro|Active|Live with Walkman|Mini|Neo|Play|Pro|Ray|Xd+)[^;/]*) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'SonyEricsson'\n    model_replacement: '$1'\n\n  #########\n  # Sony\n  # @ref: http://www.sonymobile.co.jp/index.html\n  # @ref: http://www.sonymobile.com/global-en/products/phones/\n  # @ref: http://www.sony.jp/tablet/\n  #########\n  - regex: '; Sony (Tablet[^;/]+) Build'\n    device_replacement: 'Sony $1'\n    brand_replacement: 'Sony'\n    model_replacement: '$1'\n  - regex: '; Sony ([^;/]+) Build'\n    device_replacement: 'Sony $1'\n    brand_replacement: 'Sony'\n    model_replacement: '$1'\n  - regex: '; *(Sony)([A-Za-z0-9-]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  - regex: '; *(Xperia [^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Sony'\n    model_replacement: '$1'\n  - regex: '; *(C(?:1[0-9]|2[0-9]|53|55|6[0-9])[0-9]{2}|D[25]d{3}|D6[56]d{2}) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Sony'\n    model_replacement: '$1'\n  - regex: '; *(SGPd{3}|SGPTd{2}) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Sony'\n    model_replacement: '$1'\n  - regex: '; *(NW-Z1000Series) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Sony'\n    model_replacement: '$1'\n\n  ##########\n  # Sony PlayStation\n  # @ref: http://playstation.com\n  # The Vita spoofs the Kindle\n  ##########\n  - regex: 'PLAYSTATION 3'\n    device_replacement: 'PlayStation 3'\n    brand_replacement: 'Sony'\n    model_replacement: 'PlayStation 3'\n  - regex: '(PlayStation (?:Portable|Vita|d+))'\n    device_replacement: '$1'\n    brand_replacement: 'Sony'\n    model_replacement: '$1'\n\n  #########\n  # Spice\n  # @ref: http://www.spicemobilephones.co.in/\n  #########\n  - regex: '; *((?:CSL_Spice|Spice|SPICE|CSL)[ _-]?)?([Mm][Ii])([ _-])?(d{3}[^;/]*) Build/'\n    device_replacement: '$1$2$3$4'\n    brand_replacement: 'Spice'\n    model_replacement: 'Mi$4'\n\n  #########\n  # Sprint (Operator Branded Devices)\n  # @ref:\n  #########\n  - regex: '; *(Sprint )(.+?) *(?:Build|[;/])'\n    device_replacement: '$1$2'\n    brand_replacement: 'Sprint'\n    model_replacement: '$2'\n  - regex: '\b(Sprint)[: ]([^;,/ ]+)'\n    device_replacement: '$1$2'\n    brand_replacement: 'Sprint'\n    model_replacement: '$2'\n\n  #########\n  # Tagi\n  # @ref: ??\n  #########\n  - regex: '; *(TAGI[ ]?)(MID) ?([^;/]+) Build/'\n    device_replacement: '$1$2$3'\n    brand_replacement: 'Tagi'\n    model_replacement: '$2$3'\n\n  #########\n  # Tecmobile\n  # @ref: http://www.tecmobile.com/\n  #########\n  - regex: '; *(Oyster500|Opal 800) Build'\n    device_replacement: 'Tecmobile $1'\n    brand_replacement: 'Tecmobile'\n    model_replacement: '$1'\n\n  #########\n  # Tecno\n  # @ref: www.tecno-mobile.com/\u200E\n  #########\n  - regex: '; *(TECNO[ _])([^;/]+) Build/'\n    device_replacement: '$1$2'\n    brand_replacement: 'Tecno'\n    model_replacement: '$2'\n\n  #########\n  # Telechips, Techvision evaluation boards\n  # @ref:\n  #########\n  - regex: '; *Android for (Telechips|Techvision) ([^ ]+) '\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  #########\n  # Telstra\n  # @ref: http://www.telstra.com.au/home-phone/thub-2/\n  # @ref: https://support.google.com/googleplay/answer/1727131?hl=en\n  #########\n  - regex: '; *(T-Hub2) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Telstra'\n    model_replacement: '$1'\n\n  #########\n  # Terra\n  # @ref: http://www.wortmann.de/\n  #########\n  - regex: '; *(PAD) ?(100[12]) Build/'\n    device_replacement: 'Terra $1$2'\n    brand_replacement: 'Terra'\n    model_replacement: '$1$2'\n\n  #########\n  # Texet\n  # @ref: http://www.texet.ru/tablet/\n  #########\n  - regex: '; *(T[BM]-d{3}[^;/]+) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Texet'\n    model_replacement: '$1'\n\n  #########\n  # Thalia\n  # @ref: http://www.thalia.de/shop/tolino-shine-ereader/show/\n  #########\n  - regex: '; *(tolino [^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Thalia'\n    model_replacement: '$1'\n  - regex: '; *Build/.* (TOLINO_BROWSER)'\n    device_replacement: '$1'\n    brand_replacement: 'Thalia'\n    model_replacement: 'Tolino Shine'\n\n  #########\n  # Thl\n  # @ref: http://en.thl.com.cn/Mobile\n  # @ref: http://thlmobilestore.com\n  #########\n  - regex: '; *(?:CJ[ -])?(ThL|THL)[ -]([^;/]+) Build/'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Thl'\n    model_replacement: '$2'\n  - regex: '; *(T100|T200|T5|W100|W200|W8s) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Thl'\n    model_replacement: '$1'\n\n  #########\n  # T-Mobile (Operator Branded Devices)\n  #########\n  # @ref: https://en.wikipedia.org/wiki/HTC_Hero\n  - regex: '; *(T-Mobile[ _]G2[ _]Touch) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: 'Hero'\n  # @ref: https://en.wikipedia.org/wiki/HTC_Desire_Z\n  - regex: '; *(T-Mobile[ _]G2) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: 'Desire Z'\n  - regex: '; *(T-Mobile myTouch Q) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Huawei'\n    model_replacement: 'U8730'\n  - regex: '; *(T-Mobile myTouch) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Huawei'\n    model_replacement: 'U8680'\n  - regex: '; *(T-Mobile_Espresso) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: 'Espresso'\n  - regex: '; *(T-Mobile G1) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: 'Dream'\n  - regex: '\b(T-Mobile ?)?(myTouch)[ _]?([34]G)[ _]?([^/]*) (?:Mozilla|Build)'\n    device_replacement: '$1$2 $3 $4'\n    brand_replacement: 'HTC'\n    model_replacement: '$2 $3 $4'\n  - regex: '\b(T-Mobile)_([^_]+)_(.*) Build'\n    device_replacement: '$1 $2 $3'\n    brand_replacement: 'Tmobile'\n    model_replacement: '$2 $3'\n  - regex: '\b(T-Mobile)[_ ]?(.*?)Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Tmobile'\n    model_replacement: '$2'\n\n  #########\n  # Tomtec\n  # @ref: http://www.tom-tec.eu/pages/tablets.php\n  #########\n  - regex: ' (ATP[0-9]{4}) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Tomtec'\n    model_replacement: '$1'\n\n  #########\n  # Tooky\n  # @ref: http://www.tookymobile.com/\n  #########\n  - regex: ' *(TOOKY)[ _-]([^;/]+) ?(?:Build|;)'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Tooky'\n    model_replacement: '$2'\n\n  #########\n  # Toshiba\n  # @ref: http://www.toshiba.co.jp/\n  # @missing: LT170, Thrive 7, TOSHIBA STB10\n  #########\n  - regex: '\b(TOSHIBA_AC_AND_AZ|TOSHIBA_FOLIO_AND_A|FOLIO_AND_A)'\n    device_replacement: '$1'\n    brand_replacement: 'Toshiba'\n    model_replacement: 'Folio 100'\n  - regex: '; *([Ff]olio ?100) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Toshiba'\n    model_replacement: 'Folio 100'\n  - regex: '; *(AT[0-9]{2,3}(?:-A|LE-A|PE-A|SE|a)?|AT7-A|AT1S0|Hikari-iFrame/WDPF-[^;/]+|THRiVE|Thrive) Build/'\n    device_replacement: 'Toshiba $1'\n    brand_replacement: 'Toshiba'\n    model_replacement: '$1'\n\n  #########\n  # Touchmate\n  # @ref: http://touchmatepc.com/new/\n  #########\n  - regex: '; *(TM-MIDd+[^;/]+|TOUCHMATE|MID-750) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Touchmate'\n    model_replacement: '$1'\n  # @todo: needs verification user-agents missing\n  - regex: '; *(TM-SMd+[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Touchmate'\n    model_replacement: '$1'\n\n  #########\n  # Treq\n  # @ref: http://www.treq.co.id/product\n  #########\n  - regex: '; *(A10 [Bb]asic2?) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Treq'\n    model_replacement: '$1'\n  - regex: '; *(TREQ[ _-])([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1$2'\n    brand_replacement: 'Treq'\n    model_replacement: '$2'\n\n  #########\n  # Umeox\n  # @ref: http://umeox.com/\n  # @models: A936|A603|X-5|X-3\n  #########\n  # @todo: guessed markers\n  - regex: '; *(X-?5|X-?3) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Umeox'\n    model_replacement: '$1'\n  # @todo: guessed markers\n  - regex: '; *(A502+?|A936|A603|X1|X2) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Umeox'\n    model_replacement: '$1'\n\n  #########\n  # Versus\n  # @ref: http://versusuk.com/support.html\n  #########\n  - regex: '(TOUCH(?:TAB|PAD).+?) Build/'\n    regex_flag: 'i'\n    device_replacement: 'Versus $1'\n    brand_replacement: 'Versus'\n    model_replacement: '$1'\n\n  #########\n  # Vertu\n  # @ref: http://www.vertu.com/\n  #########\n  - regex: '(VERTU) ([^;/]+) Build/'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Vertu'\n    model_replacement: '$2'\n\n  #########\n  # Videocon\n  # @ref: http://www.videoconmobiles.com\n  #########\n  - regex: '; *(Videocon)[ _-]([^;/]+) *(?:Build|;)'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Videocon'\n    model_replacement: '$2'\n  - regex: ' (VTd{2}[A-Za-z]*) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Videocon'\n    model_replacement: '$1'\n\n  #########\n  # Viewsonic\n  # @ref: http://viewsonic.com\n  #########\n  - regex: '; *((?:ViewPad|ViewPhone|VSD)[^;/]+) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Viewsonic'\n    model_replacement: '$1'\n  - regex: '; *(ViewSonic-)([^;/]+) Build/'\n    device_replacement: '$1$2'\n    brand_replacement: 'Viewsonic'\n    model_replacement: '$2'\n  - regex: '; *(GTablet.*) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Viewsonic'\n    model_replacement: '$1'\n\n  #########\n  # vivo\n  # @ref: http://vivo.cn/\n  #########\n  - regex: '; *([Vv]ivo)[ _]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'vivo'\n    model_replacement: '$2'\n\n  #########\n  # Vodafone (Operator Branded Devices)\n  # @ref: ??\n  #########\n  - regex: '(Vodafone) (.*) Build/'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  #########\n  # Walton\n  # @ref: http://www.waltonbd.com/\n  #########\n  - regex: '; *(?:Walton[ _-])?(Primo[ _-][^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: 'Walton $1'\n    brand_replacement: 'Walton'\n    model_replacement: '$1'\n\n  #########\n  # Wiko\n  # @ref: http://fr.wikomobile.com/collection.php?s=Smartphones\n  #########\n  - regex: '; *(?:WIKO[ -])?(CINK+?|BARRY|BLOOM|DARKFULL|DARKMOON|DARKNIGHT|DARKSIDE|FIZZ|HIGHWAY|IGGY|OZZY|RAINBOW|STAIRWAY|SUBLIM|WAX|CINK [^;/]+) Build/'\n    regex_flag: 'i'\n    device_replacement: 'Wiko $1'\n    brand_replacement: 'Wiko'\n    model_replacement: '$1'\n\n  #########\n  # WellcoM\n  # @ref: ??\n  #########\n  - regex: '; *WellcoM-([^;/]+) Build'\n    device_replacement: 'Wellcom $1'\n    brand_replacement: 'Wellcom'\n    model_replacement: '$1'\n\n  ##########\n  # WeTab\n  # @ref: http://wetab.mobi/\n  ##########\n  - regex: '(?:(WeTab)-Browser|; (wetab) Build)'\n    device_replacement: '$1'\n    brand_replacement: 'WeTab'\n    model_replacement: 'WeTab'\n\n  #########\n  # Wolfgang\n  # @ref: http://wolfgangmobile.com/\n  #########\n  - regex: '; *(AT-AS[^;/]+) Build'\n    device_replacement: 'Wolfgang $1'\n    brand_replacement: 'Wolfgang'\n    model_replacement: '$1'\n\n  #########\n  # Woxter\n  # @ref: http://www.woxter.es/es-es/categories/index\n  #########\n  - regex: '; *(?:Woxter|Wxt) ([^;/]+) Build'\n    device_replacement: 'Woxter $1'\n    brand_replacement: 'Woxter'\n    model_replacement: '$1'\n\n  #########\n  # Yarvik Zania\n  # @ref: http://yarvik.com\n  #########\n  - regex: '; *(?:Xenta |Luna )?(TAB[234][0-9]{2}|TAB0[78]-d{3}|TAB0?9-d{3}|TAB1[03]-d{3}|SMPd{2}-d{3}) Build/'\n    device_replacement: 'Yarvik $1'\n    brand_replacement: 'Yarvik'\n    model_replacement: '$1'\n\n  #########\n  # Yifang\n  # @note: Needs to be at the very last as manufacturer builds for other brands.\n  # @ref: http://www.yifangdigital.com/\n  # @models: M1010, M1011, M1007, M1008, M1005, M899, M899LP, M909, M8000,\n  #   M8001, M8002, M8003, M849, M815, M816, M819, M805, M878, M780LPW,\n  #   M778, M7000, M7000AD, M7000NBD, M7001, M7002, M7002KBD, M777, M767,\n  #   M789, M799, M769, M757, M755, M753, M752, M739, M729, M723, M712, M727\n  #########\n  - regex: '; *([A-Z]{2,4})(Md{3,}[A-Z]{2})([^;)/]*)(?: Build|[;)])'\n    device_replacement: 'Yifang $1$2$3'\n    brand_replacement: 'Yifang'\n    model_replacement: '$2'\n\n  #########\n  # XiaoMi\n  # @ref: http://www.xiaomi.com/event/buyphone\n  #########\n  - regex: '; *((MI|HM|MI-ONE|Redmi)[ -](NOTE |Note )?[^;/]*) (Build|MIUI)/'\n    device_replacement: 'XiaoMi $1'\n    brand_replacement: 'XiaoMi'\n    model_replacement: '$1'\n\n  #########\n  # Xolo\n  # @ref: http://www.xolo.in/\n  #########\n  - regex: '; *XOLO[ _]([^;/]*tab.*) Build'\n    regex_flag: 'i'\n    device_replacement: 'Xolo $1'\n    brand_replacement: 'Xolo'\n    model_replacement: '$1'\n  - regex: '; *XOLO[ _]([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: 'Xolo $1'\n    brand_replacement: 'Xolo'\n    model_replacement: '$1'\n  - regex: '; *(qd0{2,3}[a-z]?) Build'\n    regex_flag: 'i'\n    device_replacement: 'Xolo $1'\n    brand_replacement: 'Xolo'\n    model_replacement: '$1'\n\n  #########\n  # Xoro\n  # @ref: http://www.xoro.de/produkte/\n  #########\n  - regex: '; *(PAD ?[79]d+[^;/]*|TelePADd+[^;/]) Build'\n    device_replacement: 'Xoro $1'\n    brand_replacement: 'Xoro'\n    model_replacement: '$1'\n\n  #########\n  # Zopo\n  # @ref: http://www.zopomobiles.com/products.html\n  #########\n  - regex: '; *(?:(?:ZOPO|Zopo)[ _]([^;/]+)|(ZP ?(?:d{2}[^;/]+|C2))|(C[2379])) Build'\n    device_replacement: '$1$2$3'\n    brand_replacement: 'Zopo'\n    model_replacement: '$1$2$3'\n\n  #########\n  # ZiiLabs\n  # @ref: http://www.ziilabs.com/products/platforms/androidreferencetablets.php\n  #########\n  - regex: '; *(ZiiLABS) (Zii[^;/]*) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'ZiiLabs'\n    model_replacement: '$2'\n  - regex: '; *(Zii)_([^;/]*) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'ZiiLabs'\n    model_replacement: '$2'\n\n  #########\n  # ZTE\n  # @ref: http://www.ztedevices.com/\n  #########\n  - regex: '; *(ARIZONA|(?:ATLAS|Atlas) W|D930|Grand (?:[SX][^;]*|Era|Memo[^;]*)|JOE|(?:Kis|KIS)\b[^;]*|Libra|Light [^;]*|N8[056][01]|N850L|N8000|N9[15]d{2}|N9810|NX501|Optik|(?:Vip )Racer[^;]*|RacerII|RACERII|San Francisco[^;]*|V9[AC]|V55|V881|Z[679][0-9]{2}[A-z]?) Build'\n    device_replacement: '$1'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1'\n  - regex: '; *([A-Z]d+)_USA_[^;]* Build'\n    device_replacement: '$1'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1'\n  - regex: '; *(SmartTabd+)[^;]* Build'\n    device_replacement: '$1'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1'\n  - regex: '; *(?:Blade|BLADE|ZTE-BLADE)([^;/]*) Build'\n    device_replacement: 'ZTE Blade$1'\n    brand_replacement: 'ZTE'\n    model_replacement: 'Blade$1'\n  - regex: '; *(?:Skate|SKATE|ZTE-SKATE)([^;/]*) Build'\n    device_replacement: 'ZTE Skate$1'\n    brand_replacement: 'ZTE'\n    model_replacement: 'Skate$1'\n  - regex: '; *(Orange |Optimus )(Monte Carlo|San Francisco) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1$2'\n  - regex: '; *(?:ZXY-ZTE_|ZTE-U |ZTE[- _]|ZTE-C[_ ])([^;/]+) Build'\n    device_replacement: 'ZTE $1'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1'\n  # operator specific\n  - regex: '; (BASE) (lutea|Lutea 2|Tab[^;]*) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1 $2'\n  - regex: '; (Avea inTouch 2|soft stone|tmn smart a7|Movistar[ _]Link) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1'\n  - regex: '; *(vp9plus))'\n    device_replacement: '$1'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1'\n\n  ##########\n  # Zync\n  # @ref: http://www.zync.in/index.php/our-products/tablet-phablets\n  ##########\n  - regex: '; ?(Cloud[ _]Z5|z1000|Z99 2G|z99|z930|z999|z990|z909|Z919|z900) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Zync'\n    model_replacement: '$1'\n\n  ##########\n  # Kindle\n  # @note: Needs to be after Sony Playstation Vita as this UA contains Silk/3.2\n  # @ref: https://developer.amazon.com/sdk/fire/specifications.html\n  # @ref: http://amazonsilk.wordpress.com/useful-bits/silk-user-agent/\n  ##########\n  - regex: '; ?(KFOT|Kindle Fire) Build\b'\n    device_replacement: 'Kindle Fire'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire'\n  - regex: '; ?(KFOTE|Amazon Kindle Fire2) Build\b'\n    device_replacement: 'Kindle Fire 2'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire 2'\n  - regex: '; ?(KFTT) Build\b'\n    device_replacement: 'Kindle Fire HD'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire HD 7\"'\n  - regex: '; ?(KFJWI) Build\b'\n    device_replacement: 'Kindle Fire HD 8.9\" WiFi'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire HD 8.9\" WiFi'\n  - regex: '; ?(KFJWA) Build\b'\n    device_replacement: 'Kindle Fire HD 8.9\" 4G'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire HD 8.9\" 4G'\n  - regex: '; ?(KFSOWI) Build\b'\n    device_replacement: 'Kindle Fire HD 7\" WiFi'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire HD 7\" WiFi'\n  - regex: '; ?(KFTHWI) Build\b'\n    device_replacement: 'Kindle Fire HDX 7\" WiFi'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire HDX 7\" WiFi'\n  - regex: '; ?(KFTHWA) Build\b'\n    device_replacement: 'Kindle Fire HDX 7\" 4G'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire HDX 7\" 4G'\n  - regex: '; ?(KFAPWI) Build\b'\n    device_replacement: 'Kindle Fire HDX 8.9\" WiFi'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire HDX 8.9\" WiFi'\n  - regex: '; ?(KFAPWA) Build\b'\n    device_replacement: 'Kindle Fire HDX 8.9\" 4G'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire HDX 8.9\" 4G'\n  - regex: '; ?Amazon ([^;/]+) Build\b'\n    device_replacement: '$1'\n    brand_replacement: 'Amazon'\n    model_replacement: '$1'\n  - regex: '; ?(Kindle) Build\b'\n    device_replacement: 'Kindle'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle'\n  - regex: '; ?(Silk)/(d+).(d+)(?:.([0-9-]+))? Build\b'\n    device_replacement: 'Kindle Fire'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire$2'\n  - regex: ' (Kindle)/(d+.d+)'\n    device_replacement: 'Kindle'\n    brand_replacement: 'Amazon'\n    model_replacement: '$1 $2'\n  - regex: ' (Silk|Kindle)/(d+).'\n    device_replacement: 'Kindle'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle'\n\n  #########\n  # Devices from chinese manufacturer(s)\n  # @note: identified by x-wap-profile http://218.249.47.94/Xianghe/.*\n  #########\n  - regex: '(sprd)-([^/]+)/'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  # @ref: http://eshinechina.en.alibaba.com/\n  - regex: '; *(Hd{2}00+?) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Hero'\n    model_replacement: '$1'\n  - regex: '; *(iphone|iPhone5) Build/'\n    device_replacement: 'Xianghe $1'\n    brand_replacement: 'Xianghe'\n    model_replacement: '$1'\n  - regex: '; *(ed{4}[a-z]?_?vd+|v89_[^;/]+)[^;/]+ Build/'\n    device_replacement: 'Xianghe $1'\n    brand_replacement: 'Xianghe'\n    model_replacement: '$1'\n\n  #########\n  # Cellular\n  # @ref:\n  # @note: Operator branded devices\n  #########\n  - regex: '\bUSCC[_-]?([^ ;/)]+)'\n    device_replacement: '$1'\n    brand_replacement: 'Cellular'\n    model_replacement: '$1'\n\n  ######################################################################\n  # Windows Phone Parsers\n  ######################################################################\n\n  #########\n  # Alcatel Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;)]+[;)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:ALCATEL)[^;]*; *([^;,)]+)'\n    device_replacement: 'Alcatel $1'\n    brand_replacement: 'Alcatel'\n    model_replacement: '$1'\n\n  #########\n  # Asus Windows Phones\n  #########\n  #~ - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;)]+[;)] ?(?:ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?(?:ASUS|Asus)[^;]*; *([^;,)]+)'\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;)]+[;)] ?(?:ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?(?:ASUS|Asus)[^;]*; *([^;,)]+)'\n    device_replacement: 'Asus $1'\n    brand_replacement: 'Asus'\n    model_replacement: '$1'\n\n  #########\n  # Dell Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;)]+[;)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:DELL|Dell)[^;]*; *([^;,)]+)'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: '$1'\n\n  #########\n  # HTC Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;)]+[;)] ?(?:ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?(?:HTC|Htc|HTC_blocked[^;]*)[^;]*; *(?:HTC)?([^;,)]+)'\n    device_replacement: 'HTC $1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n\n  #########\n  # Huawei Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;)]+[;)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:HUAWEI)[^;]*; *(?:HUAWEI )?([^;,)]+)'\n    device_replacement: 'Huawei $1'\n    brand_replacement: 'Huawei'\n    model_replacement: '$1'\n\n  #########\n  # LG Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;)]+[;)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:LG|Lg)[^;]*; *(?:LG[ -])?([^;,)]+)'\n    device_replacement: 'LG $1'\n    brand_replacement: 'LG'\n    model_replacement: '$1'\n\n  #########\n  # Noka Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;)]+[;)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:NOKIA|Nokia)[^;]*; *(?:NOKIA ?|Nokia ?|LUMIA ?|[Ll]umia ?)*(d{3,}[^;)]*)'\n    device_replacement: 'Lumia $1'\n    brand_replacement: 'Nokia'\n    model_replacement: 'Lumia $1'\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;)]+[;)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:NOKIA|Nokia)[^;]*; *(RM-d{3,})'\n    device_replacement: 'Nokia $1'\n    brand_replacement: 'Nokia'\n    model_replacement: '$1'\n  - regex: '(?:Windows Phone [^;]+; .*?IEMobile/[^;)]+[;)]|WPDesktop;) ?(?:ARM; ?Touch; ?|Touch; ?)?(?:NOKIA|Nokia)[^;]*; *(?:NOKIA ?|Nokia ?|LUMIA ?|[Ll]umia ?)*([^;)]+)'\n    device_replacement: 'Nokia $1'\n    brand_replacement: 'Nokia'\n    model_replacement: '$1'\n\n  #########\n  # Microsoft Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;)]+[;)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:Microsoft(?: Corporation)?)[^;]*; *([^;,)]+)'\n    device_replacement: 'Microsoft $1'\n    brand_replacement: 'Microsoft'\n    model_replacement: '$1'\n\n  #########\n  # Samsung Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;)]+[;)] ?(?:ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?(?:SAMSUNG)[^;]*; *(?:SAMSUNG )?([^;,.)]+)'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n\n  #########\n  # Toshiba Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;)]+[;)] ?(?:ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?(?:TOSHIBA|FujitsuToshibaMobileCommun)[^;]*; *([^;,)]+)'\n    device_replacement: 'Toshiba $1'\n    brand_replacement: 'Toshiba'\n    model_replacement: '$1'\n\n  #########\n  # Generic Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;)]+[;)] ?(?:ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?([^;]+); *([^;,)]+)'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  ######################################################################\n  # Other Devices Parser\n  ######################################################################\n\n  #########\n  # Samsung Bada Phones\n  #########\n  - regex: '(?:^|; )SAMSUNG-([A-Za-z0-9-]+).* Bada/'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n\n  #########\n  # Firefox OS\n  #########\n  - regex: '(Mobile; ALCATEL ?(One|ONE) ?(Touch|TOUCH) ?([^;/]+)(?:/[^;]+)?; rv:[^)]+) Gecko/[^/]+ Firefox/'\n    device_replacement: 'Alcatel $1 $2 $3'\n    brand_replacement: 'Alcatel'\n    model_replacement: 'One Touch $3'\n  - regex: '(Mobile; (?:ZTE([^;]+)|(OpenC)); rv:[^)]+) Gecko/[^/]+ Firefox/'\n    device_replacement: 'ZTE $1$2'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1$2'\n\n  ##########\n  # NOKIA\n  # @note: NokiaN8-00 comes before iphone. Sometimes spoofs iphone\n  ##########\n  - regex: 'Nokia(N[0-9]+)([A-z_-][A-z0-9_-]*)'\n    device_replacement: 'Nokia $1'\n    brand_replacement: 'Nokia'\n    model_replacement: '$1$2'\n  - regex: '(?:NOKIA|Nokia)(?:-| *)(?:([A-Za-z0-9]+)-[0-9a-f]{32}|([A-Za-z0-9-]+)(?:UCBrowser)|([A-Za-z0-9-]+))'\n    device_replacement: 'Nokia $1$2$3'\n    brand_replacement: 'Nokia'\n    model_replacement: '$1$2$3'\n  - regex: 'Lumia ([A-Za-z0-9-]+)'\n    device_replacement: 'Lumia $1'\n    brand_replacement: 'Nokia'\n    model_replacement: 'Lumia $1'\n  # UCWEB Browser on Symbian\n  - regex: '(Symbian; U; S60 V5; [A-z]{2}-[A-z]{2}; (SonyEricsson|Samsung|Nokia|LG)([^;/]+))'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  # Nokia Symbian\n  - regex: '(Symbian(?:/3)?; U; ([^;]+);'\n    device_replacement: 'Nokia $1'\n    brand_replacement: 'Nokia'\n    model_replacement: '$1'\n\n  ##########\n  # BlackBerry\n  # @ref: http://www.useragentstring.com/pages/BlackBerry/\n  ##########\n  - regex: 'BB10; ([A-Za-z0-9- ]+))'\n    device_replacement: 'BlackBerry $1'\n    brand_replacement: 'BlackBerry'\n    model_replacement: '$1'\n  - regex: 'Play[Bb]ook.+RIM Tablet OS'\n    device_replacement: 'BlackBerry Playbook'\n    brand_replacement: 'BlackBerry'\n    model_replacement: 'Playbook'\n  - regex: 'Black[Bb]erry ([0-9]+);'\n    device_replacement: 'BlackBerry $1'\n    brand_replacement: 'BlackBerry'\n    model_replacement: '$1'\n  - regex: 'Black[Bb]erry([0-9]+)'\n    device_replacement: 'BlackBerry $1'\n    brand_replacement: 'BlackBerry'\n    model_replacement: '$1'\n  - regex: 'Black[Bb]erry;'\n    device_replacement: 'BlackBerry'\n    brand_replacement: 'BlackBerry'\n\n  ##########\n  # PALM / HP\n  # @note: some palm devices must come before iphone. sometimes spoofs iphone in ua\n  ##########\n  - regex: '(Pre|Pixi)/d+.d+'\n    device_replacement: 'Palm $1'\n    brand_replacement: 'Palm'\n    model_replacement: '$1'\n  - regex: 'Palm([0-9]+)'\n    device_replacement: 'Palm $1'\n    brand_replacement: 'Palm'\n    model_replacement: '$1'\n  - regex: 'Treo([A-Za-z0-9]+)'\n    device_replacement: 'Palm Treo $1'\n    brand_replacement: 'Palm'\n    model_replacement: 'Treo $1'\n  - regex: 'webOS.*(P160U(?:NA)?)/(d+).(d+)'\n    device_replacement: 'HP Veer'\n    brand_replacement: 'HP'\n    model_replacement: 'Veer'\n  - regex: '(Touch[Pp]ad)/d+.d+'\n    device_replacement: 'HP TouchPad'\n    brand_replacement: 'HP'\n    model_replacement: 'TouchPad'\n  - regex: 'HPiPAQ([A-Za-z0-9]+)/d+.d+'\n    device_replacement: 'HP iPAQ $1'\n    brand_replacement: 'HP'\n    model_replacement: 'iPAQ $1'\n  - regex: 'PDA; (PalmOS)/sony/model ([a-z]+)/Revision'\n    device_replacement: '$1'\n    brand_replacement: 'Sony'\n    model_replacement: '$1 $2'\n\n  ##########\n  # AppleTV\n  # No built in browser that I can tell\n  # Stack Overflow indicated iTunes-AppleTV/4.1 as a known UA for app available and I'm seeing it in live traffic\n  ##########\n  - regex: '(Apples?TV)'\n    device_replacement: 'AppleTV'\n    brand_replacement: 'Apple'\n    model_replacement: 'AppleTV'\n\n  #########\n  # Tesla Model S\n  #########\n  - regex: '(QtCarBrowser)'\n    device_replacement: 'Tesla Model S'\n    brand_replacement: 'Tesla'\n    model_replacement: 'Model S'\n\n  ##########\n  # iSTUFF\n  # @note: complete but probably catches spoofs\n  #   ipad and ipod must be parsed before iphone\n  #   cannot determine specific device type from ua string. (3g, 3gs, 4, etc)\n  ##########\n  # @note: on some ua the device can be identified e.g. iPhone5,1\n  - regex: '(iPhone|iPad|iPod)(d+,d+)'\n    device_replacement: '$1'\n    brand_replacement: 'Apple'\n    model_replacement: '$1$2'\n  # @note: iPad needs to be before iPhone\n  - regex: '(iPad)(?:;| Simulator;)'\n    device_replacement: '$1'\n    brand_replacement: 'Apple'\n    model_replacement: '$1'\n  - regex: '(iPod)(?:;| touch;| Simulator;)'\n    device_replacement: '$1'\n    brand_replacement: 'Apple'\n    model_replacement: '$1'\n  - regex: '(iPhone)(?:;| Simulator;)'\n    device_replacement: '$1'\n    brand_replacement: 'Apple'\n    model_replacement: '$1'\n  # @note: desktop applications show device info\n  - regex: 'CFNetwork/.* Darwin/d.*(((?:Mac|iMac|PowerMac|PowerBook)[^d]*)(d+)(?:,|%2C)(d+)'\n    device_replacement: '$1$2,$3'\n    brand_replacement: 'Apple'\n    model_replacement: '$1$2,$3'\n  # @note: newer desktop applications don't show device info\n  # This is here so as to not have them recorded as iOS-Device\n  - regex: 'CFNetwork/.* Darwin/d+.d+.d+ (x86_64)'\n  # @note: iOS applications do not show device info\n  - regex: 'CFNetwork/.* Darwin/d'\n    device_replacement: 'iOS-Device'\n    brand_replacement: 'Apple'\n    model_replacement: 'iOS-Device'\n\n  ##########\n  # Acer\n  ##########\n  - regex: 'acer_([A-Za-z0-9]+)_'\n    device_replacement: 'Acer $1'\n    brand_replacement: 'Acer'\n    model_replacement: '$1'\n\n  ##########\n  # Alcatel\n  ##########\n  - regex: '(?:ALCATEL|Alcatel)-([A-Za-z0-9-]+)'\n    device_replacement: 'Alcatel $1'\n    brand_replacement: 'Alcatel'\n    model_replacement: '$1'\n\n  ##########\n  # Amoi\n  ##########\n  - regex: '(?:Amoi|AMOI)-([A-Za-z0-9]+)'\n    device_replacement: 'Amoi $1'\n    brand_replacement: 'Amoi'\n    model_replacement: '$1'\n\n  ##########\n  # Asus\n  ##########\n  - regex: '(?:; |/|^)((?:Transformer (?:Pad|Prime) |Transformer |PadFone[ _]?)[A-Za-z0-9]*)'\n    device_replacement: 'Asus $1'\n    brand_replacement: 'Asus'\n    model_replacement: '$1'\n  - regex: '(?:asus.*?ASUS|Asus|ASUS|asus)[- ;]*((?:Transformer (?:Pad|Prime) |Transformer |Padfone |Nexus[ _])?[A-Za-z0-9]+)'\n    device_replacement: 'Asus $1'\n    brand_replacement: 'Asus'\n    model_replacement: '$1'\n\n\n  ##########\n  # Bird\n  ##########\n  - regex: '\bBIRD[ -.]([A-Za-z0-9]+)'\n    device_replacement: 'Bird $1'\n    brand_replacement: 'Bird'\n    model_replacement: '$1'\n\n  ##########\n  # Dell\n  ##########\n  - regex: '\bDell ([A-Za-z0-9]+)'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: '$1'\n\n  ##########\n  # DoCoMo\n  ##########\n  - regex: 'DoCoMo/2.0 ([A-Za-z0-9]+)'\n    device_replacement: 'DoCoMo $1'\n    brand_replacement: 'DoCoMo'\n    model_replacement: '$1'\n  - regex: '([A-Za-z0-9]+)_W;FOMA'\n    device_replacement: 'DoCoMo $1'\n    brand_replacement: 'DoCoMo'\n    model_replacement: '$1'\n  - regex: '([A-Za-z0-9]+);FOMA'\n    device_replacement: 'DoCoMo $1'\n    brand_replacement: 'DoCoMo'\n    model_replacement: '$1'\n\n  ##########\n  # htc\n  ##########\n  - regex: '\b(?:HTC/|HTC/[a-z0-9]+/)?HTC[ _-;]? *(.*?)(?:-?Mozilla|fingerPrint|[;/()]|$)'\n    device_replacement: 'HTC $1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n\n  ##########\n  # Huawei\n  ##########\n  - regex: 'Huawei([A-Za-z0-9]+)'\n    device_replacement: 'Huawei $1'\n    brand_replacement: 'Huawei'\n    model_replacement: '$1'\n  - regex: 'HUAWEI-([A-Za-z0-9]+)'\n    device_replacement: 'Huawei $1'\n    brand_replacement: 'Huawei'\n    model_replacement: '$1'\n  - regex: 'vodafone([A-Za-z0-9]+)'\n    device_replacement: 'Huawei Vodafone $1'\n    brand_replacement: 'Huawei'\n    model_replacement: 'Vodafone $1'\n\n  ##########\n  # i-mate\n  ##########\n  - regex: 'i-mate ([A-Za-z0-9]+)'\n    device_replacement: 'i-mate $1'\n    brand_replacement: 'i-mate'\n    model_replacement: '$1'\n\n  ##########\n  # kyocera\n  ##########\n  - regex: 'Kyocera-([A-Za-z0-9]+)'\n    device_replacement: 'Kyocera $1'\n    brand_replacement: 'Kyocera'\n    model_replacement: '$1'\n  - regex: 'KWC-([A-Za-z0-9]+)'\n    device_replacement: 'Kyocera $1'\n    brand_replacement: 'Kyocera'\n    model_replacement: '$1'\n\n  ##########\n  # lenovo\n  ##########\n  - regex: 'Lenovo[_-]([A-Za-z0-9]+)'\n    device_replacement: 'Lenovo $1'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1'\n\n  ##########\n  # HbbTV (European and Australian standard)\n  # written before the LG regexes, as LG is making HbbTV too\n  ##########\n  - regex: '(HbbTV)/[0-9]+.[0-9]+.[0-9]+ ([^;]*; *(LG)E *; *([^;]*) *;[^;]*;[^;]*;)'\n    device_replacement: '$1'\n    brand_replacement: '$2'\n    model_replacement: '$3'\n  - regex: '(HbbTV)/1.1.1.*CE-HTML/1.d;(Vendor/)*(THOM[^;]*?)[;s](?:.*SW-Version/.*)*(LF[^;]+);?'\n    device_replacement: '$1'\n    brand_replacement: 'Thomson'\n    model_replacement: '$4'\n  - regex: '(HbbTV)(?:/1.1.1)?(?: ?(;;;;;))?; *CE-HTML(?:/1.d)?; *([^ ]+) ([^;]+);'\n    device_replacement: '$1'\n    brand_replacement: '$2'\n    model_replacement: '$3'\n  - regex: '(HbbTV)/1.1.1 (;;;;;) Maple_2011'\n    device_replacement: '$1'\n    brand_replacement: 'Samsung'\n  - regex: '(HbbTV)/[0-9]+.[0-9]+.[0-9]+ ([^;]*; *(?:CUS:([^;]*)|([^;]+)) *; *([^;]*) *;.*;'\n    device_replacement: '$1'\n    brand_replacement: '$2$3'\n    model_replacement: '$4'\n  - regex: '(HbbTV)/[0-9]+.[0-9]+.[0-9]+'\n    device_replacement: '$1'\n\n  ##########\n  # LGE NetCast TV\n  ##########\n  - regex: 'LGE; (?:Media/)?([^;]*);[^;]*;[^;]*;?); \"?LG NetCast(.TV|.Media|)-d+'\n    device_replacement: 'NetCast$2'\n    brand_replacement: 'LG'\n    model_replacement: '$1'\n\n  ##########\n  # InettvBrowser\n  ##########\n  - regex: 'InettvBrowser/[0-9]+.[0-9A-Z]+ ([^;]*;(Sony)([^;]*);[^;]*;[^)]*)'\n    device_replacement: 'Inettv'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  - regex: 'InettvBrowser/[0-9]+.[0-9A-Z]+ ([^;]*;([^;]*);[^;]*;[^)]*)'\n    device_replacement: 'Inettv'\n    brand_replacement: 'Generic_Inettv'\n    model_replacement: '$1'\n  - regex: '(?:InettvBrowser|TSBNetTV|NETTV|HBBTV)'\n    device_replacement: 'Inettv'\n    brand_replacement: 'Generic_Inettv'\n\n  ##########\n  # lg\n  ##########\n  # LG Symbian Phones\n  - regex: 'Series60/d.d (LG)[-]?([A-Za-z0-9 -]+)'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  # other LG phones\n  - regex: '\b(?:LGE[ -]LG-(?:AX)?|LGE |LGE?-LG|LGE?[ -]|LG[ /-]|lg[-])([A-Za-z0-9]+)\b'\n    device_replacement: 'LG $1'\n    brand_replacement: 'LG'\n    model_replacement: '$1'\n  - regex: '(?:^LG[-]?|^LGE[-/]?)([A-Za-z]+[0-9]+[A-Za-z]*)'\n    device_replacement: 'LG $1'\n    brand_replacement: 'LG'\n    model_replacement: '$1'\n  - regex: '^LG([0-9]+[A-Za-z]*)'\n    device_replacement: 'LG $1'\n    brand_replacement: 'LG'\n    model_replacement: '$1'\n\n  ##########\n  # microsoft\n  ##########\n  - regex: '(KIN.[^ ]+) (d+).(d+)'\n    device_replacement: 'Microsoft $1'\n    brand_replacement: 'Microsoft'\n    model_replacement: '$1'\n  - regex: '(?:MSIE|XBMC).*\b(Xbox)\b'\n    device_replacement: '$1'\n    brand_replacement: 'Microsoft'\n    model_replacement: '$1'\n  - regex: '; ARM; Trident/6.0; Touch[);]'\n    device_replacement: 'Microsoft Surface RT'\n    brand_replacement: 'Microsoft'\n    model_replacement: 'Surface RT'\n\n  ##########\n  # motorola\n  ##########\n  - regex: 'Motorola-([A-Za-z0-9]+)'\n    device_replacement: 'Motorola $1'\n    brand_replacement: 'Motorola'\n    model_replacement: '$1'\n  - regex: 'MOTO-([A-Za-z0-9]+)'\n    device_replacement: 'Motorola $1'\n    brand_replacement: 'Motorola'\n    model_replacement: '$1'\n  - regex: 'MOT-([A-z0-9][A-z0-9-]*)'\n    device_replacement: 'Motorola $1'\n    brand_replacement: 'Motorola'\n    model_replacement: '$1'\n\n  ##########\n  # nintendo\n  ##########\n  - regex: 'Nintendo WiiU'\n    device_replacement: 'Nintendo Wii U'\n    brand_replacement: 'Nintendo'\n    model_replacement: 'Wii U'\n  - regex: 'Nintendo (DS|3DS|DSi|Wii);'\n    device_replacement: 'Nintendo $1'\n    brand_replacement: 'Nintendo'\n    model_replacement: '$1'\n\n  ##########\n  # pantech\n  ##########\n  - regex: '(?:Pantech|PANTECH)[ _-]?([A-Za-z0-9-]+)'\n    device_replacement: 'Pantech $1'\n    brand_replacement: 'Pantech'\n    model_replacement: '$1'\n\n  ##########\n  # philips\n  ##########\n  - regex: 'Philips([A-Za-z0-9]+)'\n    device_replacement: 'Philips $1'\n    brand_replacement: 'Philips'\n    model_replacement: '$1'\n  - regex: 'Philips ([A-Za-z0-9]+)'\n    device_replacement: 'Philips $1'\n    brand_replacement: 'Philips'\n    model_replacement: '$1'\n\n  ##########\n  # Samsung\n  ##########\n  # Samsung Smart-TV\n  - regex: '(SMART-TV); .* Tizen '\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n  # Samsung Symbian Devices\n  - regex: 'SymbianOS/9.d.* Samsung[/-]([A-Za-z0-9 -]+)'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n  - regex: '(Samsung)(SGH)(i[0-9]+)'\n    device_replacement: '$1 $2$3'\n    brand_replacement: '$1'\n    model_replacement: '$2-$3'\n  - regex: 'SAMSUNG-ANDROID-MMS/([^;/]+)'\n    device_replacement: '$1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n  # Other Samsung\n  #- regex: 'SAMSUNG(?:; |-)([A-Za-z0-9-]+)'\n  - regex: 'SAMSUNG(?:; |[ -/])([A-Za-z0-9-]+)'\n    regex_flag: 'i'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n\n  ##########\n  # Sega\n  ##########\n  - regex: '(Dreamcast)'\n    device_replacement: 'Sega $1'\n    brand_replacement: 'Sega'\n    model_replacement: '$1'\n\n  ##########\n  # Siemens mobile\n  ##########\n  - regex: '^SIE-([A-Za-z0-9]+)'\n    device_replacement: 'Siemens $1'\n    brand_replacement: 'Siemens'\n    model_replacement: '$1'\n\n  ##########\n  # Softbank\n  ##########\n  - regex: 'Softbank/[12].0/([A-Za-z0-9]+)'\n    device_replacement: 'Softbank $1'\n    brand_replacement: 'Softbank'\n    model_replacement: '$1'\n\n  ##########\n  # SonyEricsson\n  ##########\n  - regex: 'SonyEricsson ?([A-Za-z0-9-]+)'\n    device_replacement: 'Ericsson $1'\n    brand_replacement: 'SonyEricsson'\n    model_replacement: '$1'\n\n  ##########\n  # Sony\n  ##########\n  - regex: 'Android [^;]+; ([^ ]+) (Sony)/'\n    device_replacement: '$2 $1'\n    brand_replacement: '$2'\n    model_replacement: '$1'\n  - regex: '(Sony)(?:BDP/|/)?([^ /;)]+)[ /;)]'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  #########\n  # Puffin Browser Device detect\n  # A=Android, I=iOS, P=Phone, T=Tablet\n  # AT=Android+Tablet\n  #########\n  - regex: 'Puffin/[d.]+IT'\n    device_replacement: 'iPad'\n    brand_replacement: 'Apple'\n    model_replacement: 'iPad'\n  - regex: 'Puffin/[d.]+IP'\n    device_replacement: 'iPhone'\n    brand_replacement: 'Apple'\n    model_replacement: 'iPhone'\n  - regex: 'Puffin/[d.]+AT'\n    device_replacement: 'Generic Tablet'\n    brand_replacement: 'Generic'\n    model_replacement: 'Tablet'\n  - regex: 'Puffin/[d.]+AP'\n    device_replacement: 'Generic Smartphone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Smartphone'\n\n  #########\n  # Android General Device Matching (far from perfect)\n  #########\n  - regex: 'Android[- ][d]+.[d]+; [A-Za-z]{2}-[A-Za-z]{0,2}; WOWMobile (.+) Build[/ ]'\n    brand_replacement: 'Generic_Android'\n    model_replacement: '$1'\n  - regex: 'Android[- ][d]+.[d]+-update1; [A-Za-z]{2}-[A-Za-z]{0,2} *; *(.+?) Build[/ ]'\n    brand_replacement: 'Generic_Android'\n    model_replacement: '$1'\n  - regex: 'Android[- ][d]+(?:.[d]+){1,2}; *[A-Za-z]{2}[_-][A-Za-z]{0,2}-? *; *(.+?) Build[/ ]'\n    brand_replacement: 'Generic_Android'\n    model_replacement: '$1'\n  - regex: 'Android[- ][d]+(?:.[d]+){1,2}; *[A-Za-z]{0,2}- *; *(.+?) Build[/ ]'\n    brand_replacement: 'Generic_Android'\n    model_replacement: '$1'\n  # No build info at all - \"Build\" follows locale immediately\n  - regex: 'Android[- ][d]+(?:.[d]+){1,2}; *[a-z]{0,2}[_-]?[A-Za-z]{0,2};? Build[/ ]'\n    device_replacement: 'Generic Smartphone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Smartphone'\n  - regex: 'Android[- ][d]+(?:.[d]+){1,2}; *-?[A-Za-z]{2}; *(.+?) Build[/ ]'\n    brand_replacement: 'Generic_Android'\n    model_replacement: '$1'\n  - regex: 'Android[- ][d]+(?:.[d]+){1,2}(?:;.*)?; *(.+?) Build[/ ]'\n    brand_replacement: 'Generic_Android'\n    model_replacement: '$1'\n\n  ##########\n  # Google TV\n  ##########\n  - regex: '(GoogleTV)'\n    brand_replacement: 'Generic_Inettv'\n    model_replacement: '$1'\n\n  ##########\n  # WebTV\n  ##########\n  - regex: '(WebTV)/d+.d+'\n    brand_replacement: 'Generic_Inettv'\n    model_replacement: '$1'\n  # Roku Digital-Video-Players https://www.roku.com/\n  - regex: '^(Roku)/DVP-d+.d+'\n    brand_replacement: 'Generic_Inettv'\n    model_replacement: '$1'\n\n  ##########\n  # Generic Tablet\n  ##########\n  - regex: '(Android 3.d|Opera Tablet|Tablet; .+Firefox/|Android.*(?:Tab|Pad))'\n    regex_flag: 'i'\n    device_replacement: 'Generic Tablet'\n    brand_replacement: 'Generic'\n    model_replacement: 'Tablet'\n\n  ##########\n  # Generic Smart Phone\n  ##########\n  - regex: '(Symbian|\bS60(Version|Vd)|\bS60\b|((Series 60|Windows Mobile|Palm OS|Bada); Opera Mini|Windows CE|Opera Mobi|BREW|Brew|Mobile; .+Firefox/|iPhone OS|Android|MobileSafari|Windows *Phone|(webOS/|PalmOS)'\n    device_replacement: 'Generic Smartphone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Smartphone'\n  - regex: '(hiptop|avantgo|plucker|xiino|blazer|elaine)'\n    regex_flag: 'i'\n    device_replacement: 'Generic Smartphone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Smartphone'\n\n  ##########\n  # Spiders (this is hack...)\n  ##########\n  - regex: '(bot|zao|borg|DBot|oegp|silk|Xenu|zeal|^NING|CCBot|crawl|htdig|lycos|slurp|teoma|voila|yahoo|Sogou|CiBra|Nutch|^Java/|^JNLP/|Daumoa|Genieo|ichiro|larbin|pompos|Scrapy|snappy|speedy|spider|msnbot|msrbot|vortex|^vortex|crawler|favicon|indexer|Riddler|scooter|scraper|scrubby|WhatWeb|WinHTTP|bingbot|BingPreview|openbot|gigabot|furlbot|polybot|seekbot|^voyager|archiver|Icarus6j|mogimogi|Netvibes|blitzbot|altavista|charlotte|findlinks|Retreiver|TLSProber|WordPress|SeznamBot|ProoXiBot|wsr-agent|Squrl Java|EtaoSpider|PaperLiBot|SputnikBot|A6-Indexer|netresearch|searchsight|baiduspider|YisouSpider|ICC-Crawler|http%20client|Python-urllib|dataparksearch|converacrawler|Screaming Frog|AppEngine-Google|YahooCacheSystem|fast-webcrawler|Sogou Pic Spider|semanticdiscovery|Innovazion Crawler|facebookexternalhit|Google.*/+/web/snippet|Google-HTTP-Java-Client|BlogBridge|IlTrovatore-Setaccio|InternetArchive|GomezAgent|WebThumbnail|heritrix|NewsGator|PagePeeker|Reaper|ZooShot|holmes|NL-Crawler|Pingdom|WhatsApp|masscan)'\n    regex_flag: 'i'\n    device_replacement: 'Spider'\n    brand_replacement: 'Spider'\n    model_replacement: 'Desktop'\n\n  ##########\n  # Generic Feature Phone\n  # take care to do case insensitive matching\n  ##########\n  - regex: '^(1207|3gso|4thp|501i|502i|503i|504i|505i|506i|6310|6590|770s|802s|a wa|acer|acs-|airn|alav|asus|attw|au-m|aur |aus |abac|acoo|aiko|alco|alca|amoi|anex|anny|anyw|aptu|arch|argo|bmobile|bell|bird|bw-n|bw-u|beck|benq|bilb|blac|c55/|cdm-|chtm|capi|comp|cond|dall|dbte|dc-s|dica|ds-d|ds12|dait|devi|dmob|doco|dopo|dorado|el(?:38|39|48|49|50|55|58|68)|el[3456]d{2}dual|erk0|esl8|ex300|ez40|ez60|ez70|ezos|ezze|elai|emul|eric|ezwa|fake|fly-|fly_|g-mo|g1 u|g560|gf-5|grun|gene|go.w|good|grad|hcit|hd-m|hd-p|hd-t|hei-|hp i|hpip|hs-c|htc |htc-|htca|htcg)'\n    regex_flag: 'i'\n    device_replacement: 'Generic Feature Phone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Feature Phone'\n  - regex: '^(htcp|htcs|htct|htc_|haie|hita|huaw|hutc|i-20|i-go|i-ma|i-mobile|i230|iac|iac-|iac/|ig01|im1k|inno|iris|jata|kddi|kgt|kgt/|kpt |kwc-|klon|lexi|lg g|lg-a|lg-b|lg-c|lg-d|lg-f|lg-g|lg-k|lg-l|lg-m|lg-o|lg-p|lg-s|lg-t|lg-u|lg-w|lg/k|lg/l|lg/u|lg50|lg54|lge-|lge/|leno|m1-w|m3ga|m50/|maui|mc01|mc21|mcca|medi|meri|mio8|mioa|mo01|mo02|mode|modo|mot |mot-|mt50|mtp1|mtv |mate|maxo|merc|mits|mobi|motv|mozz|n100|n101|n102|n202|n203|n300|n302|n500|n502|n505|n700|n701|n710|nec-|nem-|newg|neon)'\n    regex_flag: 'i'\n    device_replacement: 'Generic Feature Phone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Feature Phone'\n  - regex: '^(netf|noki|nzph|o2 x|o2-x|opwv|owg1|opti|oran|ot-s|p800|pand|pg-1|pg-2|pg-3|pg-6|pg-8|pg-c|pg13|phil|pn-2|pt-g|palm|pana|pire|pock|pose|psio|qa-a|qc-2|qc-3|qc-5|qc-7|qc07|qc12|qc21|qc32|qc60|qci-|qwap|qtek|r380|r600|raks|rim9|rove|s55/|sage|sams|sc01|sch-|scp-|sdk/|se47|sec-|sec0|sec1|semc|sgh-|shar|sie-|sk-0|sl45|slid|smb3|smt5|sp01|sph-|spv |spv-|sy01|samm|sany|sava|scoo|send|siem|smar|smit|soft|sony|t-mo|t218|t250|t600|t610|t618|tcl-|tdg-|telm|tim-|ts70|tsm-|tsm3|tsm5|tx-9|tagt)'\n    regex_flag: 'i'\n    device_replacement: 'Generic Feature Phone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Feature Phone'\n  - regex: '^(talk|teli|topl|tosh|up.b|upg1|utst|v400|v750|veri|vk-v|vk40|vk50|vk52|vk53|vm40|vx98|virg|vertu|vite|voda|vulc|w3c |w3c-|wapj|wapp|wapu|wapm|wig |wapi|wapr|wapv|wapy|wapa|waps|wapt|winc|winw|wonu|x700|xda2|xdag|yas-|your|zte-|zeto|aste|audi|avan|blaz|brew|brvw|bumb|ccwa|cell|cldc|cmd-|dang|eml2|fetc|hipt|http|ibro|idea|ikom|ipaq|jbro|jemu|jigs|keji|kyoc|kyok|libw|m-cr|midp|mmef|moto|mwbp|mywa|newt|nok6|o2im|pant|pdxg|play|pluc|port|prox|rozo|sama|seri|smal|symb|treo|upsi|vx52|vx53|vx60|vx61|vx70|vx80|vx81|vx83|vx85|wap-|webc|whit|wmlb|xda-|xda_)'\n    regex_flag: 'i'\n    device_replacement: 'Generic Feature Phone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Feature Phone'\n  - regex: '^(Ice)$'\n    device_replacement: 'Generic Feature Phone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Feature Phone'\n  - regex: '(wap[- ]browser|maui|netfront|obigo|teleca|up.browser|midp|Opera Mini)'\n    regex_flag: 'i'\n    device_replacement: 'Generic Feature Phone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Feature Phone'\n"], ["\nuser_agent_parsers:\n  #### SPECIAL CASES TOP ####\n\n  # @note: iOS / OSX Applications\n  - regex: '(CFNetwork)(?:/(\\d+)\\.(\\d+)\\.?(\\d+)?)?'\n    family_replacement: 'CFNetwork'\n\n  # Pingdom\n  - regex: '(Pingdom.com_bot_version_)(\\d+)\\.(\\d+)'\n    family_replacement: 'PingdomBot'\n    # 'Mozilla/5.0 (Unknown; Linux x86_64) AppleWebKit/534.34 (KHTML, like Gecko) PingdomTMS/0.8.5 Safari/534.34'\n  - regex: '(PingdomTMS)/(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'PingdomBot'\n\n  # Facebook\n  - regex: '(facebookexternalhit)/(\\d+)\\.(\\d+)'\n    family_replacement: 'FacebookBot'\n\n  # Google Plus\n  - regex: 'Google.*/\\+/web/snippet'\n    family_replacement: 'GooglePlusBot'\n\n  # Gmail\n  - regex: 'via ggpht.com GoogleImageProxy'\n    family_replacement: 'GmailImageProxy'\n\n  # Twitter\n  - regex: '(Twitterbot)/(\\d+)\\.(\\d+)'\n    family_replacement: 'TwitterBot'\n\n  # Bots Pattern '/name-0.0'\n  - regex: '/((?:Ant-)?Nutch|[A-z]+[Bb]ot|[A-z]+[Ss]pider|Axtaris|fetchurl|Isara|ShopSalad|Tailsweep)[ \\-](\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?'\n  # Bots Pattern 'name/0.0'\n  - regex: '\\b(008|Altresium|Argus|BaiduMobaider|BoardReader|DNSGroup|DataparkSearch|EDI|Goodzer|Grub|INGRID|Infohelfer|LinkedInBot|LOOQ|Nutch|PathDefender|Peew|PostPost|Steeler|Twitterbot|VSE|WebCrunch|WebZIP|Y!J-BR[A-Z]|YahooSeeker|envolk|sproose|wminer)/(\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?'\n\n  # MSIECrawler\n  - regex: '(MSIE) (\\d+)\\.(\\d+)([a-z]\\d?)?;.* MSIECrawler'\n    family_replacement: 'MSIECrawler'\n\n  # Downloader ...\n  - regex: '(Google-HTTP-Java-Client|Apache-HttpClient|http%20client|Python-urllib|HttpMonitor|TLSProber|WinHTTP|JNLP|okhttp)(?:[ /](\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?)?'\n\n  # Bots\n  - regex: '(1470\\.net crawler|50\\.nu|8bo Crawler Bot|Aboundex|Accoona-[A-z]+-Agent|AdsBot-Google(?:-[a-z]+)?|altavista|AppEngine-Google|archive.*?\\.org_bot|archiver|Ask Jeeves|[Bb]ai[Dd]u[Ss]pider(?:-[A-Za-z]+)*|bingbot|BingPreview|blitzbot|BlogBridge|BoardReader(?: [A-Za-z]+)*|boitho.com-dc|BotSeer|\\b\\w*favicon\\w*\\b|\\bYeti(?:-[a-z]+)?|Catchpoint bot|[Cc]harlotte|Checklinks|clumboot|Comodo HTTP\\(S\\) Crawler|Comodo-Webinspector-Crawler|ConveraCrawler|CRAWL-E|CrawlConvera|Daumoa(?:-feedfetcher)?|Feed Seeker Bot|findlinks|Flamingo_SearchEngine|FollowSite Bot|furlbot|Genieo|gigabot|GomezAgent|gonzo1|(?:[a-zA-Z]+-)?Googlebot(?:-[a-zA-Z]+)?|Google SketchUp|grub-client|gsa-crawler|heritrix|HiddenMarket|holmes|HooWWWer|htdig|ia_archiver|ICC-Crawler|Icarus6j|ichiro(?:/mobile)?|IconSurf|IlTrovatore(?:-Setaccio)?|InfuzApp|Innovazion Crawler|InternetArchive|IP2[a-z]+Bot|jbot\\b|KaloogaBot|Kraken|Kurzor|larbin|LEIA|LesnikBot|Linguee Bot|LinkAider|LinkedInBot|Lite Bot|Llaut|lycos|Mail\\.RU_Bot|masscan|masidani_bot|Mediapartners-Google|Microsoft .*? Bot|mogimogi|mozDex|MJ12bot|msnbot(?:-media *)?|msrbot|netresearch|Netvibes|NewsGator[^/]*|^NING|Nutch[^/]*|Nymesis|ObjectsSearch|Orbiter|OOZBOT|PagePeeker|PagesInventory|PaxleFramework|Peeplo Screenshot Bot|PlantyNet_WebRobot|Pompos|Read%20Later|Reaper|RedCarpet|Retreiver|Riddler|Rival IQ|scooter|Scrapy|Scrubby|searchsight|seekbot|semanticdiscovery|Simpy|SimplePie|SEOstats|SimpleRSS|SiteCon|Slackbot-LinkExpanding|Slack-ImgProxy|Slurp|snappy|Speedy Spider|Squrl Java|TheUsefulbot|ThumbShotsBot|Thumbshots\\.ru|TwitterBot|WhatsApp|URL2PNG|Vagabondo|VoilaBot|^vortex|Votay bot|^voyager|WASALive.Bot|Web-sniffer|WebThumb|WeSEE:[A-z]+|WhatWeb|WIRE|WordPress|Wotbox|www\\.almaden\\.ibm\\.com|Xenu(?:.s)? Link Sleuth|Xerka [A-z]+Bot|yacy(?:bot)?|Yahoo[a-z]*Seeker|Yahoo! Slurp|Yandex\\w+|YodaoBot(?:-[A-z]+)?|YottaaMonitor|Yowedo|^Zao|^Zao-Crawler|ZeBot_www\\.ze\\.bz|ZooShot|ZyBorg)(?:[ /]v?(\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?)?'\n\n  # Bots General matcher 'name/0.0'\n  - regex: '(?:\\/[A-Za-z0-9\\.]+)? *([A-Za-z0-9 \\-_\\!\\[\\]:]*(?:[Aa]rchiver|[Ii]ndexer|[Ss]craper|[Bb]ot|[Ss]pider|[Cc]rawl[a-z]*))/(\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?'\n  # Bots General matcher 'name 0.0'\n  - regex: '(?:\\/[A-Za-z0-9\\.]+)? *([A-Za-z0-9 _\\!\\[\\]:]*(?:[Aa]rchiver|[Ii]ndexer|[Ss]craper|[Bb]ot|[Ss]pider|[Cc]rawl[a-z]*)) (\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?'\n  # Bots containing spider|scrape|bot(but not CUBOT)|Crawl\n  - regex: '((?:[A-z0-9]+|[A-z\\-]+ ?)?(?: the )?(?:[Ss][Pp][Ii][Dd][Ee][Rr]|[Ss]crape|[A-Za-z0-9-]*(?:[^C][^Uu])[Bb]ot|[Cc][Rr][Aa][Ww][Ll])[A-z0-9]*)(?:(?:[ /]| v)(\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?)?'\n\n  # HbbTV standard defines what features the browser should understand.\n  # but it's like targeting \"HTML5 browsers\", effective browser support depends on the model\n  # See os_parsers if you want to target a specific TV\n  - regex: '(HbbTV)/(\\d+)\\.(\\d+)\\.(\\d+) \\('\n\n  # must go before Firefox to catch Chimera/SeaMonkey/Camino\n  - regex: '(Chimera|SeaMonkey|Camino)/(\\d+)\\.(\\d+)\\.?([ab]?\\d+[a-z]*)?'\n\n  # Social Networks\n  # Facebook\n  - regex: '\\[FB.*;(FBAV)/(\\d+)(?:\\.(\\d+)(?:\\.(\\d)+)?)?'\n    family_replacement: 'Facebook'\n  # Pinterest\n  - regex: '\\[(Pinterest)/[^\\]]+\\]'\n  - regex: '(Pinterest)(?: for Android(?: Tablet)?)?/(\\d+)(?:\\.(\\d+)(?:\\.(\\d)+)?)?'\n\n  # Pale Moon\n  - regex: '(PaleMoon)/(\\d+)\\.(\\d+)\\.?(\\d+)?'\n    family_replacement: 'Pale Moon'\n\n  # Firefox\n  - regex: '(Fennec)/(\\d+)\\.(\\d+)\\.?([ab]?\\d+[a-z]*)'\n    family_replacement: 'Firefox Mobile'\n  - regex: '(Fennec)/(\\d+)\\.(\\d+)(pre)'\n    family_replacement: 'Firefox Mobile'\n  - regex: '(Fennec)/(\\d+)\\.(\\d+)'\n    family_replacement: 'Firefox Mobile'\n  - regex: '(?:Mobile|Tablet);.*(Firefox)/(\\d+)\\.(\\d+)'\n    family_replacement: 'Firefox Mobile'\n  - regex: '(Namoroka|Shiretoko|Minefield)/(\\d+)\\.(\\d+)\\.(\\d+(?:pre)?)'\n    family_replacement: 'Firefox ($1)'\n  - regex: '(Firefox)/(\\d+)\\.(\\d+)(a\\d+[a-z]*)'\n    family_replacement: 'Firefox Alpha'\n  - regex: '(Firefox)/(\\d+)\\.(\\d+)(b\\d+[a-z]*)'\n    family_replacement: 'Firefox Beta'\n  - regex: '(Firefox)-(?:\\d+\\.\\d+)?/(\\d+)\\.(\\d+)(a\\d+[a-z]*)'\n    family_replacement: 'Firefox Alpha'\n  - regex: '(Firefox)-(?:\\d+\\.\\d+)?/(\\d+)\\.(\\d+)(b\\d+[a-z]*)'\n    family_replacement: 'Firefox Beta'\n  - regex: '(Namoroka|Shiretoko|Minefield)/(\\d+)\\.(\\d+)([ab]\\d+[a-z]*)?'\n    family_replacement: 'Firefox ($1)'\n  - regex: '(Firefox).*Tablet browser (\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'MicroB'\n  - regex: '(MozillaDeveloperPreview)/(\\d+)\\.(\\d+)([ab]\\d+[a-z]*)?'\n  - regex: '(FxiOS)/(\\d+)\\.(\\d+)(\\.(\\d+))?(\\.(\\d+))?'\n    family_replacement: 'Firefox iOS'\n\n  # e.g.: Flock/2.0b2\n  - regex: '(Flock)/(\\d+)\\.(\\d+)(b\\d+?)'\n\n  # RockMelt\n  - regex: '(RockMelt)/(\\d+)\\.(\\d+)\\.(\\d+)'\n\n  # e.g.: Fennec/0.9pre\n  - regex: '(Navigator)/(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'Netscape'\n\n  - regex: '(Navigator)/(\\d+)\\.(\\d+)([ab]\\d+)'\n    family_replacement: 'Netscape'\n\n  - regex: '(Netscape6)/(\\d+)\\.(\\d+)\\.?([ab]?\\d+)?'\n    family_replacement: 'Netscape'\n\n  - regex: '(MyIBrow)/(\\d+)\\.(\\d+)'\n    family_replacement: 'My Internet Browser'\n\n  # UC Browser\n  # we need check it before opera. In other case case UC Browser detected look like Opera Mini\n  - regex: '(UC? ?Browser|UCWEB|U3)[ /]?(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'UC Browser'\n\n  # Opera will stop at 9.80 and hide the real version in the Version string.\n  # see: http://dev.opera.com/articles/view/opera-ua-string-changes/\n  - regex: '(Opera Tablet).*Version/(\\d+)\\.(\\d+)(?:\\.(\\d+))?'\n  - regex: '(Opera Mini)(?:/att)?/?(\\d+)?(?:\\.(\\d+))?(?:\\.(\\d+))?'\n  - regex: '(Opera)/.+Opera Mobi.+Version/(\\d+)\\.(\\d+)'\n    family_replacement: 'Opera Mobile'\n  - regex: '(Opera)/(\\d+)\\.(\\d+).+Opera Mobi'\n    family_replacement: 'Opera Mobile'\n  - regex: 'Opera Mobi.+(Opera)(?:/|\\s+)(\\d+)\\.(\\d+)'\n    family_replacement: 'Opera Mobile'\n  - regex: 'Opera Mobi'\n    family_replacement: 'Opera Mobile'\n  - regex: '(Opera)/9.80.*Version/(\\d+)\\.(\\d+)(?:\\.(\\d+))?'\n\n  # Opera 14 for Android uses a WebKit render engine.\n  - regex: '(?:Mobile Safari).*(OPR)/(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'Opera Mobile'\n\n  # Opera >=15 for Desktop is similar to Chrome but includes an \"OPR\" Version string.\n  - regex: '(?:Chrome).*(OPR)/(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'Opera'\n\n  # Opera Coast\n  - regex: '(Coast)/(\\d+).(\\d+).(\\d+)'\n    family_replacement: 'Opera Coast'\n\n  # Opera Mini for iOS (from version 8.0.0)\n  - regex: '(OPiOS)/(\\d+).(\\d+).(\\d+)'\n    family_replacement: 'Opera Mini'\n\n  # Opera Neon\n  - regex: 'Chrome/.+( MMS)/(\\d+).(\\d+).(\\d+)'\n    family_replacement: 'Opera Neon'\n\n  # Palm WebOS looks a lot like Safari.\n  - regex: '(hpw|web)OS/(\\d+)\\.(\\d+)(?:\\.(\\d+))?'\n    family_replacement: 'webOS Browser'\n\n  # LuaKit has no version info.\n  # http://luakit.org/projects/luakit/\n  - regex: '(luakit)'\n    family_replacement: 'LuaKit'\n\n  # Snowshoe\n  - regex: '(Snowshoe)/(\\d+)\\.(\\d+).(\\d+)'\n\n  # Lightning (for Thunderbird)\n  # http://www.mozilla.org/projects/calendar/lightning/\n  - regex: 'Gecko/\\d+ (Lightning)/(\\d+)\\.(\\d+)\\.?((?:[ab]?\\d+[a-z]*)|(?:\\d*))'\n\n  # Swiftfox\n  - regex: '(Firefox)/(\\d+)\\.(\\d+)\\.(\\d+(?:pre)?) \\(Swiftfox\\)'\n    family_replacement: 'Swiftfox'\n  - regex: '(Firefox)/(\\d+)\\.(\\d+)([ab]\\d+[a-z]*)? \\(Swiftfox\\)'\n    family_replacement: 'Swiftfox'\n\n  # Rekonq\n  - regex: '(rekonq)/(\\d+)\\.(\\d+)\\.?(\\d+)? Safari'\n    family_replacement: 'Rekonq'\n  - regex: 'rekonq'\n    family_replacement: 'Rekonq'\n\n  # Conkeror lowercase/uppercase\n  # http://conkeror.org/\n  - regex: '(conkeror|Conkeror)/(\\d+)\\.(\\d+)\\.?(\\d+)?'\n    family_replacement: 'Conkeror'\n\n  # catches lower case konqueror\n  - regex: '(konqueror)/(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'Konqueror'\n\n  - regex: '(WeTab)-Browser'\n\n  - regex: '(Comodo_Dragon)/(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'Comodo Dragon'\n\n  - regex: '(Symphony) (\\d+).(\\d+)'\n\n  - regex: 'PLAYSTATION 3.+WebKit'\n    family_replacement: 'NetFront NX'\n  - regex: 'PLAYSTATION 3'\n    family_replacement: 'NetFront'\n  - regex: '(PlayStation Portable)'\n    family_replacement: 'NetFront'\n  - regex: '(PlayStation Vita)'\n    family_replacement: 'NetFront NX'\n\n  - regex: 'AppleWebKit.+ (NX)/(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'NetFront NX'\n  - regex: '(Nintendo 3DS)'\n    family_replacement: 'NetFront NX'\n\n  # Amazon Silk, should go before Safari and Chrome Mobile\n  - regex: '(Silk)/(\\d+)\\.(\\d+)(?:\\.([0-9\\-]+))?'\n    family_replacement: 'Amazon Silk'\n\n  # @ref: http://www.puffinbrowser.com\n  - regex: '(Puffin)/(\\d+)\\.(\\d+)(?:\\.(\\d+))?'\n\n  # Edge Mobile\n  - regex: 'Windows Phone .*(Edge)/(\\d+)\\.(\\d+)'\n    family_replacement: 'Edge Mobile'\n\n  # Samsung Internet (based on Chrome, but lacking some features)\n  - regex: '(SamsungBrowser)/(\\d+)\\.(\\d+)'\n    family_replacement: 'Samsung Internet'\n\n  # Baidu Browsers (desktop spoofs chrome & IE, explorer is mobile)\n  - regex: '(baidubrowser)[/\\s](\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?'\n    family_replacement: 'Baidu Browser'\n  - regex: '(FlyFlow)/(\\d+)\\.(\\d+)'\n    family_replacement: 'Baidu Explorer'\n\n  # Chrome Mobile\n  - regex: '(CrMo)/(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'Chrome Mobile'\n  - regex: '(CriOS)/(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'Chrome Mobile iOS'\n  - regex: '(Chrome)/(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+) Mobile(?:[ /]|$)'\n    family_replacement: 'Chrome Mobile'\n  - regex: ' Mobile .*(Chrome)/(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'Chrome Mobile'\n\n  # Chrome Frame must come before MSIE.\n  - regex: '(chromeframe)/(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'Chrome Frame'\n\n  # Tizen Browser (second case included in browser/major.minor regex)\n  - regex: '(SLP Browser)/(\\d+)\\.(\\d+)'\n    family_replacement: 'Tizen Browser'\n\n  # Sogou Explorer 2.X\n  - regex: '(SE 2\\.X) MetaSr (\\d+)\\.(\\d+)'\n    family_replacement: 'Sogou Explorer'\n\n  # QQ Browsers\n  - regex: '(MQQBrowser/Mini)(?:(\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?)?'\n    family_replacement: 'QQ Browser Mini'\n  - regex: '(MQQBrowser)(?:/(\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?)?'\n    family_replacement: 'QQ Browser Mobile'\n  - regex: '(QQBrowser)(?:/(\\d+)(?:\\.(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?)?'\n    family_replacement: 'QQ Browser'\n\n  # Rackspace Monitoring\n  - regex: '(Rackspace Monitoring)/(\\d+)\\.(\\d+)'\n    family_replacement: 'RackspaceBot'\n\n  # PyAMF\n  - regex: '(PyAMF)/(\\d+)\\.(\\d+)\\.(\\d+)'\n\n  # Yandex Browser\n  - regex: '(YaBrowser)/(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'Yandex Browser'\n\n  # Mail.ru Amigo/Internet Browser (Chromium-based)\n  - regex: '(Chrome)/(\\d+)\\.(\\d+)\\.(\\d+).* MRCHROME'\n    family_replacement: 'Mail.ru Chromium Browser'\n\n  # AOL Browser (IE-based)\n  - regex: '(AOL) (\\d+)\\.(\\d+); AOLBuild (\\d+)'\n\n  # MxBrowser is Maxthon\n  - regex: '(MxBrowser)/(\\d+)\\.(\\d+)(?:\\.(\\d+))?'\n    family_replacement: 'Maxthon'\n\n  #### END SPECIAL CASES TOP ####\n\n  #### MAIN CASES - this catches > 50% of all browsers ####\n\n  # Browser/major_version.minor_version.beta_version\n  - regex: '\\b(MobileIron|Crosswalk|FireWeb|Jasmine|ANTGalio|Midori|Fresco|Lobo|PaleMoon|Maxthon|Lynx|OmniWeb|Dillo|Camino|Demeter|Fluid|Fennec|Epiphany|Shiira|Sunrise|Spotify|Flock|Netscape|Lunascape|WebPilot|NetFront|Netfront|Konqueror|SeaMonkey|Kazehakase|Vienna|Iceape|Iceweasel|IceWeasel|Iron|K-Meleon|Sleipnir|Galeon|GranParadiso|Opera Mini|iCab|NetNewsWire|ThunderBrowse|Iris|UP\\.Browser|Bunjalloo|Google Earth|Raven for Mac|Openwave|MacOutlook|Electron)/(\\d+)\\.(\\d+)\\.(\\d+)'\n\n  # Outlook 2007\n  - regex: 'Microsoft Office Outlook 12\\.\\d+\\.\\d+|MSOffice 12'\n    family_replacement: 'Outlook'\n    v1_replacement: '2007'\n\n  # Outlook 2010\n  - regex: 'Microsoft Outlook 14\\.\\d+\\.\\d+|MSOffice 14'\n    family_replacement: 'Outlook'\n    v1_replacement: '2010'\n\n  # Outlook 2013\n  - regex: 'Microsoft Outlook 15\\.\\d+\\.\\d+'\n    family_replacement: 'Outlook'\n    v1_replacement: '2013'\n\n  # Outlook 2016\n  - regex: 'Microsoft Outlook (?:Mail )?16\\.\\d+\\.\\d+'\n    family_replacement: 'Outlook'\n    v1_replacement: '2016'\n\n  # Windows Live Mail\n  - regex: 'Outlook-Express\\/7\\.0.*'\n    family_replacement: 'Windows Live Mail'\n\n  # Apple Air Mail\n  - regex: '(Airmail) (\\d+)\\.(\\d+)(?:\\.(\\d+))?'\n\n  # Thunderbird\n  - regex: '(Thunderbird)/(\\d+)\\.(\\d+)(?:\\.(\\d+(?:pre)?))?'\n    family_replacement: 'Thunderbird'\n\n  # Postbox\n  - regex: '(Postbox)/(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'Postbox'\n\n  # Barca\n  - regex: '(Barca(?:Pro)?)/(\\d+)\\.(\\d+)(?:\\.(\\d+))?'\n    family_replacement: 'Barca'\n\n  # Lotus Notes\n  - regex: '(Lotus-Notes)/(\\d+)\\.(\\d+)(?:\\.(\\d+))?'\n    family_replacement: 'Lotus Notes'\n\n  # Vivaldi uses \"Vivaldi\"\n  - regex: '(Vivaldi)/(\\d+)\\.(\\d+)\\.(\\d+)'\n\n  # Edge/major_version.minor_version\n  - regex: '(Edge)/(\\d+)\\.(\\d+)'\n\n  # Brave Browser https://brave.com/\n  - regex: '(brave)/(\\d+)\\.(\\d+)\\.(\\d+) Chrome'\n    family_replacement: 'Brave'\n\n  # Iron Browser ~since version 50\n  - regex: '(Chrome)/(\\d+)\\.(\\d+)\\.(\\d+)[\\d.]* Iron[^/]'\n    family_replacement: 'Iron'\n\n  # Dolphin Browser\n  # @ref: http://www.dolphin.com\n  - regex: '\\b(Dolphin)(?: |HDCN/|/INT\\-)(\\d+)\\.(\\d+)\\.?(\\d+)?'\n\n  # Headless Chrome\n  # https://chromium.googlesource.com/chromium/src/+/lkgr/headless/README.md\n  # Currently only available on Linux\n  - regex: 'HeadlessChrome'\n    family_replacement: 'HeadlessChrome'\n\n  # Browser/major_version.minor_version\n  - regex: '(bingbot|Bolt|AdobeAIR|Jasmine|IceCat|Skyfire|Midori|Maxthon|Lynx|Arora|IBrowse|Dillo|Camino|Shiira|Fennec|Phoenix|Flock|Netscape|Lunascape|Epiphany|WebPilot|Opera Mini|Opera|NetFront|Netfront|Konqueror|Googlebot|SeaMonkey|Kazehakase|Vienna|Iceape|Iceweasel|IceWeasel|Iron|K-Meleon|Sleipnir|Galeon|GranParadiso|iCab|iTunes|MacAppStore|NetNewsWire|Space Bison|Stainless|Orca|Dolfin|BOLT|Minimo|Tizen Browser|Polaris|Abrowser|Planetweb|ICE Browser|mDolphin|qutebrowser|Otter|QupZilla|MailBar|kmail2|YahooMobileMail|ExchangeWebServices|ExchangeServicesClient|Dragon|Outlook-iOS-Android)/(\\d+)\\.(\\d+)(?:\\.(\\d+))?'\n\n  # Chrome/Chromium/major_version.minor_version\n  - regex: '(Chromium|Chrome)/(\\d+)\\.(\\d+)(?:\\.(\\d+))?'\n\n  ##########\n  # IE Mobile needs to happen before Android to catch cases such as:\n  # Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 920)...\n  # Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 920; ANZ821)...\n  # Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 920; Orange)...\n  # Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 920; Vodafone)...\n  ##########\n\n  # IE Mobile\n  - regex: '(IEMobile)[ /](\\d+)\\.(\\d+)'\n    family_replacement: 'IE Mobile'\n\n  # Baca Berita App News Reader\n  - regex: '(BacaBerita App)\\/(\\d+)\\.(\\d+)\\.(\\d+)'\n\n  # Browser major_version.minor_version.beta_version (space instead of slash)\n  - regex: '(iRider|Crazy Browser|SkipStone|iCab|Lunascape|Sleipnir|Maemo Browser) (\\d+)\\.(\\d+)\\.(\\d+)'\n  # Browser major_version.minor_version (space instead of slash)\n  - regex: '(iCab|Lunascape|Opera|Android|Jasmine|Polaris|Microsoft SkyDriveSync|The Bat!) (\\d+)\\.(\\d+)\\.?(\\d+)?'\n\n  # Kindle WebKit\n  - regex: '(Kindle)/(\\d+)\\.(\\d+)'\n\n  # weird android UAs\n  - regex: '(Android) Donut'\n    v1_replacement: '1'\n    v2_replacement: '2'\n\n  - regex: '(Android) Eclair'\n    v1_replacement: '2'\n    v2_replacement: '1'\n\n  - regex: '(Android) Froyo'\n    v1_replacement: '2'\n    v2_replacement: '2'\n\n  - regex: '(Android) Gingerbread'\n    v1_replacement: '2'\n    v2_replacement: '3'\n\n  - regex: '(Android) Honeycomb'\n    v1_replacement: '3'\n\n  # desktop mode\n  # http://www.anandtech.com/show/3982/windows-phone-7-review\n  - regex: '(MSIE) (\\d+)\\.(\\d+).*XBLWP7'\n    family_replacement: 'IE Large Screen'\n\n  # Slack desktop client (needs to be before Apple Mail as it gets wrongly detected on Mac OS otherwise)\n  - regex: '(Slack_SSB)/(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'Slack Desktop Client'\n\n  #### END MAIN CASES ####\n\n  #### SPECIAL CASES ####\n  - regex: '(Obigo)InternetBrowser'\n  - regex: '(Obigo)\\-Browser'\n  - regex: '(Obigo|OBIGO)[^\\d]*(\\d+)(?:.(\\d+))?'\n    family_replacement: 'Obigo'\n\n  - regex: '(MAXTHON|Maxthon) (\\d+)\\.(\\d+)'\n    family_replacement: 'Maxthon'\n  - regex: '(Maxthon|MyIE2|Uzbl|Shiira)'\n    v1_replacement: '0'\n\n  - regex: '(BrowseX) \\((\\d+)\\.(\\d+)\\.(\\d+)'\n\n  - regex: '(NCSA_Mosaic)/(\\d+)\\.(\\d+)'\n    family_replacement: 'NCSA Mosaic'\n\n  # Polaris/d.d is above\n  - regex: '(POLARIS)/(\\d+)\\.(\\d+)'\n    family_replacement: 'Polaris'\n  - regex: '(Embider)/(\\d+)\\.(\\d+)'\n    family_replacement: 'Polaris'\n\n  - regex: '(BonEcho)/(\\d+)\\.(\\d+)\\.?([ab]?\\d+)?'\n    family_replacement: 'Bon Echo'\n\n  # @note: iOS / OSX Applications\n  - regex: '(iPod|iPhone|iPad).+Version/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.*[ +]Safari'\n    family_replacement: 'Mobile Safari'\n  - regex: '(iPod|iPhone|iPad).+Version/(\\d+)\\.(\\d+)(?:\\.(\\d+))?'\n    family_replacement: 'Mobile Safari UI/WKWebView'\n  - regex: '(iPod|iPod touch|iPhone|iPad);.*CPU.*OS[ +](\\d+)_(\\d+)(?:_(\\d+))?.*Mobile.*[ +]Safari'\n    family_replacement: 'Mobile Safari'\n  - regex: '(iPod|iPod touch|iPhone|iPad);.*CPU.*OS[ +](\\d+)_(\\d+)(?:_(\\d+))?.*Mobile'\n    family_replacement: 'Mobile Safari UI/WKWebView'\n  - regex: '(iPod|iPhone|iPad).* Safari'\n    family_replacement: 'Mobile Safari'\n  - regex: '(iPod|iPhone|iPad)'\n    family_replacement: 'Mobile Safari UI/WKWebView'\n\n  - regex: '(AvantGo) (\\d+).(\\d+)'\n\n  - regex: '(OneBrowser)/(\\d+).(\\d+)'\n    family_replacement: 'ONE Browser'\n\n  - regex: '(Avant)'\n    v1_replacement: '1'\n\n  # This is the Tesla Model S (see similar entry in device parsers)\n  - regex: '(QtCarBrowser)'\n    v1_replacement: '1'\n\n  - regex: '^(iBrowser/Mini)(\\d+).(\\d+)'\n    family_replacement: 'iBrowser Mini'\n  - regex: '^(iBrowser|iRAPP)/(\\d+).(\\d+)'\n\n  # nokia browsers\n  # based on: http://www.developer.nokia.com/Community/Wiki/User-Agent_headers_for_Nokia_devices\n  - regex: '^(Nokia)'\n    family_replacement: 'Nokia Services (WAP) Browser'\n  - regex: '(NokiaBrowser)/(\\d+)\\.(\\d+).(\\d+)\\.(\\d+)'\n    family_replacement: 'Nokia Browser'\n  - regex: '(NokiaBrowser)/(\\d+)\\.(\\d+).(\\d+)'\n    family_replacement: 'Nokia Browser'\n  - regex: '(NokiaBrowser)/(\\d+)\\.(\\d+)'\n    family_replacement: 'Nokia Browser'\n  - regex: '(BrowserNG)/(\\d+)\\.(\\d+).(\\d+)'\n    family_replacement: 'Nokia Browser'\n  - regex: '(Series60)/5\\.0'\n    family_replacement: 'Nokia Browser'\n    v1_replacement: '7'\n    v2_replacement: '0'\n  - regex: '(Series60)/(\\d+)\\.(\\d+)'\n    family_replacement: 'Nokia OSS Browser'\n  - regex: '(S40OviBrowser)/(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'Ovi Browser'\n  - regex: '(Nokia)[EN]?(\\d+)'\n\n  # BlackBerry devices\n  - regex: '(PlayBook).+RIM Tablet OS (\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'BlackBerry WebKit'\n  - regex: '(Black[bB]erry|BB10).+Version/(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'BlackBerry WebKit'\n  - regex: '(Black[bB]erry)\\s?(\\d+)'\n    family_replacement: 'BlackBerry'\n\n  - regex: '(OmniWeb)/v(\\d+)\\.(\\d+)'\n\n  - regex: '(Blazer)/(\\d+)\\.(\\d+)'\n    family_replacement: 'Palm Blazer'\n\n  - regex: '(Pre)/(\\d+)\\.(\\d+)'\n    family_replacement: 'Palm Pre'\n\n  # fork of Links\n  - regex: '(ELinks)/(\\d+)\\.(\\d+)'\n  - regex: '(ELinks) \\((\\d+)\\.(\\d+)'\n  - regex: '(Links) \\((\\d+)\\.(\\d+)'\n\n  - regex: '(QtWeb) Internet Browser/(\\d+)\\.(\\d+)'\n\n  #- regex: '\\(iPad;.+(Version)/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.*Safari/'\n  #  family_replacement: 'iPad'\n\n  # Phantomjs, should go before Safari\n  - regex: '(PhantomJS)/(\\d+)\\.(\\d+)\\.(\\d+)'\n\n  # WebKit Nightly\n  - regex: '(AppleWebKit)/(\\d+)\\.?(\\d+)?\\+ .* Safari'\n    family_replacement: 'WebKit Nightly'\n\n  # Safari\n  - regex: '(Version)/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.*Safari/'\n    family_replacement: 'Safari'\n  # Safari didn't provide \"Version/d.d.d\" prior to 3.0\n  - regex: '(Safari)/\\d+'\n\n  - regex: '(OLPC)/Update(\\d+)\\.(\\d+)'\n\n  - regex: '(OLPC)/Update()\\.(\\d+)'\n    v1_replacement: '0'\n\n  - regex: '(SEMC\\-Browser)/(\\d+)\\.(\\d+)'\n\n  - regex: '(Teleca)'\n    family_replacement: 'Teleca Browser'\n\n  - regex: '(Phantom)/V(\\d+)\\.(\\d+)'\n    family_replacement: 'Phantom Browser'\n\n  - regex: 'Trident(.*)rv.(\\d+)\\.(\\d+)'\n    family_replacement: 'IE'\n\n  # Espial\n  - regex: '(Espial)/(\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))?'\n\n # Apple Mail\n\n  # apple mail - not directly detectable, have it after Safari stuff\n  - regex: '(AppleWebKit)/(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'Apple Mail'\n\n  # AFTER THE EDGE CASES ABOVE!\n  # AFTER IE11\n  # BEFORE all other IE\n  - regex: '(Firefox)/(\\d+)\\.(\\d+)\\.(\\d+)'\n  - regex: '(Firefox)/(\\d+)\\.(\\d+)(pre|[ab]\\d+[a-z]*)?'\n\n  - regex: '([MS]?IE) (\\d+)\\.(\\d+)'\n    family_replacement: 'IE'\n\n  - regex: '(python-requests)/(\\d+)\\.(\\d+)'\n    family_replacement: 'Python Requests'\n\n  # headless user-agents\n  - regex: '\\b(Windows-Update-Agent|Microsoft-CryptoAPI|SophosUpdateManager|SophosAgent|Debian APT-HTTP|Ubuntu APT-HTTP|libcurl-agent|libwww-perl|urlgrabber|curl|Wget|OpenBSD ftp|jupdate)(?:[ /](\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?)?'\n\n  - regex: '(Java)[/ ]{0,1}\\d+\\.(\\d+)\\.(\\d+)[_-]*([a-zA-Z0-9]+)*'\n\n  # Roku Digital-Video-Players https://www.roku.com/\n  - regex: '^(Roku)/DVP-(\\d+)\\.(\\d+)'\n\n  # Kurio App News Reader https://kurio.co.id/\n  - regex: '(Kurio)\\/(\\d+)\\.(\\d+)\\.(\\d+)'\n    family_replacement: 'Kurio App'\n\n\nos_parsers:\n  ##########\n  # HbbTV vendors\n  ##########\n\n  # starts with the easy one : Panasonic seems consistent across years, hope it will continue\n  #HbbTV/1.1.1 (;Panasonic;VIERA 2011;f.532;0071-0802 2000-0000;)\n  #HbbTV/1.1.1 (;Panasonic;VIERA 2012;1.261;0071-3103 2000-0000;)\n  #HbbTV/1.2.1 (;Panasonic;VIERA 2013;3.672;4101-0003 0002-0000;)\n  #- regex: 'HbbTV/\\d+\\.\\d+\\.\\d+ \\(;(Panasonic);VIERA ([0-9]{4});'\n\n  # Sony is consistent too but do not place year like the other\n  # Opera/9.80 (Linux armv7l; HbbTV/1.1.1 (; Sony; KDL32W650A; PKG3.211EUA; 2013;); ) Presto/2.12.362 Version/12.11\n  # Opera/9.80 (Linux mips; U;  HbbTV/1.1.1 (; Sony; KDL40HX751; PKG1.902EUA; 2012;);; en) Presto/2.10.250 Version/11.60\n  # Opera/9.80 (Linux mips; U;  HbbTV/1.1.1 (; Sony; KDL22EX320; PKG4.017EUA; 2011;);; en) Presto/2.7.61 Version/11.00\n  #- regex: 'HbbTV/\\d+\\.\\d+\\.\\d+ \\(; (Sony);.*;.*; ([0-9]{4});\\)'\n\n\n  # LG is consistent too, but we need to add manually the year model\n  #Mozilla/5.0 (Unknown; Linux armv7l) AppleWebKit/537.1+ (KHTML, like Gecko) Safari/537.1+ HbbTV/1.1.1 ( ;LGE ;NetCast 4.0 ;03.20.30 ;1.0M ;)\n  #Mozilla/5.0 (DirectFB; Linux armv7l) AppleWebKit/534.26+ (KHTML, like Gecko) Version/5.0 Safari/534.26+ HbbTV/1.1.1 ( ;LGE ;NetCast 3.0 ;1.0 ;1.0M ;)\n  - regex: 'HbbTV/\\d+\\.\\d+\\.\\d+ \\( ;(LG)E ;NetCast 4.0'\n    os_v1_replacement: '2013'\n  - regex: 'HbbTV/\\d+\\.\\d+\\.\\d+ \\( ;(LG)E ;NetCast 3.0'\n    os_v1_replacement: '2012'\n\n  # Samsung is on its way of normalizing their user-agent\n  # HbbTV/1.1.1 (;Samsung;SmartTV2013;T-FXPDEUC-1102.2;;) WebKit\n  # HbbTV/1.1.1 (;Samsung;SmartTV2013;T-MST12DEUC-1102.1;;) WebKit\n  # HbbTV/1.1.1 (;Samsung;SmartTV2012;;;) WebKit\n  # HbbTV/1.1.1 (;;;;;) Maple_2011\n  - regex: 'HbbTV/1.1.1 \\(;;;;;\\) Maple_2011'\n    os_replacement: 'Samsung'\n    os_v1_replacement: '2011'\n  # manage the two models of 2013\n  - regex: 'HbbTV/\\d+\\.\\d+\\.\\d+ \\(;(Samsung);SmartTV([0-9]{4});.*FXPDEUC'\n    os_v2_replacement: 'UE40F7000'\n  - regex: 'HbbTV/\\d+\\.\\d+\\.\\d+ \\(;(Samsung);SmartTV([0-9]{4});.*MST12DEUC'\n    os_v2_replacement: 'UE32F4500'\n  # generic Samsung (works starting in 2012)\n  #- regex: 'HbbTV/\\d+\\.\\d+\\.\\d+ \\(;(Samsung);SmartTV([0-9]{4});'\n\n  # Philips : not found any other way than a manual mapping\n  # Opera/9.80 (Linux mips; U; HbbTV/1.1.1 (; Philips; ; ; ; ) CE-HTML/1.0 NETTV/4.1.3 PHILIPSTV/1.1.1; en) Presto/2.10.250 Version/11.60\n  # Opera/9.80 (Linux mips ; U; HbbTV/1.1.1 (; Philips; ; ; ; ) CE-HTML/1.0 NETTV/3.2.1; en) Presto/2.6.33 Version/10.70\n  - regex: 'HbbTV/1.1.1 \\(; (Philips);.*NETTV/4'\n    os_v1_replacement: '2013'\n  - regex: 'HbbTV/1.1.1 \\(; (Philips);.*NETTV/3'\n    os_v1_replacement: '2012'\n  - regex: 'HbbTV/1.1.1 \\(; (Philips);.*NETTV/2'\n    os_v1_replacement: '2011'\n\n  # the HbbTV emulator developers use HbbTV/1.1.1 (;;;;;) firetv-firefox-plugin 1.1.20\n  - regex: 'HbbTV/\\d+\\.\\d+\\.\\d+.*(firetv)-firefox-plugin (\\d+).(\\d+).(\\d+)'\n    os_replacement: 'FireHbbTV'\n\n  # generic HbbTV, hoping to catch manufacturer name (always after 2nd comma) and the first string that looks like a 2011-2019 year\n  - regex: 'HbbTV/\\d+\\.\\d+\\.\\d+ \\(.*; ?([a-zA-Z]+) ?;.*(201[1-9]).*\\)'\n\n  ##########\n  # @note: Windows Phone needs to come before Windows NT 6.1 *and* before Android to catch cases such as:\n  # Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 920)...\n  # Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 920; ANZ821)...\n  # Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 920; Orange)...\n  # Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 920; Vodafone)...\n  ##########\n\n  - regex: '(Windows Phone) (?:OS[ /])?(\\d+)\\.(\\d+)'\n\n  # Again a MS-special one: iPhone.*Outlook-iOS-Android/x.x is erroneously detected as Android\n  - regex: '(CPU[ +]OS|iPhone[ +]OS|CPU[ +]iPhone)[ +]+(\\d+)[_\\.](\\d+)(?:[_\\.](\\d+))?.*Outlook-iOS-Android'\n    os_replacement: 'iOS'\n\n  ##########\n  # Android\n  # can actually detect rooted android os. do we care?\n  ##########\n  - regex: '(Android)[ \\-/](\\d+)\\.(\\d+)(?:[.\\-]([a-z0-9]+))?'\n\n  - regex: '(Android) Donut'\n    os_v1_replacement: '1'\n    os_v2_replacement: '2'\n\n  - regex: '(Android) Eclair'\n    os_v1_replacement: '2'\n    os_v2_replacement: '1'\n\n  - regex: '(Android) Froyo'\n    os_v1_replacement: '2'\n    os_v2_replacement: '2'\n\n  - regex: '(Android) Gingerbread'\n    os_v1_replacement: '2'\n    os_v2_replacement: '3'\n\n  - regex: '(Android) Honeycomb'\n    os_v1_replacement: '3'\n\n  # UCWEB\n  - regex: '^UCWEB.*; (Adr) (\\d+)\\.(\\d+)(?:[.\\-]([a-z0-9]+))?;'\n    os_replacement: 'Android'\n  - regex: '^UCWEB.*; (iPad|iPh|iPd) OS (\\d+)_(\\d+)(?:_(\\d+))?;'\n    os_replacement: 'iOS'\n  - regex: '^UCWEB.*; (wds) (\\d+)\\.(\\d+)(?:\\.(\\d+))?;'\n    os_replacement: 'Windows Phone'\n  # JUC\n  - regex: '^(JUC).*; ?U; ?(?:Android)?(\\d+)\\.(\\d+)(?:[\\.\\-]([a-z0-9]+))?'\n    os_replacement: 'Android'\n\n  ##########\n  # Kindle Android\n  ##########\n  - regex: '(Silk-Accelerated=[a-z]{4,5})'\n    os_replacement: 'Android'\n\n  ##########\n  # Windows\n  # http://en.wikipedia.org/wiki/Windows_NT#Releases\n  # possibility of false positive when different marketing names share same NT kernel\n  # e.g. windows server 2003 and windows xp\n  # lots of ua strings have Windows NT 4.1 !?!?!?!? !?!? !? !????!?! !!! ??? !?!?! ?\n  # (very) roughly ordered in terms of frequency of occurence of regex (win xp currently most frequent, etc)\n  ##########\n\n  # ie mobile desktop mode\n  # spoofs nt 6.1. must come before windows 7\n  - regex: '(XBLWP7)'\n    os_replacement: 'Windows Phone'\n\n  # @note: This needs to come before Windows NT 6.1\n  - regex: '(Windows ?Mobile)'\n    os_replacement: 'Windows Mobile'\n\n  - regex: '(Windows (?:NT 5\\.2|NT 5\\.1))'\n    os_replacement: 'Windows XP'\n\n  - regex: '(Windows NT 6\\.1)'\n    os_replacement: 'Windows 7'\n\n  - regex: '(Windows NT 6\\.0)'\n    os_replacement: 'Windows Vista'\n\n  - regex: '(Win 9x 4\\.90)'\n    os_replacement: 'Windows ME'\n\n  - regex: '(Windows 98|Windows XP|Windows ME|Windows 95|Windows CE|Windows 7|Windows NT 4\\.0|Windows Vista|Windows 2000|Windows 3.1)'\n\n  - regex: '(Windows NT 6\\.2; ARM;)'\n    os_replacement: 'Windows RT'\n  - regex: '(Windows NT 6\\.2)'\n    os_replacement: 'Windows 8'\n\n  - regex: '(Windows NT 6\\.3; ARM;)'\n    os_replacement: 'Windows RT 8.1'\n  - regex: '(Windows NT 6\\.3)'\n    os_replacement: 'Windows 8.1'\n\n  - regex: '(Windows NT 6\\.4)'\n    os_replacement: 'Windows 10'\n  - regex: '(Windows NT 10\\.0)'\n    os_replacement: 'Windows 10'\n\n  - regex: '(Windows NT 5\\.0)'\n    os_replacement: 'Windows 2000'\n\n  - regex: '(WinNT4.0)'\n    os_replacement: 'Windows NT 4.0'\n\n  - regex: '(Windows ?CE)'\n    os_replacement: 'Windows CE'\n\n  - regex: 'Win ?(95|98|3.1|NT|ME|2000)'\n    os_replacement: 'Windows $1'\n\n  - regex: 'Win16'\n    os_replacement: 'Windows 3.1'\n\n  - regex: 'Win32'\n    os_replacement: 'Windows 95'\n\n  ##########\n  # Tizen OS from Samsung\n  # spoofs Android so pushing it above\n  ##########\n  - regex: '(Tizen)[/ ](\\d+)\\.(\\d+)'\n\n  ##########\n  # Mac OS\n  # @ref: http://en.wikipedia.org/wiki/Mac_OS_X#Versions\n  # @ref: http://www.puredarwin.org/curious/versions\n  ##########\n  - regex: '((?:Mac[ +]?|; )OS[ +]X)[\\s+/](?:(\\d+)[_.](\\d+)(?:[_.](\\d+))?|Mach-O)'\n    os_replacement: 'Mac OS X'\n  # Leopard\n  - regex: ' (Dar)(win)/(9).(\\d+).*\\((?:i386|x86_64|Power Macintosh)\\)'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '5'\n  # Snow Leopard\n  - regex: ' (Dar)(win)/(10).(\\d+).*\\((?:i386|x86_64)\\)'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '6'\n  # Lion\n  - regex: ' (Dar)(win)/(11).(\\d+).*\\((?:i386|x86_64)\\)'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '7'\n  # Mountain Lion\n  - regex: ' (Dar)(win)/(12).(\\d+).*\\((?:i386|x86_64)\\)'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '8'\n  # Mavericks\n  - regex: ' (Dar)(win)/(13).(\\d+).*\\((?:i386|x86_64)\\)'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '9'\n  # Yosemite is Darwin/14.x but patch versions are inconsistent in the Darwin string;\n  # more accurately covered by CFNetwork regexes downstream\n\n  # IE on Mac doesn't specify version number\n  - regex: 'Mac_PowerPC'\n    os_replacement: 'Mac OS'\n\n  # builds before tiger don't seem to specify version?\n\n  # ios devices spoof (mac os x), so including intel/ppc prefixes\n  - regex: '(?:PPC|Intel) (Mac OS X)'\n\n  ##########\n  # iOS\n  # http://en.wikipedia.org/wiki/IOS_version_history\n  ##########\n  # keep this above generic iOS, since AppleTV UAs contain 'CPU OS'\n  - regex: '(Apple\\s?TV)(?:/(\\d+)\\.(\\d+))?'\n    os_replacement: 'ATV OS X'\n\n  - regex: '(CPU[ +]OS|iPhone[ +]OS|CPU[ +]iPhone|CPU IPhone OS)[ +]+(\\d+)[_\\.](\\d+)(?:[_\\.](\\d+))?'\n    os_replacement: 'iOS'\n\n  # remaining cases are mostly only opera uas, so catch opera as to not catch iphone spoofs\n  - regex: '(iPhone|iPad|iPod); Opera'\n    os_replacement: 'iOS'\n\n  # few more stragglers\n  - regex: '(iPhone|iPad|iPod).*Mac OS X.*Version/(\\d+)\\.(\\d+)'\n    os_replacement: 'iOS'\n\n  # CFNetwork/Darwin - The specific CFNetwork or Darwin version determines\n  # whether the os maps to Mac OS, or iOS, or just Darwin.\n  # See: http://user-agents.me/cfnetwork-version-list\n  - regex: '(CFNetwork)/(5)48\\.0\\.3.* Darwin/11\\.0\\.0'\n    os_replacement: 'iOS'\n  - regex: '(CFNetwork)/(5)48\\.(0)\\.4.* Darwin/(1)1\\.0\\.0'\n    os_replacement: 'iOS'\n  - regex: '(CFNetwork)/(5)48\\.(1)\\.4'\n    os_replacement: 'iOS'\n  - regex: '(CFNetwork)/(4)85\\.1(3)\\.9'\n    os_replacement: 'iOS'\n  - regex: '(CFNetwork)/(6)09\\.(1)\\.4'\n    os_replacement: 'iOS'\n  - regex: '(CFNetwork)/(6)(0)9'\n    os_replacement: 'iOS'\n  - regex: '(CFNetwork)/6(7)2\\.(1)\\.13'\n    os_replacement: 'iOS'\n  - regex: '(CFNetwork)/6(7)2\\.(1)\\.(1)4'\n    os_replacement: 'iOS'\n  - regex: '(CF)(Network)/6(7)(2)\\.1\\.15'\n    os_replacement: 'iOS'\n    os_v1_replacement: '7'\n    os_v2_replacement: '1'\n  - regex: '(CFNetwork)/6(7)2\\.(0)\\.(?:2|8)'\n    os_replacement: 'iOS'\n  - regex: '(CFNetwork)/709\\.1'\n    os_replacement: 'iOS'\n    os_v1_replacement: '8'\n    os_v2_replacement: '0.b5'\n  - regex: '(CF)(Network)/711\\.(\\d)'\n    os_replacement: 'iOS'\n    os_v1_replacement: '8'\n  - regex: '(CF)(Network)/(720)\\.(\\d)'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '10'\n  - regex: '(CF)(Network)/(760)\\.(\\d)'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '11'\n  - regex: '(CF)(Network)/758\\.(\\d)'\n    os_replacement: 'iOS'\n    os_v1_replacement: '9'\n  - regex: '(CF)(Network)/808\\.(\\d)'\n    os_replacement: 'iOS'\n    os_v1_replacement: '10'\n\n  ##########\n  # CFNetwork macOS Apps (must be before CFNetwork iOS Apps\n  # @ref: https://en.wikipedia.org/wiki/Darwin_(operating_system)#Release_history\n  ##########\n  - regex: 'CFNetwork/.* Darwin/16\\.\\d+.*\\(x86_64\\)'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '12'\n  - regex: 'CFNetwork/8.* Darwin/15\\.\\d+.*\\(x86_64\\)'\n    os_replacement: 'Mac OS X'\n    os_v1_replacement: '10'\n    os_v2_replacement: '11'\n  ##########\n  # CFNetwork iOS Apps\n  # @ref: https://en.wikipedia.org/wiki/Darwin_(operating_system)#Release_history\n  ##########\n  - regex: 'CFNetwork/.* Darwin/(9)\\.\\d+'\n    os_replacement: 'iOS'\n    os_v1_replacement: '1'\n  - regex: 'CFNetwork/.* Darwin/(10)\\.\\d+'\n    os_replacement: 'iOS'\n    os_v1_replacement: '4'\n  - regex: 'CFNetwork/.* Darwin/(11)\\.\\d+'\n    os_replacement: 'iOS'\n    os_v1_replacement: '5'\n  - regex: 'CFNetwork/.* Darwin/(13)\\.\\d+'\n    os_replacement: 'iOS'\n    os_v1_replacement: '6'\n  - regex: 'CFNetwork/6.* Darwin/(14)\\.\\d+'\n    os_replacement: 'iOS'\n    os_v1_replacement: '7'\n  - regex: 'CFNetwork/7.* Darwin/(14)\\.\\d+'\n    os_replacement: 'iOS'\n    os_v1_replacement: '8'\n    os_v2_replacement: '0'\n  - regex: 'CFNetwork/7.* Darwin/(15)\\.\\d+'\n    os_replacement: 'iOS'\n    os_v1_replacement: '9'\n    os_v2_replacement: '0'\n  - regex: 'CFNetwork/8.* Darwin/(16)\\.\\d+'\n    os_replacement: 'iOS'\n    os_v1_replacement: '10'\n  # iOS Apps\n  - regex: '\\b(iOS[ /]|iOS; |iPhone(?:/| v|[ _]OS[/,]|; | OS : |\\d,\\d/|\\d,\\d; )|iPad/)(\\d{1,2})[_\\.](\\d{1,2})(?:[_\\.](\\d+))?'\n    os_replacement: 'iOS'\n  - regex: '\\((iOS);'\n\n  ##########\n  # Apple TV\n  ##########\n  - regex: '(tvOS)/(\\d+).(\\d+)'\n    os_replacement: 'tvOS'\n\n  ##########\n  # Chrome OS\n  # if version 0.0.0, probably this stuff:\n  # http://code.google.com/p/chromium-os/issues/detail?id=11573\n  # http://code.google.com/p/chromium-os/issues/detail?id=13790\n  ##########\n  - regex: '(CrOS) [a-z0-9_]+ (\\d+)\\.(\\d+)(?:\\.(\\d+))?'\n    os_replacement: 'Chrome OS'\n\n  ##########\n  # Linux distros\n  ##########\n  - regex: '([Dd]ebian)'\n    os_replacement: 'Debian'\n  - regex: '(Linux Mint)(?:/(\\d+))?'\n  - regex: '(Mandriva)(?: Linux)?/(?:[\\d.-]+m[a-z]{2}(\\d+).(\\d))?'\n\n  ##########\n  # Symbian + Symbian OS\n  # http://en.wikipedia.org/wiki/History_of_Symbian\n  ##########\n  - regex: '(Symbian[Oo][Ss])[/ ](\\d+)\\.(\\d+)'\n    os_replacement: 'Symbian OS'\n  - regex: '(Symbian/3).+NokiaBrowser/7\\.3'\n    os_replacement: 'Symbian^3 Anna'\n  - regex: '(Symbian/3).+NokiaBrowser/7\\.4'\n    os_replacement: 'Symbian^3 Belle'\n  - regex: '(Symbian/3)'\n    os_replacement: 'Symbian^3'\n  - regex: '\\b(Series 60|SymbOS|S60Version|S60V\\d|S60\\b)'\n    os_replacement: 'Symbian OS'\n  - regex: '(MeeGo)'\n  - regex: 'Symbian [Oo][Ss]'\n    os_replacement: 'Symbian OS'\n  - regex: 'Series40;'\n    os_replacement: 'Nokia Series 40'\n  - regex: 'Series30Plus;'\n    os_replacement: 'Nokia Series 30 Plus'\n\n  ##########\n  # BlackBerry devices\n  ##########\n  - regex: '(BB10);.+Version/(\\d+)\\.(\\d+)\\.(\\d+)'\n    os_replacement: 'BlackBerry OS'\n  - regex: '(Black[Bb]erry)[0-9a-z]+/(\\d+)\\.(\\d+)\\.(\\d+)(?:\\.(\\d+))?'\n    os_replacement: 'BlackBerry OS'\n  - regex: '(Black[Bb]erry).+Version/(\\d+)\\.(\\d+)\\.(\\d+)(?:\\.(\\d+))?'\n    os_replacement: 'BlackBerry OS'\n  - regex: '(RIM Tablet OS) (\\d+)\\.(\\d+)\\.(\\d+)'\n    os_replacement: 'BlackBerry Tablet OS'\n  - regex: '(Play[Bb]ook)'\n    os_replacement: 'BlackBerry Tablet OS'\n  - regex: '(Black[Bb]erry)'\n    os_replacement: 'BlackBerry OS'\n\n  ##########\n  # Firefox OS\n  ##########\n  - regex: '\\((?:Mobile|Tablet);.+Gecko/18.0 Firefox/\\d+\\.\\d+'\n    os_replacement: 'Firefox OS'\n    os_v1_replacement: '1'\n    os_v2_replacement: '0'\n    os_v3_replacement: '1'\n\n  - regex: '\\((?:Mobile|Tablet);.+Gecko/18.1 Firefox/\\d+\\.\\d+'\n    os_replacement: 'Firefox OS'\n    os_v1_replacement: '1'\n    os_v2_replacement: '1'\n\n  - regex: '\\((?:Mobile|Tablet);.+Gecko/26.0 Firefox/\\d+\\.\\d+'\n    os_replacement: 'Firefox OS'\n    os_v1_replacement: '1'\n    os_v2_replacement: '2'\n\n  - regex: '\\((?:Mobile|Tablet);.+Gecko/28.0 Firefox/\\d+\\.\\d+'\n    os_replacement: 'Firefox OS'\n    os_v1_replacement: '1'\n    os_v2_replacement: '3'\n\n  - regex: '\\((?:Mobile|Tablet);.+Gecko/30.0 Firefox/\\d+\\.\\d+'\n    os_replacement: 'Firefox OS'\n    os_v1_replacement: '1'\n    os_v2_replacement: '4'\n\n  - regex: '\\((?:Mobile|Tablet);.+Gecko/32.0 Firefox/\\d+\\.\\d+'\n    os_replacement: 'Firefox OS'\n    os_v1_replacement: '2'\n    os_v2_replacement: '0'\n\n  - regex: '\\((?:Mobile|Tablet);.+Gecko/34.0 Firefox/\\d+\\.\\d+'\n    os_replacement: 'Firefox OS'\n    os_v1_replacement: '2'\n    os_v2_replacement: '1'\n\n  # Firefox OS Generic\n  - regex: '\\((?:Mobile|Tablet);.+Firefox/\\d+\\.\\d+'\n    os_replacement: 'Firefox OS'\n\n\n  ##########\n  # BREW\n  # yes, Brew is lower-cased for Brew MP\n  ##########\n  - regex: '(BREW)[ /](\\d+)\\.(\\d+)\\.(\\d+)'\n  - regex: '(BREW);'\n  - regex: '(Brew MP|BMP)[ /](\\d+)\\.(\\d+)\\.(\\d+)'\n    os_replacement: 'Brew MP'\n  - regex: 'BMP;'\n    os_replacement: 'Brew MP'\n\n  ##########\n  # Google TV\n  ##########\n  - regex: '(GoogleTV)(?: (\\d+)\\.(\\d+)(?:\\.(\\d+))?|/[\\da-z]+)'\n\n  - regex: '(WebTV)/(\\d+).(\\d+)'\n\n  ##########\n  # Chromecast\n  ##########\n  - regex: '(CrKey)(?:[/](\\d+)\\.(\\d+)(?:\\.(\\d+))?)?'\n    os_replacement: 'Chromecast'\n\n  ##########\n  # Misc mobile\n  ##########\n  - regex: '(hpw|web)OS/(\\d+)\\.(\\d+)(?:\\.(\\d+))?'\n    os_replacement: 'webOS'\n  - regex: '(VRE);'\n\n  ##########\n  # Generic patterns\n  # since the majority of os cases are very specific, these go last\n  ##########\n  - regex: '(Fedora|Red Hat|PCLinuxOS|Puppy|Ubuntu|Kindle|Bada|Lubuntu|BackTrack|Slackware|(?:Free|Open|Net|\\b)BSD)[/ ](\\d+)\\.(\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?'\n\n  # Gentoo Linux + Kernel Version\n  - regex: '(Linux)[ /](\\d+)\\.(\\d+)(?:\\.(\\d+))?.*gentoo'\n    os_replacement: 'Gentoo'\n\n  # Opera Mini Bada\n  - regex: '\\((Bada);'\n\n  # just os\n  - regex: '(Windows|Android|WeTab|Maemo|Web0S)'\n  - regex: '(Ubuntu|Kubuntu|Arch Linux|CentOS|Slackware|Gentoo|openSUSE|SUSE|Red Hat|Fedora|PCLinuxOS|Mageia|(?:Free|Open|Net|\\b)BSD)'\n  # Linux + Kernel Version\n  - regex: '(Linux)(?:[ /](\\d+)\\.(\\d+)(?:\\.(\\d+))?)?'\n  - regex: 'SunOS'\n    os_replacement: 'Solaris'\n\n  # Roku Digital-Video-Players https://www.roku.com/\n  - regex: '^(Roku)/DVP-(\\d+)\\.(\\d+)'\n\ndevice_parsers:\n\n  #########\n  # Mobile Spiders\n  # Catch the mobile crawler before checking for iPhones / Androids.\n  #########\n  - regex: '(?:(?:iPhone|Windows CE|Windows Phone|Android).*(?:(?:Bot|Yeti)-Mobile|YRSpider|BingPreview|bots?/\\d|(?:bot|spider)\\.html)|AdsBot-Google-Mobile.*iPhone)'\n    regex_flag: 'i'\n    device_replacement: 'Spider'\n    brand_replacement: 'Spider'\n    model_replacement: 'Smartphone'\n  - regex: '(?:DoCoMo|\\bMOT\\b|\\bLG\\b|Nokia|Samsung|SonyEricsson).*(?:(?:Bot|Yeti)-Mobile|bots?/\\d|(?:bot|crawler)\\.html|(?:jump|google|Wukong)bot|ichiro/mobile|/spider|YahooSeeker)'\n    regex_flag: 'i'\n    device_replacement: 'Spider'\n    brand_replacement: 'Spider'\n    model_replacement: 'Feature Phone'\n\n  #########\n  # WebBrowser for SmartWatch\n  # @ref: https://play.google.com/store/apps/details?id=se.vaggan.webbrowser&hl=en\n  #########\n  - regex: '\\bSmartWatch *\\( *([^;]+) *; *([^;]+) *;'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  ######################################################################\n  # Android parsers\n  #\n  # @ref: https://support.google.com/googleplay/answer/1727131?hl=en\n  ######################################################################\n\n  # Android Application\n  - regex: 'Android Application[^\\-]+ - (Sony) ?(Ericsson)? (.+) \\w+ - '\n    device_replacement: '$1 $2'\n    brand_replacement: '$1$2'\n    model_replacement: '$3'\n  - regex: 'Android Application[^\\-]+ - (?:HTC|HUAWEI|LGE|LENOVO|MEDION|TCT) (HTC|HUAWEI|LG|LENOVO|MEDION|ALCATEL)[ _\\-](.+) \\w+ - '\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  - regex: 'Android Application[^\\-]+ - ([^ ]+) (.+) \\w+ - '\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  #########\n  # 3Q\n  # @ref: http://www.3q-int.com/\n  #########\n  - regex: '; *([BLRQ]C\\d{4}[A-Z]+) +Build/'\n    device_replacement: '3Q $1'\n    brand_replacement: '3Q'\n    model_replacement: '$1'\n  - regex: '; *(?:3Q_)([^;/]+) +Build'\n    device_replacement: '3Q $1'\n    brand_replacement: '3Q'\n    model_replacement: '$1'\n\n  #########\n  # Acer\n  # @ref: http://us.acer.com/ac/en/US/content/group/tablets\n  #########\n  - regex: 'Android [34].*; *(A100|A101|A110|A200|A210|A211|A500|A501|A510|A511|A700(?: Lite| 3G)?|A701|B1-A71|A1-\\d{3}|B1-\\d{3}|V360|V370|W500|W500P|W501|W501P|W510|W511|W700|Slider SL101|DA22[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Acer'\n    model_replacement: '$1'\n  - regex: '; *Acer Iconia Tab ([^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Acer'\n    model_replacement: '$1'\n  - regex: '; *(Z1[1235]0|E320[^/]*|S500|S510|Liquid[^;/]*|Iconia A\\d+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Acer'\n    model_replacement: '$1'\n  - regex: '; *(Acer |ACER )([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Acer'\n    model_replacement: '$2'\n\n  #########\n  # Advent\n  # @ref: https://en.wikipedia.org/wiki/Advent_Vega\n  # @note: VegaBean and VegaComb (names derived from jellybean, honeycomb) are\n  #   custom ROM builds for Vega\n  #########\n  - regex: '; *(Advent )?(Vega(?:Bean|Comb)?).* Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Advent'\n    model_replacement: '$2'\n\n  #########\n  # Ainol\n  # @ref: http://www.ainol.com/plugin.php?identifier=ainol&module=product\n  #########\n  - regex: '; *(Ainol )?((?:NOVO|[Nn]ovo)[^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Ainol'\n    model_replacement: '$2'\n\n  #########\n  # Airis\n  # @ref: http://airis.es/Tienda/Default.aspx?idG=001\n  #########\n  - regex: '; *AIRIS[ _\\-]?([^/;\\)]+) *(?:;|\\)|Build)'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Airis'\n    model_replacement: '$1'\n  - regex: '; *(OnePAD[^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Airis'\n    model_replacement: '$1'\n\n  #########\n  # Airpad\n  # @ref: ??\n  #########\n  - regex: '; *Airpad[ \\-]([^;/]+) Build'\n    device_replacement: 'Airpad $1'\n    brand_replacement: 'Airpad'\n    model_replacement: '$1'\n\n  #########\n  # Alcatel - TCT\n  # @ref: http://www.alcatelonetouch.com/global-en/products/smartphones.html\n  #########\n  - regex: '; *(one ?touch) (EVO7|T10|T20) Build'\n    device_replacement: 'Alcatel One Touch $2'\n    brand_replacement: 'Alcatel'\n    model_replacement: 'One Touch $2'\n  - regex: '; *(?:alcatel[ _])?(?:(?:one[ _]?touch[ _])|ot[ \\-])([^;/]+);? Build'\n    regex_flag: 'i'\n    device_replacement: 'Alcatel One Touch $1'\n    brand_replacement: 'Alcatel'\n    model_replacement: 'One Touch $1'\n  - regex: '; *(TCL)[ _]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  # operator specific models\n  - regex: '; *(Vodafone Smart II|Optimus_Madrid) Build'\n    device_replacement: 'Alcatel $1'\n    brand_replacement: 'Alcatel'\n    model_replacement: '$1'\n  - regex: '; *BASE_Lutea_3 Build'\n    device_replacement: 'Alcatel One Touch 998'\n    brand_replacement: 'Alcatel'\n    model_replacement: 'One Touch 998'\n  - regex: '; *BASE_Varia Build'\n    device_replacement: 'Alcatel One Touch 918D'\n    brand_replacement: 'Alcatel'\n    model_replacement: 'One Touch 918D'\n\n  #########\n  # Allfine\n  # @ref: http://www.myallfine.com/Products.asp\n  #########\n  - regex: '; *((?:FINE|Fine)\\d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Allfine'\n    model_replacement: '$1'\n\n  #########\n  # Allview\n  # @ref: http://www.allview.ro/produse/droseries/lista-tablete-pc/\n  #########\n  - regex: '; *(ALLVIEW[ _]?|Allview[ _]?)((?:Speed|SPEED).*) Build/'\n    device_replacement: '$1$2'\n    brand_replacement: 'Allview'\n    model_replacement: '$2'\n  - regex: '; *(ALLVIEW[ _]?|Allview[ _]?)?(AX1_Shine|AX2_Frenzy) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Allview'\n    model_replacement: '$2'\n  - regex: '; *(ALLVIEW[ _]?|Allview[ _]?)([^;/]*) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Allview'\n    model_replacement: '$2'\n\n  #########\n  # Allwinner\n  # @ref: http://www.allwinner.com/\n  # @models: A31 (13.3\"),A20,A10,\n  #########\n  - regex: '; *(A13-MID) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Allwinner'\n    model_replacement: '$1'\n  - regex: '; *(Allwinner)[ _\\-]?([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Allwinner'\n    model_replacement: '$1'\n\n  #########\n  # Amaway\n  # @ref: http://www.amaway.cn/\n  #########\n  - regex: '; *(A651|A701B?|A702|A703|A705|A706|A707|A711|A712|A713|A717|A722|A785|A801|A802|A803|A901|A902|A1002|A1003|A1006|A1007|A9701|A9703|Q710|Q80) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Amaway'\n    model_replacement: '$1'\n\n  #########\n  # Amoi\n  # @ref: http://www.amoi.com/en/prd/prd_index.jspx\n  #########\n  - regex: '; *(?:AMOI|Amoi)[ _]([^;/]+) Build'\n    device_replacement: 'Amoi $1'\n    brand_replacement: 'Amoi'\n    model_replacement: '$1'\n  - regex: '^(?:AMOI|Amoi)[ _]([^;/]+) Linux'\n    device_replacement: 'Amoi $1'\n    brand_replacement: 'Amoi'\n    model_replacement: '$1'\n\n  #########\n  # Aoc\n  # @ref: http://latin.aoc.com/media_tablet\n  #########\n  - regex: '; *(MW(?:0[789]|10)[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Aoc'\n    model_replacement: '$1'\n\n  #########\n  # Aoson\n  # @ref: http://www.luckystar.com.cn/en/mid.aspx?page=1\n  # @ref: http://www.luckystar.com.cn/en/mobiletel.aspx?page=1\n  # @note: brand owned by luckystar\n  #########\n  - regex: '; *(G7|M1013|M1015G|M11[CG]?|M-?12[B]?|M15|M19[G]?|M30[ACQ]?|M31[GQ]|M32|M33[GQ]|M36|M37|M38|M701T|M710|M712B|M713|M715G|M716G|M71(?:G|GS|T)?|M72[T]?|M73[T]?|M75[GT]?|M77G|M79T|M7L|M7LN|M81|M810|M81T|M82|M92|M92KS|M92S|M717G|M721|M722G|M723|M725G|M739|M785|M791|M92SK|M93D) Build'\n    device_replacement: 'Aoson $1'\n    brand_replacement: 'Aoson'\n    model_replacement: '$1'\n  - regex: '; *Aoson ([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: 'Aoson $1'\n    brand_replacement: 'Aoson'\n    model_replacement: '$1'\n\n  #########\n  # Apanda\n  # @ref: http://www.apanda.com.cn/\n  #########\n  - regex: '; *[Aa]panda[ _\\-]([^;/]+) Build'\n    device_replacement: 'Apanda $1'\n    brand_replacement: 'Apanda'\n    model_replacement: '$1'\n\n  #########\n  # Archos\n  # @ref: http://www.archos.com/de/products/tablets.html\n  # @ref: http://www.archos.com/de/products/smartphones/index.html\n  #########\n  - regex: '; *(?:ARCHOS|Archos) ?(GAMEPAD.*?)(?: Build|[;/\\(\\)\\-])'\n    device_replacement: 'Archos $1'\n    brand_replacement: 'Archos'\n    model_replacement: '$1'\n  - regex: 'ARCHOS; GOGI; ([^;]+);'\n    device_replacement: 'Archos $1'\n    brand_replacement: 'Archos'\n    model_replacement: '$1'\n  - regex: '(?:ARCHOS|Archos)[ _]?(.*?)(?: Build|[;/\\(\\)\\-]|$)'\n    device_replacement: 'Archos $1'\n    brand_replacement: 'Archos'\n    model_replacement: '$1'\n  - regex: '; *(AN(?:7|8|9|10|13)[A-Z0-9]{1,4}) Build'\n    device_replacement: 'Archos $1'\n    brand_replacement: 'Archos'\n    model_replacement: '$1'\n  - regex: '; *(A28|A32|A43|A70(?:BHT|CHT|HB|S|X)|A101(?:B|C|IT)|A7EB|A7EB-WK|101G9|80G9) Build'\n    device_replacement: 'Archos $1'\n    brand_replacement: 'Archos'\n    model_replacement: '$1'\n\n  #########\n  # A-rival\n  # @ref: http://www.a-rival.de/de/\n  #########\n  - regex: '; *(PAD-FMD[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Arival'\n    model_replacement: '$1'\n  - regex: '; *(BioniQ) ?([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Arival'\n    model_replacement: '$1 $2'\n\n  #########\n  # Arnova\n  # @ref: http://arnovatech.com/\n  #########\n  - regex: '; *(AN\\d[^;/]+|ARCHM\\d+) Build'\n    device_replacement: 'Arnova $1'\n    brand_replacement: 'Arnova'\n    model_replacement: '$1'\n  - regex: '; *(?:ARNOVA|Arnova) ?([^;/]+) Build'\n    device_replacement: 'Arnova $1'\n    brand_replacement: 'Arnova'\n    model_replacement: '$1'\n\n  #########\n  # Assistant\n  # @ref: http://www.assistant.ua\n  #########\n  - regex: '; *(?:ASSISTANT )?(AP)-?([1789]\\d{2}[A-Z]{0,2}|80104) Build'\n    device_replacement: 'Assistant $1-$2'\n    brand_replacement: 'Assistant'\n    model_replacement: '$1-$2'\n\n  #########\n  # Asus\n  # @ref: http://www.asus.com/uk/Tablets_Mobile/\n  #########\n  - regex: '; *(ME17\\d[^;/]*|ME3\\d{2}[^;/]+|K00[A-Z]|Nexus 10|Nexus 7(?: 2013)?|PadFone[^;/]*|Transformer[^;/]*|TF\\d{3}[^;/]*|eeepc) Build'\n    device_replacement: 'Asus $1'\n    brand_replacement: 'Asus'\n    model_replacement: '$1'\n  - regex: '; *ASUS[ _]*([^;/]+) Build'\n    device_replacement: 'Asus $1'\n    brand_replacement: 'Asus'\n    model_replacement: '$1'\n\n  #########\n  # Garmin-Asus\n  #########\n  - regex: '; *Garmin-Asus ([^;/]+) Build'\n    device_replacement: 'Garmin-Asus $1'\n    brand_replacement: 'Garmin-Asus'\n    model_replacement: '$1'\n  - regex: '; *(Garminfone) Build'\n    device_replacement: 'Garmin $1'\n    brand_replacement: 'Garmin-Asus'\n    model_replacement: '$1'\n\n  #########\n  # Attab\n  # @ref: http://www.theattab.com/\n  #########\n  - regex: '; (@TAB-[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Attab'\n    model_replacement: '$1'\n\n  #########\n  # Audiosonic\n  # @ref: ??\n  # @note: Take care with Docomo T-01 Toshiba\n  #########\n  - regex: '; *(T-(?:07|[^0]\\d)[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Audiosonic'\n    model_replacement: '$1'\n\n  #########\n  # Axioo\n  # @ref: http://www.axiooworld.com/ww/index.php\n  #########\n  - regex: '; *(?:Axioo[ _\\-]([^;/]+)|(picopad)[ _\\-]([^;/]+)) Build'\n    regex_flag: 'i'\n    device_replacement: 'Axioo $1$2 $3'\n    brand_replacement: 'Axioo'\n    model_replacement: '$1$2 $3'\n\n  #########\n  # Azend\n  # @ref: http://azendcorp.com/index.php/products/portable-electronics\n  #########\n  - regex: '; *(V(?:100|700|800)[^;/]*) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Azend'\n    model_replacement: '$1'\n\n  #########\n  # Bak\n  # @ref: http://www.bakinternational.com/produtos.php?cat=80\n  #########\n  - regex: '; *(IBAK\\-[^;/]*) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Bak'\n    model_replacement: '$1'\n\n  #########\n  # Bedove\n  # @ref: http://www.bedove.com/product.html\n  # @models: HY6501|HY5001|X12|X21|I5\n  #########\n  - regex: '; *(HY5001|HY6501|X12|X21|I5) Build'\n    device_replacement: 'Bedove $1'\n    brand_replacement: 'Bedove'\n    model_replacement: '$1'\n\n  #########\n  # Benss\n  # @ref: http://www.benss.net/\n  #########\n  - regex: '; *(JC-[^;/]*) Build'\n    device_replacement: 'Benss $1'\n    brand_replacement: 'Benss'\n    model_replacement: '$1'\n\n  #########\n  # Blackberry\n  # @ref: http://uk.blackberry.com/\n  # @note: Android Apps seams to be used here\n  #########\n  - regex: '; *(BB) ([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Blackberry'\n    model_replacement: '$2'\n\n  #########\n  # Blackbird\n  # @ref: http://iblackbird.co.kr\n  #########\n  - regex: '; *(BlackBird)[ _](I8.*) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  - regex: '; *(BlackBird)[ _](.*) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  #########\n  # Blaupunkt\n  # @ref: http://www.blaupunkt.com\n  #########\n  # Endeavour\n  - regex: '; *([0-9]+BP[EM][^;/]*|Endeavour[^;/]+) Build'\n    device_replacement: 'Blaupunkt $1'\n    brand_replacement: 'Blaupunkt'\n    model_replacement: '$1'\n\n  #########\n  # Blu\n  # @ref: http://bluproducts.com\n  #########\n  - regex: '; *((?:BLU|Blu)[ _\\-])([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Blu'\n    model_replacement: '$2'\n  # BMOBILE = operator branded device\n  - regex: '; *(?:BMOBILE )?(Blu|BLU|DASH [^;/]+|VIVO 4\\.3|TANK 4\\.5) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Blu'\n    model_replacement: '$1'\n\n  #########\n  # Blusens\n  # @ref: http://www.blusens.com/es/?sg=1&sv=al&roc=1\n  #########\n  # tablet\n  - regex: '; *(TOUCH\\d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Blusens'\n    model_replacement: '$1'\n\n  #########\n  # Bmobile\n  # @ref: http://bmobile.eu.com/?categoria=smartphones-2\n  # @note: Might collide with Maxx as AX is used also there.\n  #########\n  # smartphone\n  - regex: '; *(AX5\\d+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Bmobile'\n    model_replacement: '$1'\n\n  #########\n  # bq\n  # @ref: http://bqreaders.com\n  #########\n  - regex: '; *([Bb]q) ([^;/]+);? Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'bq'\n    model_replacement: '$2'\n  - regex: '; *(Maxwell [^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'bq'\n    model_replacement: '$1'\n\n  #########\n  # Braun Phototechnik\n  # @ref: http://www.braun-phototechnik.de/en/products/list/~pcat.250/Tablet-PC.html\n  #########\n  - regex: '; *((?:B-Tab|B-TAB) ?\\d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Braun'\n    model_replacement: '$1'\n\n  #########\n  # Broncho\n  # @ref: http://www.broncho.cn/\n  #########\n  - regex: '; *(Broncho) ([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  #########\n  # Captiva\n  # @ref: http://www.captiva-power.de\n  #########\n  - regex: '; *CAPTIVA ([^;/]+) Build'\n    device_replacement: 'Captiva $1'\n    brand_replacement: 'Captiva'\n    model_replacement: '$1'\n\n  #########\n  # Casio\n  # @ref: http://www.casiogzone.com/\n  #########\n  - regex: '; *(C771|CAL21|IS11CA) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Casio'\n    model_replacement: '$1'\n\n  #########\n  # Cat\n  # @ref: http://www.cat-sound.com\n  #########\n  - regex: '; *(?:Cat|CAT) ([^;/]+) Build'\n    device_replacement: 'Cat $1'\n    brand_replacement: 'Cat'\n    model_replacement: '$1'\n  - regex: '; *(?:Cat)(Nova.*) Build'\n    device_replacement: 'Cat $1'\n    brand_replacement: 'Cat'\n    model_replacement: '$1'\n  - regex: '; *(INM8002KP|ADM8000KP_[AB]) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Cat'\n    model_replacement: 'Tablet PHOENIX 8.1J0'\n\n  #########\n  # Celkon\n  # @ref: http://www.celkonmobiles.com/?_a=products\n  # @models: A10, A19Q, A101, A105, A107, A107\\+, A112, A118, A119, A119Q, A15, A19, A20, A200, A220, A225, A22 Race, A27, A58, A59, A60, A62, A63, A64, A66, A67, A69, A75, A77, A79, A8\\+, A83, A85, A86, A87, A89 Ultima, A9\\+, A90, A900, A95, A97i, A98, AR 40, AR 45, AR 50, ML5\n  #########\n  - regex: '; *(?:[Cc]elkon[ _\\*]|CELKON[ _\\*])([^;/\\)]+) ?(?:Build|;|\\))'\n    device_replacement: '$1'\n    brand_replacement: 'Celkon'\n    model_replacement: '$1'\n  - regex: 'Build/(?:[Cc]elkon)+_?([^;/_\\)]+)'\n    device_replacement: '$1'\n    brand_replacement: 'Celkon'\n    model_replacement: '$1'\n  - regex: '; *(CT)-?(\\d+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Celkon'\n    model_replacement: '$1$2'\n  # smartphones\n  - regex: '; *(A19|A19Q|A105|A107[^;/\\)]*) ?(?:Build|;|\\))'\n    device_replacement: '$1'\n    brand_replacement: 'Celkon'\n    model_replacement: '$1'\n\n  #########\n  # ChangJia\n  # @ref: http://www.cjshowroom.com/eproducts.aspx?classcode=004001001\n  # @brief: China manufacturer makes tablets for different small brands\n  #         (eg. http://www.zeepad.net/index.html)\n  #########\n  - regex: '; *(TPC[0-9]{4,5}) Build'\n    device_replacement: '$1'\n    brand_replacement: 'ChangJia'\n    model_replacement: '$1'\n\n  #########\n  # Cloudfone\n  # @ref: http://www.cloudfonemobile.com/\n  #########\n  - regex: '; *(Cloudfone)[ _](Excite)([^ ][^;/]+) Build'\n    device_replacement: '$1 $2 $3'\n    brand_replacement: 'Cloudfone'\n    model_replacement: '$1 $2 $3'\n  - regex: '; *(Excite|ICE)[ _](\\d+[^;/]+) Build'\n    device_replacement: 'Cloudfone $1 $2'\n    brand_replacement: 'Cloudfone'\n    model_replacement: 'Cloudfone $1 $2'\n  - regex: '; *(Cloudfone|CloudPad)[ _]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Cloudfone'\n    model_replacement: '$1 $2'\n\n  #########\n  # Cmx\n  # @ref: http://cmx.at/de/\n  #########\n  - regex: '; *((?:Aquila|Clanga|Rapax)[^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Cmx'\n    model_replacement: '$1'\n\n  #########\n  # CobyKyros\n  # @ref: http://cobykyros.com\n  # @note: Be careful with MID\\d{3} from MpMan or Manta\n  #########\n  - regex: '; *(?:CFW-|Kyros )?(MID[0-9]{4}(?:[ABC]|SR|TV)?)(\\(3G\\)-4G| GB 8K| 3G| 8K| GB)? *(?:Build|[;\\)])'\n    device_replacement: 'CobyKyros $1$2'\n    brand_replacement: 'CobyKyros'\n    model_replacement: '$1$2'\n\n  #########\n  # Coolpad\n  # @ref: ??\n  #########\n  - regex: '; *([^;/]*)Coolpad[ _]([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Coolpad'\n    model_replacement: '$1$2'\n\n  #########\n  # Cube\n  # @ref: http://www.cube-tablet.com/buy-products.html\n  #########\n  - regex: '; *(CUBE[ _])?([KU][0-9]+ ?GT.*|A5300) Build'\n    regex_flag: 'i'\n    device_replacement: '$1$2'\n    brand_replacement: 'Cube'\n    model_replacement: '$2'\n\n  #########\n  # Cubot\n  # @ref: http://www.cubotmall.com/\n  #########\n  - regex: '; *CUBOT ([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Cubot'\n    model_replacement: '$1'\n  - regex: '; *(BOBBY) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Cubot'\n    model_replacement: '$1'\n\n  #########\n  # Danew\n  # @ref: http://www.danew.com/produits-tablette.php\n  #########\n  - regex: '; *(Dslide [^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Danew'\n    model_replacement: '$1'\n\n  #########\n  # Dell\n  # @ref: http://www.dell.com\n  # @ref: http://www.softbank.jp/mobile/support/product/101dl/\n  # @ref: http://www.softbank.jp/mobile/support/product/001dl/\n  # @ref: http://developer.emnet.ne.jp/android.html\n  # @ref: http://www.dell.com/in/p/mobile-xcd28/pd\n  # @ref: http://www.dell.com/in/p/mobile-xcd35/pd\n  #########\n  - regex: '; *(XCD)[ _]?(28|35) Build'\n    device_replacement: 'Dell $1$2'\n    brand_replacement: 'Dell'\n    model_replacement: '$1$2'\n  - regex: '; *(001DL) Build'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: 'Streak'\n  - regex: '; *(?:Dell|DELL) (Streak) Build'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: 'Streak'\n  - regex: '; *(101DL|GS01|Streak Pro[^;/]*) Build'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: 'Streak Pro'\n  - regex: '; *([Ss]treak ?7) Build'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: 'Streak 7'\n  - regex: '; *(Mini-3iX) Build'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: '$1'\n  - regex: '; *(?:Dell|DELL)[ _](Aero|Venue|Thunder|Mini.*|Streak[ _]Pro) Build'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: '$1'\n  - regex: '; *Dell[ _]([^;/]+) Build'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: '$1'\n  - regex: '; *Dell ([^;/]+) Build'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: '$1'\n\n  #########\n  # Denver\n  # @ref: http://www.denver-electronics.com/tablets1/\n  #########\n  - regex: '; *(TA[CD]-\\d+[^;/]*) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Denver'\n    model_replacement: '$1'\n\n  #########\n  # Dex\n  # @ref: http://dex.ua/\n  #########\n  - regex: '; *(iP[789]\\d{2}(?:-3G)?|IP10\\d{2}(?:-8GB)?) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Dex'\n    model_replacement: '$1'\n\n  #########\n  # DNS AirTab\n  # @ref: http://www.dns-shop.ru/\n  #########\n  - regex: '; *(AirTab)[ _\\-]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'DNS'\n    model_replacement: '$1 $2'\n\n  #########\n  # Docomo (Operator Branded Device)\n  # @ref: http://www.ipentec.com/document/document.aspx?page=android-useragent\n  #########\n  - regex: '; *(F\\-\\d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Fujitsu'\n    model_replacement: '$1'\n  - regex: '; *(HT-03A) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: 'Magic'\n  - regex: '; *(HT\\-\\d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n  - regex: '; *(L\\-\\d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'LG'\n    model_replacement: '$1'\n  - regex: '; *(N\\-\\d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Nec'\n    model_replacement: '$1'\n  - regex: '; *(P\\-\\d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Panasonic'\n    model_replacement: '$1'\n  - regex: '; *(SC\\-\\d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n  - regex: '; *(SH\\-\\d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Sharp'\n    model_replacement: '$1'\n  - regex: '; *(SO\\-\\d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'SonyEricsson'\n    model_replacement: '$1'\n  - regex: '; *(T\\-0[12][^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Toshiba'\n    model_replacement: '$1'\n\n  #########\n  # DOOV\n  # @ref: http://www.doov.com.cn/\n  #########\n  - regex: '; *(DOOV)[ _]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'DOOV'\n    model_replacement: '$2'\n\n  #########\n  # Enot\n  # @ref: http://www.enot.ua/\n  #########\n  - regex: '; *(Enot|ENOT)[ -]?([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Enot'\n    model_replacement: '$2'\n\n  #########\n  # Evercoss\n  # @ref: http://evercoss.com/android/\n  #########\n  - regex: '; *[^;/]+ Build/(?:CROSS|Cross)+[ _\\-]([^\\)]+)'\n    device_replacement: 'CROSS $1'\n    brand_replacement: 'Evercoss'\n    model_replacement: 'Cross $1'\n  - regex: '; *(CROSS|Cross)[ _\\-]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Evercoss'\n    model_replacement: 'Cross $2'\n\n  #########\n  # Explay\n  # @ref: http://explay.ru/\n  #########\n  - regex: '; *Explay[_ ](.+?)(?:[\\)]| Build)'\n    device_replacement: '$1'\n    brand_replacement: 'Explay'\n    model_replacement: '$1'\n\n  #########\n  # Fly\n  # @ref: http://www.fly-phone.com/\n  #########\n  - regex: '; *(IQ.*) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Fly'\n    model_replacement: '$1'\n  - regex: '; *(Fly|FLY)[ _](IQ[^;]+|F[34]\\d+[^;]*);? Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Fly'\n    model_replacement: '$2'\n\n  #########\n  # Fujitsu\n  # @ref: http://www.fujitsu.com/global/\n  #########\n  - regex: '; *(M532|Q572|FJL21) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Fujitsu'\n    model_replacement: '$1'\n\n  #########\n  # Galapad\n  # @ref: http://www.galapad.net/product.html\n  #########\n  - regex: '; *(G1) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Galapad'\n    model_replacement: '$1'\n\n  #########\n  # Geeksphone\n  # @ref: http://www.geeksphone.com/\n  #########\n  - regex: '; *(Geeksphone) ([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  #########\n  # Gfive\n  # @ref: http://www.gfivemobile.com/en\n  #########\n  #- regex: '; *(G\\'?FIVE) ([^;/]+) Build' # there is a problem with python yaml parser here\n  - regex: '; *(G[^F]?FIVE) ([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Gfive'\n    model_replacement: '$2'\n\n  #########\n  # Gionee\n  # @ref: http://www.gionee.com/\n  #########\n  - regex: '; *(Gionee)[ _\\-]([^;/]+)(?:/[^;/]+)? Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Gionee'\n    model_replacement: '$2'\n  - regex: '; *(GN\\d+[A-Z]?|INFINITY_PASSION|Ctrl_V1) Build'\n    device_replacement: 'Gionee $1'\n    brand_replacement: 'Gionee'\n    model_replacement: '$1'\n  - regex: '; *(E3) Build/JOP40D'\n    device_replacement: 'Gionee $1'\n    brand_replacement: 'Gionee'\n    model_replacement: '$1'\n\n  #########\n  # GoClever\n  # @ref: http://www.goclever.com\n  #########\n  - regex: '; *((?:FONE|QUANTUM|INSIGNIA) \\d+[^;/]*|PLAYTAB) Build'\n    device_replacement: 'GoClever $1'\n    brand_replacement: 'GoClever'\n    model_replacement: '$1'\n  - regex: '; *GOCLEVER ([^;/]+) Build'\n    device_replacement: 'GoClever $1'\n    brand_replacement: 'GoClever'\n    model_replacement: '$1'\n\n  #########\n  # Google\n  # @ref: http://www.google.de/glass/start/\n  #########\n  - regex: '; *(Glass \\d+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Google'\n    model_replacement: '$1'\n  - regex: '; *(Pixel \\w+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Google'\n    model_replacement: '$1'\n\n  #########\n  # Gigabyte\n  # @ref: http://gsmart.gigabytecm.com/en/\n  #########\n  - regex: '; *(GSmart)[ -]([^/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Gigabyte'\n    model_replacement: '$1 $2'\n\n  #########\n  # Freescale development boards\n  # @ref: http://www.freescale.com/webapp/sps/site/prod_summary.jsp?code=IMX53QSB\n  #########\n  - regex: '; *(imx5[13]_[^/]+) Build'\n    device_replacement: 'Freescale $1'\n    brand_replacement: 'Freescale'\n    model_replacement: '$1'\n\n  #########\n  # Haier\n  # @ref: http://www.haier.com/\n  # @ref: http://www.haier.com/de/produkte/tablet/\n  #########\n  - regex: '; *Haier[ _\\-]([^/]+) Build'\n    device_replacement: 'Haier $1'\n    brand_replacement: 'Haier'\n    model_replacement: '$1'\n  - regex: '; *(PAD1016) Build'\n    device_replacement: 'Haipad $1'\n    brand_replacement: 'Haipad'\n    model_replacement: '$1'\n\n  #########\n  # Haipad\n  # @ref: http://www.haipad.net/\n  # @models: V7P|M7SM7S|M9XM9X|M7XM7X|M9|M8|M7-M|M1002|M7|M701\n  #########\n  - regex: '; *(M701|M7|M8|M9) Build'\n    device_replacement: 'Haipad $1'\n    brand_replacement: 'Haipad'\n    model_replacement: '$1'\n\n  #########\n  # Hannspree\n  # @ref: http://www.hannspree.eu/\n  # @models: SN10T1|SN10T2|SN70T31B|SN70T32W\n  #########\n  - regex: '; *(SN\\d+T[^;\\)/]*)(?: Build|[;\\)])'\n    device_replacement: 'Hannspree $1'\n    brand_replacement: 'Hannspree'\n    model_replacement: '$1'\n\n  #########\n  # HCLme\n  # @ref: http://www.hclmetablet.com/india/\n  #########\n  - regex: 'Build/HCL ME Tablet ([^;\\)]+)[\\);]'\n    device_replacement: 'HCLme $1'\n    brand_replacement: 'HCLme'\n    model_replacement: '$1'\n  - regex: '; *([^;\\/]+) Build/HCL'\n    device_replacement: 'HCLme $1'\n    brand_replacement: 'HCLme'\n    model_replacement: '$1'\n\n  #########\n  # Hena\n  # @ref: http://www.henadigital.com/en/product/index.asp?id=6\n  #########\n  - regex: '; *(MID-?\\d{4}C[EM]) Build'\n    device_replacement: 'Hena $1'\n    brand_replacement: 'Hena'\n    model_replacement: '$1'\n\n  #########\n  # Hisense\n  # @ref: http://www.hisense.com/\n  #########\n  - regex: '; *(EG\\d{2,}|HS-[^;/]+|MIRA[^;/]+) Build'\n    device_replacement: 'Hisense $1'\n    brand_replacement: 'Hisense'\n    model_replacement: '$1'\n  - regex: '; *(andromax[^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: 'Hisense $1'\n    brand_replacement: 'Hisense'\n    model_replacement: '$1'\n\n  #########\n  # hitech\n  # @ref: http://www.hitech-mobiles.com/\n  #########\n  - regex: '; *(?:AMAZE[ _](S\\d+)|(S\\d+)[ _]AMAZE) Build'\n    device_replacement: 'AMAZE $1$2'\n    brand_replacement: 'hitech'\n    model_replacement: 'AMAZE $1$2'\n\n  #########\n  # HP\n  # @ref: http://www.hp.com/\n  #########\n  - regex: '; *(PlayBook) Build'\n    device_replacement: 'HP $1'\n    brand_replacement: 'HP'\n    model_replacement: '$1'\n  - regex: '; *HP ([^/]+) Build'\n    device_replacement: 'HP $1'\n    brand_replacement: 'HP'\n    model_replacement: '$1'\n  - regex: '; *([^/]+_tenderloin) Build'\n    device_replacement: 'HP TouchPad'\n    brand_replacement: 'HP'\n    model_replacement: 'TouchPad'\n\n  #########\n  # Huawei\n  # @ref: http://www.huaweidevice.com\n  # @note: Needs to be before HTC due to Desire HD Build on U8815\n  #########\n  - regex: '; *(HUAWEI |Huawei-)?([UY][^;/]+) Build/(?:Huawei|HUAWEI)([UY][^\\);]+)\\)'\n    device_replacement: '$1$2'\n    brand_replacement: 'Huawei'\n    model_replacement: '$2'\n  - regex: '; *([^;/]+) Build[/ ]Huawei(MT1-U06|[A-Z]+\\d+[^\\);]+)[^\\);]*\\)'\n    device_replacement: '$1'\n    brand_replacement: 'Huawei'\n    model_replacement: '$2'\n  - regex: '; *(S7|M860) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Huawei'\n    model_replacement: '$1'\n  - regex: '; *((?:HUAWEI|Huawei)[ \\-]?)(MediaPad) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Huawei'\n    model_replacement: '$2'\n  - regex: '; *((?:HUAWEI[ _]?|Huawei[ _])?Ascend[ _])([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Huawei'\n    model_replacement: '$2'\n  - regex: '; *((?:HUAWEI|Huawei)[ _\\-]?)((?:G700-|MT-)[^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Huawei'\n    model_replacement: '$2'\n  - regex: '; *((?:HUAWEI|Huawei)[ _\\-]?)([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Huawei'\n    model_replacement: '$2'\n  - regex: '; *(MediaPad[^;]+|SpringBoard) Build/Huawei'\n    device_replacement: '$1'\n    brand_replacement: 'Huawei'\n    model_replacement: '$1'\n  - regex: '; *([^;]+) Build/(?:Huawei|HUAWEI)'\n    device_replacement: '$1'\n    brand_replacement: 'Huawei'\n    model_replacement: '$1'\n  - regex: '; *([Uu])([89]\\d{3}) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Huawei'\n    model_replacement: 'U$2'\n  - regex: '; *(?:Ideos |IDEOS )(S7) Build'\n    device_replacement: 'Huawei Ideos$1'\n    brand_replacement: 'Huawei'\n    model_replacement: 'Ideos$1'\n  - regex: '; *(?:Ideos |IDEOS )([^;/]+\\s*|\\s*)Build'\n    device_replacement: 'Huawei Ideos$1'\n    brand_replacement: 'Huawei'\n    model_replacement: 'Ideos$1'\n  - regex: '; *(Orange Daytona|Pulse|Pulse Mini|Vodafone 858|C8500|C8600|C8650|C8660|Nexus 6P|ATH-.+?) Build[/ ]'\n    device_replacement: 'Huawei $1'\n    brand_replacement: 'Huawei'\n    model_replacement: '$1'\n\n  #########\n  # HTC\n  # @ref: http://www.htc.com/www/products/\n  # @ref: http://en.wikipedia.org/wiki/List_of_HTC_phones\n  #########\n\n  - regex: '; *HTC[ _]([^;]+); Windows Phone'\n    device_replacement: 'HTC $1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n\n  # Android HTC with Version Number matcher\n  # ; HTC_0P3Z11/1.12.161.3 Build\n  # ;HTC_A3335 V2.38.841.1 Build\n  - regex: '; *(?:HTC[ _/])+([^ _/]+)(?:[/\\\\]1\\.0 | V|/| +)\\d+\\.\\d[\\d\\.]*(?: *Build|\\))'\n    device_replacement: 'HTC $1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n  - regex: '; *(?:HTC[ _/])+([^ _/]+)(?:[ _/]([^ _/]+))?(?:[/\\\\]1\\.0 | V|/| +)\\d+\\.\\d[\\d\\.]*(?: *Build|\\))'\n    device_replacement: 'HTC $1 $2'\n    brand_replacement: 'HTC'\n    model_replacement: '$1 $2'\n  - regex: '; *(?:HTC[ _/])+([^ _/]+)(?:[ _/]([^ _/]+)(?:[ _/]([^ _/]+))?)?(?:[/\\\\]1\\.0 | V|/| +)\\d+\\.\\d[\\d\\.]*(?: *Build|\\))'\n    device_replacement: 'HTC $1 $2 $3'\n    brand_replacement: 'HTC'\n    model_replacement: '$1 $2 $3'\n  - regex: '; *(?:HTC[ _/])+([^ _/]+)(?:[ _/]([^ _/]+)(?:[ _/]([^ _/]+)(?:[ _/]([^ _/]+))?)?)?(?:[/\\\\]1\\.0 | V|/| +)\\d+\\.\\d[\\d\\.]*(?: *Build|\\))'\n    device_replacement: 'HTC $1 $2 $3 $4'\n    brand_replacement: 'HTC'\n    model_replacement: '$1 $2 $3 $4'\n\n  # Android HTC without Version Number matcher\n  - regex: '; *(?:(?:HTC|htc)(?:_blocked)*[ _/])+([^ _/;]+)(?: *Build|[;\\)]| - )'\n    device_replacement: 'HTC $1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n  - regex: '; *(?:(?:HTC|htc)(?:_blocked)*[ _/])+([^ _/]+)(?:[ _/]([^ _/;\\)]+))?(?: *Build|[;\\)]| - )'\n    device_replacement: 'HTC $1 $2'\n    brand_replacement: 'HTC'\n    model_replacement: '$1 $2'\n  - regex: '; *(?:(?:HTC|htc)(?:_blocked)*[ _/])+([^ _/]+)(?:[ _/]([^ _/]+)(?:[ _/]([^ _/;\\)]+))?)?(?: *Build|[;\\)]| - )'\n    device_replacement: 'HTC $1 $2 $3'\n    brand_replacement: 'HTC'\n    model_replacement: '$1 $2 $3'\n  - regex: '; *(?:(?:HTC|htc)(?:_blocked)*[ _/])+([^ _/]+)(?:[ _/]([^ _/]+)(?:[ _/]([^ _/]+)(?:[ _/]([^ /;]+))?)?)?(?: *Build|[;\\)]| - )'\n    device_replacement: 'HTC $1 $2 $3 $4'\n    brand_replacement: 'HTC'\n    model_replacement: '$1 $2 $3 $4'\n\n  # HTC Streaming Player\n  - regex: 'HTC Streaming Player [^\\/]*/[^\\/]*/ htc_([^/]+) /'\n    device_replacement: 'HTC $1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n  # general matcher for anything else\n  - regex: '(?:[;,] *|^)(?:htccn_chs-)?HTC[ _-]?([^;]+?)(?: *Build|clay|Android|-?Mozilla| Opera| Profile| UNTRUSTED|[;/\\(\\)]|$)'\n    regex_flag: 'i'\n    device_replacement: 'HTC $1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n  # Android matchers without HTC\n  - regex: '; *(A6277|ADR6200|ADR6300|ADR6350|ADR6400[A-Z]*|ADR6425[A-Z]*|APX515CKT|ARIA|Desire[^_ ]*|Dream|EndeavorU|Eris|Evo|Flyer|HD2|Hero|HERO200|Hero CDMA|HTL21|Incredible|Inspire[A-Z0-9]*|Legend|Liberty|Nexus ?(?:One|HD2)|One|One S C2|One[ _]?(?:S|V|X\\+?)\\w*|PC36100|PG06100|PG86100|S31HT|Sensation|Wildfire)(?: Build|[/;\\(\\)])'\n    regex_flag: 'i'\n    device_replacement: 'HTC $1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n  - regex: '; *(ADR6200|ADR6400L|ADR6425LVW|Amaze|DesireS?|EndeavorU|Eris|EVO|Evo\\d[A-Z]+|HD2|IncredibleS?|Inspire[A-Z0-9]*|Inspire[A-Z0-9]*|Sensation[A-Z0-9]*|Wildfire)[ _-](.+?)(?:[/;\\)]|Build|MIUI|1\\.0)'\n    regex_flag: 'i'\n    device_replacement: 'HTC $1 $2'\n    brand_replacement: 'HTC'\n    model_replacement: '$1 $2'\n\n  #########\n  # Hyundai\n  # @ref: http://www.hyundaitechnologies.com\n  #########\n  - regex: '; *HYUNDAI (T\\d[^/]*) Build'\n    device_replacement: 'Hyundai $1'\n    brand_replacement: 'Hyundai'\n    model_replacement: '$1'\n  - regex: '; *HYUNDAI ([^;/]+) Build'\n    device_replacement: 'Hyundai $1'\n    brand_replacement: 'Hyundai'\n    model_replacement: '$1'\n  # X900? http://www.amazon.com/Hyundai-X900-Retina-Android-Bluetooth/dp/B00AO07H3O\n  - regex: '; *(X700|Hold X|MB-6900) Build'\n    device_replacement: 'Hyundai $1'\n    brand_replacement: 'Hyundai'\n    model_replacement: '$1'\n\n  #########\n  # iBall\n  # @ref: http://www.iball.co.in/Category/Mobiles/22\n  #########\n  - regex: '; *(?:iBall[ _\\-])?(Andi)[ _]?(\\d[^;/]*) Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'iBall'\n    model_replacement: '$1 $2'\n  - regex: '; *(IBall)(?:[ _]([^;/]+)|) Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'iBall'\n    model_replacement: '$2'\n\n  #########\n  # IconBIT\n  # @ref: http://www.iconbit.com/catalog/tablets/\n  #########\n  - regex: '; *(NT-\\d+[^ ;/]*|Net[Tt]AB [^;/]+|Mercury [A-Z]+|iconBIT)(?: S/N:[^;/]+)? Build'\n    device_replacement: '$1'\n    brand_replacement: 'IconBIT'\n    model_replacement: '$1'\n\n  #########\n  # IMO\n  # @ref: http://www.ponselimo.com/\n  #########\n  - regex: '; *(IMO)[ _]([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'IMO'\n    model_replacement: '$2'\n\n  #########\n  # i-mobile\n  # @ref: http://www.i-mobilephone.com/\n  #########\n  - regex: '; *i-?mobile[ _]([^/]+) Build/'\n    regex_flag: 'i'\n    device_replacement: 'i-mobile $1'\n    brand_replacement: 'imobile'\n    model_replacement: '$1'\n  - regex: '; *(i-(?:style|note)[^/]*) Build/'\n    regex_flag: 'i'\n    device_replacement: 'i-mobile $1'\n    brand_replacement: 'imobile'\n    model_replacement: '$1'\n\n  #########\n  # Impression\n  # @ref: http://impression.ua/planshetnye-kompyutery\n  #########\n  - regex: '; *(ImPAD) ?(\\d+(?:.)*) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Impression'\n    model_replacement: '$1 $2'\n\n  #########\n  # Infinix\n  # @ref: http://www.infinixmobility.com/index.html\n  #########\n  - regex: '; *(Infinix)[ _]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Infinix'\n    model_replacement: '$2'\n\n  #########\n  # Informer\n  # @ref: ??\n  #########\n  - regex: '; *(Informer)[ \\-]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Informer'\n    model_replacement: '$2'\n\n  #########\n  # Intenso\n  # @ref: http://www.intenso.de\n  # @models: 7\":TAB 714,TAB 724;8\":TAB 814,TAB 824;10\":TAB 1004\n  #########\n  - regex: '; *(TAB) ?([78][12]4) Build'\n    device_replacement: 'Intenso $1'\n    brand_replacement: 'Intenso'\n    model_replacement: '$1 $2'\n\n  #########\n  # Intex\n  # @ref: http://intexmobile.in/index.aspx\n  # @note: Zync also offers a \"Cloud Z5\" device\n  #########\n  # smartphones\n  - regex: '; *(?:Intex[ _])?(AQUA|Aqua)([ _\\.\\-])([^;/]+) *(?:Build|;)'\n    device_replacement: '$1$2$3'\n    brand_replacement: 'Intex'\n    model_replacement: '$1 $3'\n  # matches \"INTEX CLOUD X1\"\n  - regex: '; *(?:INTEX|Intex)(?:[_ ]([^\\ _;/]+))(?:[_ ]([^\\ _;/]+))? *(?:Build|;)'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Intex'\n    model_replacement: '$1 $2'\n  # tablets\n  - regex: '; *([iI]Buddy)[ _]?(Connect)(?:_|\\?_| )?([^;/]*) *(?:Build|;)'\n    device_replacement: '$1 $2 $3'\n    brand_replacement: 'Intex'\n    model_replacement: 'iBuddy $2 $3'\n  - regex: '; *(I-Buddy)[ _]([^;/]+) *(?:Build|;)'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Intex'\n    model_replacement: 'iBuddy $2'\n\n  #########\n  # iOCEAN\n  # @ref: http://www.iocean.cc/\n  #########\n  - regex: '; *(iOCEAN) ([^/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'iOCEAN'\n    model_replacement: '$2'\n\n  #########\n  # i.onik\n  # @ref: http://www.i-onik.de/\n  #########\n  - regex: '; *(TP\\d+(?:\\.\\d+)?\\-\\d[^;/]+) Build'\n    device_replacement: 'ionik $1'\n    brand_replacement: 'ionik'\n    model_replacement: '$1'\n\n  #########\n  # IRU.ru\n  # @ref: http://www.iru.ru/catalog/soho/planetable/\n  #########\n  - regex: '; *(M702pro) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Iru'\n    model_replacement: '$1'\n\n  #########\n  # Ivio\n  # @ref: http://www.ivio.com/mobile.php\n  # @models: DG80,DG20,DE38,DE88,MD70\n  #########\n  - regex: '; *(DE88Plus|MD70) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Ivio'\n    model_replacement: '$1'\n  - regex: '; *IVIO[_\\-]([^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Ivio'\n    model_replacement: '$1'\n\n  #########\n  # Jaytech\n  # @ref: http://www.jay-tech.de/jaytech/servlet/frontend/\n  #########\n  - regex: '; *(TPC-\\d+|JAY-TECH) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Jaytech'\n    model_replacement: '$1'\n\n  #########\n  # Jiayu\n  # @ref: http://www.ejiayu.com/en/Product.html\n  #########\n  - regex: '; *(JY-[^;/]+|G[234]S?) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Jiayu'\n    model_replacement: '$1'\n\n  #########\n  # JXD\n  # @ref: http://www.jxd.hk/\n  #########\n  - regex: '; *(JXD)[ _\\-]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'JXD'\n    model_replacement: '$2'\n\n  #########\n  # Karbonn\n  # @ref: http://www.karbonnmobiles.com/products_tablet.php\n  #########\n  - regex: '; *Karbonn[ _]?([^;/]+) *(?:Build|;)'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Karbonn'\n    model_replacement: '$1'\n  - regex: '; *([^;]+) Build/Karbonn'\n    device_replacement: '$1'\n    brand_replacement: 'Karbonn'\n    model_replacement: '$1'\n  - regex: '; *(A11|A39|A37|A34|ST8|ST10|ST7|Smart Tab3|Smart Tab2|Titanium S\\d) +Build'\n    device_replacement: '$1'\n    brand_replacement: 'Karbonn'\n    model_replacement: '$1'\n\n  #########\n  # KDDI (Operator Branded Device)\n  # @ref: http://www.ipentec.com/document/document.aspx?page=android-useragent\n  #########\n  - regex: '; *(IS01|IS03|IS05|IS\\d{2}SH) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Sharp'\n    model_replacement: '$1'\n  - regex: '; *(IS04) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Regza'\n    model_replacement: '$1'\n  - regex: '; *(IS06|IS\\d{2}PT) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Pantech'\n    model_replacement: '$1'\n  - regex: '; *(IS11S) Build'\n    device_replacement: '$1'\n    brand_replacement: 'SonyEricsson'\n    model_replacement: 'Xperia Acro'\n  - regex: '; *(IS11CA) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Casio'\n    model_replacement: 'GzOne $1'\n  - regex: '; *(IS11LG) Build'\n    device_replacement: '$1'\n    brand_replacement: 'LG'\n    model_replacement: 'Optimus X'\n  - regex: '; *(IS11N) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Medias'\n    model_replacement: '$1'\n  - regex: '; *(IS11PT) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Pantech'\n    model_replacement: 'MIRACH'\n  - regex: '; *(IS12F) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Fujitsu'\n    model_replacement: 'Arrows ES'\n  # @ref: https://ja.wikipedia.org/wiki/IS12M\n  - regex: '; *(IS12M) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Motorola'\n    model_replacement: 'XT909'\n  - regex: '; *(IS12S) Build'\n    device_replacement: '$1'\n    brand_replacement: 'SonyEricsson'\n    model_replacement: 'Xperia Acro HD'\n  - regex: '; *(ISW11F) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Fujitsu'\n    model_replacement: 'Arrowz Z'\n  - regex: '; *(ISW11HT) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: 'EVO'\n  - regex: '; *(ISW11K) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Kyocera'\n    model_replacement: 'DIGNO'\n  - regex: '; *(ISW11M) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Motorola'\n    model_replacement: 'Photon'\n  - regex: '; *(ISW11SC) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Samsung'\n    model_replacement: 'GALAXY S II WiMAX'\n  - regex: '; *(ISW12HT) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: 'EVO 3D'\n  - regex: '; *(ISW13HT) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: 'J'\n  - regex: '; *(ISW?[0-9]{2}[A-Z]{0,2}) Build'\n    device_replacement: '$1'\n    brand_replacement: 'KDDI'\n    model_replacement: '$1'\n  - regex: '; *(INFOBAR [^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'KDDI'\n    model_replacement: '$1'\n\n  #########\n  # Kingcom\n  # @ref: http://www.e-kingcom.com\n  #########\n  - regex: '; *(JOYPAD|Joypad)[ _]([^;/]+) Build/'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Kingcom'\n    model_replacement: '$1 $2'\n\n  #########\n  # Kobo\n  # @ref: https://en.wikipedia.org/wiki/Kobo_Inc.\n  # @ref: http://www.kobo.com/devices#tablets\n  #########\n  - regex: '; *(Vox|VOX|Arc|K080) Build/'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Kobo'\n    model_replacement: '$1'\n  - regex: '\\b(Kobo Touch)\\b'\n    device_replacement: '$1'\n    brand_replacement: 'Kobo'\n    model_replacement: '$1'\n\n  #########\n  # K-Touch\n  # @ref: ??\n  #########\n  - regex: '; *(K-Touch)[ _]([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Ktouch'\n    model_replacement: '$2'\n\n  #########\n  # KT Tech\n  # @ref: http://www.kttech.co.kr\n  #########\n  - regex: '; *((?:EV|KM)-S\\d+[A-Z]?) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'KTtech'\n    model_replacement: '$1'\n\n  #########\n  # Kyocera\n  # @ref: http://www.android.com/devices/?country=all&m=kyocera\n  #########\n  - regex: '; *(Zio|Hydro|Torque|Event|EVENT|Echo|Milano|Rise|URBANO PROGRESSO|WX04K|WX06K|WX10K|KYL21|101K|C5[12]\\d{2}) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Kyocera'\n    model_replacement: '$1'\n\n  #########\n  # Lava\n  # @ref: http://www.lavamobiles.com/\n  #########\n  - regex: '; *(?:LAVA[ _])?IRIS[ _\\-]?([^/;\\)]+) *(?:;|\\)|Build)'\n    regex_flag: 'i'\n    device_replacement: 'Iris $1'\n    brand_replacement: 'Lava'\n    model_replacement: 'Iris $1'\n  - regex: '; *LAVA[ _]([^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Lava'\n    model_replacement: '$1'\n\n  #########\n  # Lemon\n  # @ref: http://www.lemonmobiles.com/products.php?type=1\n  #########\n  - regex: '; *(?:(Aspire A1)|(?:LEMON|Lemon)[ _]([^;/]+))_? Build'\n    device_replacement: 'Lemon $1$2'\n    brand_replacement: 'Lemon'\n    model_replacement: '$1$2'\n\n  #########\n  # Lenco\n  # @ref: http://www.lenco.com/c/tablets/\n  #########\n  - regex: '; *(TAB-1012) Build/'\n    device_replacement: 'Lenco $1'\n    brand_replacement: 'Lenco'\n    model_replacement: '$1'\n  - regex: '; Lenco ([^;/]+) Build/'\n    device_replacement: 'Lenco $1'\n    brand_replacement: 'Lenco'\n    model_replacement: '$1'\n\n  #########\n  # Lenovo\n  # @ref: http://support.lenovo.com/en_GB/downloads/default.page?#\n  #########\n  - regex: '; *(A1_07|A2107A-H|S2005A-H|S1-37AH0) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1'\n  - regex: '; *(Idea[Tp]ab)[ _]([^;/]+);? Build'\n    device_replacement: 'Lenovo $1 $2'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1 $2'\n  - regex: '; *(Idea(?:Tab|pad)) ?([^;/]+) Build'\n    device_replacement: 'Lenovo $1 $2'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1 $2'\n  - regex: '; *(ThinkPad) ?(Tablet) Build/'\n    device_replacement: 'Lenovo $1 $2'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1 $2'\n  - regex: '; *(?:LNV-)?(?:=?[Ll]enovo[ _\\-]?|LENOVO[ _])+(.+?)(?:Build|[;/\\)])'\n    device_replacement: 'Lenovo $1'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1'\n  - regex: '[;,] (?:Vodafone )?(SmartTab) ?(II) ?(\\d+) Build/'\n    device_replacement: 'Lenovo $1 $2 $3'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1 $2 $3'\n  - regex: '; *(?:Ideapad )?K1 Build/'\n    device_replacement: 'Lenovo Ideapad K1'\n    brand_replacement: 'Lenovo'\n    model_replacement: 'Ideapad K1'\n  - regex: '; *(3GC101|3GW10[01]|A390) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1'\n  - regex: '\\b(?:Lenovo|LENOVO)+[ _\\-]?([^,;:/ ]+)'\n    device_replacement: 'Lenovo $1'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1'\n\n  #########\n  # Lexibook\n  # @ref: http://www.lexibook.com/fr\n  #########\n  - regex: '; *(MFC\\d+)[A-Z]{2}([^;,/]*),? Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Lexibook'\n    model_replacement: '$1$2'\n\n  #########\n  # LG\n  # @ref: http://www.lg.com/uk/mobile\n  #########\n  - regex: '; *(E[34][0-9]{2}|LS[6-8][0-9]{2}|VS[6-9][0-9]+[^;/]+|Nexus 4|Nexus 5X?|GT540f?|Optimus (?:2X|G|4X HD)|OptimusX4HD) *(?:Build|;)'\n    device_replacement: '$1'\n    brand_replacement: 'LG'\n    model_replacement: '$1'\n  - regex: '[;:] *(L-\\d+[A-Z]|LGL\\d+[A-Z]?)(?:/V\\d+)? *(?:Build|[;\\)])'\n    device_replacement: '$1'\n    brand_replacement: 'LG'\n    model_replacement: '$1'\n  - regex: '; *(LG-)([A-Z]{1,2}\\d{2,}[^,;/\\)\\(]*?)(?:Build| V\\d+|[,;/\\)\\(]|$)'\n    device_replacement: '$1$2'\n    brand_replacement: 'LG'\n    model_replacement: '$2'\n  - regex: '; *(LG[ \\-]|LG)([^;/]+)[;/]? Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'LG'\n    model_replacement: '$2'\n  - regex: '^(LG)-([^;/]+)/ Mozilla/.*; Android'\n    device_replacement: '$1 $2'\n    brand_replacement: 'LG'\n    model_replacement: '$2'\n  - regex: '(Web0S); Linux/(SmartTV)'\n    device_replacement: 'LG $1 $2'\n    brand_replacement: 'LG'\n    model_replacement: '$1 $2'\n\n  #########\n  # Malata\n  # @ref: http://www.malata.com/en/products.aspx?classid=680\n  #########\n  - regex: '; *((?:SMB|smb)[^;/]+) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Malata'\n    model_replacement: '$1'\n  - regex: '; *(?:Malata|MALATA) ([^;/]+) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Malata'\n    model_replacement: '$1'\n\n  #########\n  # Manta\n  # @ref: http://www.manta.com.pl/en\n  #########\n  - regex: '; *(MS[45][0-9]{3}|MID0[568][NS]?|MID[1-9]|MID[78]0[1-9]|MID970[1-9]|MID100[1-9]) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Manta'\n    model_replacement: '$1'\n\n  #########\n  # Match\n  # @ref: http://www.match.net.cn/products.asp\n  #########\n  - regex: '; *(M1052|M806|M9000|M9100|M9701|MID100|MID120|MID125|MID130|MID135|MID140|MID701|MID710|MID713|MID727|MID728|MID731|MID732|MID733|MID735|MID736|MID737|MID760|MID800|MID810|MID820|MID830|MID833|MID835|MID860|MID900|MID930|MID933|MID960|MID980) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Match'\n    model_replacement: '$1'\n\n  #########\n  # Maxx\n  # @ref: http://www.maxxmobile.in/\n  # @models: Maxx MSD7-Play, Maxx MX245+ Trance, Maxx AX8 Race, Maxx MSD7 3G- AX50, Maxx Genx Droid 7 - AX40, Maxx AX5 Duo,\n  #   Maxx AX3 Duo, Maxx AX3, Maxx AX8 Note II (Note 2), Maxx AX8 Note I, Maxx AX8, Maxx AX5 Plus, Maxx MSD7 Smarty,\n  #   Maxx AX9Z Race,\n  #   Maxx MT150, Maxx MQ601, Maxx M2020, Maxx Sleek MX463neo, Maxx MX525, Maxx MX192-Tune, Maxx Genx Droid 7 AX353,\n  # @note: Need more User-Agents!!!\n  #########\n  - regex: '; *(GenxDroid7|MSD7.*|AX\\d.*|Tab 701|Tab 722) Build/'\n    device_replacement: 'Maxx $1'\n    brand_replacement: 'Maxx'\n    model_replacement: '$1'\n\n  #########\n  # Mediacom\n  # @ref: http://www.mediacomeurope.it/\n  #########\n  - regex: '; *(M-PP[^;/]+|PhonePad ?\\d{2,}[^;/]+) Build'\n    device_replacement: 'Mediacom $1'\n    brand_replacement: 'Mediacom'\n    model_replacement: '$1'\n  - regex: '; *(M-MP[^;/]+|SmartPad ?\\d{2,}[^;/]+) Build'\n    device_replacement: 'Mediacom $1'\n    brand_replacement: 'Mediacom'\n    model_replacement: '$1'\n\n  #########\n  # Medion\n  # @ref: http://www.medion.com/en/\n  #########\n  - regex: '; *(?:MD_)?LIFETAB[ _]([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: 'Medion Lifetab $1'\n    brand_replacement: 'Medion'\n    model_replacement: 'Lifetab $1'\n  - regex: '; *MEDION ([^;/]+) Build'\n    device_replacement: 'Medion $1'\n    brand_replacement: 'Medion'\n    model_replacement: '$1'\n\n  #########\n  # Meizu\n  # @ref: http://www.meizu.com\n  #########\n  - regex: '; *(M030|M031|M035|M040|M065|m9) Build'\n    device_replacement: 'Meizu $1'\n    brand_replacement: 'Meizu'\n    model_replacement: '$1'\n  - regex: '; *(?:meizu_|MEIZU )(.+?) *(?:Build|[;\\)])'\n    device_replacement: 'Meizu $1'\n    brand_replacement: 'Meizu'\n    model_replacement: '$1'\n\n  #########\n  # Micromax\n  # @ref: http://www.micromaxinfo.com\n  #########\n  - regex: '; *(?:Micromax[ _](A111|A240)|(A111|A240)) Build'\n    regex_flag: 'i'\n    device_replacement: 'Micromax $1$2'\n    brand_replacement: 'Micromax'\n    model_replacement: '$1$2'\n  - regex: '; *Micromax[ _](A\\d{2,3}[^;/]*) Build'\n    regex_flag: 'i'\n    device_replacement: 'Micromax $1'\n    brand_replacement: 'Micromax'\n    model_replacement: '$1'\n  # be carefull here with Acer e.g. A500\n  - regex: '; *(A\\d{2}|A[12]\\d{2}|A90S|A110Q) Build'\n    regex_flag: 'i'\n    device_replacement: 'Micromax $1'\n    brand_replacement: 'Micromax'\n    model_replacement: '$1'\n  - regex: '; *Micromax[ _](P\\d{3}[^;/]*) Build'\n    regex_flag: 'i'\n    device_replacement: 'Micromax $1'\n    brand_replacement: 'Micromax'\n    model_replacement: '$1'\n  - regex: '; *(P\\d{3}|P\\d{3}\\(Funbook\\)) Build'\n    regex_flag: 'i'\n    device_replacement: 'Micromax $1'\n    brand_replacement: 'Micromax'\n    model_replacement: '$1'\n\n  #########\n  # Mito\n  # @ref: http://new.mitomobile.com/\n  #########\n  - regex: '; *(MITO)[ _\\-]?([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Mito'\n    model_replacement: '$2'\n\n  #########\n  # Mobistel\n  # @ref: http://www.mobistel.com/\n  #########\n  - regex: '; *(Cynus)[ _](F5|T\\d|.+?) *(?:Build|[;/\\)])'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Mobistel'\n    model_replacement: '$1 $2'\n\n  #########\n  # Modecom\n  # @ref: http://www.modecom.eu/tablets/portal/\n  #########\n  - regex: '; *(MODECOM )?(FreeTab) ?([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1$2 $3'\n    brand_replacement: 'Modecom'\n    model_replacement: '$2 $3'\n  - regex: '; *(MODECOM )([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Modecom'\n    model_replacement: '$2'\n\n  #########\n  # Motorola\n  # @ref: http://www.motorola.com/us/shop-all-mobile-phones/\n  #########\n  - regex: '; *(MZ\\d{3}\\+?|MZ\\d{3} 4G|Xoom|XOOM[^;/]*) Build'\n    device_replacement: 'Motorola $1'\n    brand_replacement: 'Motorola'\n    model_replacement: '$1'\n  - regex: '; *(Milestone )(XT[^;/]*) Build'\n    device_replacement: 'Motorola $1$2'\n    brand_replacement: 'Motorola'\n    model_replacement: '$2'\n  - regex: '; *(Motoroi ?x|Droid X|DROIDX) Build'\n    regex_flag: 'i'\n    device_replacement: 'Motorola $1'\n    brand_replacement: 'Motorola'\n    model_replacement: 'DROID X'\n  - regex: '; *(Droid[^;/]*|DROID[^;/]*|Milestone[^;/]*|Photon|Triumph|Devour|Titanium) Build'\n    device_replacement: 'Motorola $1'\n    brand_replacement: 'Motorola'\n    model_replacement: '$1'\n  - regex: '; *(A555|A85[34][^;/]*|A95[356]|ME[58]\\d{2}\\+?|ME600|ME632|ME722|MB\\d{3}\\+?|MT680|MT710|MT870|MT887|MT917|WX435|WX453|WX44[25]|XT\\d{3,4}[A-Z\\+]*|CL[iI]Q|CL[iI]Q XT) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Motorola'\n    model_replacement: '$1'\n  - regex: '; *(Motorola MOT-|Motorola[ _\\-]|MOT\\-?)([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Motorola'\n    model_replacement: '$2'\n  - regex: '; *(Moto[_ ]?|MOT\\-)([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Motorola'\n    model_replacement: '$2'\n\n  #########\n  # MpMan\n  # @ref: http://www.mpmaneurope.com\n  #########\n  - regex: '; *((?:MP[DQ]C|MPG\\d{1,4}|MP\\d{3,4}|MID(?:(?:10[234]|114|43|7[247]|8[24]|7)C|8[01]1))[^;/]*) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Mpman'\n    model_replacement: '$1'\n\n  #########\n  # MSI\n  # @ref: http://www.msi.com/product/windpad/\n  #########\n  - regex: '; *(?:MSI[ _])?(Primo\\d+|Enjoy[ _\\-][^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'Msi'\n    model_replacement: '$1'\n\n  #########\n  # Multilaser\n  # http://www.multilaser.com.br/listagem_produtos.php?cat=5\n  #########\n  - regex: '; *Multilaser[ _]([^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Multilaser'\n    model_replacement: '$1'\n\n  #########\n  # MyPhone\n  # @ref: http://myphone.com.ph/\n  #########\n  - regex: '; *(My)[_]?(Pad)[ _]([^;/]+) Build'\n    device_replacement: '$1$2 $3'\n    brand_replacement: 'MyPhone'\n    model_replacement: '$1$2 $3'\n  - regex: '; *(My)\\|?(Phone)[ _]([^;/]+) Build'\n    device_replacement: '$1$2 $3'\n    brand_replacement: 'MyPhone'\n    model_replacement: '$3'\n  - regex: '; *(A\\d+)[ _](Duo)? Build'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'MyPhone'\n    model_replacement: '$1 $2'\n\n  #########\n  # Mytab\n  # @ref: http://www.mytab.eu/en/category/mytab-products/\n  #########\n  - regex: '; *(myTab[^;/]*) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Mytab'\n    model_replacement: '$1'\n\n  #########\n  # Nabi\n  # @ref: https://www.nabitablet.com\n  #########\n  - regex: '; *(NABI2?-)([^;/]+) Build/'\n    device_replacement: '$1$2'\n    brand_replacement: 'Nabi'\n    model_replacement: '$2'\n\n  #########\n  # Nec Medias\n  # @ref: http://www.n-keitai.com/\n  #########\n  - regex: '; *(N-\\d+[CDE]) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Nec'\n    model_replacement: '$1'\n  - regex: '; ?(NEC-)(.*) Build/'\n    device_replacement: '$1$2'\n    brand_replacement: 'Nec'\n    model_replacement: '$2'\n  - regex: '; *(LT-NA7) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Nec'\n    model_replacement: 'Lifetouch Note'\n\n  #########\n  # Nextbook\n  # @ref: http://nextbookusa.com\n  #########\n  - regex: '; *(NXM\\d+[A-z0-9_]*|Next\\d[A-z0-9_ \\-]*|NEXT\\d[A-z0-9_ \\-]*|Nextbook [A-z0-9_ ]*|DATAM803HC|M805)(?: Build|[\\);])'\n    device_replacement: '$1'\n    brand_replacement: 'Nextbook'\n    model_replacement: '$1'\n\n  #########\n  # Nokia\n  # @ref: http://www.nokia.com\n  #########\n  - regex: '; *(Nokia)([ _\\-]*)([^;/]*) Build'\n    regex_flag: 'i'\n    device_replacement: '$1$2$3'\n    brand_replacement: 'Nokia'\n    model_replacement: '$3'\n\n  #########\n  # Nook\n  # @ref:\n  # TODO nook browser/1.0\n  #########\n  - regex: '; *(Nook ?|Barnes & Noble Nook |BN )([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Nook'\n    model_replacement: '$2'\n  - regex: '; *(NOOK )?(BNRV200|BNRV200A|BNTV250|BNTV250A|BNTV400|BNTV600|LogicPD Zoom2) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Nook'\n    model_replacement: '$2'\n  - regex: '; Build/(Nook)'\n    device_replacement: '$1'\n    brand_replacement: 'Nook'\n    model_replacement: 'Tablet'\n\n  #########\n  # Olivetti\n  # @ref: http://www.olivetti.de/EN/Page/t02/view_html?idp=348\n  #########\n  - regex: '; *(OP110|OliPad[^;/]+) Build'\n    device_replacement: 'Olivetti $1'\n    brand_replacement: 'Olivetti'\n    model_replacement: '$1'\n\n  #########\n  # Omega\n  # @ref: http://omega-technology.eu/en/produkty/346/tablets\n  # @note: MID tablets might get matched by CobyKyros first\n  # @models: (T107|MID(?:700[2-5]|7031|7108|7132|750[02]|8001|8500|9001|971[12])\n  #########\n  - regex: '; *OMEGA[ _\\-](MID[^;/]+) Build'\n    device_replacement: 'Omega $1'\n    brand_replacement: 'Omega'\n    model_replacement: '$1'\n  - regex: '^(MID7500|MID\\d+) Mozilla/5\\.0 \\(iPad;'\n    device_replacement: 'Omega $1'\n    brand_replacement: 'Omega'\n    model_replacement: '$1'\n\n  #########\n  # OpenPeak\n  # @ref: https://support.google.com/googleplay/answer/1727131?hl=en\n  #########\n  - regex: '; *((?:CIUS|cius)[^;/]*) Build'\n    device_replacement: 'Openpeak $1'\n    brand_replacement: 'Openpeak'\n    model_replacement: '$1'\n\n  #########\n  # Oppo\n  # @ref: http://en.oppo.com/products/\n  #########\n  - regex: '; *(Find ?(?:5|7a)|R8[012]\\d{1,2}|T703\\d{0,1}|U70\\d{1,2}T?|X90\\d{1,2}) Build'\n    device_replacement: 'Oppo $1'\n    brand_replacement: 'Oppo'\n    model_replacement: '$1'\n  - regex: '; *OPPO ?([^;/]+) Build/'\n    device_replacement: 'Oppo $1'\n    brand_replacement: 'Oppo'\n    model_replacement: '$1'\n\n  #########\n  # Odys\n  # @ref: http://odys.de\n  #########\n  - regex: '; *(?:Odys\\-|ODYS\\-|ODYS )([^;/]+) Build'\n    device_replacement: 'Odys $1'\n    brand_replacement: 'Odys'\n    model_replacement: '$1'\n  - regex: '; *(SELECT) ?(7) Build'\n    device_replacement: 'Odys $1 $2'\n    brand_replacement: 'Odys'\n    model_replacement: '$1 $2'\n  - regex: '; *(PEDI)_(PLUS)_(W) Build'\n    device_replacement: 'Odys $1 $2 $3'\n    brand_replacement: 'Odys'\n    model_replacement: '$1 $2 $3'\n  # Weltbild - Tablet PC 4 = Cat Phoenix = Odys Tablet PC 4?\n  - regex: '; *(AEON|BRAVIO|FUSION|FUSION2IN1|Genio|EOS10|IEOS[^;/]*|IRON|Loox|LOOX|LOOX Plus|Motion|NOON|NOON_PRO|NEXT|OPOS|PEDI[^;/]*|PRIME[^;/]*|STUDYTAB|TABLO|Tablet-PC-4|UNO_X8|XELIO[^;/]*|Xelio ?\\d+ ?[Pp]ro|XENO10|XPRESS PRO) Build'\n    device_replacement: 'Odys $1'\n    brand_replacement: 'Odys'\n    model_replacement: '$1'\n\n  #########\n  # OnePlus\n  # @ref https://oneplus.net/\n  #########\n  - regex: '; (ONE [a-zA-Z]\\d+) Build/'\n    device_replacement: 'OnePlus $1'\n    brand_replacement: 'OnePlus'\n    model_replacement: '$1'\n  - regex: '; (ONEPLUS [a-zA-Z]\\d+) Build/'\n    device_replacement: 'OnePlus $1'\n    brand_replacement: 'OnePlus'\n    model_replacement: '$1'\n\n  #########\n  # Orion\n  # @ref: http://www.orion.ua/en/products/computer-products/tablet-pcs.html\n  #########\n  - regex: '; *(TP-\\d+) Build/'\n    device_replacement: 'Orion $1'\n    brand_replacement: 'Orion'\n    model_replacement: '$1'\n\n  #########\n  # PackardBell\n  # @ref: http://www.packardbell.com/pb/en/AE/content/productgroup/tablets\n  #########\n  - regex: '; *(G100W?) Build/'\n    device_replacement: 'PackardBell $1'\n    brand_replacement: 'PackardBell'\n    model_replacement: '$1'\n\n  #########\n  # Panasonic\n  # @ref: http://panasonic.jp/mobile/\n  # @models: T11, T21, T31, P11, P51, Eluga Power, Eluga DL1\n  # @models: (tab) Toughpad FZ-A1, Toughpad JT-B1\n  #########\n  - regex: '; *(Panasonic)[_ ]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  # Toughpad\n  - regex: '; *(FZ-A1B|JT-B1) Build'\n    device_replacement: 'Panasonic $1'\n    brand_replacement: 'Panasonic'\n    model_replacement: '$1'\n  # Eluga Power\n  - regex: '; *(dL1|DL1) Build'\n    device_replacement: 'Panasonic $1'\n    brand_replacement: 'Panasonic'\n    model_replacement: '$1'\n\n  #########\n  # Pantech\n  # @href: http://www.pantech.co.kr/en/prod/prodList.do?gbrand=PANTECH\n  # @href: http://www.pantech.co.kr/en/prod/prodList.do?gbrand=VEGA\n  # @models: ADR8995, ADR910L, ADR930VW, C790, CDM8992, CDM8999, IS06, IS11PT, P2000, P2020, P2030, P4100, P5000, P6010, P6020, P6030, P7000, P7040, P8000, P8010, P9020, P9050, P9060, P9070, P9090, PT001, PT002, PT003, TXT8040, TXT8045, VEGA PTL21\n  #########\n  - regex: '; *(SKY[ _])?(IM\\-[AT]\\d{3}[^;/]+).* Build/'\n    device_replacement: 'Pantech $1$2'\n    brand_replacement: 'Pantech'\n    model_replacement: '$1$2'\n  - regex: '; *((?:ADR8995|ADR910L|ADR930L|ADR930VW|PTL21|P8000)(?: 4G)?) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Pantech'\n    model_replacement: '$1'\n  - regex: '; *Pantech([^;/]+).* Build/'\n    device_replacement: 'Pantech $1'\n    brand_replacement: 'Pantech'\n    model_replacement: '$1'\n\n  #########\n  # Papayre\n  # @ref: http://grammata.es/\n  #########\n  - regex: '; *(papyre)[ _\\-]([^;/]+) Build/'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Papyre'\n    model_replacement: '$2'\n\n  #########\n  # Pearl\n  # @ref: http://www.pearl.de/c-1540.shtml\n  #########\n  - regex: '; *(?:Touchlet )?(X10\\.[^;/]+) Build/'\n    device_replacement: 'Pearl $1'\n    brand_replacement: 'Pearl'\n    model_replacement: '$1'\n\n  #########\n  # Phicomm\n  # @ref: http://www.phicomm.com.cn/\n  #########\n  - regex: '; PHICOMM (i800) Build/'\n    device_replacement: 'Phicomm $1'\n    brand_replacement: 'Phicomm'\n    model_replacement: '$1'\n  - regex: '; PHICOMM ([^;/]+) Build/'\n    device_replacement: 'Phicomm $1'\n    brand_replacement: 'Phicomm'\n    model_replacement: '$1'\n  - regex: '; *(FWS\\d{3}[^;/]+) Build/'\n    device_replacement: 'Phicomm $1'\n    brand_replacement: 'Phicomm'\n    model_replacement: '$1'\n\n  #########\n  # Philips\n  # @ref: http://www.support.philips.com/support/catalog/products.jsp?_dyncharset=UTF-8&country=&categoryid=MOBILE_PHONES_SMART_SU_CN_CARE&userLanguage=en&navCount=2&groupId=PC_PRODUCTS_AND_PHONES_GR_CN_CARE&catalogType=&navAction=push&userCountry=cn&title=Smartphones&cateId=MOBILE_PHONES_CA_CN_CARE\n  # @TODO: Philips Tablets User-Agents missing!\n  # @ref: http://www.support.philips.com/support/catalog/products.jsp?_dyncharset=UTF-8&country=&categoryid=ENTERTAINMENT_TABLETS_SU_CN_CARE&userLanguage=en&navCount=0&groupId=&catalogType=&navAction=push&userCountry=cn&title=Entertainment+Tablets&cateId=TABLETS_CA_CN_CARE\n  #########\n  # @note: this a best guess according to available philips models. Need more User-Agents\n  - regex: '; *(D633|D822|D833|T539|T939|V726|W335|W336|W337|W3568|W536|W5510|W626|W632|W6350|W6360|W6500|W732|W736|W737|W7376|W820|W832|W8355|W8500|W8510|W930) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Philips'\n    model_replacement: '$1'\n  - regex: '; *(?:Philips|PHILIPS)[ _]([^;/]+) Build'\n    device_replacement: 'Philips $1'\n    brand_replacement: 'Philips'\n    model_replacement: '$1'\n\n  #########\n  # Pipo\n  # @ref: http://www.pipo.cn/En/\n  #########\n  - regex: 'Android 4\\..*; *(M[12356789]|U[12368]|S[123])\\ ?(pro)? Build'\n    device_replacement: 'Pipo $1$2'\n    brand_replacement: 'Pipo'\n    model_replacement: '$1$2'\n\n  #########\n  # Ployer\n  # @ref: http://en.ployer.cn/\n  #########\n  - regex: '; *(MOMO[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Ployer'\n    model_replacement: '$1'\n\n  #########\n  # Polaroid/ Acho\n  # @ref: http://polaroidstore.com/store/start.asp?category_id=382&category_id2=0&order=title&filter1=&filter2=&filter3=&view=all\n  #########\n  - regex: '; *(?:Polaroid[ _])?((?:MIDC\\d{3,}|PMID\\d{2,}|PTAB\\d{3,})[^;/]*)(\\/[^;/]*)? Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Polaroid'\n    model_replacement: '$1'\n  - regex: '; *(?:Polaroid )(Tablet) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Polaroid'\n    model_replacement: '$1'\n\n  #########\n  # Pomp\n  # @ref: http://pompmobileshop.com/\n  #########\n  #~ TODO\n  - regex: '; *(POMP)[ _\\-](.+?) *(?:Build|[;/\\)])'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Pomp'\n    model_replacement: '$2'\n\n  #########\n  # Positivo\n  # @ref: http://www.positivoinformatica.com.br/www/pessoal/tablet-ypy/\n  #########\n  - regex: '; *(TB07STA|TB10STA|TB07FTA|TB10FTA) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Positivo'\n    model_replacement: '$1'\n  - regex: '; *(?:Positivo )?((?:YPY|Ypy)[^;/]+) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Positivo'\n    model_replacement: '$1'\n\n  #########\n  # POV\n  # @ref: http://www.pointofview-online.com/default2.php\n  # @TODO: Smartphone Models MOB-3515, MOB-5045-B missing\n  #########\n  - regex: '; *(MOB-[^;/]+) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'POV'\n    model_replacement: '$1'\n  - regex: '; *POV[ _\\-]([^;/]+) Build/'\n    device_replacement: 'POV $1'\n    brand_replacement: 'POV'\n    model_replacement: '$1'\n  - regex: '; *((?:TAB-PLAYTAB|TAB-PROTAB|PROTAB|PlayTabPro|Mobii[ _\\-]|TAB-P)[^;/]*) Build/'\n    device_replacement: 'POV $1'\n    brand_replacement: 'POV'\n    model_replacement: '$1'\n\n  #########\n  # Prestigio\n  # @ref: http://www.prestigio.com/catalogue/MultiPhones\n  # @ref: http://www.prestigio.com/catalogue/MultiPads\n  #########\n  - regex: '; *(?:Prestigio )?((?:PAP|PMP)\\d[^;/]+) Build/'\n    device_replacement: 'Prestigio $1'\n    brand_replacement: 'Prestigio'\n    model_replacement: '$1'\n\n  #########\n  # Proscan\n  # @ref: http://www.proscanvideo.com/products-search.asp?itemClass=TABLET&itemnmbr=\n  #########\n  - regex: '; *(PLT[0-9]{4}.*) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Proscan'\n    model_replacement: '$1'\n\n  #########\n  # QMobile\n  # @ref: http://www.qmobile.com.pk/\n  #########\n  - regex: '; *(A2|A5|A8|A900)_?(Classic)? Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Qmobile'\n    model_replacement: '$1 $2'\n  - regex: '; *(Q[Mm]obile)_([^_]+)_([^_]+) Build'\n    device_replacement: 'Qmobile $2 $3'\n    brand_replacement: 'Qmobile'\n    model_replacement: '$2 $3'\n  - regex: '; *(Q\\-?[Mm]obile)[_ ](A[^;/]+) Build'\n    device_replacement: 'Qmobile $2'\n    brand_replacement: 'Qmobile'\n    model_replacement: '$2'\n\n  #########\n  # Qmobilevn\n  # @ref: http://qmobile.vn/san-pham.html\n  #########\n  - regex: '; *(Q\\-Smart)[ _]([^;/]+) Build/'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Qmobilevn'\n    model_replacement: '$2'\n  - regex: '; *(Q\\-?[Mm]obile)[ _\\-](S[^;/]+) Build/'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Qmobilevn'\n    model_replacement: '$2'\n\n  #########\n  # Quanta\n  # @ref: ?\n  #########\n  - regex: '; *(TA1013) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Quanta'\n    model_replacement: '$1'\n\n  #########\n  # RCA\n  # @ref: http://rcamobilephone.com/\n  #########\n  - regex: '; (RCT\\w+) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'RCA'\n    model_replacement: '$1'\n\n  #########\n  # Rockchip\n  # @ref: http://www.rock-chips.com/a/cn/product/index.html\n  # @note: manufacturer sells chipsets - I assume that these UAs are dev-boards\n  #########\n  - regex: '; *(RK\\d+),? Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Rockchip'\n    model_replacement: '$1'\n  - regex: ' Build/(RK\\d+)'\n    device_replacement: '$1'\n    brand_replacement: 'Rockchip'\n    model_replacement: '$1'\n\n  #########\n  # Samsung Android Devices\n  # @ref: http://www.samsung.com/us/mobile/cell-phones/all-products\n  #########\n  - regex: '; *(SAMSUNG |Samsung )?((?:Galaxy (?:Note II|S\\d)|GT-I9082|GT-I9205|GT-N7\\d{3}|SM-N9005)[^;/]*)\\/?[^;/]* Build/'\n    device_replacement: 'Samsung $1$2'\n    brand_replacement: 'Samsung'\n    model_replacement: '$2'\n  - regex: '; *(Google )?(Nexus [Ss](?: 4G)?) Build/'\n    device_replacement: 'Samsung $1$2'\n    brand_replacement: 'Samsung'\n    model_replacement: '$2'\n  - regex: '; *(SAMSUNG |Samsung )([^\\/]*)\\/[^ ]* Build/'\n    device_replacement: 'Samsung $2'\n    brand_replacement: 'Samsung'\n    model_replacement: '$2'\n  - regex: '; *(Galaxy(?: Ace| Nexus| S ?II+|Nexus S| with MCR 1.2| Mini Plus 4G)?) Build/'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n  - regex: '; *(SAMSUNG[ _\\-] *)+([^;/]+) Build'\n    device_replacement: 'Samsung $2'\n    brand_replacement: 'Samsung'\n    model_replacement: '$2'\n  - regex: '; *(SAMSUNG-)?(GT\\-[BINPS]\\d{4}[^\\/]*)(\\/[^ ]*) Build'\n    device_replacement: 'Samsung $1$2$3'\n    brand_replacement: 'Samsung'\n    model_replacement: '$2'\n  - regex: '(?:; *|^)((?:GT\\-[BIiNPS]\\d{4}|I9\\d{2}0[A-Za-z\\+]?\\b)[^;/\\)]*?)(?:Build|Linux|MIUI|[;/\\)])'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n  - regex: '; (SAMSUNG-)([A-Za-z0-9\\-]+).* Build/'\n    device_replacement: 'Samsung $1$2'\n    brand_replacement: 'Samsung'\n    model_replacement: '$2'\n  - regex: '; *((?:SCH|SGH|SHV|SHW|SPH|SC|SM)\\-[A-Za-z0-9 ]+)(/?[^ ]*)? Build'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n  - regex: ' ((?:SCH)\\-[A-Za-z0-9 ]+)(/?[^ ]*)? Build'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n  - regex: '; *(Behold ?(?:2|II)|YP\\-G[^;/]+|EK-GC100|SCL21|I9300) Build'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n\n  #########\n  # Sharp\n  # @ref: http://www.sharp-phone.com/en/index.html\n  # @ref: http://www.android.com/devices/?country=all&m=sharp\n  #########\n  - regex: '; *(SH\\-?\\d\\d[^;/]+|SBM\\d[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Sharp'\n    model_replacement: '$1'\n  - regex: '; *(SHARP[ -])([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'Sharp'\n    model_replacement: '$2'\n\n  #########\n  # Simvalley\n  # @ref: http://www.simvalley-mobile.de/\n  #########\n  - regex: '; *(SPX[_\\-]\\d[^;/]*) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Simvalley'\n    model_replacement: '$1'\n  - regex: '; *(SX7\\-PEARL\\.GmbH) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Simvalley'\n    model_replacement: '$1'\n  - regex: '; *(SP[T]?\\-\\d{2}[^;/]*) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Simvalley'\n    model_replacement: '$1'\n\n  #########\n  # SK Telesys\n  # @ref: http://www.sk-w.com/phone/phone_list.jsp\n  # @ref: http://www.android.com/devices/?country=all&m=sk-telesys\n  #########\n  - regex: '; *(SK\\-.*) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'SKtelesys'\n    model_replacement: '$1'\n\n  #########\n  # Skytex\n  # @ref: http://skytex.com/android\n  #########\n  - regex: '; *(?:SKYTEX|SX)-([^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Skytex'\n    model_replacement: '$1'\n  - regex: '; *(IMAGINE [^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Skytex'\n    model_replacement: '$1'\n\n  #########\n  # SmartQ\n  # @ref: http://en.smartdevices.com.cn/Products/\n  # @models: Z8, X7, U7H, U7, T30, T20, Ten3, V5-II, T7-3G, SmartQ5, K7, S7, Q8, T19, Ten2, Ten, R10, T7, R7, V5, V7, SmartQ7\n  #########\n  - regex: '; *(SmartQ) ?([^;/]+) Build/'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  #########\n  # Smartbitt\n  # @ref: http://www.smartbitt.com/\n  # @missing: SBT Useragents\n  #########\n  - regex: '; *(WF7C|WF10C|SBT[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Smartbitt'\n    model_replacement: '$1'\n\n  #########\n  # Softbank (Operator Branded Devices)\n  # @ref: http://www.ipentec.com/document/document.aspx?page=android-useragent\n  #########\n  - regex: '; *(SBM(?:003SH|005SH|006SH|007SH|102SH)) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Sharp'\n    model_replacement: '$1'\n  - regex: '; *(003P|101P|101P11C|102P) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Panasonic'\n    model_replacement: '$1'\n  - regex: '; *(00\\dZ) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1'\n  - regex: '; HTC(X06HT) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n  - regex: '; *(001HT|X06HT) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n  - regex: '; *(201M) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Motorola'\n    model_replacement: 'XT902'\n\n  #########\n  # Trekstor\n  # @ref: http://www.trekstor.co.uk/surftabs-en.html\n  # @note: Must come before SonyEricsson\n  #########\n  - regex: '; *(ST\\d{4}.*)Build/ST'\n    device_replacement: 'Trekstor $1'\n    brand_replacement: 'Trekstor'\n    model_replacement: '$1'\n  - regex: '; *(ST\\d{4}.*) Build/'\n    device_replacement: 'Trekstor $1'\n    brand_replacement: 'Trekstor'\n    model_replacement: '$1'\n\n  #########\n  # SonyEricsson\n  # @note: Must come before nokia since they also use symbian\n  # @ref: http://www.android.com/devices/?country=all&m=sony-ericssons\n  # @TODO: type!\n  #########\n  # android matchers\n  - regex: '; *(Sony ?Ericsson ?)([^;/]+) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'SonyEricsson'\n    model_replacement: '$2'\n  - regex: '; *((?:SK|ST|E|X|LT|MK|MT|WT)\\d{2}[a-z0-9]*(?:-o)?|R800i|U20i) Build'\n    device_replacement: '$1'\n    brand_replacement: 'SonyEricsson'\n    model_replacement: '$1'\n  # TODO X\\d+ is wrong\n  - regex: '; *(Xperia (?:A8|Arc|Acro|Active|Live with Walkman|Mini|Neo|Play|Pro|Ray|X\\d+)[^;/]*) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'SonyEricsson'\n    model_replacement: '$1'\n\n  #########\n  # Sony\n  # @ref: http://www.sonymobile.co.jp/index.html\n  # @ref: http://www.sonymobile.com/global-en/products/phones/\n  # @ref: http://www.sony.jp/tablet/\n  #########\n  - regex: '; Sony (Tablet[^;/]+) Build'\n    device_replacement: 'Sony $1'\n    brand_replacement: 'Sony'\n    model_replacement: '$1'\n  - regex: '; Sony ([^;/]+) Build'\n    device_replacement: 'Sony $1'\n    brand_replacement: 'Sony'\n    model_replacement: '$1'\n  - regex: '; *(Sony)([A-Za-z0-9\\-]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  - regex: '; *(Xperia [^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Sony'\n    model_replacement: '$1'\n  - regex: '; *(C(?:1[0-9]|2[0-9]|53|55|6[0-9])[0-9]{2}|D[25]\\d{3}|D6[56]\\d{2}) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Sony'\n    model_replacement: '$1'\n  - regex: '; *(SGP\\d{3}|SGPT\\d{2}) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Sony'\n    model_replacement: '$1'\n  - regex: '; *(NW-Z1000Series) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Sony'\n    model_replacement: '$1'\n\n  ##########\n  # Sony PlayStation\n  # @ref: http://playstation.com\n  # The Vita spoofs the Kindle\n  ##########\n  - regex: 'PLAYSTATION 3'\n    device_replacement: 'PlayStation 3'\n    brand_replacement: 'Sony'\n    model_replacement: 'PlayStation 3'\n  - regex: '(PlayStation (?:Portable|Vita|\\d+))'\n    device_replacement: '$1'\n    brand_replacement: 'Sony'\n    model_replacement: '$1'\n\n  #########\n  # Spice\n  # @ref: http://www.spicemobilephones.co.in/\n  #########\n  - regex: '; *((?:CSL_Spice|Spice|SPICE|CSL)[ _\\-]?)?([Mm][Ii])([ _\\-])?(\\d{3}[^;/]*) Build/'\n    device_replacement: '$1$2$3$4'\n    brand_replacement: 'Spice'\n    model_replacement: 'Mi$4'\n\n  #########\n  # Sprint (Operator Branded Devices)\n  # @ref:\n  #########\n  - regex: '; *(Sprint )(.+?) *(?:Build|[;/])'\n    device_replacement: '$1$2'\n    brand_replacement: 'Sprint'\n    model_replacement: '$2'\n  - regex: '\\b(Sprint)[: ]([^;,/ ]+)'\n    device_replacement: '$1$2'\n    brand_replacement: 'Sprint'\n    model_replacement: '$2'\n\n  #########\n  # Tagi\n  # @ref: ??\n  #########\n  - regex: '; *(TAGI[ ]?)(MID) ?([^;/]+) Build/'\n    device_replacement: '$1$2$3'\n    brand_replacement: 'Tagi'\n    model_replacement: '$2$3'\n\n  #########\n  # Tecmobile\n  # @ref: http://www.tecmobile.com/\n  #########\n  - regex: '; *(Oyster500|Opal 800) Build'\n    device_replacement: 'Tecmobile $1'\n    brand_replacement: 'Tecmobile'\n    model_replacement: '$1'\n\n  #########\n  # Tecno\n  # @ref: www.tecno-mobile.com/\u200E\n  #########\n  - regex: '; *(TECNO[ _])([^;/]+) Build/'\n    device_replacement: '$1$2'\n    brand_replacement: 'Tecno'\n    model_replacement: '$2'\n\n  #########\n  # Telechips, Techvision evaluation boards\n  # @ref:\n  #########\n  - regex: '; *Android for (Telechips|Techvision) ([^ ]+) '\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  #########\n  # Telstra\n  # @ref: http://www.telstra.com.au/home-phone/thub-2/\n  # @ref: https://support.google.com/googleplay/answer/1727131?hl=en\n  #########\n  - regex: '; *(T-Hub2) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Telstra'\n    model_replacement: '$1'\n\n  #########\n  # Terra\n  # @ref: http://www.wortmann.de/\n  #########\n  - regex: '; *(PAD) ?(100[12]) Build/'\n    device_replacement: 'Terra $1$2'\n    brand_replacement: 'Terra'\n    model_replacement: '$1$2'\n\n  #########\n  # Texet\n  # @ref: http://www.texet.ru/tablet/\n  #########\n  - regex: '; *(T[BM]-\\d{3}[^;/]+) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Texet'\n    model_replacement: '$1'\n\n  #########\n  # Thalia\n  # @ref: http://www.thalia.de/shop/tolino-shine-ereader/show/\n  #########\n  - regex: '; *(tolino [^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Thalia'\n    model_replacement: '$1'\n  - regex: '; *Build/.* (TOLINO_BROWSER)'\n    device_replacement: '$1'\n    brand_replacement: 'Thalia'\n    model_replacement: 'Tolino Shine'\n\n  #########\n  # Thl\n  # @ref: http://en.thl.com.cn/Mobile\n  # @ref: http://thlmobilestore.com\n  #########\n  - regex: '; *(?:CJ[ -])?(ThL|THL)[ -]([^;/]+) Build/'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Thl'\n    model_replacement: '$2'\n  - regex: '; *(T100|T200|T5|W100|W200|W8s) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Thl'\n    model_replacement: '$1'\n\n  #########\n  # T-Mobile (Operator Branded Devices)\n  #########\n  # @ref: https://en.wikipedia.org/wiki/HTC_Hero\n  - regex: '; *(T-Mobile[ _]G2[ _]Touch) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: 'Hero'\n  # @ref: https://en.wikipedia.org/wiki/HTC_Desire_Z\n  - regex: '; *(T-Mobile[ _]G2) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: 'Desire Z'\n  - regex: '; *(T-Mobile myTouch Q) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Huawei'\n    model_replacement: 'U8730'\n  - regex: '; *(T-Mobile myTouch) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Huawei'\n    model_replacement: 'U8680'\n  - regex: '; *(T-Mobile_Espresso) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: 'Espresso'\n  - regex: '; *(T-Mobile G1) Build'\n    device_replacement: '$1'\n    brand_replacement: 'HTC'\n    model_replacement: 'Dream'\n  - regex: '\\b(T-Mobile ?)?(myTouch)[ _]?([34]G)[ _]?([^\\/]*) (?:Mozilla|Build)'\n    device_replacement: '$1$2 $3 $4'\n    brand_replacement: 'HTC'\n    model_replacement: '$2 $3 $4'\n  - regex: '\\b(T-Mobile)_([^_]+)_(.*) Build'\n    device_replacement: '$1 $2 $3'\n    brand_replacement: 'Tmobile'\n    model_replacement: '$2 $3'\n  - regex: '\\b(T-Mobile)[_ ]?(.*?)Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Tmobile'\n    model_replacement: '$2'\n\n  #########\n  # Tomtec\n  # @ref: http://www.tom-tec.eu/pages/tablets.php\n  #########\n  - regex: ' (ATP[0-9]{4}) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Tomtec'\n    model_replacement: '$1'\n\n  #########\n  # Tooky\n  # @ref: http://www.tookymobile.com/\n  #########\n  - regex: ' *(TOOKY)[ _\\-]([^;/]+) ?(?:Build|;)'\n    regex_flag: 'i'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Tooky'\n    model_replacement: '$2'\n\n  #########\n  # Toshiba\n  # @ref: http://www.toshiba.co.jp/\n  # @missing: LT170, Thrive 7, TOSHIBA STB10\n  #########\n  - regex: '\\b(TOSHIBA_AC_AND_AZ|TOSHIBA_FOLIO_AND_A|FOLIO_AND_A)'\n    device_replacement: '$1'\n    brand_replacement: 'Toshiba'\n    model_replacement: 'Folio 100'\n  - regex: '; *([Ff]olio ?100) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Toshiba'\n    model_replacement: 'Folio 100'\n  - regex: '; *(AT[0-9]{2,3}(?:\\-A|LE\\-A|PE\\-A|SE|a)?|AT7-A|AT1S0|Hikari-iFrame/WDPF-[^;/]+|THRiVE|Thrive) Build/'\n    device_replacement: 'Toshiba $1'\n    brand_replacement: 'Toshiba'\n    model_replacement: '$1'\n\n  #########\n  # Touchmate\n  # @ref: http://touchmatepc.com/new/\n  #########\n  - regex: '; *(TM-MID\\d+[^;/]+|TOUCHMATE|MID-750) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Touchmate'\n    model_replacement: '$1'\n  # @todo: needs verification user-agents missing\n  - regex: '; *(TM-SM\\d+[^;/]+) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Touchmate'\n    model_replacement: '$1'\n\n  #########\n  # Treq\n  # @ref: http://www.treq.co.id/product\n  #########\n  - regex: '; *(A10 [Bb]asic2?) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Treq'\n    model_replacement: '$1'\n  - regex: '; *(TREQ[ _\\-])([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: '$1$2'\n    brand_replacement: 'Treq'\n    model_replacement: '$2'\n\n  #########\n  # Umeox\n  # @ref: http://umeox.com/\n  # @models: A936|A603|X-5|X-3\n  #########\n  # @todo: guessed markers\n  - regex: '; *(X-?5|X-?3) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Umeox'\n    model_replacement: '$1'\n  # @todo: guessed markers\n  - regex: '; *(A502\\+?|A936|A603|X1|X2) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Umeox'\n    model_replacement: '$1'\n\n  #########\n  # Versus\n  # @ref: http://versusuk.com/support.html\n  #########\n  - regex: '(TOUCH(?:TAB|PAD).+?) Build/'\n    regex_flag: 'i'\n    device_replacement: 'Versus $1'\n    brand_replacement: 'Versus'\n    model_replacement: '$1'\n\n  #########\n  # Vertu\n  # @ref: http://www.vertu.com/\n  #########\n  - regex: '(VERTU) ([^;/]+) Build/'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Vertu'\n    model_replacement: '$2'\n\n  #########\n  # Videocon\n  # @ref: http://www.videoconmobiles.com\n  #########\n  - regex: '; *(Videocon)[ _\\-]([^;/]+) *(?:Build|;)'\n    device_replacement: '$1 $2'\n    brand_replacement: 'Videocon'\n    model_replacement: '$2'\n  - regex: ' (VT\\d{2}[A-Za-z]*) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Videocon'\n    model_replacement: '$1'\n\n  #########\n  # Viewsonic\n  # @ref: http://viewsonic.com\n  #########\n  - regex: '; *((?:ViewPad|ViewPhone|VSD)[^;/]+) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Viewsonic'\n    model_replacement: '$1'\n  - regex: '; *(ViewSonic-)([^;/]+) Build/'\n    device_replacement: '$1$2'\n    brand_replacement: 'Viewsonic'\n    model_replacement: '$2'\n  - regex: '; *(GTablet.*) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Viewsonic'\n    model_replacement: '$1'\n\n  #########\n  # vivo\n  # @ref: http://vivo.cn/\n  #########\n  - regex: '; *([Vv]ivo)[ _]([^;/]+) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'vivo'\n    model_replacement: '$2'\n\n  #########\n  # Vodafone (Operator Branded Devices)\n  # @ref: ??\n  #########\n  - regex: '(Vodafone) (.*) Build/'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  #########\n  # Walton\n  # @ref: http://www.waltonbd.com/\n  #########\n  - regex: '; *(?:Walton[ _\\-])?(Primo[ _\\-][^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: 'Walton $1'\n    brand_replacement: 'Walton'\n    model_replacement: '$1'\n\n  #########\n  # Wiko\n  # @ref: http://fr.wikomobile.com/collection.php?s=Smartphones\n  #########\n  - regex: '; *(?:WIKO[ \\-])?(CINK\\+?|BARRY|BLOOM|DARKFULL|DARKMOON|DARKNIGHT|DARKSIDE|FIZZ|HIGHWAY|IGGY|OZZY|RAINBOW|STAIRWAY|SUBLIM|WAX|CINK [^;/]+) Build/'\n    regex_flag: 'i'\n    device_replacement: 'Wiko $1'\n    brand_replacement: 'Wiko'\n    model_replacement: '$1'\n\n  #########\n  # WellcoM\n  # @ref: ??\n  #########\n  - regex: '; *WellcoM-([^;/]+) Build'\n    device_replacement: 'Wellcom $1'\n    brand_replacement: 'Wellcom'\n    model_replacement: '$1'\n\n  ##########\n  # WeTab\n  # @ref: http://wetab.mobi/\n  ##########\n  - regex: '(?:(WeTab)-Browser|; (wetab) Build)'\n    device_replacement: '$1'\n    brand_replacement: 'WeTab'\n    model_replacement: 'WeTab'\n\n  #########\n  # Wolfgang\n  # @ref: http://wolfgangmobile.com/\n  #########\n  - regex: '; *(AT-AS[^;/]+) Build'\n    device_replacement: 'Wolfgang $1'\n    brand_replacement: 'Wolfgang'\n    model_replacement: '$1'\n\n  #########\n  # Woxter\n  # @ref: http://www.woxter.es/es-es/categories/index\n  #########\n  - regex: '; *(?:Woxter|Wxt) ([^;/]+) Build'\n    device_replacement: 'Woxter $1'\n    brand_replacement: 'Woxter'\n    model_replacement: '$1'\n\n  #########\n  # Yarvik Zania\n  # @ref: http://yarvik.com\n  #########\n  - regex: '; *(?:Xenta |Luna )?(TAB[234][0-9]{2}|TAB0[78]-\\d{3}|TAB0?9-\\d{3}|TAB1[03]-\\d{3}|SMP\\d{2}-\\d{3}) Build/'\n    device_replacement: 'Yarvik $1'\n    brand_replacement: 'Yarvik'\n    model_replacement: '$1'\n\n  #########\n  # Yifang\n  # @note: Needs to be at the very last as manufacturer builds for other brands.\n  # @ref: http://www.yifangdigital.com/\n  # @models: M1010, M1011, M1007, M1008, M1005, M899, M899LP, M909, M8000,\n  #   M8001, M8002, M8003, M849, M815, M816, M819, M805, M878, M780LPW,\n  #   M778, M7000, M7000AD, M7000NBD, M7001, M7002, M7002KBD, M777, M767,\n  #   M789, M799, M769, M757, M755, M753, M752, M739, M729, M723, M712, M727\n  #########\n  - regex: '; *([A-Z]{2,4})(M\\d{3,}[A-Z]{2})([^;\\)\\/]*)(?: Build|[;\\)])'\n    device_replacement: 'Yifang $1$2$3'\n    brand_replacement: 'Yifang'\n    model_replacement: '$2'\n\n  #########\n  # XiaoMi\n  # @ref: http://www.xiaomi.com/event/buyphone\n  #########\n  - regex: '; *((MI|HM|MI-ONE|Redmi)[ -](NOTE |Note )?[^;/]*) (Build|MIUI)/'\n    device_replacement: 'XiaoMi $1'\n    brand_replacement: 'XiaoMi'\n    model_replacement: '$1'\n\n  #########\n  # Xolo\n  # @ref: http://www.xolo.in/\n  #########\n  - regex: '; *XOLO[ _]([^;/]*tab.*) Build'\n    regex_flag: 'i'\n    device_replacement: 'Xolo $1'\n    brand_replacement: 'Xolo'\n    model_replacement: '$1'\n  - regex: '; *XOLO[ _]([^;/]+) Build'\n    regex_flag: 'i'\n    device_replacement: 'Xolo $1'\n    brand_replacement: 'Xolo'\n    model_replacement: '$1'\n  - regex: '; *(q\\d0{2,3}[a-z]?) Build'\n    regex_flag: 'i'\n    device_replacement: 'Xolo $1'\n    brand_replacement: 'Xolo'\n    model_replacement: '$1'\n\n  #########\n  # Xoro\n  # @ref: http://www.xoro.de/produkte/\n  #########\n  - regex: '; *(PAD ?[79]\\d+[^;/]*|TelePAD\\d+[^;/]) Build'\n    device_replacement: 'Xoro $1'\n    brand_replacement: 'Xoro'\n    model_replacement: '$1'\n\n  #########\n  # Zopo\n  # @ref: http://www.zopomobiles.com/products.html\n  #########\n  - regex: '; *(?:(?:ZOPO|Zopo)[ _]([^;/]+)|(ZP ?(?:\\d{2}[^;/]+|C2))|(C[2379])) Build'\n    device_replacement: '$1$2$3'\n    brand_replacement: 'Zopo'\n    model_replacement: '$1$2$3'\n\n  #########\n  # ZiiLabs\n  # @ref: http://www.ziilabs.com/products/platforms/androidreferencetablets.php\n  #########\n  - regex: '; *(ZiiLABS) (Zii[^;/]*) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'ZiiLabs'\n    model_replacement: '$2'\n  - regex: '; *(Zii)_([^;/]*) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'ZiiLabs'\n    model_replacement: '$2'\n\n  #########\n  # ZTE\n  # @ref: http://www.ztedevices.com/\n  #########\n  - regex: '; *(ARIZONA|(?:ATLAS|Atlas) W|D930|Grand (?:[SX][^;]*|Era|Memo[^;]*)|JOE|(?:Kis|KIS)\\b[^;]*|Libra|Light [^;]*|N8[056][01]|N850L|N8000|N9[15]\\d{2}|N9810|NX501|Optik|(?:Vip )Racer[^;]*|RacerII|RACERII|San Francisco[^;]*|V9[AC]|V55|V881|Z[679][0-9]{2}[A-z]?) Build'\n    device_replacement: '$1'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1'\n  - regex: '; *([A-Z]\\d+)_USA_[^;]* Build'\n    device_replacement: '$1'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1'\n  - regex: '; *(SmartTab\\d+)[^;]* Build'\n    device_replacement: '$1'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1'\n  - regex: '; *(?:Blade|BLADE|ZTE-BLADE)([^;/]*) Build'\n    device_replacement: 'ZTE Blade$1'\n    brand_replacement: 'ZTE'\n    model_replacement: 'Blade$1'\n  - regex: '; *(?:Skate|SKATE|ZTE-SKATE)([^;/]*) Build'\n    device_replacement: 'ZTE Skate$1'\n    brand_replacement: 'ZTE'\n    model_replacement: 'Skate$1'\n  - regex: '; *(Orange |Optimus )(Monte Carlo|San Francisco) Build'\n    device_replacement: '$1$2'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1$2'\n  - regex: '; *(?:ZXY-ZTE_|ZTE\\-U |ZTE[\\- _]|ZTE-C[_ ])([^;/]+) Build'\n    device_replacement: 'ZTE $1'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1'\n  # operator specific\n  - regex: '; (BASE) (lutea|Lutea 2|Tab[^;]*) Build'\n    device_replacement: '$1 $2'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1 $2'\n  - regex: '; (Avea inTouch 2|soft stone|tmn smart a7|Movistar[ _]Link) Build'\n    regex_flag: 'i'\n    device_replacement: '$1'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1'\n  - regex: '; *(vp9plus)\\)'\n    device_replacement: '$1'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1'\n\n  ##########\n  # Zync\n  # @ref: http://www.zync.in/index.php/our-products/tablet-phablets\n  ##########\n  - regex: '; ?(Cloud[ _]Z5|z1000|Z99 2G|z99|z930|z999|z990|z909|Z919|z900) Build/'\n    device_replacement: '$1'\n    brand_replacement: 'Zync'\n    model_replacement: '$1'\n\n  ##########\n  # Kindle\n  # @note: Needs to be after Sony Playstation Vita as this UA contains Silk/3.2\n  # @ref: https://developer.amazon.com/sdk/fire/specifications.html\n  # @ref: http://amazonsilk.wordpress.com/useful-bits/silk-user-agent/\n  ##########\n  - regex: '; ?(KFOT|Kindle Fire) Build\\b'\n    device_replacement: 'Kindle Fire'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire'\n  - regex: '; ?(KFOTE|Amazon Kindle Fire2) Build\\b'\n    device_replacement: 'Kindle Fire 2'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire 2'\n  - regex: '; ?(KFTT) Build\\b'\n    device_replacement: 'Kindle Fire HD'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire HD 7\"'\n  - regex: '; ?(KFJWI) Build\\b'\n    device_replacement: 'Kindle Fire HD 8.9\" WiFi'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire HD 8.9\" WiFi'\n  - regex: '; ?(KFJWA) Build\\b'\n    device_replacement: 'Kindle Fire HD 8.9\" 4G'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire HD 8.9\" 4G'\n  - regex: '; ?(KFSOWI) Build\\b'\n    device_replacement: 'Kindle Fire HD 7\" WiFi'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire HD 7\" WiFi'\n  - regex: '; ?(KFTHWI) Build\\b'\n    device_replacement: 'Kindle Fire HDX 7\" WiFi'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire HDX 7\" WiFi'\n  - regex: '; ?(KFTHWA) Build\\b'\n    device_replacement: 'Kindle Fire HDX 7\" 4G'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire HDX 7\" 4G'\n  - regex: '; ?(KFAPWI) Build\\b'\n    device_replacement: 'Kindle Fire HDX 8.9\" WiFi'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire HDX 8.9\" WiFi'\n  - regex: '; ?(KFAPWA) Build\\b'\n    device_replacement: 'Kindle Fire HDX 8.9\" 4G'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire HDX 8.9\" 4G'\n  - regex: '; ?Amazon ([^;/]+) Build\\b'\n    device_replacement: '$1'\n    brand_replacement: 'Amazon'\n    model_replacement: '$1'\n  - regex: '; ?(Kindle) Build\\b'\n    device_replacement: 'Kindle'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle'\n  - regex: '; ?(Silk)/(\\d+)\\.(\\d+)(?:\\.([0-9\\-]+))? Build\\b'\n    device_replacement: 'Kindle Fire'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle Fire$2'\n  - regex: ' (Kindle)/(\\d+\\.\\d+)'\n    device_replacement: 'Kindle'\n    brand_replacement: 'Amazon'\n    model_replacement: '$1 $2'\n  - regex: ' (Silk|Kindle)/(\\d+)\\.'\n    device_replacement: 'Kindle'\n    brand_replacement: 'Amazon'\n    model_replacement: 'Kindle'\n\n  #########\n  # Devices from chinese manufacturer(s)\n  # @note: identified by x-wap-profile http://218.249.47.94/Xianghe/.*\n  #########\n  - regex: '(sprd)\\-([^/]+)/'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  # @ref: http://eshinechina.en.alibaba.com/\n  - regex: '; *(H\\d{2}00\\+?) Build'\n    device_replacement: '$1'\n    brand_replacement: 'Hero'\n    model_replacement: '$1'\n  - regex: '; *(iphone|iPhone5) Build/'\n    device_replacement: 'Xianghe $1'\n    brand_replacement: 'Xianghe'\n    model_replacement: '$1'\n  - regex: '; *(e\\d{4}[a-z]?_?v\\d+|v89_[^;/]+)[^;/]+ Build/'\n    device_replacement: 'Xianghe $1'\n    brand_replacement: 'Xianghe'\n    model_replacement: '$1'\n\n  #########\n  # Cellular\n  # @ref:\n  # @note: Operator branded devices\n  #########\n  - regex: '\\bUSCC[_\\-]?([^ ;/\\)]+)'\n    device_replacement: '$1'\n    brand_replacement: 'Cellular'\n    model_replacement: '$1'\n\n  ######################################################################\n  # Windows Phone Parsers\n  ######################################################################\n\n  #########\n  # Alcatel Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:ALCATEL)[^;]*; *([^;,\\)]+)'\n    device_replacement: 'Alcatel $1'\n    brand_replacement: 'Alcatel'\n    model_replacement: '$1'\n\n  #########\n  # Asus Windows Phones\n  #########\n  #~ - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?(?:ASUS|Asus)[^;]*; *([^;,\\)]+)'\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?(?:ASUS|Asus)[^;]*; *([^;,\\)]+)'\n    device_replacement: 'Asus $1'\n    brand_replacement: 'Asus'\n    model_replacement: '$1'\n\n  #########\n  # Dell Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:DELL|Dell)[^;]*; *([^;,\\)]+)'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: '$1'\n\n  #########\n  # HTC Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?(?:HTC|Htc|HTC_blocked[^;]*)[^;]*; *(?:HTC)?([^;,\\)]+)'\n    device_replacement: 'HTC $1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n\n  #########\n  # Huawei Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:HUAWEI)[^;]*; *(?:HUAWEI )?([^;,\\)]+)'\n    device_replacement: 'Huawei $1'\n    brand_replacement: 'Huawei'\n    model_replacement: '$1'\n\n  #########\n  # LG Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:LG|Lg)[^;]*; *(?:LG[ \\-])?([^;,\\)]+)'\n    device_replacement: 'LG $1'\n    brand_replacement: 'LG'\n    model_replacement: '$1'\n\n  #########\n  # Noka Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:NOKIA|Nokia)[^;]*; *(?:NOKIA ?|Nokia ?|LUMIA ?|[Ll]umia ?)*(\\d{3,}[^;\\)]*)'\n    device_replacement: 'Lumia $1'\n    brand_replacement: 'Nokia'\n    model_replacement: 'Lumia $1'\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:NOKIA|Nokia)[^;]*; *(RM-\\d{3,})'\n    device_replacement: 'Nokia $1'\n    brand_replacement: 'Nokia'\n    model_replacement: '$1'\n  - regex: '(?:Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)]|WPDesktop;) ?(?:ARM; ?Touch; ?|Touch; ?)?(?:NOKIA|Nokia)[^;]*; *(?:NOKIA ?|Nokia ?|LUMIA ?|[Ll]umia ?)*([^;\\)]+)'\n    device_replacement: 'Nokia $1'\n    brand_replacement: 'Nokia'\n    model_replacement: '$1'\n\n  #########\n  # Microsoft Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:Microsoft(?: Corporation)?)[^;]*; *([^;,\\)]+)'\n    device_replacement: 'Microsoft $1'\n    brand_replacement: 'Microsoft'\n    model_replacement: '$1'\n\n  #########\n  # Samsung Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?(?:SAMSUNG)[^;]*; *(?:SAMSUNG )?([^;,\\.\\)]+)'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n\n  #########\n  # Toshiba Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?(?:TOSHIBA|FujitsuToshibaMobileCommun)[^;]*; *([^;,\\)]+)'\n    device_replacement: 'Toshiba $1'\n    brand_replacement: 'Toshiba'\n    model_replacement: '$1'\n\n  #########\n  # Generic Windows Phones\n  #########\n  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?([^;]+); *([^;,\\)]+)'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  ######################################################################\n  # Other Devices Parser\n  ######################################################################\n\n  #########\n  # Samsung Bada Phones\n  #########\n  - regex: '(?:^|; )SAMSUNG\\-([A-Za-z0-9\\-]+).* Bada/'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n\n  #########\n  # Firefox OS\n  #########\n  - regex: '\\(Mobile; ALCATEL ?(One|ONE) ?(Touch|TOUCH) ?([^;/]+)(?:/[^;]+)?; rv:[^\\)]+\\) Gecko/[^\\/]+ Firefox/'\n    device_replacement: 'Alcatel $1 $2 $3'\n    brand_replacement: 'Alcatel'\n    model_replacement: 'One Touch $3'\n  - regex: '\\(Mobile; (?:ZTE([^;]+)|(OpenC)); rv:[^\\)]+\\) Gecko/[^\\/]+ Firefox/'\n    device_replacement: 'ZTE $1$2'\n    brand_replacement: 'ZTE'\n    model_replacement: '$1$2'\n\n  ##########\n  # NOKIA\n  # @note: NokiaN8-00 comes before iphone. Sometimes spoofs iphone\n  ##########\n  - regex: 'Nokia(N[0-9]+)([A-z_\\-][A-z0-9_\\-]*)'\n    device_replacement: 'Nokia $1'\n    brand_replacement: 'Nokia'\n    model_replacement: '$1$2'\n  - regex: '(?:NOKIA|Nokia)(?:\\-| *)(?:([A-Za-z0-9]+)\\-[0-9a-f]{32}|([A-Za-z0-9\\-]+)(?:UCBrowser)|([A-Za-z0-9\\-]+))'\n    device_replacement: 'Nokia $1$2$3'\n    brand_replacement: 'Nokia'\n    model_replacement: '$1$2$3'\n  - regex: 'Lumia ([A-Za-z0-9\\-]+)'\n    device_replacement: 'Lumia $1'\n    brand_replacement: 'Nokia'\n    model_replacement: 'Lumia $1'\n  # UCWEB Browser on Symbian\n  - regex: '\\(Symbian; U; S60 V5; [A-z]{2}\\-[A-z]{2}; (SonyEricsson|Samsung|Nokia|LG)([^;/]+)\\)'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  # Nokia Symbian\n  - regex: '\\(Symbian(?:/3)?; U; ([^;]+);'\n    device_replacement: 'Nokia $1'\n    brand_replacement: 'Nokia'\n    model_replacement: '$1'\n\n  ##########\n  # BlackBerry\n  # @ref: http://www.useragentstring.com/pages/BlackBerry/\n  ##########\n  - regex: 'BB10; ([A-Za-z0-9\\- ]+)\\)'\n    device_replacement: 'BlackBerry $1'\n    brand_replacement: 'BlackBerry'\n    model_replacement: '$1'\n  - regex: 'Play[Bb]ook.+RIM Tablet OS'\n    device_replacement: 'BlackBerry Playbook'\n    brand_replacement: 'BlackBerry'\n    model_replacement: 'Playbook'\n  - regex: 'Black[Bb]erry ([0-9]+);'\n    device_replacement: 'BlackBerry $1'\n    brand_replacement: 'BlackBerry'\n    model_replacement: '$1'\n  - regex: 'Black[Bb]erry([0-9]+)'\n    device_replacement: 'BlackBerry $1'\n    brand_replacement: 'BlackBerry'\n    model_replacement: '$1'\n  - regex: 'Black[Bb]erry;'\n    device_replacement: 'BlackBerry'\n    brand_replacement: 'BlackBerry'\n\n  ##########\n  # PALM / HP\n  # @note: some palm devices must come before iphone. sometimes spoofs iphone in ua\n  ##########\n  - regex: '(Pre|Pixi)/\\d+\\.\\d+'\n    device_replacement: 'Palm $1'\n    brand_replacement: 'Palm'\n    model_replacement: '$1'\n  - regex: 'Palm([0-9]+)'\n    device_replacement: 'Palm $1'\n    brand_replacement: 'Palm'\n    model_replacement: '$1'\n  - regex: 'Treo([A-Za-z0-9]+)'\n    device_replacement: 'Palm Treo $1'\n    brand_replacement: 'Palm'\n    model_replacement: 'Treo $1'\n  - regex: 'webOS.*(P160U(?:NA)?)/(\\d+).(\\d+)'\n    device_replacement: 'HP Veer'\n    brand_replacement: 'HP'\n    model_replacement: 'Veer'\n  - regex: '(Touch[Pp]ad)/\\d+\\.\\d+'\n    device_replacement: 'HP TouchPad'\n    brand_replacement: 'HP'\n    model_replacement: 'TouchPad'\n  - regex: 'HPiPAQ([A-Za-z0-9]+)/\\d+.\\d+'\n    device_replacement: 'HP iPAQ $1'\n    brand_replacement: 'HP'\n    model_replacement: 'iPAQ $1'\n  - regex: 'PDA; (PalmOS)/sony/model ([a-z]+)/Revision'\n    device_replacement: '$1'\n    brand_replacement: 'Sony'\n    model_replacement: '$1 $2'\n\n  ##########\n  # AppleTV\n  # No built in browser that I can tell\n  # Stack Overflow indicated iTunes-AppleTV/4.1 as a known UA for app available and I'm seeing it in live traffic\n  ##########\n  - regex: '(Apple\\s?TV)'\n    device_replacement: 'AppleTV'\n    brand_replacement: 'Apple'\n    model_replacement: 'AppleTV'\n\n  #########\n  # Tesla Model S\n  #########\n  - regex: '(QtCarBrowser)'\n    device_replacement: 'Tesla Model S'\n    brand_replacement: 'Tesla'\n    model_replacement: 'Model S'\n\n  ##########\n  # iSTUFF\n  # @note: complete but probably catches spoofs\n  #   ipad and ipod must be parsed before iphone\n  #   cannot determine specific device type from ua string. (3g, 3gs, 4, etc)\n  ##########\n  # @note: on some ua the device can be identified e.g. iPhone5,1\n  - regex: '(iPhone|iPad|iPod)(\\d+,\\d+)'\n    device_replacement: '$1'\n    brand_replacement: 'Apple'\n    model_replacement: '$1$2'\n  # @note: iPad needs to be before iPhone\n  - regex: '(iPad)(?:;| Simulator;)'\n    device_replacement: '$1'\n    brand_replacement: 'Apple'\n    model_replacement: '$1'\n  - regex: '(iPod)(?:;| touch;| Simulator;)'\n    device_replacement: '$1'\n    brand_replacement: 'Apple'\n    model_replacement: '$1'\n  - regex: '(iPhone)(?:;| Simulator;)'\n    device_replacement: '$1'\n    brand_replacement: 'Apple'\n    model_replacement: '$1'\n  # @note: desktop applications show device info\n  - regex: 'CFNetwork/.* Darwin/\\d.*\\(((?:Mac|iMac|PowerMac|PowerBook)[^\\d]*)(\\d+)(?:,|%2C)(\\d+)'\n    device_replacement: '$1$2,$3'\n    brand_replacement: 'Apple'\n    model_replacement: '$1$2,$3'\n  # @note: newer desktop applications don't show device info\n  # This is here so as to not have them recorded as iOS-Device\n  - regex: 'CFNetwork/.* Darwin/\\d+\\.\\d+\\.\\d+ \\(x86_64\\)'\n  # @note: iOS applications do not show device info\n  - regex: 'CFNetwork/.* Darwin/\\d'\n    device_replacement: 'iOS-Device'\n    brand_replacement: 'Apple'\n    model_replacement: 'iOS-Device'\n\n  ##########\n  # Acer\n  ##########\n  - regex: 'acer_([A-Za-z0-9]+)_'\n    device_replacement: 'Acer $1'\n    brand_replacement: 'Acer'\n    model_replacement: '$1'\n\n  ##########\n  # Alcatel\n  ##########\n  - regex: '(?:ALCATEL|Alcatel)-([A-Za-z0-9\\-]+)'\n    device_replacement: 'Alcatel $1'\n    brand_replacement: 'Alcatel'\n    model_replacement: '$1'\n\n  ##########\n  # Amoi\n  ##########\n  - regex: '(?:Amoi|AMOI)\\-([A-Za-z0-9]+)'\n    device_replacement: 'Amoi $1'\n    brand_replacement: 'Amoi'\n    model_replacement: '$1'\n\n  ##########\n  # Asus\n  ##########\n  - regex: '(?:; |\\/|^)((?:Transformer (?:Pad|Prime) |Transformer |PadFone[ _]?)[A-Za-z0-9]*)'\n    device_replacement: 'Asus $1'\n    brand_replacement: 'Asus'\n    model_replacement: '$1'\n  - regex: '(?:asus.*?ASUS|Asus|ASUS|asus)[\\- ;]*((?:Transformer (?:Pad|Prime) |Transformer |Padfone |Nexus[ _])?[A-Za-z0-9]+)'\n    device_replacement: 'Asus $1'\n    brand_replacement: 'Asus'\n    model_replacement: '$1'\n\n\n  ##########\n  # Bird\n  ##########\n  - regex: '\\bBIRD[ \\-\\.]([A-Za-z0-9]+)'\n    device_replacement: 'Bird $1'\n    brand_replacement: 'Bird'\n    model_replacement: '$1'\n\n  ##########\n  # Dell\n  ##########\n  - regex: '\\bDell ([A-Za-z0-9]+)'\n    device_replacement: 'Dell $1'\n    brand_replacement: 'Dell'\n    model_replacement: '$1'\n\n  ##########\n  # DoCoMo\n  ##########\n  - regex: 'DoCoMo/2\\.0 ([A-Za-z0-9]+)'\n    device_replacement: 'DoCoMo $1'\n    brand_replacement: 'DoCoMo'\n    model_replacement: '$1'\n  - regex: '([A-Za-z0-9]+)_W;FOMA'\n    device_replacement: 'DoCoMo $1'\n    brand_replacement: 'DoCoMo'\n    model_replacement: '$1'\n  - regex: '([A-Za-z0-9]+);FOMA'\n    device_replacement: 'DoCoMo $1'\n    brand_replacement: 'DoCoMo'\n    model_replacement: '$1'\n\n  ##########\n  # htc\n  ##########\n  - regex: '\\b(?:HTC/|HTC/[a-z0-9]+/)?HTC[ _\\-;]? *(.*?)(?:-?Mozilla|fingerPrint|[;/\\(\\)]|$)'\n    device_replacement: 'HTC $1'\n    brand_replacement: 'HTC'\n    model_replacement: '$1'\n\n  ##########\n  # Huawei\n  ##########\n  - regex: 'Huawei([A-Za-z0-9]+)'\n    device_replacement: 'Huawei $1'\n    brand_replacement: 'Huawei'\n    model_replacement: '$1'\n  - regex: 'HUAWEI-([A-Za-z0-9]+)'\n    device_replacement: 'Huawei $1'\n    brand_replacement: 'Huawei'\n    model_replacement: '$1'\n  - regex: 'vodafone([A-Za-z0-9]+)'\n    device_replacement: 'Huawei Vodafone $1'\n    brand_replacement: 'Huawei'\n    model_replacement: 'Vodafone $1'\n\n  ##########\n  # i-mate\n  ##########\n  - regex: 'i\\-mate ([A-Za-z0-9]+)'\n    device_replacement: 'i-mate $1'\n    brand_replacement: 'i-mate'\n    model_replacement: '$1'\n\n  ##########\n  # kyocera\n  ##########\n  - regex: 'Kyocera\\-([A-Za-z0-9]+)'\n    device_replacement: 'Kyocera $1'\n    brand_replacement: 'Kyocera'\n    model_replacement: '$1'\n  - regex: 'KWC\\-([A-Za-z0-9]+)'\n    device_replacement: 'Kyocera $1'\n    brand_replacement: 'Kyocera'\n    model_replacement: '$1'\n\n  ##########\n  # lenovo\n  ##########\n  - regex: 'Lenovo[_\\-]([A-Za-z0-9]+)'\n    device_replacement: 'Lenovo $1'\n    brand_replacement: 'Lenovo'\n    model_replacement: '$1'\n\n  ##########\n  # HbbTV (European and Australian standard)\n  # written before the LG regexes, as LG is making HbbTV too\n  ##########\n  - regex: '(HbbTV)/[0-9]+\\.[0-9]+\\.[0-9]+ \\([^;]*; *(LG)E *; *([^;]*) *;[^;]*;[^;]*;\\)'\n    device_replacement: '$1'\n    brand_replacement: '$2'\n    model_replacement: '$3'\n  - regex: '(HbbTV)/1\\.1\\.1.*CE-HTML/1\\.\\d;(Vendor/)*(THOM[^;]*?)[;\\s](?:.*SW-Version/.*)*(LF[^;]+);?'\n    device_replacement: '$1'\n    brand_replacement: 'Thomson'\n    model_replacement: '$4'\n  - regex: '(HbbTV)(?:/1\\.1\\.1)?(?: ?\\(;;;;;\\))?; *CE-HTML(?:/1\\.\\d)?; *([^ ]+) ([^;]+);'\n    device_replacement: '$1'\n    brand_replacement: '$2'\n    model_replacement: '$3'\n  - regex: '(HbbTV)/1\\.1\\.1 \\(;;;;;\\) Maple_2011'\n    device_replacement: '$1'\n    brand_replacement: 'Samsung'\n  - regex: '(HbbTV)/[0-9]+\\.[0-9]+\\.[0-9]+ \\([^;]*; *(?:CUS:([^;]*)|([^;]+)) *; *([^;]*) *;.*;'\n    device_replacement: '$1'\n    brand_replacement: '$2$3'\n    model_replacement: '$4'\n  - regex: '(HbbTV)/[0-9]+\\.[0-9]+\\.[0-9]+'\n    device_replacement: '$1'\n\n  ##########\n  # LGE NetCast TV\n  ##########\n  - regex: 'LGE; (?:Media\\/)?([^;]*);[^;]*;[^;]*;?\\); \"?LG NetCast(\\.TV|\\.Media|)-\\d+'\n    device_replacement: 'NetCast$2'\n    brand_replacement: 'LG'\n    model_replacement: '$1'\n\n  ##########\n  # InettvBrowser\n  ##########\n  - regex: 'InettvBrowser/[0-9]+\\.[0-9A-Z]+ \\([^;]*;(Sony)([^;]*);[^;]*;[^\\)]*\\)'\n    device_replacement: 'Inettv'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  - regex: 'InettvBrowser/[0-9]+\\.[0-9A-Z]+ \\([^;]*;([^;]*);[^;]*;[^\\)]*\\)'\n    device_replacement: 'Inettv'\n    brand_replacement: 'Generic_Inettv'\n    model_replacement: '$1'\n  - regex: '(?:InettvBrowser|TSBNetTV|NETTV|HBBTV)'\n    device_replacement: 'Inettv'\n    brand_replacement: 'Generic_Inettv'\n\n  ##########\n  # lg\n  ##########\n  # LG Symbian Phones\n  - regex: 'Series60/\\d\\.\\d (LG)[\\-]?([A-Za-z0-9 \\-]+)'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n  # other LG phones\n  - regex: '\\b(?:LGE[ \\-]LG\\-(?:AX)?|LGE |LGE?-LG|LGE?[ \\-]|LG[ /\\-]|lg[\\-])([A-Za-z0-9]+)\\b'\n    device_replacement: 'LG $1'\n    brand_replacement: 'LG'\n    model_replacement: '$1'\n  - regex: '(?:^LG[\\-]?|^LGE[\\-/]?)([A-Za-z]+[0-9]+[A-Za-z]*)'\n    device_replacement: 'LG $1'\n    brand_replacement: 'LG'\n    model_replacement: '$1'\n  - regex: '^LG([0-9]+[A-Za-z]*)'\n    device_replacement: 'LG $1'\n    brand_replacement: 'LG'\n    model_replacement: '$1'\n\n  ##########\n  # microsoft\n  ##########\n  - regex: '(KIN\\.[^ ]+) (\\d+)\\.(\\d+)'\n    device_replacement: 'Microsoft $1'\n    brand_replacement: 'Microsoft'\n    model_replacement: '$1'\n  - regex: '(?:MSIE|XBMC).*\\b(Xbox)\\b'\n    device_replacement: '$1'\n    brand_replacement: 'Microsoft'\n    model_replacement: '$1'\n  - regex: '; ARM; Trident/6\\.0; Touch[\\);]'\n    device_replacement: 'Microsoft Surface RT'\n    brand_replacement: 'Microsoft'\n    model_replacement: 'Surface RT'\n\n  ##########\n  # motorola\n  ##########\n  - regex: 'Motorola\\-([A-Za-z0-9]+)'\n    device_replacement: 'Motorola $1'\n    brand_replacement: 'Motorola'\n    model_replacement: '$1'\n  - regex: 'MOTO\\-([A-Za-z0-9]+)'\n    device_replacement: 'Motorola $1'\n    brand_replacement: 'Motorola'\n    model_replacement: '$1'\n  - regex: 'MOT\\-([A-z0-9][A-z0-9\\-]*)'\n    device_replacement: 'Motorola $1'\n    brand_replacement: 'Motorola'\n    model_replacement: '$1'\n\n  ##########\n  # nintendo\n  ##########\n  - regex: 'Nintendo WiiU'\n    device_replacement: 'Nintendo Wii U'\n    brand_replacement: 'Nintendo'\n    model_replacement: 'Wii U'\n  - regex: 'Nintendo (DS|3DS|DSi|Wii);'\n    device_replacement: 'Nintendo $1'\n    brand_replacement: 'Nintendo'\n    model_replacement: '$1'\n\n  ##########\n  # pantech\n  ##########\n  - regex: '(?:Pantech|PANTECH)[ _-]?([A-Za-z0-9\\-]+)'\n    device_replacement: 'Pantech $1'\n    brand_replacement: 'Pantech'\n    model_replacement: '$1'\n\n  ##########\n  # philips\n  ##########\n  - regex: 'Philips([A-Za-z0-9]+)'\n    device_replacement: 'Philips $1'\n    brand_replacement: 'Philips'\n    model_replacement: '$1'\n  - regex: 'Philips ([A-Za-z0-9]+)'\n    device_replacement: 'Philips $1'\n    brand_replacement: 'Philips'\n    model_replacement: '$1'\n\n  ##########\n  # Samsung\n  ##########\n  # Samsung Smart-TV\n  - regex: '(SMART-TV); .* Tizen '\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n  # Samsung Symbian Devices\n  - regex: 'SymbianOS/9\\.\\d.* Samsung[/\\-]([A-Za-z0-9 \\-]+)'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n  - regex: '(Samsung)(SGH)(i[0-9]+)'\n    device_replacement: '$1 $2$3'\n    brand_replacement: '$1'\n    model_replacement: '$2-$3'\n  - regex: 'SAMSUNG-ANDROID-MMS/([^;/]+)'\n    device_replacement: '$1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n  # Other Samsung\n  #- regex: 'SAMSUNG(?:; |-)([A-Za-z0-9\\-]+)'\n  - regex: 'SAMSUNG(?:; |[ -/])([A-Za-z0-9\\-]+)'\n    regex_flag: 'i'\n    device_replacement: 'Samsung $1'\n    brand_replacement: 'Samsung'\n    model_replacement: '$1'\n\n  ##########\n  # Sega\n  ##########\n  - regex: '(Dreamcast)'\n    device_replacement: 'Sega $1'\n    brand_replacement: 'Sega'\n    model_replacement: '$1'\n\n  ##########\n  # Siemens mobile\n  ##########\n  - regex: '^SIE-([A-Za-z0-9]+)'\n    device_replacement: 'Siemens $1'\n    brand_replacement: 'Siemens'\n    model_replacement: '$1'\n\n  ##########\n  # Softbank\n  ##########\n  - regex: 'Softbank/[12]\\.0/([A-Za-z0-9]+)'\n    device_replacement: 'Softbank $1'\n    brand_replacement: 'Softbank'\n    model_replacement: '$1'\n\n  ##########\n  # SonyEricsson\n  ##########\n  - regex: 'SonyEricsson ?([A-Za-z0-9\\-]+)'\n    device_replacement: 'Ericsson $1'\n    brand_replacement: 'SonyEricsson'\n    model_replacement: '$1'\n\n  ##########\n  # Sony\n  ##########\n  - regex: 'Android [^;]+; ([^ ]+) (Sony)/'\n    device_replacement: '$2 $1'\n    brand_replacement: '$2'\n    model_replacement: '$1'\n  - regex: '(Sony)(?:BDP\\/|\\/)?([^ /;\\)]+)[ /;\\)]'\n    device_replacement: '$1 $2'\n    brand_replacement: '$1'\n    model_replacement: '$2'\n\n  #########\n  # Puffin Browser Device detect\n  # A=Android, I=iOS, P=Phone, T=Tablet\n  # AT=Android+Tablet\n  #########\n  - regex: 'Puffin/[\\d\\.]+IT'\n    device_replacement: 'iPad'\n    brand_replacement: 'Apple'\n    model_replacement: 'iPad'\n  - regex: 'Puffin/[\\d\\.]+IP'\n    device_replacement: 'iPhone'\n    brand_replacement: 'Apple'\n    model_replacement: 'iPhone'\n  - regex: 'Puffin/[\\d\\.]+AT'\n    device_replacement: 'Generic Tablet'\n    brand_replacement: 'Generic'\n    model_replacement: 'Tablet'\n  - regex: 'Puffin/[\\d\\.]+AP'\n    device_replacement: 'Generic Smartphone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Smartphone'\n\n  #########\n  # Android General Device Matching (far from perfect)\n  #########\n  - regex: 'Android[\\- ][\\d]+\\.[\\d]+; [A-Za-z]{2}\\-[A-Za-z]{0,2}; WOWMobile (.+) Build[/ ]'\n    brand_replacement: 'Generic_Android'\n    model_replacement: '$1'\n  - regex: 'Android[\\- ][\\d]+\\.[\\d]+\\-update1; [A-Za-z]{2}\\-[A-Za-z]{0,2} *; *(.+?) Build[/ ]'\n    brand_replacement: 'Generic_Android'\n    model_replacement: '$1'\n  - regex: 'Android[\\- ][\\d]+(?:\\.[\\d]+){1,2}; *[A-Za-z]{2}[_\\-][A-Za-z]{0,2}\\-? *; *(.+?) Build[/ ]'\n    brand_replacement: 'Generic_Android'\n    model_replacement: '$1'\n  - regex: 'Android[\\- ][\\d]+(?:\\.[\\d]+){1,2}; *[A-Za-z]{0,2}\\- *; *(.+?) Build[/ ]'\n    brand_replacement: 'Generic_Android'\n    model_replacement: '$1'\n  # No build info at all - \"Build\" follows locale immediately\n  - regex: 'Android[\\- ][\\d]+(?:\\.[\\d]+){1,2}; *[a-z]{0,2}[_\\-]?[A-Za-z]{0,2};? Build[/ ]'\n    device_replacement: 'Generic Smartphone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Smartphone'\n  - regex: 'Android[\\- ][\\d]+(?:\\.[\\d]+){1,2}; *\\-?[A-Za-z]{2}; *(.+?) Build[/ ]'\n    brand_replacement: 'Generic_Android'\n    model_replacement: '$1'\n  - regex: 'Android[\\- ][\\d]+(?:\\.[\\d]+){1,2}(?:;.*)?; *(.+?) Build[/ ]'\n    brand_replacement: 'Generic_Android'\n    model_replacement: '$1'\n\n  ##########\n  # Google TV\n  ##########\n  - regex: '(GoogleTV)'\n    brand_replacement: 'Generic_Inettv'\n    model_replacement: '$1'\n\n  ##########\n  # WebTV\n  ##########\n  - regex: '(WebTV)/\\d+.\\d+'\n    brand_replacement: 'Generic_Inettv'\n    model_replacement: '$1'\n  # Roku Digital-Video-Players https://www.roku.com/\n  - regex: '^(Roku)/DVP-\\d+\\.\\d+'\n    brand_replacement: 'Generic_Inettv'\n    model_replacement: '$1'\n\n  ##########\n  # Generic Tablet\n  ##########\n  - regex: '(Android 3\\.\\d|Opera Tablet|Tablet; .+Firefox/|Android.*(?:Tab|Pad))'\n    regex_flag: 'i'\n    device_replacement: 'Generic Tablet'\n    brand_replacement: 'Generic'\n    model_replacement: 'Tablet'\n\n  ##########\n  # Generic Smart Phone\n  ##########\n  - regex: '(Symbian|\\bS60(Version|V\\d)|\\bS60\\b|\\((Series 60|Windows Mobile|Palm OS|Bada); Opera Mini|Windows CE|Opera Mobi|BREW|Brew|Mobile; .+Firefox/|iPhone OS|Android|MobileSafari|Windows *Phone|\\(webOS/|PalmOS)'\n    device_replacement: 'Generic Smartphone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Smartphone'\n  - regex: '(hiptop|avantgo|plucker|xiino|blazer|elaine)'\n    regex_flag: 'i'\n    device_replacement: 'Generic Smartphone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Smartphone'\n\n  ##########\n  # Spiders (this is hack...)\n  ##########\n  - regex: '(bot|zao|borg|DBot|oegp|silk|Xenu|zeal|^NING|CCBot|crawl|htdig|lycos|slurp|teoma|voila|yahoo|Sogou|CiBra|Nutch|^Java/|^JNLP/|Daumoa|Genieo|ichiro|larbin|pompos|Scrapy|snappy|speedy|spider|msnbot|msrbot|vortex|^vortex|crawler|favicon|indexer|Riddler|scooter|scraper|scrubby|WhatWeb|WinHTTP|bingbot|BingPreview|openbot|gigabot|furlbot|polybot|seekbot|^voyager|archiver|Icarus6j|mogimogi|Netvibes|blitzbot|altavista|charlotte|findlinks|Retreiver|TLSProber|WordPress|SeznamBot|ProoXiBot|wsr\\-agent|Squrl Java|EtaoSpider|PaperLiBot|SputnikBot|A6\\-Indexer|netresearch|searchsight|baiduspider|YisouSpider|ICC\\-Crawler|http%20client|Python-urllib|dataparksearch|converacrawler|Screaming Frog|AppEngine-Google|YahooCacheSystem|fast\\-webcrawler|Sogou Pic Spider|semanticdiscovery|Innovazion Crawler|facebookexternalhit|Google.*/\\+/web/snippet|Google-HTTP-Java-Client|BlogBridge|IlTrovatore-Setaccio|InternetArchive|GomezAgent|WebThumbnail|heritrix|NewsGator|PagePeeker|Reaper|ZooShot|holmes|NL-Crawler|Pingdom|WhatsApp|masscan)'\n    regex_flag: 'i'\n    device_replacement: 'Spider'\n    brand_replacement: 'Spider'\n    model_replacement: 'Desktop'\n\n  ##########\n  # Generic Feature Phone\n  # take care to do case insensitive matching\n  ##########\n  - regex: '^(1207|3gso|4thp|501i|502i|503i|504i|505i|506i|6310|6590|770s|802s|a wa|acer|acs\\-|airn|alav|asus|attw|au\\-m|aur |aus |abac|acoo|aiko|alco|alca|amoi|anex|anny|anyw|aptu|arch|argo|bmobile|bell|bird|bw\\-n|bw\\-u|beck|benq|bilb|blac|c55/|cdm\\-|chtm|capi|comp|cond|dall|dbte|dc\\-s|dica|ds\\-d|ds12|dait|devi|dmob|doco|dopo|dorado|el(?:38|39|48|49|50|55|58|68)|el[3456]\\d{2}dual|erk0|esl8|ex300|ez40|ez60|ez70|ezos|ezze|elai|emul|eric|ezwa|fake|fly\\-|fly_|g\\-mo|g1 u|g560|gf\\-5|grun|gene|go.w|good|grad|hcit|hd\\-m|hd\\-p|hd\\-t|hei\\-|hp i|hpip|hs\\-c|htc |htc\\-|htca|htcg)'\n    regex_flag: 'i'\n    device_replacement: 'Generic Feature Phone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Feature Phone'\n  - regex: '^(htcp|htcs|htct|htc_|haie|hita|huaw|hutc|i\\-20|i\\-go|i\\-ma|i\\-mobile|i230|iac|iac\\-|iac/|ig01|im1k|inno|iris|jata|kddi|kgt|kgt/|kpt |kwc\\-|klon|lexi|lg g|lg\\-a|lg\\-b|lg\\-c|lg\\-d|lg\\-f|lg\\-g|lg\\-k|lg\\-l|lg\\-m|lg\\-o|lg\\-p|lg\\-s|lg\\-t|lg\\-u|lg\\-w|lg/k|lg/l|lg/u|lg50|lg54|lge\\-|lge/|leno|m1\\-w|m3ga|m50/|maui|mc01|mc21|mcca|medi|meri|mio8|mioa|mo01|mo02|mode|modo|mot |mot\\-|mt50|mtp1|mtv |mate|maxo|merc|mits|mobi|motv|mozz|n100|n101|n102|n202|n203|n300|n302|n500|n502|n505|n700|n701|n710|nec\\-|nem\\-|newg|neon)'\n    regex_flag: 'i'\n    device_replacement: 'Generic Feature Phone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Feature Phone'\n  - regex: '^(netf|noki|nzph|o2 x|o2\\-x|opwv|owg1|opti|oran|ot\\-s|p800|pand|pg\\-1|pg\\-2|pg\\-3|pg\\-6|pg\\-8|pg\\-c|pg13|phil|pn\\-2|pt\\-g|palm|pana|pire|pock|pose|psio|qa\\-a|qc\\-2|qc\\-3|qc\\-5|qc\\-7|qc07|qc12|qc21|qc32|qc60|qci\\-|qwap|qtek|r380|r600|raks|rim9|rove|s55/|sage|sams|sc01|sch\\-|scp\\-|sdk/|se47|sec\\-|sec0|sec1|semc|sgh\\-|shar|sie\\-|sk\\-0|sl45|slid|smb3|smt5|sp01|sph\\-|spv |spv\\-|sy01|samm|sany|sava|scoo|send|siem|smar|smit|soft|sony|t\\-mo|t218|t250|t600|t610|t618|tcl\\-|tdg\\-|telm|tim\\-|ts70|tsm\\-|tsm3|tsm5|tx\\-9|tagt)'\n    regex_flag: 'i'\n    device_replacement: 'Generic Feature Phone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Feature Phone'\n  - regex: '^(talk|teli|topl|tosh|up.b|upg1|utst|v400|v750|veri|vk\\-v|vk40|vk50|vk52|vk53|vm40|vx98|virg|vertu|vite|voda|vulc|w3c |w3c\\-|wapj|wapp|wapu|wapm|wig |wapi|wapr|wapv|wapy|wapa|waps|wapt|winc|winw|wonu|x700|xda2|xdag|yas\\-|your|zte\\-|zeto|aste|audi|avan|blaz|brew|brvw|bumb|ccwa|cell|cldc|cmd\\-|dang|eml2|fetc|hipt|http|ibro|idea|ikom|ipaq|jbro|jemu|jigs|keji|kyoc|kyok|libw|m\\-cr|midp|mmef|moto|mwbp|mywa|newt|nok6|o2im|pant|pdxg|play|pluc|port|prox|rozo|sama|seri|smal|symb|treo|upsi|vx52|vx53|vx60|vx61|vx70|vx80|vx81|vx83|vx85|wap\\-|webc|whit|wmlb|xda\\-|xda_)'\n    regex_flag: 'i'\n    device_replacement: 'Generic Feature Phone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Feature Phone'\n  - regex: '^(Ice)$'\n    device_replacement: 'Generic Feature Phone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Feature Phone'\n  - regex: '(wap[\\-\\ ]browser|maui|netfront|obigo|teleca|up\\.browser|midp|Opera Mini)'\n    regex_flag: 'i'\n    device_replacement: 'Generic Feature Phone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Feature Phone'\n"]);

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

exports.default = String.raw(_templateObject);

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

var Results = __webpack_require__(8).Results,
    makeParser = __webpack_require__(5),
    ua = __webpack_require__(9),
    os = __webpack_require__(6),
    device = __webpack_require__(4);

module.exports = function(regexes) {
	var parseUA = makeParser(regexes.user_agent_parsers, ua.makeParser, ua.makeDefault);
	var parseOS = makeParser(regexes.os_parsers, os.makeParser, os.makeDefault);
	var parseDevice = makeParser(regexes.device_parsers, device.makeParser, device.makeDefault);
	
	function parse(str) {
	  var ua = parseUA(str),
	      os = parseOS(str),
	      device = parseDevice(str);
	  return new Results(str, ua, os, device);
	}
	
	return {
		parse: parse,
		parseUA: parseUA,
		parseOS: parseOS,
		parseDevice: parseDevice
	};
};


/***/ }),
/* 2 */
/***/ (function(module, exports) {

/*
YAML parser for Javascript
Author: Diogo Costa

This program is released under the MIT License as follows:

Copyright (c) 2011 Diogo Costa (costa.h4evr@gmail.com)

Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.
*/

/**
 * @name YAML
 * @namespace
*/

var YAML = 
(function() {
    var errors = [],
        reference_blocks = [],
        processing_time = 0,
        regex =
        {
            "regLevel" : new RegExp("^([\\s\\-]+)"),
            "invalidLine" : new RegExp("^\\-\\-\\-|^\\.\\.\\.|^\\s*#.*|^\\s*$"),
            "dashesString" : new RegExp("^\\s*\\\"([^\\\"]*)\\\"\\s*$"),
            "quotesString" : new RegExp("^\\s*\\\'([^\\\']*)\\\'\\s*$"),
            "float" : new RegExp("^[+-]?[0-9]+\\.[0-9]+(e[+-]?[0-9]+(\\.[0-9]+)?)?$"),
            "integer" : new RegExp("^[+-]?[0-9]+$"),
            "array" : new RegExp("\\[\\s*(.*)\\s*\\]"),
            "map" : new RegExp("\\{\\s*(.*)\\s*\\}"),
            "key_value" : new RegExp("([a-z0-9_-][ a-z0-9_-]*):( .+)", "i"),
            "single_key_value" : new RegExp("^([a-z0-9_-][ a-z0-9_-]*):( .+?)$", "i"),
            "key" : new RegExp("([a-z0-9_-][ a-z0-9_-]*):( .+)?", "i"),
            "item" : new RegExp("^-\\s+"),
            "trim" : new RegExp("^\\s+|\\s+$"),
            "comment" : new RegExp("([^\\\'\\\"#]+([\\\'\\\"][^\\\'\\\"]*[\\\'\\\"])*)*(#.*)?")
        };
 
     /**
      * @class A block of lines of a given level.
      * @param {int} lvl The block's level.
      * @private
      */
    function Block(lvl) {
        return {
            /* The block's parent */
            parent: null,
            /* Number of children */
            length: 0,
            /* Block's level */
            level: lvl,
            /* Lines of code to process */
            lines: [],
            /* Blocks with greater level */
            children : [],
            /* Add a block to the children collection */
            addChild : function(obj) {
                this.children.push(obj);
                obj.parent = this;
                ++this.length;
            }
        };
    }

    function parser(str) {
        var regLevel = regex["regLevel"];
        var invalidLine = regex["invalidLine"];
        var lines = str.split("\n");
        var m;
        var level = 0, curLevel = 0;
        
        var blocks = [];
        
        var result = new Block(-1);
        var currentBlock = new Block(0);
        result.addChild(currentBlock);
        var levels = [];
        var line = "";
        
        blocks.push(currentBlock);
        levels.push(level);
        
        for(var i = 0, len = lines.length; i < len; ++i) {
            line = lines[i];
            
            if(line.match(invalidLine)) {
                continue;
            }
        
            if(m = regLevel.exec(line)) {
                level = m[1].length;
            } else
                level = 0;
            
            if(level > curLevel) {
                var oldBlock = currentBlock;
                currentBlock = new Block(level);
                oldBlock.addChild(currentBlock);
                blocks.push(currentBlock);
                levels.push(level);
            } else if(level < curLevel) {                
                var added = false;

                var k = levels.length - 1;
                for(; k >= 0; --k) {
                    if(levels[k] == level) {
                        currentBlock = new Block(level);
                        blocks.push(currentBlock);
                        levels.push(level);
                        if(blocks[k].parent!= null)
                            blocks[k].parent.addChild(currentBlock);
                        added = true;
                        break;
                    }
                }
                
                if(!added) {
                    errors.push("Error: Invalid indentation at line " + i + ": " + line);
                    return;
                }
            }
            
            currentBlock.lines.push(line.replace(regex["trim"], ""));
            curLevel = level;
        }
        
        return result;
    }
    
    function processValue(val) {
        val = val.replace(regex["trim"], "");
        var m = null;

        if(val == 'true') {
            return true;
        } else if(val == 'false') {
            return false;
        } else if(val == '.NaN') {
            return Number.NaN;
        } else if(val == 'null') {
            return null;
        } else if(val == '.inf') {
            return Number.POSITIVE_INFINITY;
        } else if(val == '-.inf') {
            return Number.NEGATIVE_INFINITY;
        } else if(m = val.match(regex["dashesString"])) {
            return m[1];
        } else if(m = val.match(regex["quotesString"])) {
            return m[1];
        } else if(m = val.match(regex["float"])) {
            return parseFloat(m[0]);
        } else if(m = val.match(regex["integer"])) {
            return parseInt(m[0]);
        } else if( !isNaN(m = Date.parse(val))) {
            return new Date(m);
        } else if(m = val.match(regex["single_key_value"])) {
            var res = {};
            res[m[1]] = processValue(m[2]);
            return res;
        } else if(m = val.match(regex["array"])){
            var count = 0, c = ' ';
            var res = [];
            var content = "";
            var str = false;
            for(var j = 0, lenJ = m[1].length; j < lenJ; ++j) {
                c = m[1][j];
                if(c == '\'' || c == '"') {
                    if(str === false) {
                        str = c;
                        content += c;
                        continue;
                    } else if((c == '\'' && str == '\'') || (c == '"' && str == '"')) {
                        str = false;
                        content += c;
                        continue;
                    }
                } else if(str === false && (c == '[' || c == '{')) {
                    ++count;
                } else if(str === false && (c == ']' || c == '}')) {
                    --count;
                } else if(str === false && count == 0 && c == ',') {
                    res.push(processValue(content));
                    content = "";
                    continue;
                }
                
                content += c;
            }
            
            if(content.length > 0)
                res.push(processValue(content));
            return res;
        } else if(m = val.match(regex["map"])){
            var count = 0, c = ' ';
            var res = [];
            var content = "";
            var str = false;
            for(var j = 0, lenJ = m[1].length; j < lenJ; ++j) {
                c = m[1][j];
                if(c == '\'' || c == '"') {
                    if(str === false) {
                        str = c;
                        content += c;
                        continue;
                    } else if((c == '\'' && str == '\'') || (c == '"' && str == '"')) {
                        str = false;
                        content += c;
                        continue;
                    }
                } else if(str === false && (c == '[' || c == '{')) {
                    ++count;
                } else if(str === false && (c == ']' || c == '}')) {
                    --count;
                } else if(str === false && count == 0 && c == ',') {
                    res.push(content);
                    content = "";
                    continue;
                }
                
                content += c;
            }
            
            if(content.length > 0)
                res.push(content);
                
            var newRes = {};
            for(var j = 0, lenJ = res.length; j < lenJ; ++j) {
                if(m = res[j].match(regex["key_value"])) {
                    newRes[m[1]] = processValue(m[2]);
                }
            }
            
            return newRes;
        } else 
            return val;
    }
    
    function processFoldedBlock(block) {
        var lines = block.lines;
        var children = block.children;
        var str = lines.join(" ");
        var chunks = [str];
        for(var i = 0, len = children.length; i < len; ++i) {
            chunks.push(processFoldedBlock(children[i]));
        }
        return chunks.join("\n");
    }
    
    function processLiteralBlock(block) {
        var lines = block.lines;
        var children = block.children;
        var str = lines.join("\n");
        for(var i = 0, len = children.length; i < len; ++i) {
            str += processLiteralBlock(children[i]);
        }
        return str;
    }
    
    function processBlock(blocks) {
        var m = null;
        var res = {};
        var lines = null;
        var children = null;
        var currentObj = null;
        
        var level = -1;
        
        var processedBlocks = [];
        
        var isMap = true;
        
        for(var j = 0, lenJ = blocks.length; j < lenJ; ++j) {
            
            if(level != -1 && level != blocks[j].level)
                continue;
        
            processedBlocks.push(j);
        
            level = blocks[j].level;
            lines = blocks[j].lines;
            children = blocks[j].children;
            currentObj = null;
        
            for(var i = 0, len = lines.length; i < len; ++i) {
                var line = lines[i];

                if(m = line.match(regex["key"])) {
                    var key = m[1];
                    
                    if(key[0] == '-') {
                        key = key.replace(regex["item"], "");
                        if (isMap) { 
                            isMap = false;
                            if (typeof(res.length) === "undefined") {
                                res = [];
                            } 
                        }
                        if(currentObj != null) res.push(currentObj);
                        currentObj = {};
                        isMap = true;
                    }
                    
                    if(typeof m[2] != "undefined") {
                        var value = m[2].replace(regex["trim"], "");
                        if(value[0] == '&') {
                            var nb = processBlock(children);
                            if(currentObj != null) currentObj[key] = nb;
                            else res[key] = nb;
                            reference_blocks[value.substr(1)] = nb;
                        } else if(value[0] == '|') {
                            if(currentObj != null) currentObj[key] = processLiteralBlock(children.shift());
                            else res[key] = processLiteralBlock(children.shift());
                        } else if(value[0] == '*') {
                            var v = value.substr(1);
                            var no = {};
                            
                            if(typeof reference_blocks[v] == "undefined") {
                                errors.push("Reference '" + v + "' not found!");
                            } else {
                                for(var k in reference_blocks[v]) {
                                    no[k] = reference_blocks[v][k];
                                }
                                
                                if(currentObj != null) currentObj[key] = no;
                                else res[key] = no;
                            }
                        } else if(value[0] == '>') {
                            if(currentObj != null) currentObj[key] = processFoldedBlock(children.shift());
                            else res[key] = processFoldedBlock(children.shift());
                        } else {
                            if(currentObj != null) currentObj[key] = processValue(value);
                            else res[key] = processValue(value);
                        }
                    } else {
                        if(currentObj != null) currentObj[key] = processBlock(children);
                        else res[key] = processBlock(children);                        
                    }
                } else if(line.match(/^-\s*$/)) {
                    if (isMap) { 
                        isMap = false;
                        if (typeof(res.length) === "undefined") {
                            res = [];
                        } 
                    }
                    if(currentObj != null) res.push(currentObj);
                    currentObj = {};
                    isMap = true;
                    continue;
                } else if(m = line.match(/^-\s*(.*)/)) {
                    if(currentObj != null) 
                        currentObj.push(processValue(m[1]));
                    else {
                        if (isMap) { 
                            isMap = false;
                            if (typeof(res.length) === "undefined") {
                                res = [];
                            } 
                        }
                        res.push(processValue(m[1]));
                    }
                    continue;
                }
            }
            
            if(currentObj != null) {
                if (isMap) { 
                    isMap = false;
                    if (typeof(res.length) === "undefined") {
                        res = [];
                    } 
                }
                res.push(currentObj);
            }
        }
        
        for(var j = processedBlocks.length - 1; j >= 0; --j) {
            blocks.splice.call(blocks, processedBlocks[j], 1);
        }

        return res;
    }
        
    function semanticAnalysis(blocks) {
        var res = processBlock(blocks.children);
        return res;
    }
    
    function preProcess(src) {
        var m;
        var lines = src.split("\n");
        
        var r = regex["comment"];
        
        for(var i in lines) {
            if(m = (typeof lines[i] === 'string' && lines[i].match(r))) {
/*                var cmt = "";
                if(typeof m[3] != "undefined")
                    lines[i] = m[1];
                else if(typeof m[3] != "undefined")
                    lines[i] = m[3]; 
                else
                    lines[i] = "";
                    */
                if(typeof m[3] !== "undefined") {
                    lines[i] = m[0].substr(0, m[0].length - m[3].length);
                }
            }
        }
        
        return lines.join("\n");
    }
    
    function eval(str) {
        errors = [];
        reference_blocks = [];
        processing_time = (new Date()).getTime();
        var pre = preProcess(str)
        var doc = parser(pre);
        var res = semanticAnalysis(doc);
        processing_time = (new Date()).getTime() - processing_time;
        
        return res;
    }
        
    return {        
        /**
         * Parse a YAML file from a string.
         * @param {String} str String with the YAML file contents.
         * @function
         */
        eval : eval,
        
        /**
         * Get errors found when parsing the last file.
         * @function
         * @returns Errors found when parsing the last file.
         */
        getErrors : function() { return errors; },
        
        /**
         * Get the time it took to parse the last file.
         * @function
         * @returns Time in milliseconds.
         */
        getProcessingTime : function() { return processing_time; }
    }
})();

module.exports = YAML;

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _uapRefImpl = __webpack_require__(1);

var _uapRefImpl2 = _interopRequireDefault(_uapRefImpl);

var _regexes = __webpack_require__(0);

var _regexes2 = _interopRequireDefault(_regexes);

var _yamlparser = __webpack_require__(2);

var _yamlparser2 = _interopRequireDefault(_yamlparser);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var regexes = _yamlparser2.default.eval(_regexes2.default);
var parser = (0, _uapRefImpl2.default)(regexes);

if (document.readyState == 'loading') {
  document.addEventListener('DOMContentLoaded', start);
} else {
  start();
}

function start() {
  var uaRawList = document.getElementById('user-agents-raw');
  var uaConvertedList = document.getElementById('user-agents-converted');
  var convertButton = document.getElementById('convert');

  convertButton.addEventListener('click', convert);

  function convert() {
    uaConvertedList.value = '';
    var uaConvertedStr = '';
    var uaStrs = uaRawList.value.trim().split('\n');
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = uaStrs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var uaStr = _step.value;

        var agent = parser.parse(uaStr);
        uaConvertedStr += agent.ua.family + ' ' + agent.ua.major + '\n';
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }

    uaConvertedList.value = uaConvertedStr;
  }
}

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

var replaceMatches = __webpack_require__(7);

exports.makeDefault = function makeDefault(str) {
    return {
        userAgent: str,
        family: "Other",
        brand: null,
        model: null
    };
};

exports.makeParser = function makeParser(obj) {
  var regexp = new RegExp(obj.regex, obj.regex_flag || ''),
      deviceRep = obj.device_replacement,
      brandRep  = obj.brand_replacement,
      modelRep  = obj.model_replacement;

  function parser(str) {
    var m = str.match(regexp);
    if (!m) { return null; }
    
    return {
        userAgent: str,
        family: (deviceRep ? replaceMatches(deviceRep, m) : m[1]) || 'Other',
        brand:  (brandRep  ? replaceMatches(brandRep, m)  : null) || null,
        model:  (modelRep  ? replaceMatches(modelRep, m)  : m[1]) || null            
    };
  }

  return parser;
};


/***/ }),
/* 5 */
/***/ (function(module, exports) {

module.exports = function makeParser(regexes, parserMaker, defaultObjMaker) {
  var parsers = regexes.map(parserMaker);

  function parser(str) {
      var obj;
      
      if (typeof str === 'string') {
          for (var i = 0, length = parsers.length; i < length; i++) {
              obj = parsers[i](str);
              if (obj) { return obj; }
          }
      }
      
      return defaultObjMaker();
  }

  return parser;
};


/***/ }),
/* 6 */
/***/ (function(module, exports) {

exports.makeDefault = function makeDefault(str) {
    return {
        userAgent: str,
        family: "Other",
        major: null,
        minor: null,
        patch: null,
        patchMinor: null
    };
};

exports.makeParser = function makeParser(obj) {
  var regexp = new RegExp(obj.regex),
      famRep = obj.os_replacement,
      majorRep = obj.os_v1_replacement,
      minorRep = obj.os_v2_replacement,
      patchRep = obj.os_v3_replacement,
      patchMinorRep = obj.os_v4_replacement;
  
  function parser(str) {
    var m = str.match(regexp);
    if (!m) { return null; }
    
    return {
        userAgent: str,
        family: famRep ? famRep.replace('$1', m[1]) : m[1],
        major: majorRep || m[2] || null,
        minor: minorRep || m[3] || null,
        patch: patchRep || m[4] || null,
        patchMinor: patchMinorRep || m[5] || null
    };
  }

  return parser;
};


/***/ }),
/* 7 */
/***/ (function(module, exports) {

module.exports = function replaceMatches(str, m) {
  return str.replace(/\$(\d)/g, function(tmp, i) {
    return m[i] || '';
  }).trim();
};


/***/ }),
/* 8 */
/***/ (function(module, exports) {

exports.Results = Results;
function Results(ua_str, ua, os, device) {
  this.userAgent = ua_str;
  this.ua = ua;
  this.os = os;
  this.device = device;
  delete ua.userAgent;
  delete os.userAgent;
  delete device.userAgent;
}


/***/ }),
/* 9 */
/***/ (function(module, exports) {

exports.makeDefault = function makeDefault(str) {
    return {
        userAgent: str,
        family: "Other",
        major: null,
        minor: null,
        patch: null
    };
};

exports.makeParser = function makeParser(obj) {
  var regexp = new RegExp(obj.regex),
      famRep = obj.family_replacement,
      majorRep = obj.v1_replacement,
      minorRep = obj.v2_replacement,
      patchRep = obj.v3_replacement;

  function parser(str) {
    var m = str.match(regexp);
    if (!m) { return null; }
    
    return {
        userAgent: str,
        family: famRep ? famRep.replace('$1', m[1]) : m[1],
        major: majorRep || m[2] || null,
        minor: minorRep || m[3] || null,
        patch: patchRep || m[4] || null
    };
  }

  return parser;
};


/***/ })
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,